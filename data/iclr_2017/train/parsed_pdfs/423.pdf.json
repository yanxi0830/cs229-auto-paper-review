{
  "name" : "423.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "GENERATIVE MULTI-ADVERSARIAL NETWORKS",
    "authors" : [ "Ishan Durugkar", "Ian Gemp", "Sridhar Mahadevan" ],
    "emails" : [ "idurugkar@cs.umass.edu", "imgemp@cs.umass.edu", "mahadeva@cs.umass.edu" ],
    "sections" : [ {
      "heading" : "1 INTRODUCTION",
      "text" : "Generative adversarial networks (Goodfellow et al. (2014)) (GANs) are a framework for producing a generative model by way of a two-player minimax game. One player, the generator, attempts to generate realistic data samples by transforming noisy samples, z, drawn from a simple distribution (e.g., z ∼ N (0, 1)) using a transformation function Gθ(z) with learned weights, θ. The generator receives feedback as to how realistic its synthetic sample is from another player, the discriminator, which attempts to discern between synthetic data samples produced by the generator and samples drawn from an actual dataset using a function Dω(x) with learned weights, ω.\nThe GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well.\nDespite these successes, GANs are reputably difficult to train. While research is still underway to improve training techniques and heuristics (Salimans et al. (2016)), most approaches have focused on understanding and generalizing GANs theoretically with the aim of exploring more tractable formulations (Zhao et al. (2016); Li et al. (2015); Uehara et al. (2016); Nowozin et al. (2016)).\nIn this paper, we theoretically and empirically justify generalizing the GAN framework to multiple discriminators. We review GANs and summarize our extension in Section 2. In Sections 3 and 4, we present our N -discriminator extension to the GAN framework (Generative Multi-Adversarial Networks) with several variants which range the role of the discriminator from formidable adversary to forgiving teacher. Section 4.2 explains how this extension makes training with the untampered minimax objective tractable. In Section 5, we define an intuitive metric (GMAM) to quantify GMAN ∗Equal contribution\nperformance and evaluate our framework on a variety of image generation tasks. Section 6 concludes with a summary of our contributions and directions for future research.\nContributions—To summarize, our main contributions are: i) a multi-discriminator GAN framework, GMAN, that allows training with the original, untampered minimax objective; ii) a generative multi-adversarial metric (GMAM) to perform pairwise evaluation of separately trained frameworks; iii) a particular instance of GMAN, GMAN∗, that allows the generator to automatically regulate training and reach higher performance (as measured by GMAM) in a fraction of the training time required for the standard GAN model."
    }, {
      "heading" : "2 GENERATIVE ADVERSARIAL NETWORKS TO GMAN",
      "text" : "The original formulation of a GAN is a minimax game between a generator, Gθ(z) : z → x, and a discriminator, Dω(x) : x→ [0, 1],\nmin G max D∈D\nV (D,G) = Ex∼pdata(x) [ log(D(x)) ] + Ez∼pz(z) [ log(1−D(G(z))) ] , (1)\nwhere pdata(x) is the true data distribution and pz(z) is a simple (usually fixed) distribution that is easy to draw samples from (e.g., N (0, 1)). We differentiate between the function space of discriminators, D, and elements of this space, D. Let pG(x) be the distribution induced by the generator, Gθ(z). We assume D,G to be deep neural networks as is typically the case.\nIn their original work, Goodfellow et al. (2014) proved that given sufficient network capacities and an oracle providing the optimal discriminator, D∗ = argmaxD V (D,G), gradient descent on pG(x) will recover the desired globally optimal solution, pG(x) = pdata(x), so that the generator distribution exactly matches the data distribution. In practice, they replaced the second term, log(1− D(G(z))), with − log(D(G(z))) to enhance gradient signals at the start of the game; note this is no longer a zero-sum game. Part of their convergence and optimality proof involves using the oracle, D∗, to reduce the minimax game to a minimization over G only:\nmin G V (D∗, G) = min G\n{ C(G) = − log(4) + 2 · JSD(pdata||pG) } (2)\nwhere JSD denotes Jensen-Shannon divergence. Minimizing C(G) necessarily minimizes JSD, however, we rarely know D∗ and so we instead minimize V (D,G), which is only a lower bound.\nThis perspective of minimizing the distance between the distributions, pdata and pG, motivated Li et al. (2015) to develop a generative model that matches all moments of pG(x) with pdata(x) (at optimality) by minimizing maximum mean discrepancy (MMD). Another approach, EBGAN, (Zhao et al. (2016)) explores a larger class of games (non-zero-sum games) which generalize the generator and discriminator objectives to take real-valued “energies” as input instead of probabilities. Nowozin et al. (2016) and then Uehara et al. (2016) extended the JSD perspective on GANs to more general divergences, specifically f -divergences and then Bregman-divergences respectively.\nIn general, these approaches focus on exploring fundamental reformulations of V (D,G). Similarly, our work focuses on a fundamental reformulation, however, our aim is to provide a framework that accelerates training of the generator to a more robust state irrespective of the choice of V ."
    }, {
      "heading" : "2.1 GMAN: A MULTI-ADVERSARIAL EXTENSION",
      "text" : "We propose introducing multiple discriminators, which brings with it a number of design possibilities. We explore approaches ranging between two extremes: 1) a more discriminating D (better approximating maxD V (D,G)) and 2) a D better matched to the generator’s capabilities. Mathematically, we reformulate G’s objective as minG maxF (V (D1, G), . . . , V (DN , G)) for different choices of F (see Figure 1). Each Di is still expected to independently maximize its own V (Di, G) (i.e. no cooperation). We sometimes abbreviate V (Di, G) with Vi and F (V1, . . . , VN ) with FG(Vi)."
    }, {
      "heading" : "3 A FORMIDABLE ADVERSARY",
      "text" : "Here, we consider multi-discriminator variants that attempt to better approximate maxD V (D,G), providing a harsher critic to the generator."
    }, {
      "heading" : "3.1 MAXIMIZING V(D,G)",
      "text" : "For a fixed G, maximizing FG(Vi) with F := max and N randomly instantiated copies of our discriminator is functionally equivalent to optimizing V (e.g., stochastic gradient ascent) with random restarts in parallel and then presenting maxi∈{1,...,N} V (Di, G) as the loss to the generator —a very pragmatic approach to the difficulties presented by the non-convexity of V caused by the deep net. Requiring the generator to minimize the max forces G to generate high fidelity samples that must hold up under the scrutiny of all N discriminators, each potentially representing a distinct max.\nIn practice, maxDi∈D V (Di, G) is not performed to convergence (or global optimality), so the above problem is oversimplified. Furthermore, introducing N discriminators affects the dynamics of the game which affects the trajectories of the discriminators. This prevents us from claiming max{V1(t), . . . , VN (t)} > max{V ′1(t)} ∀t even if we initalize D1(0) = D′1(0) as it is unlikely that D1(t) = D ′ 1(t) at some time t after the start of the game."
    }, {
      "heading" : "3.2 BOOSTING",
      "text" : "We can also consider taking the max over N discriminators as a form of boosting for the discriminator’s online classification problem (online because G can produce an infinite data stream). The boosted discriminator is given a sample xt and must predict whether it came from the generator or the dataset. The booster then makes its prediction using the predictions of the N weaker Di.\nThere are a few differences between taking the max (case 1) and online boosting (case 2). In case 1, our booster is limited to selecting a single weak discriminator (i.e. a pure strategy), while in case 2, many boosting algorithms more generally use linear combinations of the discriminators. Moreover, in case 2, a booster must make a prediction before receiving a loss function. In case 1, we assume access to the loss function at prediction time, which allows us to compute the max.\nIt is possible to train the weak discriminators using boosting and then ignore the booster’s prediction by instead presenting max{Vi}. We explore both variants in our experiments, using the adaptive algorithm proposed in Beygelzimer et al. (2015). Unfortunately, boosting failed to produce promising results on the image generation tasks. It is possible that boosting produces too strong an adversary for learning which motivates the next section. Boosting results appear in Appendix A.7."
    }, {
      "heading" : "4 A FORGIVING TEACHER",
      "text" : "The previous perspectives focus on improving the discriminator with the goal of presenting a better approximation of maxD V (D,G) to the generator. Our next perspective asks the question, “Is maxD V (D,G) too harsh a critic?”\n4.1 Soft-DISCRIMINATOR\nIn practice, training against a far superior discriminator can impede the generator’s learning. This is because the generator is unlikely to generate any samples considered “realistic” by the discriminator’s standards, and so the generator will receive uniformly negative feedback. This is problem-\natic because the information contained in the gradient derived from negative feedback only dictates where to drive down pG(x), not specifically where to increase pG(x). Furthermore, driving down pG(x) necessarily increases pG(x) in other regions of X (to maintain ∫ X pG(x) = 1) which may or may not contain samples from the true dataset (whack-a-mole dilemma). In contrast, a generator is more likely to see positive feedback against a more lenient discriminator, which may better guide a generator towards amassing pG(x) in approximately correct regions of X . For this reason, we explore a variety of functions that allow us to soften the max operator. We choose to focus on soft versions of the three classical Pythagorean means parameterized by λ where λ = 0 corresponds to the mean and the max is recovered as λ→∞:\nAMsoft(V, λ) = N∑ i wiVi (3)\nGMsoft(V, λ) = − exp ( N∑\ni\nwi log(−Vi) )\n(4)\nHMsoft(V, λ) = ( N∑\ni\nwiV −1 i\n)−1 (5)\nwherewi = eλVi/ΣjeλVj with λ ≥ 0, Vi < 0. Using a softmax also has the well known advantage of being differentiable (as opposed to subdifferentiable for max). Note that we only require continuity to guarantee that computing the softmax is actually equivalent to computing V (D̃,G) where D̃ is some convex combination of Di (see Appendix A.5)."
    }, {
      "heading" : "4.2 USING THE ORIGINAL MINIMAX OBJECTIVE",
      "text" : "To illustrate the effect the softmax has on training, observe that the component of AMsoft(V, 0) relevant to generator training can be rewritten as\n1\nN N∑ i Ex∼pG(x) [ log(1−Di(x)) ] = 1 N Ex∼pG(x) [ log(z) ] . (6)\nwhere z = ∏N i (1−Di(x)). Note that the generator gradient, | ∂ log(z) ∂z |, is minimized at z = 1 over z ∈ (0, 1]1. From this form, it is clear that z = 1 if and only if Di = 0∀i, so G only receives a vanishing gradient if all Di agree that the sample is fake; this is especially unlikely for large N . In other words,G only needs to fool a singleDi to receive constructive feedback. This result allows the generator to successfully minimize the original generator objective, log(1−D). This is in contrast to the more popular − log(D) introduced to artificially enhance gradients at the start of training. At the beginning of training, when maxDi V (Di, G) is likely too harsh a critic for the generator, we can set λ closer to zero to use the mean, increasing the odds of providing constructive feedback to the generator. In addition, the discriminators have the added benefit of functioning as an ensemble, reducing the variance of the feedback presented to the generator, which is especially important when the discriminators are far from optimal and are still learning a reasonable decision boundary. As training progresses and the discriminators improve, we can increase λ to become more critical of the generator for more refined training."
    }, {
      "heading" : "4.3 MAINTAINING MULTIPLE HYPOTHESES",
      "text" : "We argue for this ensemble approach on a more fundamental level as well. Here, we draw on the density ratio estimation perspective of GANs (Uehara et al. (2016)). The original GAN proof assumes we have access to pdata(x), if only implicitly. In most cases of interest, the discriminator only has access to a finite dataset sampled from pdata(x); therefore, when computing expectations of V (D,G), we only draw samples from our finite dataset. This is equivalent to training a GAN with pdata(x) = p̃data which is a distribution consisting of point masses on all the data points in the dataset. For the sake of argument, let’s assume we are training a discriminator and generator, each\n1∇GV = − ∑\ni Di z ∂Di ∂G ∏ j 6=i(1−Dj) = − 1 z ∂Dk ∂G for Dk = 1, D 6=k = 0. Our argument ignores ∂Dk∂G .\nwith infinite capacity. In this case, the global optimum (pG(x) = p̃data(x)) fails to capture any of the interesting structure from pdata(x), the true distribution we are trying to learn. Therefore, it is actually critical that we avoid this global optimum.\nIn practice, this degenerate result is avoided by employing learners with limited capacity and corrupting data samples with noise (i.e., dropout), but we might better accomplish this by simultaneously training a variety of limited capacity discriminators. With this approach, we might obtain a diverse set of seemingly tenable hypotheses for the true pdata(x). Averaging over these multiple locally optimal discriminators increases the entropy of p̃data(x) by diffusing the probability mass over the data space (see Figure 2 for an example)."
    }, {
      "heading" : "4.4 AUTOMATING REGULATION",
      "text" : "The problem of keeping the discriminator and generator in balance has been widely recognized in previous work with GANs. Issues with unstable dynamics, oscillatory behavior, and generator collapse are not uncommon. In addition, the discriminator is often times able to achieve a high degree of classification accuracy (producing a single scalar) before the generator has made sufficient progress on the arguably more difficult generative task (producing a high dimensional sample). Salimans et al. (2016) suggested label smoothing to reduce the vulnerability of the generator to a relatively superior discriminator. Here, we explore an approach that enables the generator to automatically temper the performance of the discriminator when necessary, but still encourages the generator to challenge itself against more accurate adversaries. Specifically, we augment the generator objective:\nmin G,λ>0\nFG(Vi)− f(λ) (7)\nwhere f(λ) is monotonically increasing in λ which appears in the softmax equations, (3)—(5). In experiments, we simply set f(λ) = cλ with c a constant (e.g., 0.001). The generator is incentivized to increase λ to reduce its objective at the expense of competing against the best available adversary D∗ (see Appendix A.6)."
    }, {
      "heading" : "5 EVALUATION",
      "text" : "Evaluating GANs is still an open problem. In their original work, Goodfellow et al. (2014) report log likelihood estimates from Gaussian Parzen windows, which they admit, has high variance and is known not to perform well in high dimensions. Theis et al. (2016) recommend avoiding Parzen windows and argue that generative models should be evaluated with respect to their intended application. Salimans et al. (2016) suggest an Inception score, however, it assumes labels exist for the dataset. Recently, Im et al. (2016) introduced the Generative Adversarial Metric (GAM) for making pairwise comparisons between independently trained GAN models. The core idea behind their approach is given two generator, discriminator pairs (G1, D1) and (G2, D2), we should be able to learn their relative performance by judging each generator under the opponent’s discriminator."
    }, {
      "heading" : "5.1 METRIC",
      "text" : "In GMAN, the opponent may have multiple discriminators, which makes it unclear how to perform the swaps needed for GAM. We introduce a variant of GAM, the generative multi-adversarial metric (GMAM), that is amenable to training with multiple discriminators,\nGMAM = log (F aGb(V ai ) F aGa(V a i ) /F bGa(V bi ) F bGb(V b i ) ) . (8)\nwhere a and b refer to the two GMAN variants (see Section 3 for notation FG(Vi)). The idea here is similar. If G2 performs better than G1 with respect to both D1 and D2, then GMAM>0 (remember V≤0 always). IfG1 performs better in both cases, GMAM<0, otherwise, the result is indeterminate."
    }, {
      "heading" : "5.2 EXPERIMENTS",
      "text" : "We evaluate the aforementioned variations of GMAN on a variety of image generation tasks: MNIST (LeCun et al. (1998)), CIFAR-10 (Krizhevsky (2009)) and CelebA (Liu et al. (2015)). We focus on rates of convergence to steady state along with quality of the steady state generator according to the GMAM metric. To summarize, loosely in order of increasing discriminator leniency, we compare\n• F-boost: A single AdaBoost.OL-boosted discriminator (see Appendix A.7). • P-boost: Di is trained according to AdaBoost.OL. A max over the weak learner losses is\npresented to the generator instead of the boosted prediction (see Appendix A.7).\n• GMAN-max: max{Vi} is presented to the generator. • GAN: Standard GAN with a single discriminator (see Appendix A.2). • mod-GAN: GAN with modified objective (generator minimizes − log(D(G(z))). • GMAN-λ: GMAN with F :=arithmetic softmax with parameter λ. • GMAN∗: The arithmetic softmax is controlled by the generator through λ.\nAll generator and discriminator models are deep (de)convolutional networks (Radford et al. (2015)), and aside from the boosted variants, all are trained with Adam (Kingma & Ba (2014)) and batch normalization (Ioffe & Szegedy (2015)). Discriminators convert the real-valued outputs of their networks to probabilities with squashed-sigmoids to prevent saturating logarithms in the minimax objective ( + 1−2 1+e−z ). See Appendix A.8 for further details. We test GMAN systems with N = {2, 5} discriminators. We maintain discriminator diversity by varying dropout and network depth."
    }, {
      "heading" : "5.2.1 MNIST",
      "text" : "Figure 3 reveals that increasing the number of discriminators reduces the number of iterations to steady-state by 2x on MNIST; increasing N (the size of the discriminator ensemble) also has the added benefit of reducing the variance the minimax objective over runs. Figure 4 displays the variance of the same objective over a sliding time window, reaffirming GMAN’s acceleration to steadystate. Figure 5 corroborates this conclusion with recognizable digits appearing approximately an epoch before the single discriminator run; digits at steady-state appear slightly sharper as well.\nOur GMAM metric (see Table 1) agrees with the relative quality of images in Figure 5 with GMAN∗ achieving the best overall performance. Figure 6 reveals GMAN∗’s attempt to regulate the difficulty\nof the game to accelerate learning. Figure 7 displays the GMAM scores comparing fixed λ’s to the variable λ controlled by GMAN∗."
    }, {
      "heading" : "5.2.2 CELEBA & CIFAR-10",
      "text" : "We see similar accelerated convergence behavior for the CelebA dataset in Figure 8.\nFigure 9 displays images generated by GMAN-0 on CIFAR-10. See Appendix A.3 for more results.\nWe also found that GMAN is robust to mode collapse. We believe this is because the generator must appease a diverse set of discriminators in each minibatch. Emitting a single sample will score well for one discriminator at the expense of the rest of the discriminators. Current solutions (e.g., minibatch discrimination) are quadratic in batch size. GMAN, however, is linear in batch size."
    }, {
      "heading" : "6 CONCLUSION",
      "text" : "We introduced multiple discriminators into the GAN framework and explored discriminator roles ranging from a formidable adversary to a forgiving teacher. Allowing the generator to automatically tune its learning schedule (GMAN∗) outperformed GANs with a single discriminator on MNIST. In general, GMAN variants achieved faster convergence to a higher quality steady state on a variety of tasks as measured by a GAM-type metric (GMAM). In addition, GMAN makes using the original GAN objective possible by increasing the odds of the generator receiving constructive feedback.\nIn future work, we will look at more sophisticated mechanisms for letting the generator control the game as well as other ways to ensure diversity among the discriminators. Introducing multiple generators is conceptually an obvious next step, however, we expect difficulties to arise from more complex game dynamics. For this reason, game theory and game design will likely be important."
    }, {
      "heading" : "ACKNOWLEDGMENTS",
      "text" : "We acknowledge helpful conversations with Stefan Dernbach, Archan Ray, Luke Vilnis, Ben Turtel, Stephen Giguere, Rajarshi Das, and Subhransu Maji. We also thank NVIDIA for donating a K40 GPU. This material is based upon work supported by the National Science Foundation under Grant Nos. IIS-1564032. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the NSF."
    }, {
      "heading" : "A APPENDIX",
      "text" : "A.1 ACCELERATED CONVERGENCE & REDUCED VARIANCE\nSee Figures 10, 11, 12, and 13.\nA.2 ADDITIONAL GMAM TABLES\nSee Tables 2, 3, 4, 5, 6. Increasing the number of discriminators from 2 to 5 on CIFAR-10 significantly improves scores over the standard GAN both in terms of the GMAM metric and Inception scores.\nA.3 GENERATED IMAGES\nSee Figures 14 and 15.\nA.4 SOMEWHAT RELATED WORK\nA GAN framework with two discriminators appeared in Yoo et al. (2016), however, it is applicable only in a semi-supervised case where a label can be assigned to subsets of the dataset (e.g., X = {X1 = Domain 1,X2 = Domain 2, . . .}). In contrast, our framework applies to an unsupervised scenario where an obvious partition of the dataset is unknown. Furthermore, extending GMAN to the semi-supervised domain-adaptation scenario would suggest multiple discriminators per domain, therefore our line of research is strictly orthogonal to that of their multi-domain discriminator approach. Also, note that assigning a discriminator to each domain is akin to prescribing a new discriminator to each value of a conditional variable in conditional GANs (Mirza & Osindero (2014)). In this case, we interpret GMAN as introducing multiple conditional discriminators and not a discriminator for each of the possibly exponentially many conditional labels.\nIn Section 4.4, we describe an approach to customize adversarial training to better suit the development of the generator. An approach with similar conceptual underpinnings was described in Ravanbakhsh et al. (2016), however, similar to the above, it is only admissible in a semi-supervised scenario whereas our applies to the unsupervised case.\nA.5 Softmax REPRESENTABILITY\nLet softmax(Vi) = V̂ ∈ [minVi ,maxVi ]. Also let a = argmini Vi, b = argmaxi Vi, and V(t) = V ((1 − t)Da + tDb) so that V(0) = Va and V(1) = Vb. The softmax and minimax objective V (Di, G) are both continuous in their inputs, so by the intermediate value theorem, we have that ∃ t̂ ∈ [0, 1] s.t. V(t̂) = V̂ , which implies ∃ D̂ ∈ D s.t. V (D̂,G) = V̂ . This result implies that the softmax (and any other continuous substitute) can be interpreted as returning V (D̂,G) for some D̂ selected by computing an another, unknown function over the space of the discriminators. This result holds even if D̂ is not representable by the architecture chosen for D’s neural network.\nA.6 UNCONSTRAINED OPTIMIZATION\nTo convert GMAN∗ minimax formulation to an unconstrained minimax formulation, we introduce an auxiliary variable, Λ, define λ(Λ) = log(1 + eΛ), and let the generator minimize over Λ ∈ R.\nA.7 BOOSTING WITH AdaBoost.OL\nAdaBoost.OL (Beygelzimer et al. (2015)) does not require knowledge of the weak learner’s slight edge over random guessing (P (correct label) = 0.5 + γ ∈ (0, 0.5]), and in fact, allows γ < 0. This is crucial because our weak learners are deep nets with unknown, possibly negative, γ’s.\nA.8 EXPERIMENTAL SETUP\nAll experiments were conducted using an architecture similar to DCGAN (Radford et al. (2015)). We use convolutional transpose layers (Zeiler et al. (2010)) for G and strided convolutions for D except for the input of G and the last layer of D. We use the single step gradient method as in (Nowozin et al. (2016)), and batch normalization (Ioffe & Szegedy (2015)) was used in each of the generator layers. The different discriminators were trained with varying dropout rates from [0.3, 0.7]. Variations in the discriminators were effected in two ways. We varied the architecture by varying the number of filters in the discriminator layers (reduced by factors of 2, 4 and so on), as well as varying dropout rates. Secondly we also decorrelated the samples that the disriminators were training on by splitting the minibatch across the discriminators. The code was written in Tensorflow (Abadi et al. (2016)) and run on Nvidia GTX 980 GPUs. Code to reproduce experiments and plots is at https://github.com/iDurugkar/GMAN. Specifics for the MNIST architecture and training are:\n• Generator latent variables z ∼ U (−1, 1)100\n• Generator convolution transpose layers: (4, 4, 128) , (8, 8, 64) , (16, 16, 32) , (32, 32, 1) • Base Discriminator architecture: (32, 32, 1) , (16, 16, 32) , (8, 8, 64) , (4, 4, 128). • Variants have either convolution 3 (4, 4, 128) removed or all the filter sizes\nare divided by 2 or 4. That is, (32, 32, 1) , (16, 16, 16) , (8, 8, 32) , (4, 4, 64) or (32, 32, 1) , (16, 16, 8) , (8, 8, 16) , (4, 4, 32).\n• ReLu activations for all the hidden units. Tanh activation at the output units of the generator. Sigmoid at the output of the Discriminator.\n• Training was performed with Adam (Kingma & Ba (2014)) (lr = 2× 10−4, β1 = 0.5). • MNIST was trained for 20 epochs with a minibatch of size 100. • CelebA and CIFAR were trained over 24000 iterations with a minibatch of size 100."
    } ],
    "references" : [ {
      "title" : "Tensorflow: Large-scale machine learning on heterogeneous distributed systems",
      "author" : [ "Martın Abadi", "Ashish Agarwal", "Paul Barham", "Eugene Brevdo", "Zhifeng Chen", "Craig Citro", "Greg S Corrado", "Andy Davis", "Jeffrey Dean", "Matthieu Devin" ],
      "venue" : "arXiv preprint arXiv:1603.04467,",
      "citeRegEx" : "Abadi et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Abadi et al\\.",
      "year" : 2016
    }, {
      "title" : "Robust supervised learning",
      "author" : [ "J Andrew Bagnell" ],
      "venue" : "In Proceedings Of The National Conference On Artificial Intelligence,",
      "citeRegEx" : "Bagnell.,? \\Q1999\\E",
      "shortCiteRegEx" : "Bagnell.",
      "year" : 1999
    }, {
      "title" : "Optimal and adaptive algorithms for online boosting",
      "author" : [ "Alina Beygelzimer", "Satyen Kale", "Haipeng Luo" ],
      "venue" : "arXiv preprint arXiv:1502.02651,",
      "citeRegEx" : "Beygelzimer et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Beygelzimer et al\\.",
      "year" : 2015
    }, {
      "title" : "Infogan: Interpretable representation learning by information maximizing generative adversarial nets",
      "author" : [ "Xi Chen", "Yan Duan", "Rein Houthooft", "John Schulman", "Ilya Sutskever", "Pieter Abbeel" ],
      "venue" : "arXiv preprint arXiv:1606.03657,",
      "citeRegEx" : "Chen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "Deep generative image models using a laplacian pyramid of adversarial networks",
      "author" : [ "Emily L Denton", "Soumith Chintala", "Rob Fergus" ],
      "venue" : "In Advances in neural information processing systems,",
      "citeRegEx" : "Denton et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Denton et al\\.",
      "year" : 2015
    }, {
      "title" : "Adversarial feature learning",
      "author" : [ "Jeff Donahue", "Philipp Krähenbühl", "Trevor Darrell" ],
      "venue" : "arXiv preprint arXiv:1605.09782,",
      "citeRegEx" : "Donahue et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Donahue et al\\.",
      "year" : 2016
    }, {
      "title" : "Adversarially learned inference",
      "author" : [ "Vincent Dumoulin", "Ishmael Belghazi", "Ben Poole", "Alex Lamb", "Martin Arjovsky", "Olivier Mastropietro", "Aaron Courville" ],
      "venue" : "arXiv preprint arXiv:1606.00704,",
      "citeRegEx" : "Dumoulin et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Dumoulin et al\\.",
      "year" : 2016
    }, {
      "title" : "Censoring representations with an adversary",
      "author" : [ "Harrison Edwards", "Amos Storkey" ],
      "venue" : "arXiv preprint arXiv:1511.05897,",
      "citeRegEx" : "Edwards and Storkey.,? \\Q2015\\E",
      "shortCiteRegEx" : "Edwards and Storkey.",
      "year" : 2015
    }, {
      "title" : "Conditional generative adversarial nets for convolutional face generation. Class Project for Stanford CS231N: Convolutional Neural Networks for Visual Recognition, Winter semester",
      "author" : [ "Jon Gauthier" ],
      "venue" : null,
      "citeRegEx" : "Gauthier.,? \\Q2014\\E",
      "shortCiteRegEx" : "Gauthier.",
      "year" : 2014
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Goodfellow et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Goodfellow et al\\.",
      "year" : 2014
    }, {
      "title" : "Generative adversarial imitation learning",
      "author" : [ "Jonathan Ho", "Stefano Ermon" ],
      "venue" : "arXiv preprint arXiv:1606.03476,",
      "citeRegEx" : "Ho and Ermon.,? \\Q2016\\E",
      "shortCiteRegEx" : "Ho and Ermon.",
      "year" : 2016
    }, {
      "title" : "Generating images with recurrent adversarial networks",
      "author" : [ "Daniel Jiwoong Im", "Chris Dongjoo Kim", "Hui Jiang", "Roland Memisevic" ],
      "venue" : "arXiv preprint arXiv:1602.05110,",
      "citeRegEx" : "Im et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Im et al\\.",
      "year" : 2016
    }, {
      "title" : "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
      "author" : [ "Sergey Ioffe", "Christian Szegedy" ],
      "venue" : "arXiv preprint arXiv:1502.03167,",
      "citeRegEx" : "Ioffe and Szegedy.,? \\Q2015\\E",
      "shortCiteRegEx" : "Ioffe and Szegedy.",
      "year" : 2015
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "Diederik Kingma", "Jimmy Ba" ],
      "venue" : "arXiv preprint arXiv:1412.6980,",
      "citeRegEx" : "Kingma and Ba.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kingma and Ba.",
      "year" : 2014
    }, {
      "title" : "Learning multiple layers of features from tiny images",
      "author" : [ "Alex Krizhevsky" ],
      "venue" : "Master’s Thesis,",
      "citeRegEx" : "Krizhevsky.,? \\Q2009\\E",
      "shortCiteRegEx" : "Krizhevsky.",
      "year" : 2009
    }, {
      "title" : "The mnist database of handwritten digits",
      "author" : [ "Yann LeCun", "Corinna Cortes", "Christopher JC Burges" ],
      "venue" : null,
      "citeRegEx" : "LeCun et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "LeCun et al\\.",
      "year" : 1998
    }, {
      "title" : "Generative moment matching networks",
      "author" : [ "Yujia Li", "Kevin Swersky", "Richard Zemel" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "Li et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2015
    }, {
      "title" : "Deep learning face attributes in the wild",
      "author" : [ "Ziwei Liu", "Ping Luo", "Xiaogang Wang", "Xiaoou Tang" ],
      "venue" : "In Proceedings of International Conference on Computer Vision (ICCV),",
      "citeRegEx" : "Liu et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Liu et al\\.",
      "year" : 2015
    }, {
      "title" : "Conditional generative adversarial nets",
      "author" : [ "Mehdi Mirza", "Simon Osindero" ],
      "venue" : "arXiv preprint arXiv:1411.1784,",
      "citeRegEx" : "Mirza and Osindero.,? \\Q2014\\E",
      "shortCiteRegEx" : "Mirza and Osindero.",
      "year" : 2014
    }, {
      "title" : "f-gan: Training generative neural samplers using variational divergence minimization",
      "author" : [ "Sebastian Nowozin", "Botond Cseke", "Ryota Tomioka" ],
      "venue" : "arXiv preprint arXiv:1606.00709,",
      "citeRegEx" : "Nowozin et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Nowozin et al\\.",
      "year" : 2016
    }, {
      "title" : "Unsupervised representation learning with deep convolutional generative adversarial networks",
      "author" : [ "Alec Radford", "Luke Metz", "Soumith Chintala" ],
      "venue" : "arXiv preprint arXiv:1511.06434,",
      "citeRegEx" : "Radford et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Radford et al\\.",
      "year" : 2015
    }, {
      "title" : "Enabling dark energy science with deep generative models of galaxy images",
      "author" : [ "Siamak Ravanbakhsh", "Francois Lanusse", "Rachel Mandelbaum", "Jeff Schneider", "Barnabas Poczos" ],
      "venue" : "arXiv preprint arXiv:1609.05796,",
      "citeRegEx" : "Ravanbakhsh et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Ravanbakhsh et al\\.",
      "year" : 2016
    }, {
      "title" : "Improved techniques for training gans",
      "author" : [ "Tim Salimans", "Ian Goodfellow", "Wojciech Zaremba", "Vicki Cheung", "Alec Radford", "Xi Chen" ],
      "venue" : "arXiv preprint arXiv:1606.03498,",
      "citeRegEx" : "Salimans et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Salimans et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning factorial codes by predictability minimization",
      "author" : [ "Jürgen Schmidhuber" ],
      "venue" : "Neural Computation,",
      "citeRegEx" : "Schmidhuber.,? \\Q1992\\E",
      "shortCiteRegEx" : "Schmidhuber.",
      "year" : 1992
    }, {
      "title" : "Unsupervised and semi-supervised learning with categorical generative adversarial networks",
      "author" : [ "Jost Tobias Springenberg" ],
      "venue" : "arXiv preprint arXiv:1511.06390,",
      "citeRegEx" : "Springenberg.,? \\Q2015\\E",
      "shortCiteRegEx" : "Springenberg.",
      "year" : 2015
    }, {
      "title" : "A note on the evaluation of generative models",
      "author" : [ "Lucas Theis", "Aäron van den Oord", "Matthias Bethge" ],
      "venue" : "arXiv preprint arXiv:1511.01844v3,",
      "citeRegEx" : "Theis et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Theis et al\\.",
      "year" : 2016
    }, {
      "title" : "Generative adversarial nets from a density ratio estimation perspective",
      "author" : [ "Masatoshi Uehara", "Issei Sato", "Masahiro Suzuki", "Kotaro Nakayama", "Yutaka Matsuo" ],
      "venue" : "arXiv preprint arXiv:1610.02920,",
      "citeRegEx" : "Uehara et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Uehara et al\\.",
      "year" : 2016
    }, {
      "title" : "Pixel-level domain transfer",
      "author" : [ "Donggeun Yoo", "Namil Kim", "Sunggyun Park", "Anthony S Paek", "In So Kweon" ],
      "venue" : "arXiv preprint arXiv:1603.07442,",
      "citeRegEx" : "Yoo et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Yoo et al\\.",
      "year" : 2016
    }, {
      "title" : "Deconvolutional networks",
      "author" : [ "Matthew D Zeiler", "Dilip Krishnan", "Graham W Taylor", "Rob Fergus" ],
      "venue" : "In Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "Zeiler et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Zeiler et al\\.",
      "year" : 2010
    }, {
      "title" : "Energy-based generative adversarial network",
      "author" : [ "Junbo Zhao", "Michael Mathieu", "Yann LeCun" ],
      "venue" : "arXiv preprint arXiv:1609.03126,",
      "citeRegEx" : "Zhao et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Zhao et al\\.",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : "Generative adversarial networks (Goodfellow et al. (2014)) (GANs) are a framework for producing a generative model by way of a two-player minimax game.",
      "startOffset" : 33,
      "endOffset" : 58
    }, {
      "referenceID" : 3,
      "context" : "Generative adversarial networks (Goodfellow et al. (2014)) (GANs) are a framework for producing a generative model by way of a two-player minimax game. One player, the generator, attempts to generate realistic data samples by transforming noisy samples, z, drawn from a simple distribution (e.g., z ∼ N (0, 1)) using a transformation function Gθ(z) with learned weights, θ. The generator receives feedback as to how realistic its synthetic sample is from another player, the discriminator, which attempts to discern between synthetic data samples produced by the generator and samples drawn from an actual dataset using a function Dω(x) with learned weights, ω. The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al.",
      "startOffset" : 33,
      "endOffset" : 802
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al.",
      "startOffset" : 141,
      "endOffset" : 156
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria.",
      "startOffset" : 141,
      "endOffset" : 178
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al.",
      "startOffset" : 141,
      "endOffset" : 397
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al.",
      "startOffset" : 141,
      "endOffset" : 424
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al.",
      "startOffset" : 141,
      "endOffset" : 566
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al.",
      "startOffset" : 141,
      "endOffset" : 613
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)).",
      "startOffset" : 141,
      "endOffset" : 654
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al.",
      "startOffset" : 141,
      "endOffset" : 724
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al.",
      "startOffset" : 141,
      "endOffset" : 749
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al.",
      "startOffset" : 141,
      "endOffset" : 766
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al.",
      "startOffset" : 141,
      "endOffset" : 787
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al.",
      "startOffset" : 141,
      "endOffset" : 823
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al.",
      "startOffset" : 141,
      "endOffset" : 847
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al.",
      "startOffset" : 141,
      "endOffset" : 889
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al.",
      "startOffset" : 141,
      "endOffset" : 939
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al.",
      "startOffset" : 141,
      "endOffset" : 961
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well.",
      "startOffset" : 141,
      "endOffset" : 984
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well. Despite these successes, GANs are reputably difficult to train. While research is still underway to improve training techniques and heuristics (Salimans et al. (2016)), most approaches have focused on understanding and generalizing GANs theoretically with the aim of exploring more tractable formulations (Zhao et al.",
      "startOffset" : 141,
      "endOffset" : 1180
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well. Despite these successes, GANs are reputably difficult to train. While research is still underway to improve training techniques and heuristics (Salimans et al. (2016)), most approaches have focused on understanding and generalizing GANs theoretically with the aim of exploring more tractable formulations (Zhao et al. (2016); Li et al.",
      "startOffset" : 141,
      "endOffset" : 1338
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well. Despite these successes, GANs are reputably difficult to train. While research is still underway to improve training techniques and heuristics (Salimans et al. (2016)), most approaches have focused on understanding and generalizing GANs theoretically with the aim of exploring more tractable formulations (Zhao et al. (2016); Li et al. (2015); Uehara et al.",
      "startOffset" : 141,
      "endOffset" : 1356
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well. Despite these successes, GANs are reputably difficult to train. While research is still underway to improve training techniques and heuristics (Salimans et al. (2016)), most approaches have focused on understanding and generalizing GANs theoretically with the aim of exploring more tractable formulations (Zhao et al. (2016); Li et al. (2015); Uehara et al. (2016); Nowozin et al.",
      "startOffset" : 141,
      "endOffset" : 1378
    }, {
      "referenceID" : 1,
      "context" : "The GAN framework is one of the more recent successes in a line of research on adversarial training in machine learning (Schmidhuber (1992); Bagnell (2005); Ajakan et al. (2014)) where games between learners are carefully crafted so that Nash equilibria coincide with some set of desired optimality criteria. Preliminary work on GANs focused on generating images (e.g., MNIST (LeCun et al. (1998)), CIFAR (Krizhevsky (2009))), however, GANs have proven useful in a variety of application domains including learning censored representations (Edwards & Storkey (2015)), imitating expert policies (Ho & Ermon (2016)), and domain transfer (Yoo et al. (2016)). Work extending GANs to semi-supervised learning (Chen et al. (2016); Mirza & Osindero (2014); Gauthier (2014); Springenberg (2015)), inference (Makhzani et al. (2015); Dumoulin et al. (2016)), feature learning (Donahue et al. (2016)), and improved image generation (Im et al. (2016); Denton et al. (2015); Radford et al. (2015)) have shown promise as well. Despite these successes, GANs are reputably difficult to train. While research is still underway to improve training techniques and heuristics (Salimans et al. (2016)), most approaches have focused on understanding and generalizing GANs theoretically with the aim of exploring more tractable formulations (Zhao et al. (2016); Li et al. (2015); Uehara et al. (2016); Nowozin et al. (2016)).",
      "startOffset" : 141,
      "endOffset" : 1401
    }, {
      "referenceID" : 9,
      "context" : "In their original work, Goodfellow et al. (2014) proved that given sufficient network capacities and an oracle providing the optimal discriminator, D∗ = argmaxD V (D,G), gradient descent on pG(x) will recover the desired globally optimal solution, pG(x) = pdata(x), so that the generator distribution exactly matches the data distribution.",
      "startOffset" : 24,
      "endOffset" : 49
    }, {
      "referenceID" : 16,
      "context" : "This perspective of minimizing the distance between the distributions, pdata and pG, motivated Li et al. (2015) to develop a generative model that matches all moments of pG(x) with pdata(x) (at optimality) by minimizing maximum mean discrepancy (MMD).",
      "startOffset" : 95,
      "endOffset" : 112
    }, {
      "referenceID" : 16,
      "context" : "This perspective of minimizing the distance between the distributions, pdata and pG, motivated Li et al. (2015) to develop a generative model that matches all moments of pG(x) with pdata(x) (at optimality) by minimizing maximum mean discrepancy (MMD). Another approach, EBGAN, (Zhao et al. (2016)) explores a larger class of games (non-zero-sum games) which generalize the generator and discriminator objectives to take real-valued “energies” as input instead of probabilities.",
      "startOffset" : 95,
      "endOffset" : 297
    }, {
      "referenceID" : 16,
      "context" : "This perspective of minimizing the distance between the distributions, pdata and pG, motivated Li et al. (2015) to develop a generative model that matches all moments of pG(x) with pdata(x) (at optimality) by minimizing maximum mean discrepancy (MMD). Another approach, EBGAN, (Zhao et al. (2016)) explores a larger class of games (non-zero-sum games) which generalize the generator and discriminator objectives to take real-valued “energies” as input instead of probabilities. Nowozin et al. (2016) and then Uehara et al.",
      "startOffset" : 95,
      "endOffset" : 500
    }, {
      "referenceID" : 16,
      "context" : "This perspective of minimizing the distance between the distributions, pdata and pG, motivated Li et al. (2015) to develop a generative model that matches all moments of pG(x) with pdata(x) (at optimality) by minimizing maximum mean discrepancy (MMD). Another approach, EBGAN, (Zhao et al. (2016)) explores a larger class of games (non-zero-sum games) which generalize the generator and discriminator objectives to take real-valued “energies” as input instead of probabilities. Nowozin et al. (2016) and then Uehara et al. (2016) extended the JSD perspective on GANs to more general divergences, specifically f -divergences and then Bregman-divergences respectively.",
      "startOffset" : 95,
      "endOffset" : 530
    }, {
      "referenceID" : 2,
      "context" : "We explore both variants in our experiments, using the adaptive algorithm proposed in Beygelzimer et al. (2015). Unfortunately, boosting failed to produce promising results on the image generation tasks.",
      "startOffset" : 86,
      "endOffset" : 112
    }, {
      "referenceID" : 26,
      "context" : "Here, we draw on the density ratio estimation perspective of GANs (Uehara et al. (2016)).",
      "startOffset" : 67,
      "endOffset" : 88
    }, {
      "referenceID" : 22,
      "context" : "Salimans et al. (2016) suggested label smoothing to reduce the vulnerability of the generator to a relatively superior discriminator.",
      "startOffset" : 0,
      "endOffset" : 23
    }, {
      "referenceID" : 9,
      "context" : "In their original work, Goodfellow et al. (2014) report log likelihood estimates from Gaussian Parzen windows, which they admit, has high variance and is known not to perform well in high dimensions.",
      "startOffset" : 24,
      "endOffset" : 49
    }, {
      "referenceID" : 9,
      "context" : "In their original work, Goodfellow et al. (2014) report log likelihood estimates from Gaussian Parzen windows, which they admit, has high variance and is known not to perform well in high dimensions. Theis et al. (2016) recommend avoiding Parzen windows and argue that generative models should be evaluated with respect to their intended application.",
      "startOffset" : 24,
      "endOffset" : 220
    }, {
      "referenceID" : 9,
      "context" : "In their original work, Goodfellow et al. (2014) report log likelihood estimates from Gaussian Parzen windows, which they admit, has high variance and is known not to perform well in high dimensions. Theis et al. (2016) recommend avoiding Parzen windows and argue that generative models should be evaluated with respect to their intended application. Salimans et al. (2016) suggest an Inception score, however, it assumes labels exist for the dataset.",
      "startOffset" : 24,
      "endOffset" : 374
    }, {
      "referenceID" : 9,
      "context" : "In their original work, Goodfellow et al. (2014) report log likelihood estimates from Gaussian Parzen windows, which they admit, has high variance and is known not to perform well in high dimensions. Theis et al. (2016) recommend avoiding Parzen windows and argue that generative models should be evaluated with respect to their intended application. Salimans et al. (2016) suggest an Inception score, however, it assumes labels exist for the dataset. Recently, Im et al. (2016) introduced the Generative Adversarial Metric (GAM) for making pairwise comparisons between independently trained GAN models.",
      "startOffset" : 24,
      "endOffset" : 479
    }, {
      "referenceID" : 14,
      "context" : "We evaluate the aforementioned variations of GMAN on a variety of image generation tasks: MNIST (LeCun et al. (1998)), CIFAR-10 (Krizhevsky (2009)) and CelebA (Liu et al.",
      "startOffset" : 97,
      "endOffset" : 117
    }, {
      "referenceID" : 14,
      "context" : "(1998)), CIFAR-10 (Krizhevsky (2009)) and CelebA (Liu et al.",
      "startOffset" : 19,
      "endOffset" : 37
    }, {
      "referenceID" : 14,
      "context" : "(1998)), CIFAR-10 (Krizhevsky (2009)) and CelebA (Liu et al. (2015)).",
      "startOffset" : 19,
      "endOffset" : 68
    }, {
      "referenceID" : 20,
      "context" : "All generator and discriminator models are deep (de)convolutional networks (Radford et al. (2015)), and aside from the boosted variants, all are trained with Adam (Kingma & Ba (2014)) and batch normalization (Ioffe & Szegedy (2015)).",
      "startOffset" : 76,
      "endOffset" : 98
    }, {
      "referenceID" : 20,
      "context" : "All generator and discriminator models are deep (de)convolutional networks (Radford et al. (2015)), and aside from the boosted variants, all are trained with Adam (Kingma & Ba (2014)) and batch normalization (Ioffe & Szegedy (2015)).",
      "startOffset" : 76,
      "endOffset" : 183
    }, {
      "referenceID" : 20,
      "context" : "All generator and discriminator models are deep (de)convolutional networks (Radford et al. (2015)), and aside from the boosted variants, all are trained with Adam (Kingma & Ba (2014)) and batch normalization (Ioffe & Szegedy (2015)).",
      "startOffset" : 76,
      "endOffset" : 232
    } ],
    "year" : 2017,
    "abstractText" : "Generative adversarial networks (GANs) are a framework for producing a generative model by way of a two-player minimax game. In this paper, we propose the Generative Multi-Adversarial Network (GMAN), a framework that extends GANs to multiple discriminators. In previous work, the successful training of GANs requires modifying the minimax objective to accelerate training early on. In contrast, GMAN can be reliably trained with the original, untampered objective. We explore a number of design perspectives with the discriminator role ranging from formidable adversary to forgiving teacher. Image generation tasks comparing the proposed framework to standard GANs demonstrate GMAN produces higher quality samples in a fraction of the iterations when measured by a pairwise GAM-type metric.",
    "creator" : "LaTeX with hyperref package"
  }
}