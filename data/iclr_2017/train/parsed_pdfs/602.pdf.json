{
  "name" : "602.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ "TEXT COMPREHENSION", "Bhuwan Dhingra", "Hanxiao Liu", "Zhilin Yang", "William W. Cohen" ],
    "emails" : [ "bdhingra@cs.cmu.edu", "hanxiaol@cs.cmu.edu", "zhiliny@cs.cmu.edu", "wcohen@cs.cmu.edu", "rsalakhu@cs.cmu.edu" ],
    "sections" : [ {
      "heading" : "1 INTRODUCTION",
      "text" : "A recent trend to measure progress towards machine reading is to test a system’s ability to answer questions about a document it has to comprehend. Towards this end, several large-scale datasets of cloze-style questions over a context document have been introduced recently, which allow the training of supervised machine learning systems (Hermann et al., 2015; Hill et al., 2015; Onishi et al., 2016). Such datasets can be easily constructed automatically and the unambiguous nature of their queries provides an objective benchmark to measure a system’s performance at text comprehension.\nDeep learning models have recently been shown to outperform traditional shallow approaches on text comprehension tasks (Hermann et al., 2015). The success of many recent models can be attributed primarily to two factors: (1) Multi-hop architectures allow a (Weston et al., 2014; Sordoni et al., 2016; Shen et al., 2016), model to scan the document and the question iteratively for multiple passes. (2) Attention mechanisms, (Weston et al., 2014; Chen et al., 2016; Hermann et al., 2015) borrowed from the machine translation literature (Bahdanau et al., 2014), allow the model to focus on appropriate subparts of the context document. Intuitively, the multi-hop architecture allows the reader to incrementally refine token representations, and the attention mechanism re-weights different parts in the document according to their relevance to the query.\nThe effectiveness of multi-hop reasoning and attentions have been explored orthogonally so far in the literature. In this paper, we focus on combining both in a complementary manner, by designing a novel attention mechanism which gates the evolving token representations across hops. More specifically, unlike existing models where the query attention is applied either token-wise (Hermann et al., 2015; Kadlec et al., 2016; Chen et al., 2016; Hill et al., 2015) or sentence-wise (Weston et al., 2014; Sukhbaatar et al., 2015) to allow weighted aggregation, the Gated-Attention (GA) module proposed in this work allows the query to directly interact with each dimension of the token embeddings at the semantic-level, and is applied layer-wise as information filters during the multi-hop representation learning process. Such a fine-grained attention enables our model to learn conditional token representations with respect to the given question, leading to accurate answer selections.\nWe show in our experiments that the proposed GA reader, despite its relative simplicity, consistently improves over a variety of strong baselines on three benchmark datasets1. Our key contribution, ∗ BD and HL contributed equally to this work. 1Code for GA reader is available on github: https://github.com/bdhingra/ga-reader\nthe GA module, provides a significant improvement when the dataset size is large. Qualitatively, visualization of the attentions at intermediate layers of the GA reader shows that in each layer the GA reader attends to distinct salient aspects of the query which help in determining the answer."
    }, {
      "heading" : "2 RELATED WORK",
      "text" : "The cloze-style QA task involves tuples of the form (d, q, a, C), where d is a document (context), q is a query over the contents of d, in which a phrase is replaced with a placeholder, and a is the answer to q, which comes from a set of candidates C. In this work we consider datasets where each candidate c ∈ C has at least one token which also appears in the document. The task can then be described as: given a document-query pair (d, q), find a ∈ C which answers q. Below we provide an overview of representative neural network architectures which have been applied to this problem.\nLSTMs with Attention: Several architectures introduced in (Hermann et al., 2015) employ LSTM units to compute a combined document-query representation g(d, q), which is used to rank the candidate answers. Their techniques include the DeepLSTM Reader which performs a single forward pass through the concatenated (document, query) pair to obtain g(d, q); the Attentive Reader which first computes a document vector d(q) by a weighted aggregation of words according to attentions based on q, and then combines d(q) and q to obtain their joint representation g(d(q), q); and the Impatient Reader where the document representation is built incrementally. The architecture of the Attentive Reader has been simplified recently in Stanford Attentive Reader, where shallower recurrent units were used with a bilinear form for the query-document attention (Chen et al., 2016).\nAttention Sum: The Attention-Sum (AS) Reader (Kadlec et al., 2016) uses two bi-directional GRU networks (Cho et al., 2014) to encode both d and q into vectors, similar to Stanford AR. A probability distribution over the entities in d is obtained by computing dot products between q and the entity embeddings and taking a softmax. An aggregation scheme named pointer-sum attention is further applied to sum the probabilities of the same entity, so that frequent entities the document will be favored compared to rare ones. Building on the AS Reader, the Attention-over-Attention (AoA) Reader (Cui et al., 2016) introduces a two-way attention mechanism where the query and the document are mutually attentive to each other.\nMulit-hop Architectures: Memory Networks (MemNets) were proposed in (Weston et al., 2014), where each sentence in the document is encoded to a memory by aggregating nearby words. Attention over the memory slots given the query is used to compute an overall memory and to renew the query representation over multiple iterations, allowing certain types of reasoning over the salient facts in the memory and the query. Neural Semantic Encoders (NSE) (Munkhdalai & Yu, 2016a) extended MemNets by introducing a write operation which can evolve the memory over time during the course of reading. Iterative reasoning has been found effective in several more recent models, including the Iterative Attentive Reader (Sordoni et al., 2016) and ReasoNet (Shen et al., 2016). The latter allows a dynamic number of reasoning steps and is trained with reinforcement learning.\nOther related works include Dynamic Entity Representation network (DER) (Kobayashi et al., 2016), which builds dynamic representations of the candidate answers while reading the document, and accumulates the information about an entity by max-pooling. EpiReader (Trischler et al., 2016) consists of two networks, where one proposes a small set of candidate answers, and the other reranks the proposed candidates conditioned on the query and the context. (Bajgar et al., 2016) showed a 10% improvement on the CBT corpus (Hill et al., 2015) by training the AS Reader on an augmented training set of about 14 million examples, making a case for community to exploit data abundance. The focus of this paper, however, is on designing models which exploit the available data efficiently."
    }, {
      "heading" : "3 GATED-ATTENTION READER",
      "text" : ""
    }, {
      "heading" : "3.1 MOTIVATION",
      "text" : "Our proposed GA readers perform multiple hops over the document (context), similar to the Memory Networks architecture (Sukhbaatar et al., 2015). Multi-hop architectures mimic the multi-step comprehension process of human readers, and have shown promising results in several recent models for text comprehension (Sordoni et al., 2016; Kumar et al., 2015; Shen et al., 2016). The contextual representations in GA readers, namely the embeddings of words in the document, are iteratively\nrefined across hops until reaching a final attention-sum module (Kadlec et al., 2016) which maps the contextual representations in the last hop to a probability distribution over candidate answers.\nThe attention mechanism has been introduced recently to model human focus, leading to significant improvement in machine translation and image captioning (Bahdanau et al., 2014; Mnih et al., 2014). In reading comprehension tasks, ideally, the semantic meanings carried by the contextual embeddings should be aware of the query across hops. As an example, human readers are able to keep the question in mind during multiple passes of reading, to successively mask away information irrelevant to the query. However, existing neural network readers are restricted to either attend to tokens (Hermann et al., 2015; Chen et al., 2016) or entire sentences (Weston et al., 2014), with the assumption that certain sub-parts of the document are more important than others. In contrast, we propose a finer-grained model which attends to components of the semantic representation being built up by the GRU. The new attention mechanism, called gated-attention, is implemented based on multiplicative interactions between the query and the contextual embeddings, and is applied per hop to act as fine-grained information filters during the multi-step reasoning. The filters weigh individual components of the vector representation of each token in the document separately.\nThe design of gated-attention layers is motivated by the effectiveness of multiplicative interaction among vector-space representations, e.g., in various types of recurrent units (Hochreiter & Schmidhuber, 1997; Wu et al., 2016) and in relational learning (Yang et al., 2014; Kiros et al., 2014). While other types of compositional operators are possible, such as concatenation or addition (Mitchell & Lapata, 2008), we find that multiplication has strong empirical performance (section 4.4). Intuitively, multiplicative interaction e q between two word embeddings e and q adjusts the semantic meaning of e towards q, keeping the compositionality of the original embeddings preserved.2"
    }, {
      "heading" : "3.2 MODEL DETAILS",
      "text" : "Several components of the model use a Gated Recurrent Unit (GRU) (Cho et al., 2014) which maps an input sequence X = [x1, x2, . . . , xT ] to an ouput sequence H = [h1, h2, . . . , hT ] as follows:\nrt = σ(Wrxt + Urht−1 + br),\nzt = σ(Wzxt + Uzht−1 + bz),\nh̃t = tanh(Whxt + Uh(rt ht−1) + bh), ht = (1− zt) ht−1 + zt h̃t.\nwhere denotes the Hadamard product or the element-wise multiplication. rt and zt are called the reset and update gates respectively, and h̃t the candidate output. A Bi-directional GRU (BiGRU) processes the sequence in both forward and backward directions to produce two sequences [hf1 , h f 2 , . . . , h f T ] and [h b 1, h b 2, . . . , h\nb T ], which are concatenated at the output ←→ GRU(X) = [hf1‖hbT , . . . , h f T ‖h b 1] (1)\nwhere ←→ GRU(X) denotes the full output of the Bi-GRU obtained by concatenating each forward\nstate hfi and backward state h b T−i+1 at time-step i given the input X . Note\n←→ GRU(X) is a matrix in\nR2nh×T where nh stands for the number of hidden units in GRU.\nLetX(0) = [x(0)1 , x (0) 2 , . . . x (0) |D|] denote the token embeddings of the document, which are also inputs at layer 1 for the document reader below, and Y = [y1, y2, . . . y|Q|] denote the token embeddings of the query. Here |D| and |Q| denote the document and query lengths respectively."
    }, {
      "heading" : "3.2.1 MULTI-HOP ARCHITECTURE",
      "text" : "Figure 1 illustrates the Gated-Attention (GA) reader. The model reads the document and the query overK horizontal layers, where layer k receives the contextual embeddingsX(k−1) of the document from the previous layer. The document embeddings are transformed by taking the full output of a document Bi-GRU (indicated in blue in Figure 1):\nD(k) = ←→ GRU (k)\nD (X (k−1)) (2)\n2e1 q + e2 q = (e1 + e2) q,∀e1, e2.\nAt the same time, a layer-specific query representation is computed as the full output of a separate query Bi-GRU (indicated in green in Figure 1):\nQ(k) = ←→ GRU (k)\nQ (Y ) (3)\nNext, Gated-Attention is applied to D(k) and Q(k) to compute inputs for the next layer X(k).\nX(k) = GA(D(k), Q(k)) (4)\nwhere GA is defined in the following subsection."
    }, {
      "heading" : "3.2.2 GATED-ATTENTION MODULE",
      "text" : "For brevity, let us drop the superscript k in this subsection as we are focusing on a particular layer. For each token di in D, the GA module forms a token-specific representation of the query q̃i using soft attention, and then multiplies the query representation element-wise with the document token representation. Specifically, for i = 1, . . . , |D|:\nαi = softmax(Q>di) (5) q̃i = Qαi\nxi = di q̃i (6) In equation (6) we use the multiplication operator to model the interactions between di and q̃i. In the experiments section, we also report results for other choices of gating functions, including addition xi = di + q̃i and concatenation xi = di‖q̃i."
    }, {
      "heading" : "3.2.3 ANSWER PREDICTION",
      "text" : "Let q(K)` = q f ` ‖qbT−`+1 be an intermediate output of the final layer query Bi-GRU at the location ` of the cloze token in the query, and D(K) = ←→ GRU (K)\nD (X (K−1)) be the full output of final layer\ndocument Bi-GRU. To obtain the probability that a particular token in the document answers the query, we take an inner-product between these two, and pass through a softmax layer:\ns = softmax((q(K)` ) TD(K)) (7)\nwhere vector s defines a probability distribution over the |D| tokens in the document. The probability of a particular candidate c ∈ C as being the answer is then computed by aggregating the probabilities of all document tokens which appear in c and renormalizing over the candidates:\nPr(c|d, q) ∝ ∑\ni∈I(c,d)\nsi (8)\nwhere I(c, d) is the set of positions where a token in c appears in the document d. This aggregation operation is the same as the pointer sum attention applied in the AS Reader (Kadlec et al., 2016).\nFinally, the candidate with maximum probability is selected as the predicted answer:\na∗ = argmaxc∈C Pr(c|d, q). (9)\nDuring the training phase, model parameters of the GA reader are updated w.r.t. a cross-entropy loss between the predicted probabilities and the true answers."
    }, {
      "heading" : "3.2.4 FURTHER ENHANCEMENTS",
      "text" : "Character-level Embeddings: Given a token w from the document or query, its vector space representation is computed as x = L(w)||C(w). L(w) retrieves the word-embedding for w from a lookup table L ∈ R|V |×nl , whose rows hold a vector for each unique token in the vocabulary. We also utilize a character composition model C(w) which generates an orthographic embedding of the token. Such embeddings have been previously shown to be helpful for tasks like Named Entity Recognition (Yang et al., 2016) and dealing with OOV tokens at test time (Dhingra et al., 2016). The embedding C(w) is generated by taking the final outputs zfnc and z b nc of a Bi-GRU applied to embeddings from a lookup table of characters in the token, and applying a linear transformation:\nz = zfnc ||z b nc\nC(w) =Wz + b\nQuestion Evidence Common Word Feature (qe-comm): (Li et al., 2016) recently proposed a simple token level indicator feature which significantly boosts reading comprehension performance in some cases. For each token in the document we construct a one-hot vector fi ∈ {0, 1}2 indicating whether that token is present in the query or not. It can be incorporated into the GA reader by assigning a feature lookup table F ∈ RnF×2 (we use nF = 2), taking the feature embedding ei = fTi F and appending it to the inputs of the last layer document BiGRU as, x(K)i ‖fi for all i. We conducted several experiments both with and without this feature and observed some interesting trends, which are discussed below. Henceforth, we refer to this feature as the qe-comm feature or just feature."
    }, {
      "heading" : "4 EXPERIMENTS AND RESULTS",
      "text" : ""
    }, {
      "heading" : "4.1 DATASETS",
      "text" : "We evaluate the GA reader on five large-scale datasets recently proposed in the literature. The first two, CNN and Daily Mail news stories3 consist of articles from the popular CNN and Daily Mail websites (Hermann et al., 2015). A query over each article is formed by removing an entity from the short summary which follows the article. Further, entities within each article were anonymized to make the task purely a comprehension one. N-gram statistics, for instance, computed over the entire corpus are no longer useful in such an anonymized corpus.\nThe next two datasets are formed from two different subsets of the Children’s Book Test (CBT)4 (Hill et al., 2015). Documents consist of 20 contiguous sentences from the body of a popular children’s book, and queries are formed by deleting a token from the 21st sentence. We only focus on\n3 https://github.com/deepmind/rc-data 4 http://www.thespermwhale.com/jaseweston/babi/CBTest.tgz\nsubsets where the deleted token is either a common noun (CN) or named entity (NE) since simple language models already give human-level performance on the other types (cf. (Hill et al., 2015)).\nThe final dataset we evaluate on is Who Did What5 (WDW) (Onishi et al., 2016), constructed from the LDC English Gigaword newswire corpus. First, article pairs which appeared around the same time and with overlapping entities are chosen, and then one article forms the document and a cloze query is constructed from the other. Missing tokens are always person named entities. Questions which are easily answered by simple baselines are filtered out, to make the task more challenging. There are two versions of the training set—a small but focused “Strict” version and a large but noisy “Relaxed” version. We report results on both settings which share the same validation and test sets. Statistics of all the datasets used in our experiments are summarized in Table 1."
    }, {
      "heading" : "4.2 IMPLEMENTATION DETAILS",
      "text" : "Our model was implemented using the Theano (Theano Development Team, 2016) and Lasagne6 Python libraries. We used stochastic gradient descent with ADAM updates for optimization, which combines classical momentum and adaptive gradients (Kingma & Ba, 2014). The batch size was 32 and the initial learning rate was 5×10−4 which was halved every epoch after the second epoch. The same setting is applied to all models and datasets. We also used gradient clipping with a threshold of 10 to stabilize GRU training (Pascanu et al., 2012). We set the number of layers K to be 3 for all experiments, and provide further analysis below. The number of hidden units for the character GRU was set to 50. The remaining two hyperparameters—size of document and query GRUs, and dropout rate—were tuned on the validation set, and their optimal values are shown in Table 2. In general, the optimal GRU size increases and the dropout rate decreases as the corpus size increases.\nThe word lookup table was initialized with 100d GloVe vectors7 (Pennington et al., 2014) and OOV tokens at test time were assigned unique random vectors. We empirically observed that initializing with pre-trained embeddings gives higher performance compared to random initialization for all datasets. Furthermore, for smaller datasets (WDW and CBT) we found that fixing these embeddings to their pretrained values led to higher test performance, possibly since it avoids overfitting. We do not use the character composition model for CNN and Daily Mail, since entities (and hence candidate answers) are anonymized to generic tokens in these datasets. For other datasets the character lookup table was randomly initialized with 25d vectors. All other parameters were initialized to their default values as specified in the Lasagne library."
    }, {
      "heading" : "4.3 PERFORMANCE COMPARISON",
      "text" : "Tables 3 and 5 show a comparison of the performance of GA Reader with previously published results on WDW and CNN, Daily Mail, CBT datasets respectively. The numbers reported for GA Reader are for single best models, though we compare to both ensembles and single models from prior work. GA Reader-- refers to an earlier version of the model, unpublished but described in a preprint, with the following differences—(1) it does not utilize token-specific attentions within the GA module, as described in equation (5), (2) it does not use a character composition model, (3) it is initialized with word embeddings pretrained on the corpus itself rather than GloVe. A detailed analysis of these differences is studied in the next section. Here we present 4 variants of the latest GA Reader, using combinations of whether the qe-comm feature is used (+feature) or not, and whether the word lookup table L(w) is updated during training or fixed to its initial value.\nInterestingly, we observe that feature engineering leads to significant improvements for WDW and CBT datasets, but not for CNN and Daily Mail datasets. We note that anonymization of the latter\n5 https://tticnlp.github.io/who_did_what/ 6 https://lasagne.readthedocs.io/en/latest/ 7 http://nlp.stanford.edu/projects/glove/\nTable 3: Validation/Test accuracy (%) on WDW dataset for both “Strict” and “Relaxed” settings. Results marked with † are cf previously published works.\nModel Strict Relaxed Val Test Val Test\nHuman † – 84 – – Attentive Reader † – 53 – 55 AS Reader † – 57 – 59 Stanford AR † – 64 – 65 NSE † 66.5 66.2 67.0 66.7 GA-- † – 57 – 60.0 GA (update L(w)) 67.8 67.0 67.0 66.6 GA (fix L(w)) 68.3 68.0 69.6 69.1 GA (+feature, update L(w)) 70.1 69.5 70.9 71.0 GA (+feature, fix L(w)) 71.6 71.2 72.6 72.6\nTable 4: Top: Performance of different gating functions. Bottom: Effect of varying the number of hops K. Results on WDW dataset without using the qe-comm feature and with fixed L(w).\nGating Function Accuracy Val Test\nSum 64.9 64.5 Concatenate 64.4 63.7 Multiply 68.3 68.0 K\n1 (AS) † – 57 2 65.6 65.6 3 68.3 68.0 4 68.3 68.2\ndatasets means that there is already some feature engineering (it adds hints about whether a token is an entity), and these are much larger than the other four. In machine learning it is common to see the effect of feature engineering diminish with increasing data size. Similarly, fixing the word\nembeddings provides an improvement for the WDW and CBT, but not for CNN and Daily Mail. This is not surprising given that the latter datasets are larger and less prone to overfitting.\nComparing with prior work, on the WDW dataset the basic version of the GA Reader outperforms all previously published models when trained on the Strict setting. By adding the qe-comm feature the performance increases by 3.2% and 3.5% on the Strict and Relaxed settings respectively to set a new state of the art on this dataset. On the CNN and Daily Mail datasets the GA Reader leads to an improvement of 3.2% and 4.3% respectively over the best previous single models. They also outperform previous ensemble models, setting a new state of that art for both datasets. For CBT-NE, GA Reader with the qe-comm feature outperforms all previous single and ensemble models except the AS Reader trained on the much larger BookTest Corpus (Bajgar et al., 2016). Lastly, on CBTCN the GA Reader with the qe-comm feature outperforms all previously published single models except the NSE, and AS Reader trained on a larger corpus."
    }, {
      "heading" : "4.4 GA READER ANALYSIS",
      "text" : "In this section we do an ablation study to see the effect of Gated Attention. We compare the GA Reader as described here to a model which is exactly the same in all aspects, except that it passes document embeddings D(k) in each layer directly to the inputs of the next layer without using the GA module. In other words X(k) = D(k) for all k > 0. This model ends up using only one query GRU at the output layer for selecting the answer from the document. We compare these two variants both with and without the qe-comm feature on CNN and WDW datasets for three subsets of the training data - 50%, 75% and 100%. Test set accuracies for these settings are shown in Figure 2. On CNN when tested without feature engineering, we observe that GA provides a significant boost in performance compared to without GA. When tested with the feature it still gives an improvement, but the improvement is significant only with 100% training data. On WDW-Strict, which is a third of the size of CNN, without the feature we see an improvement when using GA versus without using GA, which becomes significant as the training set size increases. When tested with the feature on WDW, for a small data size without GA does better than with GA, but as the dataset size increases they become equivalent. We conclude that Gated Attention provides a boost in the absence of feature engineering, or as the training set size increases.\nNext we look at the question of how to gate intermediate document reader states from the query, i.e. what operation to use in equation 6. Table 4 (top) shows the performance on WDW dataset for three common choices – sum (x = d+ q), concatenate (x = d‖q) and multiply (x = d q). Empirically we find that element-wise multiplication does significantly better than the other two, which justifies our motivation to “filter” out document features which are irrelevant to the query.\nAt the bottom of Table 4 we show the effect of varying the number of hops K of the GA Reader on the final performance. We note that for K = 1, our model is equivalent to the AS Reader without any GA modules. We see a steep and steady rise in accuracy as the number of hops is increased from K = 1 to K = 3, which remains constant beyond that. This is a fairly common trend in machine learning as model complexity is increased, however we note that a multi-hop architecture is important to achieve a high performance for this task, and provide further evidence for this in the next section.\nLastly, we perform an ablation study for the three components of the GA Reader which were absent in the preprint version (GA Reader--). Table 6 shows accuracy on WDW by removing one component at a time. The steepest reduction is observed when we replace pretrained GloVe vectors with those pretrained on the corpus itself. GloVe vectors were trained on a large corpus of about 6 billion tokens (Pennington et al., 2014), and provide an important source of prior knowledge for the model. We note here that the strongest baseline on WDW, NSE (Munkhdalai & Yu, 2016b), also uses pretrained GloVe vectors, hence the comparison is fair in that respect. Next, we observe a substantial drop when removing token-specific attentions over the query in the GA module, which allow gating indi-\nvidual tokens in the document only by parts of the query relevant to that token rather than the overall query representation. Finally, removing the character embeddings, which were only used for WDW and CBT datasets, leads to a reduction of about 1% in the performance."
    }, {
      "heading" : "4.5 ATTENTION VISUALIZATION",
      "text" : "To gain an insight into the reading process employed by the model we analyzed the attention distributions at intermediate layers of the reader. Figure 3 shows an example from the validation set of WDW dataset (several more are in the Appendix). In each figure, the left and middle plots visualize attention over the query (equation 5) for candidates in the document after layers 1 & 2 respectively. The right plot shows attention over candidates in the document of cloze placeholder (XXX) in the query at the final layer. The full document, query and correct answer are shown at the bottom.\nA generic pattern observed in these examples is that in intermediate layers, candidates in the document (shown along rows) tend to pick out salient tokens in the query which provide clues about the cloze, and in the final layer the candidate with the highest match with these tokens is selected as the answer. In Figure 3 there is a high attention of the correct answer on financial regulatory standards in the first layer, and on us president in the second layer. The incorrect answer, in contrast, only attends to one of these aspects, and hence receives a lower score in the final layer despite the n-gram overlap it has with the cloze token in the query. Importantly, different layers tend to focus on different tokens in the query, which supports the hypothesis that the multi-hop architecture of GA Reader is able to combine distinct pieces of information to answer the query."
    }, {
      "heading" : "5 CONCLUSION",
      "text" : "We presented the Gated-Attention reader for answering cloze-style questions over documents. The GA reader features a novel multiplicative gating mechanism, combined with a multi-hop architecture. Our model achieves state-of-the-art performance on several large-scale benchmark datasets with more than 4% improvements over competitive baselines. Our model design is backed up by an ablation study showing statistically significant improvements of using Gated Attention as information filters. We also showed empirically that multiplicative gating is superior to addition and concatenation operations for implementing gated-attentions, though a theoretical justification remains part of future research goals. Analysis of document and query attentions in intermediate layers of the reader further reveals that the model iteratively attends to different aspects of the query to arrive at the final answer. In this paper we have focused on text comprehension, but we believe that the Gated-Attention mechanism may benefit other tasks as well where multiple sources of information interact. Concurrent to our work (Chu et al., 2016) have also shown the effectiveness of GA Readers on the LAMBADA dataset (Paperno et al., 2016) for language modeling."
    }, {
      "heading" : "A ATTENTION PLOTS",
      "text" : ""
    } ],
    "references" : [ {
      "title" : "Neural machine translation by jointly learning to align and translate",
      "author" : [ "Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio" ],
      "venue" : "arXiv preprint arXiv:1409.0473,",
      "citeRegEx" : "Bahdanau et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Bahdanau et al\\.",
      "year" : 2014
    }, {
      "title" : "Embracing data abundance: Booktest dataset for reading comprehension",
      "author" : [ "Ondrej Bajgar", "Rudolf Kadlec", "Jan Kleindienst" ],
      "venue" : "arXiv preprint arXiv:1610.00956,",
      "citeRegEx" : "Bajgar et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Bajgar et al\\.",
      "year" : 2016
    }, {
      "title" : "A thorough examination of the cnn/daily mail reading comprehension",
      "author" : [ "Danqi Chen", "Jason Bolton", "Christopher D Manning" ],
      "venue" : "task. arXiv preprint arXiv:1606.02858,",
      "citeRegEx" : "Chen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning phrase representations using rnn encoder-decoder for statistical machine translation",
      "author" : [ "Kyunghyun Cho", "Bart Van Merriënboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio" ],
      "venue" : "arXiv preprint arXiv:1406.1078,",
      "citeRegEx" : "Cho et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Cho et al\\.",
      "year" : 2014
    }, {
      "title" : "Broad context language modeling as reading comprehension",
      "author" : [ "Zewei Chu", "Hai Wang", "Kevin Gimpel", "David McAllester" ],
      "venue" : "arXiv preprint arXiv:1610.08431,",
      "citeRegEx" : "Chu et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chu et al\\.",
      "year" : 2016
    }, {
      "title" : "Attention-overattention neural networks for reading comprehension",
      "author" : [ "Yiming Cui", "Zhipeng Chen", "Si Wei", "Shijin Wang", "Ting Liu", "Guoping Hu" ],
      "venue" : "arXiv preprint arXiv:1607.04423,",
      "citeRegEx" : "Cui et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Cui et al\\.",
      "year" : 2016
    }, {
      "title" : "Tweet2vec: Character-based distributed representations for social media",
      "author" : [ "Bhuwan Dhingra", "Zhong Zhou", "Dylan Fitzpatrick", "Michael Muehl", "William W Cohen" ],
      "venue" : null,
      "citeRegEx" : "Dhingra et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Dhingra et al\\.",
      "year" : 2016
    }, {
      "title" : "Teaching machines to read and comprehend",
      "author" : [ "Karl Moritz Hermann", "Tomas Kocisky", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Hermann et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Hermann et al\\.",
      "year" : 2015
    }, {
      "title" : "The goldilocks principle: Reading children’s books with explicit memory representations",
      "author" : [ "Felix Hill", "Antoine Bordes", "Sumit Chopra", "Jason Weston" ],
      "venue" : "arXiv preprint arXiv:1511.02301,",
      "citeRegEx" : "Hill et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Hill et al\\.",
      "year" : 2015
    }, {
      "title" : "Long short-term memory",
      "author" : [ "Sepp Hochreiter", "Jürgen Schmidhuber" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "Hochreiter and Schmidhuber.,? \\Q1997\\E",
      "shortCiteRegEx" : "Hochreiter and Schmidhuber.",
      "year" : 1997
    }, {
      "title" : "Text understanding with the attention sum reader network",
      "author" : [ "Rudolf Kadlec", "Martin Schmid", "Ondrej Bajgar", "Jan Kleindienst" ],
      "venue" : "arXiv preprint arXiv:1603.01547,",
      "citeRegEx" : "Kadlec et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Kadlec et al\\.",
      "year" : 2016
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "Diederik Kingma", "Jimmy Ba" ],
      "venue" : "arXiv preprint arXiv:1412.6980,",
      "citeRegEx" : "Kingma and Ba.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kingma and Ba.",
      "year" : 2014
    }, {
      "title" : "A multiplicative model for learning distributed text-based attribute representations",
      "author" : [ "Ryan Kiros", "Richard Zemel", "Ruslan R Salakhutdinov" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Kiros et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kiros et al\\.",
      "year" : 2014
    }, {
      "title" : "Dynamic entity representations with max-pooling improves machine reading",
      "author" : [ "Sosuke Kobayashi", "Ran Tian", "Naoaki Okazaki", "Kentaro Inui" ],
      "venue" : "In NAACL-HLT,",
      "citeRegEx" : "Kobayashi et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Kobayashi et al\\.",
      "year" : 2016
    }, {
      "title" : "Ask me anything: Dynamic memory networks for natural language processing",
      "author" : [ "Ankit Kumar", "Ozan Irsoy", "Jonathan Su", "James Bradbury", "Robert English", "Brian Pierce", "Peter Ondruska", "Ishaan Gulrajani", "Richard Socher" ],
      "venue" : "arXiv preprint arXiv:1506.07285,",
      "citeRegEx" : "Kumar et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Kumar et al\\.",
      "year" : 2015
    }, {
      "title" : "Dataset and neural recurrent sequence labeling model for open-domain factoid question answering",
      "author" : [ "Peng Li", "Wei Li", "Zhengyan He", "Xuguang Wang", "Ying Cao", "Jie Zhou", "Wei Xu" ],
      "venue" : "arXiv preprint arXiv:1607.06275,",
      "citeRegEx" : "Li et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2016
    }, {
      "title" : "Vector-based models of semantic composition",
      "author" : [ "Jeff Mitchell", "Mirella Lapata" ],
      "venue" : "In ACL,",
      "citeRegEx" : "Mitchell and Lapata.,? \\Q2008\\E",
      "shortCiteRegEx" : "Mitchell and Lapata.",
      "year" : 2008
    }, {
      "title" : "Recurrent models of visual attention",
      "author" : [ "Volodymyr Mnih", "Nicolas Heess", "Alex Graves" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Mnih et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Mnih et al\\.",
      "year" : 2014
    }, {
      "title" : "Neural semantic encoders",
      "author" : [ "Tsendsuren Munkhdalai", "Hong Yu" ],
      "venue" : "arXiv preprint arXiv:1607.04315,",
      "citeRegEx" : "Munkhdalai and Yu.,? \\Q2016\\E",
      "shortCiteRegEx" : "Munkhdalai and Yu.",
      "year" : 2016
    }, {
      "title" : "Reasoning with memory augmented neural networks for language comprehension",
      "author" : [ "Tsendsuren Munkhdalai", "Hong Yu" ],
      "venue" : "arXiv preprint arXiv:1610.06454,",
      "citeRegEx" : "Munkhdalai and Yu.,? \\Q2016\\E",
      "shortCiteRegEx" : "Munkhdalai and Yu.",
      "year" : 2016
    }, {
      "title" : "Who did what: A large-scale person-centered cloze dataset",
      "author" : [ "Takeshi Onishi", "Hai Wang", "Mohit Bansal", "Kevin Gimpel", "David McAllester" ],
      "venue" : null,
      "citeRegEx" : "Onishi et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Onishi et al\\.",
      "year" : 2016
    }, {
      "title" : "The lambada dataset: Word prediction requiring a broad discourse context",
      "author" : [ "Denis Paperno", "Germán Kruszewski", "Angeliki Lazaridou", "Quan Ngoc Pham", "Raffaella Bernardi", "Sandro Pezzelle", "Marco Baroni", "Gemma Boleda", "Raquel Fernández" ],
      "venue" : "arXiv preprint arXiv:1606.06031,",
      "citeRegEx" : "Paperno et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Paperno et al\\.",
      "year" : 2016
    }, {
      "title" : "On the difficulty of training recurrent neural networks",
      "author" : [ "Razvan Pascanu", "Tomas Mikolov", "Yoshua Bengio" ],
      "venue" : "arXiv preprint arXiv:1211.5063,",
      "citeRegEx" : "Pascanu et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Pascanu et al\\.",
      "year" : 2012
    }, {
      "title" : "Glove: Global vectors for word representation",
      "author" : [ "Jeffrey Pennington", "Richard Socher", "Christopher D. Manning" ],
      "venue" : "In Empirical Methods in Natural Language Processing (EMNLP), pp. 1532–1543,",
      "citeRegEx" : "Pennington et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Pennington et al\\.",
      "year" : 2014
    }, {
      "title" : "Reasonet: Learning to stop reading in machine comprehension",
      "author" : [ "Yelong Shen", "Po-Sen Huang", "Jianfeng Gao", "Weizhu Chen" ],
      "venue" : "arXiv preprint arXiv:1609.05284,",
      "citeRegEx" : "Shen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Shen et al\\.",
      "year" : 2016
    }, {
      "title" : "Iterative alternating neural attention for machine reading",
      "author" : [ "Alessandro Sordoni", "Phillip Bachman", "Yoshua Bengio" ],
      "venue" : "arXiv preprint arXiv:1606.02245,",
      "citeRegEx" : "Sordoni et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Sordoni et al\\.",
      "year" : 2016
    }, {
      "title" : "End-to-end memory networks",
      "author" : [ "Sainbayar Sukhbaatar", "Jason Weston", "Rob Fergus" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Sukhbaatar et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Sukhbaatar et al\\.",
      "year" : 2015
    }, {
      "title" : "Natural language comprehension with the epireader",
      "author" : [ "Adam Trischler", "Zheng Ye", "Xingdi Yuan", "Kaheer Suleman" ],
      "venue" : "arXiv preprint arXiv:1606.02270,",
      "citeRegEx" : "Trischler et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Trischler et al\\.",
      "year" : 2016
    }, {
      "title" : "On multiplicative integration with recurrent neural networks",
      "author" : [ "Yuhuai Wu", "Saizheng Zhang", "Ying Zhang", "Yoshua Bengio", "Ruslan Salakhutdinov" ],
      "venue" : "arXiv preprint arXiv:1606.06630,",
      "citeRegEx" : "Wu et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Wu et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning multi-relational semantics using neural-embedding models",
      "author" : [ "Bishan Yang", "Wen-tau Yih", "Xiaodong He", "Jianfeng Gao", "Li Deng" ],
      "venue" : "arXiv preprint arXiv:1411.4072,",
      "citeRegEx" : "Yang et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Yang et al\\.",
      "year" : 2014
    }, {
      "title" : "Multi-task cross-lingual sequence tagging from scratch",
      "author" : [ "Zhilin Yang", "Ruslan Salakhutdinov", "William Cohen" ],
      "venue" : "arXiv preprint arXiv:1603.06270,",
      "citeRegEx" : "Yang et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Yang et al\\.",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 7,
      "context" : "Towards this end, several large-scale datasets of cloze-style questions over a context document have been introduced recently, which allow the training of supervised machine learning systems (Hermann et al., 2015; Hill et al., 2015; Onishi et al., 2016).",
      "startOffset" : 191,
      "endOffset" : 253
    }, {
      "referenceID" : 8,
      "context" : "Towards this end, several large-scale datasets of cloze-style questions over a context document have been introduced recently, which allow the training of supervised machine learning systems (Hermann et al., 2015; Hill et al., 2015; Onishi et al., 2016).",
      "startOffset" : 191,
      "endOffset" : 253
    }, {
      "referenceID" : 20,
      "context" : "Towards this end, several large-scale datasets of cloze-style questions over a context document have been introduced recently, which allow the training of supervised machine learning systems (Hermann et al., 2015; Hill et al., 2015; Onishi et al., 2016).",
      "startOffset" : 191,
      "endOffset" : 253
    }, {
      "referenceID" : 7,
      "context" : "Deep learning models have recently been shown to outperform traditional shallow approaches on text comprehension tasks (Hermann et al., 2015).",
      "startOffset" : 119,
      "endOffset" : 141
    }, {
      "referenceID" : 25,
      "context" : "The success of many recent models can be attributed primarily to two factors: (1) Multi-hop architectures allow a (Weston et al., 2014; Sordoni et al., 2016; Shen et al., 2016), model to scan the document and the question iteratively for multiple passes.",
      "startOffset" : 114,
      "endOffset" : 176
    }, {
      "referenceID" : 24,
      "context" : "The success of many recent models can be attributed primarily to two factors: (1) Multi-hop architectures allow a (Weston et al., 2014; Sordoni et al., 2016; Shen et al., 2016), model to scan the document and the question iteratively for multiple passes.",
      "startOffset" : 114,
      "endOffset" : 176
    }, {
      "referenceID" : 2,
      "context" : "(2) Attention mechanisms, (Weston et al., 2014; Chen et al., 2016; Hermann et al., 2015) borrowed from the machine translation literature (Bahdanau et al.",
      "startOffset" : 26,
      "endOffset" : 88
    }, {
      "referenceID" : 7,
      "context" : "(2) Attention mechanisms, (Weston et al., 2014; Chen et al., 2016; Hermann et al., 2015) borrowed from the machine translation literature (Bahdanau et al.",
      "startOffset" : 26,
      "endOffset" : 88
    }, {
      "referenceID" : 0,
      "context" : ", 2015) borrowed from the machine translation literature (Bahdanau et al., 2014), allow the model to focus on appropriate subparts of the context document.",
      "startOffset" : 57,
      "endOffset" : 80
    }, {
      "referenceID" : 7,
      "context" : "More specifically, unlike existing models where the query attention is applied either token-wise (Hermann et al., 2015; Kadlec et al., 2016; Chen et al., 2016; Hill et al., 2015) or sentence-wise (Weston et al.",
      "startOffset" : 97,
      "endOffset" : 178
    }, {
      "referenceID" : 10,
      "context" : "More specifically, unlike existing models where the query attention is applied either token-wise (Hermann et al., 2015; Kadlec et al., 2016; Chen et al., 2016; Hill et al., 2015) or sentence-wise (Weston et al.",
      "startOffset" : 97,
      "endOffset" : 178
    }, {
      "referenceID" : 2,
      "context" : "More specifically, unlike existing models where the query attention is applied either token-wise (Hermann et al., 2015; Kadlec et al., 2016; Chen et al., 2016; Hill et al., 2015) or sentence-wise (Weston et al.",
      "startOffset" : 97,
      "endOffset" : 178
    }, {
      "referenceID" : 8,
      "context" : "More specifically, unlike existing models where the query attention is applied either token-wise (Hermann et al., 2015; Kadlec et al., 2016; Chen et al., 2016; Hill et al., 2015) or sentence-wise (Weston et al.",
      "startOffset" : 97,
      "endOffset" : 178
    }, {
      "referenceID" : 26,
      "context" : ", 2015) or sentence-wise (Weston et al., 2014; Sukhbaatar et al., 2015) to allow weighted aggregation, the Gated-Attention (GA) module proposed in this work allows the query to directly interact with each dimension of the token embeddings at the semantic-level, and is applied layer-wise as information filters during the multi-hop representation learning process.",
      "startOffset" : 25,
      "endOffset" : 71
    }, {
      "referenceID" : 7,
      "context" : "LSTMs with Attention: Several architectures introduced in (Hermann et al., 2015) employ LSTM units to compute a combined document-query representation g(d, q), which is used to rank the candidate answers.",
      "startOffset" : 58,
      "endOffset" : 80
    }, {
      "referenceID" : 2,
      "context" : "The architecture of the Attentive Reader has been simplified recently in Stanford Attentive Reader, where shallower recurrent units were used with a bilinear form for the query-document attention (Chen et al., 2016).",
      "startOffset" : 196,
      "endOffset" : 215
    }, {
      "referenceID" : 10,
      "context" : "Attention Sum: The Attention-Sum (AS) Reader (Kadlec et al., 2016) uses two bi-directional GRU networks (Cho et al.",
      "startOffset" : 45,
      "endOffset" : 66
    }, {
      "referenceID" : 3,
      "context" : ", 2016) uses two bi-directional GRU networks (Cho et al., 2014) to encode both d and q into vectors, similar to Stanford AR.",
      "startOffset" : 45,
      "endOffset" : 63
    }, {
      "referenceID" : 5,
      "context" : "Building on the AS Reader, the Attention-over-Attention (AoA) Reader (Cui et al., 2016) introduces a two-way attention mechanism where the query and the document are mutually attentive to each other.",
      "startOffset" : 69,
      "endOffset" : 87
    }, {
      "referenceID" : 25,
      "context" : "Iterative reasoning has been found effective in several more recent models, including the Iterative Attentive Reader (Sordoni et al., 2016) and ReasoNet (Shen et al.",
      "startOffset" : 117,
      "endOffset" : 139
    }, {
      "referenceID" : 24,
      "context" : ", 2016) and ReasoNet (Shen et al., 2016).",
      "startOffset" : 21,
      "endOffset" : 40
    }, {
      "referenceID" : 13,
      "context" : "Other related works include Dynamic Entity Representation network (DER) (Kobayashi et al., 2016), which builds dynamic representations of the candidate answers while reading the document, and accumulates the information about an entity by max-pooling.",
      "startOffset" : 72,
      "endOffset" : 96
    }, {
      "referenceID" : 27,
      "context" : "EpiReader (Trischler et al., 2016) consists of two networks, where one proposes a small set of candidate answers, and the other reranks the proposed candidates conditioned on the query and the context.",
      "startOffset" : 10,
      "endOffset" : 34
    }, {
      "referenceID" : 1,
      "context" : "(Bajgar et al., 2016) showed a 10% improvement on the CBT corpus (Hill et al.",
      "startOffset" : 0,
      "endOffset" : 21
    }, {
      "referenceID" : 8,
      "context" : ", 2016) showed a 10% improvement on the CBT corpus (Hill et al., 2015) by training the AS Reader on an augmented training set of about 14 million examples, making a case for community to exploit data abundance.",
      "startOffset" : 51,
      "endOffset" : 70
    }, {
      "referenceID" : 26,
      "context" : "Our proposed GA readers perform multiple hops over the document (context), similar to the Memory Networks architecture (Sukhbaatar et al., 2015).",
      "startOffset" : 119,
      "endOffset" : 144
    }, {
      "referenceID" : 25,
      "context" : "Multi-hop architectures mimic the multi-step comprehension process of human readers, and have shown promising results in several recent models for text comprehension (Sordoni et al., 2016; Kumar et al., 2015; Shen et al., 2016).",
      "startOffset" : 166,
      "endOffset" : 227
    }, {
      "referenceID" : 14,
      "context" : "Multi-hop architectures mimic the multi-step comprehension process of human readers, and have shown promising results in several recent models for text comprehension (Sordoni et al., 2016; Kumar et al., 2015; Shen et al., 2016).",
      "startOffset" : 166,
      "endOffset" : 227
    }, {
      "referenceID" : 24,
      "context" : "Multi-hop architectures mimic the multi-step comprehension process of human readers, and have shown promising results in several recent models for text comprehension (Sordoni et al., 2016; Kumar et al., 2015; Shen et al., 2016).",
      "startOffset" : 166,
      "endOffset" : 227
    }, {
      "referenceID" : 10,
      "context" : "refined across hops until reaching a final attention-sum module (Kadlec et al., 2016) which maps the contextual representations in the last hop to a probability distribution over candidate answers.",
      "startOffset" : 64,
      "endOffset" : 85
    }, {
      "referenceID" : 0,
      "context" : "The attention mechanism has been introduced recently to model human focus, leading to significant improvement in machine translation and image captioning (Bahdanau et al., 2014; Mnih et al., 2014).",
      "startOffset" : 154,
      "endOffset" : 196
    }, {
      "referenceID" : 17,
      "context" : "The attention mechanism has been introduced recently to model human focus, leading to significant improvement in machine translation and image captioning (Bahdanau et al., 2014; Mnih et al., 2014).",
      "startOffset" : 154,
      "endOffset" : 196
    }, {
      "referenceID" : 7,
      "context" : "However, existing neural network readers are restricted to either attend to tokens (Hermann et al., 2015; Chen et al., 2016) or entire sentences (Weston et al.",
      "startOffset" : 83,
      "endOffset" : 124
    }, {
      "referenceID" : 2,
      "context" : "However, existing neural network readers are restricted to either attend to tokens (Hermann et al., 2015; Chen et al., 2016) or entire sentences (Weston et al.",
      "startOffset" : 83,
      "endOffset" : 124
    }, {
      "referenceID" : 28,
      "context" : ", in various types of recurrent units (Hochreiter & Schmidhuber, 1997; Wu et al., 2016) and in relational learning (Yang et al.",
      "startOffset" : 38,
      "endOffset" : 87
    }, {
      "referenceID" : 29,
      "context" : ", 2016) and in relational learning (Yang et al., 2014; Kiros et al., 2014).",
      "startOffset" : 35,
      "endOffset" : 74
    }, {
      "referenceID" : 12,
      "context" : ", 2016) and in relational learning (Yang et al., 2014; Kiros et al., 2014).",
      "startOffset" : 35,
      "endOffset" : 74
    }, {
      "referenceID" : 3,
      "context" : "Several components of the model use a Gated Recurrent Unit (GRU) (Cho et al., 2014) which maps an input sequence X = [x1, x2, .",
      "startOffset" : 65,
      "endOffset" : 83
    }, {
      "referenceID" : 10,
      "context" : "This aggregation operation is the same as the pointer sum attention applied in the AS Reader (Kadlec et al., 2016).",
      "startOffset" : 93,
      "endOffset" : 114
    }, {
      "referenceID" : 30,
      "context" : "Such embeddings have been previously shown to be helpful for tasks like Named Entity Recognition (Yang et al., 2016) and dealing with OOV tokens at test time (Dhingra et al.",
      "startOffset" : 97,
      "endOffset" : 116
    }, {
      "referenceID" : 6,
      "context" : ", 2016) and dealing with OOV tokens at test time (Dhingra et al., 2016).",
      "startOffset" : 49,
      "endOffset" : 71
    }, {
      "referenceID" : 15,
      "context" : "Question Evidence Common Word Feature (qe-comm): (Li et al., 2016) recently proposed a simple token level indicator feature which significantly boosts reading comprehension performance in some cases.",
      "startOffset" : 49,
      "endOffset" : 66
    }, {
      "referenceID" : 7,
      "context" : "The first two, CNN and Daily Mail news stories3 consist of articles from the popular CNN and Daily Mail websites (Hermann et al., 2015).",
      "startOffset" : 113,
      "endOffset" : 135
    }, {
      "referenceID" : 8,
      "context" : "The next two datasets are formed from two different subsets of the Children’s Book Test (CBT)4 (Hill et al., 2015).",
      "startOffset" : 95,
      "endOffset" : 114
    }, {
      "referenceID" : 8,
      "context" : "(Hill et al., 2015)).",
      "startOffset" : 0,
      "endOffset" : 19
    }, {
      "referenceID" : 20,
      "context" : "The final dataset we evaluate on is Who Did What5 (WDW) (Onishi et al., 2016), constructed from the LDC English Gigaword newswire corpus.",
      "startOffset" : 56,
      "endOffset" : 77
    }, {
      "referenceID" : 22,
      "context" : "We also used gradient clipping with a threshold of 10 to stabilize GRU training (Pascanu et al., 2012).",
      "startOffset" : 80,
      "endOffset" : 102
    }, {
      "referenceID" : 23,
      "context" : "The word lookup table was initialized with 100d GloVe vectors7 (Pennington et al., 2014) and OOV tokens at test time were assigned unique random vectors.",
      "startOffset" : 63,
      "endOffset" : 88
    }, {
      "referenceID" : 1,
      "context" : "For CBT-NE, GA Reader with the qe-comm feature outperforms all previous single and ensemble models except the AS Reader trained on the much larger BookTest Corpus (Bajgar et al., 2016).",
      "startOffset" : 163,
      "endOffset" : 184
    }, {
      "referenceID" : 20,
      "context" : "Results marked with † are cf Onishi et al. (2016).",
      "startOffset" : 29,
      "endOffset" : 50
    }, {
      "referenceID" : 23,
      "context" : "GloVe vectors were trained on a large corpus of about 6 billion tokens (Pennington et al., 2014), and provide an important source of prior knowledge for the model.",
      "startOffset" : 71,
      "endOffset" : 96
    } ],
    "year" : 2016,
    "abstractText" : "In this paper we study the problem of answering cloze-style questions over documents. Our model, the Gated-Attention (GA) Reader, integrates a multi-hop architecture with a novel attention mechanism, which is based on multiplicative interactions between the query embedding and the intermediate states of a recurrent neural network document reader. This enables the reader to build query-specific representations of tokens in the document for accurate answer selection. The GA Reader obtains state-of-the-art results on three benchmarks for this task–the CNN & Daily Mail news stories and the Who Did What dataset. The effectiveness of multiplicative interaction is demonstrated by an ablation study, and by comparing to alternative compositional operators for implementing the gated-attention.",
    "creator" : "LaTeX with hyperref package"
  }
}