{
  "name" : "371.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "LEARNING PHYSICAL DYNAMICS",
    "authors" : [ "Michael B. Chang", "Tomer Ullman", "Antonio Torralba", "Joshua B. Tenenbaum" ],
    "emails" : [ "mbchang@mit.edu", "tomeru@mit.edu", "torralba@mit.edu", "jbt@mit.edu" ],
    "sections" : [ {
      "heading" : "1 INTRODUCTION",
      "text" : "Endowing an agent with a program for physical reasoning constrains the agent’s representation of the environment by establishing a prior on the environment’s physics. The agent can leverage these constraints to rapidly learn new tasks, to flexibly adapt to changes in inputs and goals, and to naturally generalize reasoning to novel scenes (Lake et al., 2016).\nFor example, a foundational sense of intuitive physics is a prior that guides humans to decompose a scene into objects and carry expectations of object boundaries and motion across different scenarios (Spelke, 1990). Humans perceive balls on a billiard table not as meaningless patches of color but rather as impermeable objects. They expect balls moving toward each other to bounce a certain way after a collision rather than pass through each other, crumble into pieces, or disperse into smoke. Replace one billiard ball with a bowling ball and expectations for ball-to-ball interactions will differ, but the underlying sense of inertia and collisions remain. Arrange immovable wooden obstacles on the table and expectations for how a ball’s surface interacts with wood remain constant regardless of how the obstacles are arranged. The ability to plan trajectories in this space without having to relearn physics from scratch each time, regardless of whether there are three balls or eight balls, whether there are obstacles or not, whether obstacles are arranged in one way or another, whether or not the configuration of objects has been seen before, suggests that humans leverage a prior on physics to reason at a level of abstraction where objects, relations, and events are primitive.\nThis paper explores the question of building this prior into an agent as a program. We view this program as a simulator that takes input provided by a physical scene and the past states of objects, and outputs the future states and physical properties of relevant objects (Anderson, 1990; Battaglia et al., 2013; Goodman and Tenenbaum, 2016). Our goal is to design a program that naturally generalizes across variable object count and different scene configurations without additional retraining. Our proposed framework, the Neural Physics Engine (NPE), outlines several ingredients useful for realizing these two generalization capabilities. We describe these ingredients in the context of a specific instantiation of the NPE applied to two-dimensional worlds of balls and obstacles."
    }, {
      "heading" : "1.1 A HYBRID DESIGN",
      "text" : "Two general approaches have emerged in the search for a program that captures common-sense physical reasoning. The top-down approach (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014; Wu et al., 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al., 2016; Fragkiadaki et al., 2015b; Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016; Sutskever et al., 2009) learns to directly map observations to motion prediction or physical judgments. A program under the top-down approach can generalize across any scenario supported by the entities and operators in its description language. However, it may be brittle under scenarios not supported by its description language, and adapting to these new scenarios requires modifying the code or generating new code for the physics engine itself. In contrast, gradient-based bottom-up approaches can apply the same model architecture and learning algorithm to specific scenarios without requiring the physical dynamics of the scenario to be pre-specified. This often comes at the cost of reduced generality: transferring knowledge to new scenes may require extensive retraining, even in cases that seem trivial to human reasoning.\nThe NPE takes a step toward bridging the gap between expressivity and adaptability by combining the strengths of both approaches. The NPE framework is realized as a differentiable physics simulator that combines rough symbolic structure with gradient-based learning. It exhibits several strong inductive biases that are explicitly present in symbolic physics engines, such as a notion of objects-specific properties and object interactions. Implemented as a neural network, the NPE can also flexibly tailor itself to specific object properties and dynamics of a given world through training. By design, it can extrapolate to a variable number of objects and different scene configurations with only spatially and temporally local computation."
    }, {
      "heading" : "1.2 INGREDIENTS USEFUL FOR GENERALIZATION",
      "text" : "Our framework proposes four key ingredients useful for generalization across variable object count and different scene configurations without additional retraining. The first ingredient is the view of objects as primitives of physical reasoning. The second is a mechanism for selecting context objects given a particular object. Together, these ingredients reflect two natural assumptions about a physical environment: There exist objects and these objects interact in a factorized manner.\nThe third and fourth ingredients are factorization and compositionality, which are both applied on two levels: the scene and the network architecture. On the level of the physical scene, the NPE factorizes the scene into object-based representations, and composes smaller building blocks to form larger objects. This method of representation adapts to scene configurations of variable complexity and shape. On the level of the network architecture, the NPE explicitly reflects a causal structure in object interactions by factorizing object dynamics into pairwise interactions. The NPE models the future state of a single object as a function composition of the pairwise interactions between itself and other context objects in the scene. This structure serves to guide learning towards objectbased reasoning and is designed for physical knowledge to transfer across variable number objects anywhere in the scene."
    }, {
      "heading" : "1.3 A STEP TOWARDS EMULATING A GENERAL-PURPOSE PHYSICS ENGINE",
      "text" : "While previous bottom-up approaches (Sec. 4) have coupled learning vision and learning physical dynamics, we take a different approach for two reasons. First, we see that disentangling the visual properties of an object from its physical dynamics is a step toward achieving the generality of a physics engine. Both vision and dynamics are necessary, but we believe that keeping these functionalities separate is important for common-sense generalization that is robust to cases where the visual appearance changes but the dynamics remain the same. Second, we are optimistic that those two components indeed can be decoupled, that a vision model can map visual input to an intermediate state space, and a dynamics model can evolve objects in that state space through time. For example, there is work in object detection and localization (e.g. Eslami et al. 2016) for extracting position and velocity, as well as work for extracting latent object properties (Wu et al., 2015; 2016). Therefore this paper focuses on learning dynamics in that state space, taking a small step toward emulating a general-purpose physics engine, with the eventual goal of building a system that exhibits the compo-\nsitionality, modularity, and generality of a physics engine whose internal components can be learned through observation.\nIn Sec. 2 we present a specific instantiation of the NPE that uses a neighborhood mask to select context objects. In Sec. 3 we apply that instantiation to investigate variations on two-dimensional worlds of balls and obstacles from the matter-js physics engine (Brummitt, 2014) as a testbed for exploring the NPE’s capabilities to model simple rigid-body dynamics. While these worlds are generated from a simplified physics engine, we believe that learning to model such simple physics under the NPE’s framework is a first and necessary step towards emulating the full capacity of a general physics engine, while maintaining a differentiability that can allow it to eventually learn complex real-world physical phenomena that would be challenging to engineer into conventional physics engines. This paper establishes that important step."
    }, {
      "heading" : "2 APPROACH",
      "text" : ""
    }, {
      "heading" : "2.1 NEURAL PHYSICS ENGINE",
      "text" : "We consider in detail a specific instantiation of the NPE that uses a neighborhood mask to select context objects. This section discusses each of the four ingredients of the NPE framework, that, when combined, comprise a neural network-based physics simulator that learns from observation.\nObject-Based Representations We make two observations (Fig. 1) in our factorization of the scene. The first regards spatially local computation. Because physics does not change across inertial frames, it suffices to separately predict the future state of each object conditioned on the past states of itself and the other objects in its neighborhood, similar to Fragkiadaki et al. (2015b). Sec. 3.5 shows that when large structures are represented as a composition of smaller objects, a spatially local attention window helps achieve invariance to scene configuration. The second observation regards temporally local computation. Because physics is Markovian, this prediction need only be for the immediate next timestep, which we show in Sec. 3 is enough to predict physics effectively over long timescales. Given these two observations, it is natural to choose an object-based state representation. A state vector comprises extrinsic properties (position, velocity, orientation, angular velocity), intrinsic properties (mass, object type, object size), and global properties (gravitational, frictional, and pairwise forces) at a given time instance.\nPairwise Factorization Letting a particular object be the focus object f and all other objects in the scene be context objects c, the NPE models the focus object’s velocity v[t+1]f as a composition of the pairwise interactions between itself and other neighboring context objects in the scene during time t − 1 and t. This input is represented as pairs of object state vectors {(of , oc1)[t−1,t], (of , oc2)[t−1,t], ...}. As shown in Fig. 2b, the NPE composes an encoder function and a decoder function. The encoder function fenc summarizes the interaction of a single object pair. The sum of encodings of all pairs is then concatenated with the focus object’s past state as input to the decoder function. The focus object is a necessary input to the decoder because if there are no neighboring context objects, the summed encoder output would be zero. The decoder function then predicts the focus object’s velocity v[t+1]f . In practice, the NPE predicts the change ∆v between t\nand t + 1 to compute v[t+1] = v[t] + ∆v, and updates position using the velocity as a first-order approximation1. We predict velocity rather than position to help avoid memorizing the environment; training the network to predict position conditions the network on the worlds in the training domain, making it more difficult to transfer knowledge across environments. We do not include acceleration in the state representation because position and velocity fully parametrize an object’s state. Thus acceleration (e.g. collisions) can be learned by observing velocity for two consecutive timesteps, hence our choice for two input timesteps. We explored longer input durations as well and found no additional benefit.\nContext Selection Each (of , oc) pair is selected to be in the set of neighbors of f by the neighborhood masking function 1 [||pc − pf )|| < N(of )], which takes value 1 if the Euclidean distance between the positions pf and pc of the focus and context object respectively at time t is less the neighborhood threshold N(of ). Many physics engines use a collision detection scheme with two phases. Broad phase is used for computational efficiency and uses a neighborhood threshold to select objects that might, but not necessarily will, collide an object. Narrow phase performs the actual collision detection on that smaller subset of objects and also resolves the collisions for the objects that do collide. Analogously, our neighborhood mask implements broad phase, and the NPE implements narrow phase. The mask only constrains the search space of context objects, and the network figures out how to detect and resolve collisions. This mask is a specific case of a more general attention mechanism to select contextual elements of a scene.\nFunction Composition Symbolic physics engines evolve objects through time based on dynamics that dictate their independent behavior (e.g. inertia) and their behavior with other objects (e.g. collisions). Notably, in a particular object’s reference frame, the forces it feels from other objects are additive. The NPE architecture incorporates several inductive biases that reflect this recipe. The composition of fenc and fdec induce a causal structure on the pairs of objects. We provide a loose interpretation of the encoder output ec,f as the effect of object c on object f , and require that these effects are additive as forces are. This design allows the NPE to scale naturally to different numbers of neighboring context objects. These inductive biases have the effect of strongly constraining the space of possible simulators that the NPE can learn, focusing on compositional programs that reflect pairwise causal structure in object interactions."
    }, {
      "heading" : "2.2 BASELINES",
      "text" : "The purpose of contrasting the NPE with the following two baselines is to illustrate the benefit of pairwise factorization and function composition, which are the key architectural features of the NPE. As the architectures for both baselines have been shown to work well in similar tasks, it is not immediately clear whether the NPE’s assumptions are useful or necessary, so these are good baselines for comparison. Viewed in another way, comparing with these baselines is a lesion study on the NPE because each baseline lacks an aspect of the NPE structure.\nNo-Pairwise The No-Pairwise (NP) baseline is summarized by Fig. 2c. It is very similar to the NPE but does not compute pairwise interactions; otherwise its encoder and decoder are the same as the NPE’s. Therefore the NP most directly highlights the value of the NPE’s pairwise factorization. The NP is also a Markovian variant of the Social LSTM (Alahi et al., 2016); it sums the encodings of context objects after encoding each object independently, similar to the Social LSTM’s “social pooling.” Information for modeling how objects interact would only be present after the encoding step. A possible mechanism for predicting dynamics with the NP is if the encoder’s object encoding consists of an abstract object representation and a force field created by that object. Therefore the decoder could apply the sum of the force fields of all context objects to the focus object’s abstract object representation to predict the focus object’s velocity. As Alahi et al. (2016) has demonstrated the Social LSTM’s performance in modeling human trajectories, it would be interesting to see how the same architectural assumptions perform for the physics of moving objects.\n1The NPE as currently implemented also predicts angular velocity along with velocity, but for the experiments in this paper we always set angular velocity, as well as gravity, friction, and pairwise forces, to zero. We included these parameters in the implementation because in future work we are planning to test situations and scenarios in which angular velocity is important, such as block towers, magnetism. However, in the current work they are vestigial and set to zero and do not appear in the evaluation.\nLSTM Long Short-Term Memory (LSTM) networks (Hochreiter and Schmidhuber, 1997) have been shown to sequentially attend to objects (Eslami et al., 2016), so it is interesting to test whether a LSTM is well-suited for modeling object interactions, when the object states are explicitly given as input. From a cognitive science viewpoint, an LSTM can be interpreted as a serial mechanism in object tracking (Pylyshyn and Annan, 2006). Our LSTM architecture (Fig. 2d) accepts the state of each context object until the last step, at which it takes in the focus object’s state and predicts its velocity. Because the LSTM moves through the object space sequentially, its lack of factorized compositional structure highlights the value of the NPE’s function composition of the independent interactions between an object and its neighbors. Our notion of compositionality treats each object and pairwise interaction as independently encapsulated in a separate computational entity that can be reused and rearranged; the NPE encoder is a function that is applied to each (of , oc) pair. This function encapsulates this computation and can be repeatedly applied to all neighboring context objects equally, such that the NPE composes this repeated encoding function with the decoder function to predict velocity. The LSTM does not exhibit this notion of compositionality because it is not designed to take advantage of the factorized structure of the scene. Unlike the NPE and NP, the LSTM’s structure does not differentiate between focus and context object, so we add a flag to the state representation to indicate to whether an object is a context or focus object. We shuffle the order of the context objects to account for an ordering bias."
    }, {
      "heading" : "3 EXPERIMENTS",
      "text" : "Object-based representations (ingredient 1) are necessary for the other three ingredients, and having explained the motivation for object-based representations in Sec. 1.3 and Sec. 2.1, we now analyze the other three ingredients in the context of several experiments. In the prediction task (Sec. 3.1), we first test if the NPE is even capable of predicting physics when the number of objects is held constant. In the generalization task (Sec. 3.2), we test the NPE’s capability to generalize across variable object count. In the inference task (Sec. 3.3), we test if the NPE can be inverted to infer mass in both the prediction and generalization settings. In these experiments, we compare against the NPE-NN, a modified NPE without the neighborhood mask, to analyze the context selection\nmechanism (ingredient 2), the NP to analyze factorization (ingredient 3), the LSTM to analyze compositionality (ingredient 4). Sec. 3.4 analyzes the neighborhood mask in depth. We test the NPE’s capability to generalize across different scene configurations in Sec. 3.5.\nUsing the matter-js physics engine, we evaluate the NPE on worlds of balls and obstacles. These worlds exhibit nonlinear dynamics and support a wide variety of scenarios. Bouncing balls have been of interest in cognitive science to study causality and counterfactual reasoning, as in Gerstenberg et al. (2012). We trained on 3-timestep windows in trajectories of 60 timesteps (10 timesteps ≈ 1 second). For a world of k objects, we generate 50,000 such trajectories. For experiments where we train on multiple worlds together, we shuffle the examples across all training worlds and train without a curriculum schedule. All worlds have a vertical dimension of 600 pixels and a horizontal dimension of 800 pixels, and we constrain the maximum velocity of an object to be 60 pixels/second. We normalize positions to [0, 1] by dividing by the horizontal dimension, and we normalize velocities to [−1, 1] by dividing by the maximum velocity. Like those of Battaglia et al. (2016) the NPE predictions can be effective over long timescales even when the NPE is only trained to predict the immediate next time step. Randomly selected simulation videos can be found at https://goo.gl/BWYuOF. Plots show results over three independent runs averaged over held-out test data with different random seeds. As shown in the graphs in Fig. 3 (top two rows) and Fig. 5, both the NP and LSTM’s predicted trajectories diverge from the ground truth, but for different reasons, which the videos illuminate. While the NP and LSTM fail to predict plausible physical movement entirely, the NPE’s predictions initially adhere closely to the ground truth, then slowly diverge due to the accumulation of subtle errors, just as the human perceptual system also accumulates errors (Smith and Vul, 2013). However, the NPE preserves the general intuitive physical dynamics that may roughly be consistent with people’s intuitive expectations."
    }, {
      "heading" : "3.1 PREDICTION TASK",
      "text" : "We consider simple worlds of four balls of uniform mass (Fig. 3a). To measure performance in simulation, we visualize the cosine similarity between the predicted velocity and the ground truth velocity as well as the relative error in magnitude between the predicted velocity and the ground truth velocity over 50 timesteps of simulation. The models take timesteps 1 and 2 as initial input, and then use previous predictions as input to future predictions. To measure progress through training, we also display the Mean Squared Error (MSE) on the normalized velocity."
    }, {
      "heading" : "3.2 GENERALIZATION TASK",
      "text" : "We test whether learned knowledge of these simple physics concepts can be transferred and extrapolated to worlds with a number of objects previously unseen (Fig. 3b). The unseen worlds (6, 7, 8 balls) in the test data are combinatorially more complex and varied than the observed worlds (3, 4, 5 balls) in the training data. All objects have equal mass. During simulation, the NPE’s predictions are more consistent, whereas the NP and LSTM’s prediction begin to diverge wildly towards the end of 50 timesteps of simulation (Fig. 3b, middle row). The NPE consistently outperforms the baselines by 0.5 to 1 order of magnitude in velocity prediction (Fig. 3b, bottom row)."
    }, {
      "heading" : "3.3 INFERENCE TASK",
      "text" : "We now show that the NPE can infer latent properties such as mass. This proposal is motivated by the experiments in Battaglia et al. (2013), which uses a probabilistic physics simulator to infer various properties of a scene configuration. Whereas the physical rules of their simulator were manually pre-specified, the NPE learns these rules from observation. We train on the same worlds used in both the prediction and generalization tasks, but we uniformly sampled the mass for each ball from the log-spaced set {1, 5, 25}. We chose to use discrete-valued masses to simplify our qualitative understanding of the model’s capacity to infer. For future work we would like to investigate continuously valued masses and evaluate with binary comparisons (e.g. ”Which is heavier?”).\nAs summarized by Fig. 3c and Fig. 4a, we select scenarios exhibiting collisions with the focus object, fix the masses of all other objects, and score the NPE’s prediction under all possible mass hypotheses for the focus object. The prediction is scored against the ground-truth under the same MSE loss used in training. The hypothesis whose prediction yields the lowest error is the NPE’s\nmaximum likelihood estimate of the focus object’s mass. Outperforming all baselines, the NPE achieves about 90% accuracy, meaning it has 90% probability of inferring the correct mass.\nThe NPE predicts outputs given inputs and infers inputs given outputs. Though we adopted a particular parametrization of an object, the NPE is not limited to the semantic meaning of the elements of its input, so we expect other latent object properties can be inferred this way. Because the NPE is differentiable, we expect that it can also infer object properties by backpropagating prediction error to its a randomly sampled input. This would be useful for inferring non-categorical values, such as positions of “invisible” objects, whose effects are felt but whose positions are unknown."
    }, {
      "heading" : "3.4 NEIGHBORHOOD MASK",
      "text" : "In Fig. 3d we vary the NPE’s neighborhood threshold N(of ) and evaluate performance on the constant-mass prediction task. N(of ) is in units of ball radii, so N(of ) = 2 means that a context object is only detected if it is exactly touching the focus object. Because ball radii are 60 pixels and the maximum velocity is 60 pixels per timestep, the maximum distance two balls can initially be before touching at the next timestep is 4 ball radii. Given that velocities were sampled uniformly, it makes sense that the NPE performs well in and is robust2 to the range N(of ) ∈ [3, 5], but performance drops off with smaller and larger N(of ). It is important to note that different N(of ) may work better for different domains and object geometries.\n2The results reported in this paper were with N(of ) = 3.5 ball radii, which we found initially with a coarser search than the results in Fig. 3d, although any threshold in the range N(of ) ∈ [3, 5] performs similarly.\nWe include analysis in the prediction and generalization tasks on an NPE without the neighborhood mask, the NPE-NN (NN = No Neighborhood). The neighborhood mask gives the NPE about an order of magnitude improvement in velocity prediction loss (Fig. 3a,b: bottom row and Fig. 6). While the NPE loss continues to improve through training, the NPE-NN loss quickly plateaus. It is interesting that the NPE-NN performs no better than both the NP and LSTM in predictive error, but outperforms the LSTM in mass inference. These two observations suggest that computing the interactions the focus object shares with each context object is more effective for inferring a property of the focus object than disregarding these factorized effects. They also suggest that the additional spatial structure from constraining the context space with the neighborhood mask prevents the NPE from naively finding associations with objects that cannot influence the focus object.\nIn our experiments, the neighborhood mask has the additional practical benefit of reducing computational complexity from O(k) to O(1), where k is the number of objects in the scene, because the number of context-focus object pairs the NPE considers is bounded above by the neighborhood mask at a constant number. Though beyond the scope of this work, to extend the functionality of such context selection mechanism to include worlds that contain forces that act from a distance, future instantiations of the NPE may investigate a more general context selection mechanism that can be learned jointly with the other model parameters."
    }, {
      "heading" : "3.5 DIFFERENT SCENE CONFIGURATIONS",
      "text" : "We demonstrate representing large structures as a composition of smaller objects as building blocks. This is important for testing the NPE’s invariance to scene configuration; the scene configuration should not matter if the underlying physical laws remain the same. These worlds contain 2 balls bouncing around in variations of 4 different wall geometries. “O” and “L” geometries have no internal obstacles and are in the shape of a rectangle and “L” respectively. “U” and “I” have internal obstacles. Obstacles in “U” are linearly attached to the wall like a protrusion, while obstacles in “I”\nhave no constraint in position. We randomly vary the position and orientation of the “L” concavity and the “U” protrusion. We randomly sample the positions of the “I” internal obstacles.\nWe train on conceptually simpler “O” and “L” worlds and test on more complex “U” and “I” worlds. Variations in wall geometries adds to the difficulty of this extrapolation task. At most 12 context objects are present in the focus object’s neighborhood at a time. The “U” geometries have 33 objects in the scene, the most out of all the wall geometries. As shown in Fig. 4b and 5, the NPE is robust to scenes with internal obstacles, even when it has not observed such scenes during training."
    }, {
      "heading" : "3.6 ANALYSIS",
      "text" : "We explain the NPE’s superior performance in generalization from the perspective of context selection, factorization, and compositionality. By design, all three ingredients transform the testing data distribution to be similar to the training data distribution, such that generalization across variable object count and different scene configurations happens naturally.\nConsider generalizing across variable object count. The neighborhood mask selects context objects such that the NPE need only focus on a bounded subset of the objects regardless of the total number of objects. Factorizing the scene into pairwise interactions induces a causal structure between each context object and the focus object, such that no matter the object count, this causal structure remains consistent because the input is merely a set of object pairs. Composing these pairwise interactions together with a summation encourages the encoder output to be additive, such that the decoder receives the appropriate net effect from the context objects, regardless of how many there are.\nConsider generalizing across different scene configurations. Our state representation composes larger structures from smaller objects, just as many real-world objects are composed of smaller components. Therefore, even when wall geometries are complex and varied on a macroscopic scale, the input distribution to the NPE remains roughly the same, because the prediction problem still remains only over objects in a local glimpse the entire scene."
    }, {
      "heading" : "4 RELATED WORK",
      "text" : "Top-down and bottom-up approaches A recent set of top-down approaches investigate probabilistic game physics engines as computational models for physical simulation in humans (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014). However, these models\nrequire a full specification of the physical laws and object geometries. Given such a specification, inferring how physical laws compose and apply to a given scenario are their strength, but automatically inferring from visual data what physical laws and object properties are present requires more work in inverse graphics (Chen et al., 2016; Kulkarni et al., 2014; 2015a;b; Whitney et al., 2016) and physics-based visual understanding (Brand, 1997; Wu et al., 2015; 2016). The NPE builds on top of the key structural assumptions of these top-down approaches, but its differentiable architecture opens a possible path for joint training with a vision model that can automatically adapt to the specific physical properties of the scene.\nBottom-up approaches attempt to bypass the intermediate step of finding physics representations and directly map visual observations to physical judgments (Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016) or passive (Lerer et al., 2016; Srivastava et al., 2015; Sutskever et al., 2009) and action-conditioned (Agrawal et al., 2016; Finn et al., 2016; Fragkiadaki et al., 2015b) motion prediction. Because these work historically have not been compositional in nature, they have had limited flexibility to transfer knowledge to conceptually similar worlds where the physics remain the same, but the number of objects or complexity of object configurations varies. Moreover, these approaches above do not infer latent properties as the NPE does.\nOther work have taken similar hybrid approaches as the NPE, such as the NeuroAnimator (Grzeszczuk et al., 1998), one of the first work to train a neural network to emulate a physics simulator, and the interaction network (Battaglia et al., 2016), which learns to simulate physics over a graph of objects and their relations.\nSketching The NPE combines a symbolic structure that assumes generic objects and interactions with a differentiability that allows the specific nature of these interactions to be learned from training. This approach of starting with a general sketch of a program and filling in the specifics is inspired by ideas from the program synthesis community (Ellis et al., 2015; Gaunt et al., 2016; Solar-Lezama, 2008). Examples of other work that combine symbolic with neural approaches via sketching include graph-based neural networks (Jain et al., 2016; Li et al., 2015; Scarselli et al., 2009) and transforming autoencoders (Hinton et al., 2011).\nComposing functions for reuse Just as the NPE repeatedly applies the same encoder to each object pair, iteratively applies itself to each object in the scene as a focus object, and recursively predicts future timesteps using predictions from previous timesteps, employing function reuse to achieve generalization is also featured in work such as Abelson et al. (1996); Andreas et al. (2016); Lake et al. (2015); Reed and de Freitas (2015); Socher et al. (2011). These work all assemble small subprograms to form larger programs. The NPE also dynamically composes its internal modules (encoder and decoder) based on the number of objects and the arrangement of context objects.\nObject-based approaches Fragkiadaki et al. (2015b) and Battaglia et al. (2016) are two notably similar work in the sense that our work and theirs all take an object-based approach to model the bouncing balls environment. Our work was inspired by Fragkiadaki et al. (2015b)’s iterative approach to predicting the motion of each object in turn, conditioned on a context. The key contrast is that their model assumes no relational structure between objects beyond a visual attention window centered around the focus object, whereas ours explicitly processes the interaction between the focus and each context object.\nIf we compare their simulation videos (Fragkiadaki et al., 2015a) to ours, we see some specific and significant improvements evident in our approach. For example, in their work, the balls appear attracted to each other and to the walls; the balls appear to bounce along the walls even when no attractive force should be present. The balls rarely touch during collisions, but magnetically repel each other when at a short distance. The NPE does not exhibit these behaviors and tends to preserve the intuitive physical dynamics of colliding balls. In addition to these differences, we show strong predictive performance on generalizing to eight balls, five more than the balls in their videos. We also crucially show this performance under stronger generalization conditions, variable mass, and more complex scene configurations.\nRecently, Battaglia et al. (2016) independently and in parallel developed an architecture that they call the interaction network for learning to model physical systems. They show how such an architecture can apply to several different kinds of physical systems, including n-body gravitational interactions\nand a string falling under gravity. Like their work, our model can simulate over many timesteps very effectively when only trained for next-timestep prediction, and can generalize to different world configurations and different numbers of objects.\nCompared to the interaction network, a main difference in our architecture is that ours does not take object relations as explicit input, but instead learns the nature of these relations by constraining attention to a neighborhood set of objects. Another difference is in function reuse: we demonstrated that a trained NPE can automatically infer properties of its input such as mass without further retraining. In contrast, they train an additional classifier on top of their model to do inference. Their work also exhibits the four ingredients in our framework, and we view the similarities between their and our work as converging evidence for the utility of object-based representations and compositional model architectures in learning to emulate general-purpose physics engines."
    }, {
      "heading" : "5 DISCUSSION",
      "text" : "While this paper is not the first to explore learning a physics simulator, here we take the opportunity to highlight the value of this paper’s contributions. We hope these contributions can seed further research that builds on the NPE framework this paper proposes.\nWe showed that object-based representations, a context selection mechanism, factorization, and compositionality are useful ingredients for learning a physics simulator that generalizes across variable object count and different scene configurations with only spatially and temporally local computation. This generalization is possible because these ingredients transform the testing data distribution to be similar to the training data distribution.\nThe NPE makes few but strong assumptions about the nature of objects in a physical environment. These assumptions are inductive biases that not only give the NPE enough structure to help constrain it to model physical phenomena in terms of objects but also are general enough for the NPE to learn physical dynamics almost exclusively from observation.\nWe applied the NPE to simple two-dimensional worlds of bouncing balls ranging in complexity. We showed that NPE achieves low prediction error, extrapolates learned physical knowledge to previously unseen number of objects and world configurations, and can infer latent properties such as mass. We compared against several baselines designed to test the ingredients of the NPE framework and found superior performance when all these ingredients are combined in the NPE. Though we demonstrated the NPE in the balls environment with nonlinear dynamics and complex scene configurations, the state representation and NPE architecture we propose are quite general-purpose because they assume little about the specific dynamics of a scene.\nThis paper works toward emulating a general purpose physics engine under a framework where visual and physical aspects of a scene are disentangled. Next steps include linking the NPE with perceptual models that extract properties such as position and mass from visual input. Learning to simulate is unsupervised learning of the structure of the environment. When a simulator like the NPE is incorporated into an agent in the context of model-based planning and model-based reinforcement learning, it becomes a prior on the environment that guides learning and reasoning. By combining the expressiveness of physics engines and the adaptability of neural networks in a compositional architecture that supports generalization in fundamental aspects of physical reasoning, the Neural Physics Engine is an important step towards lifting an agent’s ability to think at a level of abstraction where the concept of physics is primitive."
    }, {
      "heading" : "ACKNOWLEDGMENTS",
      "text" : "We thank Tejas Kulkarni for insightful discussions and guidance. We thank Ilker Yildirim, Erin Reynolds, Feras Saad, Andreas Stuhlmüller, Adam Lerer, Chelsea Finn, Jiajun Wu, and the anonymous reviewers for valuable feedback. We thank Liam Brummit, Kevin Kwok, and Guillermo Webster for help with matter-js. This work was supported MIT’s SuperUROP and UROP programs, and by the Center for Minds, Brains and Machines under NSF STC award CCF-1231216 and an ONR grant N00014-16-1-2007."
    }, {
      "heading" : "B QUANTITATIVE ANALYSIS",
      "text" : ""
    } ],
    "references" : [ {
      "title" : "Structure and interpretation of computer programs",
      "author" : [ "H. Abelson", "G.J. Sussman", "J. Sussman" ],
      "venue" : "Justin Kelly,",
      "citeRegEx" : "Abelson et al\\.,? \\Q1996\\E",
      "shortCiteRegEx" : "Abelson et al\\.",
      "year" : 1996
    }, {
      "title" : "Learning to poke by poking: Experiential learning of intuitive physics",
      "author" : [ "P. Agrawal", "A. Nair", "P. Abbeel", "J. Malik", "S. Levine" ],
      "venue" : "arXiv preprint arXiv:1606.07419,",
      "citeRegEx" : "Agrawal et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Agrawal et al\\.",
      "year" : 2016
    }, {
      "title" : "Social lstm: Human trajectory prediction in crowded spaces. 2016",
      "author" : [ "A. Alahi", "K. Goel", "V. Ramanathan", "A. Robicquet", "L. Fei-Fei", "S. Savarese" ],
      "venue" : null,
      "citeRegEx" : "Alahi et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Alahi et al\\.",
      "year" : 2016
    }, {
      "title" : "Cognitive psychology and its implications",
      "author" : [ "J.R. Anderson" ],
      "venue" : "WH Freeman/Times Books/Henry Holt & Co,",
      "citeRegEx" : "Anderson.,? \\Q1990\\E",
      "shortCiteRegEx" : "Anderson.",
      "year" : 1990
    }, {
      "title" : "Learning to compose neural networks for question answering",
      "author" : [ "J. Andreas", "M. Rohrbach", "T. Darrell", "D. Klein" ],
      "venue" : "In Proceedings of NAACL-HLT,",
      "citeRegEx" : "Andreas et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Andreas et al\\.",
      "year" : 2016
    }, {
      "title" : "Humans predict liquid dynamics using probabilistic simulation",
      "author" : [ "C.J. Bates", "I. Yildirim", "J.B. Tenenbaum", "P.W. Battaglia" ],
      "venue" : null,
      "citeRegEx" : "Bates et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Bates et al\\.",
      "year" : 2015
    }, {
      "title" : "Interaction networks for learning about objects, relations and physics",
      "author" : [ "P. Battaglia", "R. Pascanu", "M. Lai", "D. Jimenez Rezende", "K. Koray" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Battaglia et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Battaglia et al\\.",
      "year" : 2016
    }, {
      "title" : "Simulation as an engine of physical scene understanding",
      "author" : [ "P.W. Battaglia", "J.B. Hamrick", "J.B. Tenenbaum" ],
      "venue" : "Proceedings of the National Academy of Sciences,",
      "citeRegEx" : "Battaglia et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Battaglia et al\\.",
      "year" : 2013
    }, {
      "title" : "Physics-based visual understanding",
      "author" : [ "M. Brand" ],
      "venue" : "Computer Vision and Image Understanding,",
      "citeRegEx" : "Brand.,? \\Q1997\\E",
      "shortCiteRegEx" : "Brand.",
      "year" : 1997
    }, {
      "title" : "Infogan: Interpretable representation learning by information maximizing generative adversarial nets",
      "author" : [ "X. Chen", "Y. Duan", "R. Houthooft", "J. Schulman", "I. Sutskever", "P. Abbeel" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Chen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "Torch7: A matlab-like environment for machine learning",
      "author" : [ "R. Collobert", "K. Kavukcuoglu", "C. Farabet" ],
      "venue" : "In BigLearn, NIPS Workshop, number EPFL-CONF-192376,",
      "citeRegEx" : "Collobert et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Collobert et al\\.",
      "year" : 2011
    }, {
      "title" : "Unsupervised learning by program synthesis",
      "author" : [ "K. Ellis", "A. Solar-Lezama", "J. Tenenbaum" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Ellis et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Ellis et al\\.",
      "year" : 2015
    }, {
      "title" : "Attend, infer, repeat: Fast scene understanding with generative models",
      "author" : [ "S. Eslami", "N. Heess", "T. Weber", "Y. Tassa", "K. Kavukcuoglu", "G.E. Hinton" ],
      "venue" : "arXiv preprint arXiv:1603.08575,",
      "citeRegEx" : "Eslami et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Eslami et al\\.",
      "year" : 2016
    }, {
      "title" : "Unsupervised learning for physical interaction through video prediction",
      "author" : [ "C. Finn", "I. Goodfellow", "S. Levine" ],
      "venue" : "arXiv preprint arXiv:1605.07157,",
      "citeRegEx" : "Finn et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Finn et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning visual predictive models of physics for playing billiards",
      "author" : [ "K. Fragkiadaki", "P. Agrawal", "S. Levine", "J. Malik" ],
      "venue" : "arXiv preprint arXiv:1511.07404,",
      "citeRegEx" : "Fragkiadaki et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Fragkiadaki et al\\.",
      "year" : 2015
    }, {
      "title" : "Terpret: A probabilistic programming language for program induction",
      "author" : [ "A.L. Gaunt", "M. Brockschmidt", "R. Singh", "N. Kushman", "P. Kohli", "J. Taylor", "D. Tarlow" ],
      "venue" : "arXiv preprint arXiv:1608.04428,",
      "citeRegEx" : "Gaunt et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Gaunt et al\\.",
      "year" : 2016
    }, {
      "title" : "Noisy newtons: Unifying process and dependency accounts of causal attribution",
      "author" : [ "T. Gerstenberg", "N. Goodman", "D.A. Lagnado", "J.B. Tenenbaum" ],
      "venue" : "In In proceedings of the 34th. Citeseer,",
      "citeRegEx" : "Gerstenberg et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Gerstenberg et al\\.",
      "year" : 2012
    }, {
      "title" : "Probabilistic models of cognition, 2016",
      "author" : [ "N.D. Goodman", "J.B. Tenenbaum" ],
      "venue" : "URL http: //probmods.org",
      "citeRegEx" : "Goodman and Tenenbaum.,? \\Q2016\\E",
      "shortCiteRegEx" : "Goodman and Tenenbaum.",
      "year" : 2016
    }, {
      "title" : "Neuroanimator: Fast neural network emulation and control of physics-based models",
      "author" : [ "R. Grzeszczuk", "D. Terzopoulos", "G. Hinton" ],
      "venue" : "In Proceedings of the 25th annual conference on Computer graphics and interactive techniques,",
      "citeRegEx" : "Grzeszczuk et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Grzeszczuk et al\\.",
      "year" : 1998
    }, {
      "title" : "Internal physics models guide probabilistic judgments about object dynamics",
      "author" : [ "J. Hamrick", "P. Battaglia", "J.B. Tenenbaum" ],
      "venue" : null,
      "citeRegEx" : "Hamrick et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Hamrick et al\\.",
      "year" : 2011
    }, {
      "title" : "Transforming auto-encoders",
      "author" : [ "G.E. Hinton", "A. Krizhevsky", "S.D. Wang" ],
      "venue" : "In Artificial Neural Networks and Machine Learning–ICANN",
      "citeRegEx" : "Hinton et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Hinton et al\\.",
      "year" : 2011
    }, {
      "title" : "Long short-term memory",
      "author" : [ "S. Hochreiter", "J. Schmidhuber" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "Hochreiter and Schmidhuber.,? \\Q1997\\E",
      "shortCiteRegEx" : "Hochreiter and Schmidhuber.",
      "year" : 1997
    }, {
      "title" : "Structural-rnn: Deep learning on spatio-temporal graphs",
      "author" : [ "A. Jain", "A.R. Zamir", "S. Savarese", "A. Saxena" ],
      "venue" : "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "citeRegEx" : "Jain et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Jain et al\\.",
      "year" : 2016
    }, {
      "title" : "Inverse graphics with probabilistic cad models",
      "author" : [ "T.D. Kulkarni", "V.K. Mansinghka", "P. Kohli", "J.B. Tenenbaum" ],
      "venue" : "arXiv preprint arXiv:1407.1339,",
      "citeRegEx" : "Kulkarni et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kulkarni et al\\.",
      "year" : 2014
    }, {
      "title" : "Picture: A probabilistic programming language for scene perception",
      "author" : [ "T.D. Kulkarni", "P. Kohli", "J.B. Tenenbaum", "V. Mansinghka" ],
      "venue" : "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
      "citeRegEx" : "Kulkarni et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Kulkarni et al\\.",
      "year" : 2015
    }, {
      "title" : "Deep convolutional inverse graphics network",
      "author" : [ "T.D. Kulkarni", "W.F. Whitney", "P. Kohli", "J. Tenenbaum" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Kulkarni et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Kulkarni et al\\.",
      "year" : 2015
    }, {
      "title" : "Human-level concept learning through probabilistic program induction",
      "author" : [ "B.M. Lake", "R. Salakhutdinov", "J.B. Tenenbaum" ],
      "venue" : null,
      "citeRegEx" : "Lake et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Lake et al\\.",
      "year" : 2015
    }, {
      "title" : "Building machines that learn and think like people",
      "author" : [ "B.M. Lake", "T.D. Ullman", "J.B. Tenenbaum", "S.J. Gershman" ],
      "venue" : "arXiv preprint arXiv:1604.00289,",
      "citeRegEx" : "Lake et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Lake et al\\.",
      "year" : 2016
    }, {
      "title" : "rnn: Recurrent library for torch",
      "author" : [ "N. Léonard", "S. Waghmare", "Y. Wang" ],
      "venue" : "arXiv preprint arXiv:1511.07889,",
      "citeRegEx" : "Léonard et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Léonard et al\\.",
      "year" : 2015
    }, {
      "title" : "Learning physical intuition of block towers by example",
      "author" : [ "A. Lerer", "S. Gross", "R. Fergus", "J. Malik" ],
      "venue" : "arXiv preprint arXiv:1603.01312,",
      "citeRegEx" : "Lerer et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Lerer et al\\.",
      "year" : 2016
    }, {
      "title" : "To fall or not to fall: A visual approach to physical stability prediction",
      "author" : [ "W. Li", "S. Azimi", "A. Leonardis", "M. Fritz" ],
      "venue" : "arXiv preprint arXiv:1604.00066,",
      "citeRegEx" : "Li et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2016
    }, {
      "title" : "Gated graph sequence neural networks",
      "author" : [ "Y. Li", "D. Tarlow", "M. Brockschmidt", "R. Zemel" ],
      "venue" : "arXiv preprint arXiv:1511.05493,",
      "citeRegEx" : "Li et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2015
    }, {
      "title" : "Newtonian image understanding: Unfolding the dynamics of objects in static images",
      "author" : [ "R. Mottaghi", "H. Bagherinezhad", "M. Rastegari", "A. Farhadi" ],
      "venue" : "arXiv preprint arXiv:1511.04048,",
      "citeRegEx" : "Mottaghi et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Mottaghi et al\\.",
      "year" : 2015
    }, {
      "title" : "if...” learning to predict the effect of forces in images",
      "author" : [ "R. Mottaghi", "M. Rastegari", "A. Gupta", "A. Farhadi" ],
      "venue" : "arXiv preprint arXiv:1603.05600,",
      "citeRegEx" : "Mottaghi et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Mottaghi et al\\.",
      "year" : 2016
    }, {
      "title" : "Dynamics of target selection in multiple object tracking (mot)",
      "author" : [ "Z.W. Pylyshyn", "V. Annan" ],
      "venue" : "Spatial vision,",
      "citeRegEx" : "Pylyshyn and Annan.,? \\Q2006\\E",
      "shortCiteRegEx" : "Pylyshyn and Annan.",
      "year" : 2006
    }, {
      "title" : "The graph neural network model",
      "author" : [ "F. Scarselli", "M. Gori", "A.C. Tsoi", "M. Hagenbuchner", "G. Monfardini" ],
      "venue" : "IEEE Transactions on Neural Networks,",
      "citeRegEx" : "Scarselli et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Scarselli et al\\.",
      "year" : 2009
    }, {
      "title" : "Sources of uncertainty in intuitive physics",
      "author" : [ "K.A. Smith", "E. Vul" ],
      "venue" : "Topics in cognitive science,",
      "citeRegEx" : "Smith and Vul.,? \\Q2013\\E",
      "shortCiteRegEx" : "Smith and Vul.",
      "year" : 2013
    }, {
      "title" : "Dynamic pooling and unfolding recursive autoencoders for paraphrase detection",
      "author" : [ "R. Socher", "E.H. Huang", "J. Pennington", "A.Y. Ng", "C.D. Manning" ],
      "venue" : null,
      "citeRegEx" : "Socher et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Socher et al\\.",
      "year" : 2011
    }, {
      "title" : "Program synthesis by sketching",
      "author" : [ "A. Solar-Lezama" ],
      "venue" : "ProQuest,",
      "citeRegEx" : "Solar.Lezama.,? \\Q2008\\E",
      "shortCiteRegEx" : "Solar.Lezama.",
      "year" : 2008
    }, {
      "title" : "Principles of object perception",
      "author" : [ "E.S. Spelke" ],
      "venue" : "Cognitive science,",
      "citeRegEx" : "Spelke.,? \\Q1990\\E",
      "shortCiteRegEx" : "Spelke.",
      "year" : 1990
    }, {
      "title" : "Unsupervised learning of video representations using lstms",
      "author" : [ "N. Srivastava", "E. Mansimov", "R. Salakhutdinov" ],
      "venue" : null,
      "citeRegEx" : "Srivastava et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Srivastava et al\\.",
      "year" : 2015
    }, {
      "title" : "The recurrent temporal restricted boltzmann machine",
      "author" : [ "I. Sutskever", "G.E. Hinton", "G.W. Taylor" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Sutskever et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Sutskever et al\\.",
      "year" : 2009
    }, {
      "title" : "Lecture 6.5—RmsProp: Divide the gradient by a running average of its recent magnitude",
      "author" : [ "T. Tieleman", "G. Hinton" ],
      "venue" : "COURSERA: Neural Networks for Machine Learning,",
      "citeRegEx" : "Tieleman and Hinton.,? \\Q2012\\E",
      "shortCiteRegEx" : "Tieleman and Hinton.",
      "year" : 2012
    }, {
      "title" : "Learning physics from dynamical scenes",
      "author" : [ "T. Ullman", "A. Stuhlmüller", "N. Goodman" ],
      "venue" : null,
      "citeRegEx" : "Ullman et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Ullman et al\\.",
      "year" : 2014
    }, {
      "title" : "Understanding visual concepts with continuation learning",
      "author" : [ "W.F. Whitney", "M. Chang", "T. Kulkarni", "J.B. Tenenbaum" ],
      "venue" : "arXiv preprint arXiv:1602.06822,",
      "citeRegEx" : "Whitney et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Whitney et al\\.",
      "year" : 2016
    }, {
      "title" : "Galileo: Perceiving physical object properties by integrating a physics engine with deep learning",
      "author" : [ "J. Wu", "I. Yildirim", "J.J. Lim", "B. Freeman", "J. Tenenbaum" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Wu et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Wu et al\\.",
      "year" : 2015
    }, {
      "title" : "Physics 101: Learning physical object properties from unlabeled videos",
      "author" : [ "J. Wu", "J.J. Lim", "H. Zhang", "J.B. Tenenbaum", "W.T. Freeman" ],
      "venue" : "In British Machine Vision Conference,",
      "citeRegEx" : "Wu et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Wu et al\\.",
      "year" : 2016
    }, {
      "title" : "50 and used a 70-15-15 split for training, validation, and test data. All models are implemented using the neural network libraries built by Collobert et al",
      "author" : [ "Léonard" ],
      "venue" : null,
      "citeRegEx" : "Léonard,? \\Q2015\\E",
      "shortCiteRegEx" : "Léonard",
      "year" : 2015
    } ],
    "referenceMentions" : [ {
      "referenceID" : 27,
      "context" : "The agent can leverage these constraints to rapidly learn new tasks, to flexibly adapt to changes in inputs and goals, and to naturally generalize reasoning to novel scenes (Lake et al., 2016).",
      "startOffset" : 173,
      "endOffset" : 192
    }, {
      "referenceID" : 39,
      "context" : "For example, a foundational sense of intuitive physics is a prior that guides humans to decompose a scene into objects and carry expectations of object boundaries and motion across different scenarios (Spelke, 1990).",
      "startOffset" : 201,
      "endOffset" : 215
    }, {
      "referenceID" : 3,
      "context" : "We view this program as a simulator that takes input provided by a physical scene and the past states of objects, and outputs the future states and physical properties of relevant objects (Anderson, 1990; Battaglia et al., 2013; Goodman and Tenenbaum, 2016).",
      "startOffset" : 188,
      "endOffset" : 257
    }, {
      "referenceID" : 7,
      "context" : "We view this program as a simulator that takes input provided by a physical scene and the past states of objects, and outputs the future states and physical properties of relevant objects (Anderson, 1990; Battaglia et al., 2013; Goodman and Tenenbaum, 2016).",
      "startOffset" : 188,
      "endOffset" : 257
    }, {
      "referenceID" : 17,
      "context" : "We view this program as a simulator that takes input provided by a physical scene and the past states of objects, and outputs the future states and physical properties of relevant objects (Anderson, 1990; Battaglia et al., 2013; Goodman and Tenenbaum, 2016).",
      "startOffset" : 188,
      "endOffset" : 257
    }, {
      "referenceID" : 5,
      "context" : "The top-down approach (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014; Wu et al., 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al.",
      "startOffset" : 22,
      "endOffset" : 126
    }, {
      "referenceID" : 7,
      "context" : "The top-down approach (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014; Wu et al., 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al.",
      "startOffset" : 22,
      "endOffset" : 126
    }, {
      "referenceID" : 19,
      "context" : "The top-down approach (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014; Wu et al., 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al.",
      "startOffset" : 22,
      "endOffset" : 126
    }, {
      "referenceID" : 43,
      "context" : "The top-down approach (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014; Wu et al., 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al.",
      "startOffset" : 22,
      "endOffset" : 126
    }, {
      "referenceID" : 45,
      "context" : "The top-down approach (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014; Wu et al., 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al.",
      "startOffset" : 22,
      "endOffset" : 126
    }, {
      "referenceID" : 1,
      "context" : ", 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al., 2016; Fragkiadaki et al., 2015b; Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016; Sutskever et al., 2009) learns to directly map observations to motion prediction or physical judgments.",
      "startOffset" : 123,
      "endOffset" : 262
    }, {
      "referenceID" : 29,
      "context" : ", 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al., 2016; Fragkiadaki et al., 2015b; Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016; Sutskever et al., 2009) learns to directly map observations to motion prediction or physical judgments.",
      "startOffset" : 123,
      "endOffset" : 262
    }, {
      "referenceID" : 30,
      "context" : ", 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al., 2016; Fragkiadaki et al., 2015b; Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016; Sutskever et al., 2009) learns to directly map observations to motion prediction or physical judgments.",
      "startOffset" : 123,
      "endOffset" : 262
    }, {
      "referenceID" : 32,
      "context" : ", 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al., 2016; Fragkiadaki et al., 2015b; Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016; Sutskever et al., 2009) learns to directly map observations to motion prediction or physical judgments.",
      "startOffset" : 123,
      "endOffset" : 262
    }, {
      "referenceID" : 41,
      "context" : ", 2015) formulates the problem as inference over the parameters of a symbolic physics engine, while the bottom-up approach (Agrawal et al., 2016; Fragkiadaki et al., 2015b; Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016; Sutskever et al., 2009) learns to directly map observations to motion prediction or physical judgments.",
      "startOffset" : 123,
      "endOffset" : 262
    }, {
      "referenceID" : 45,
      "context" : "2016) for extracting position and velocity, as well as work for extracting latent object properties (Wu et al., 2015; 2016).",
      "startOffset" : 100,
      "endOffset" : 123
    }, {
      "referenceID" : 14,
      "context" : "Because physics does not change across inertial frames, it suffices to separately predict the future state of each object conditioned on the past states of itself and the other objects in its neighborhood, similar to Fragkiadaki et al. (2015b). Sec.",
      "startOffset" : 217,
      "endOffset" : 244
    }, {
      "referenceID" : 2,
      "context" : "The NP is also a Markovian variant of the Social LSTM (Alahi et al., 2016); it sums the encodings of context objects after encoding each object independently, similar to the Social LSTM’s “social pooling.",
      "startOffset" : 54,
      "endOffset" : 74
    }, {
      "referenceID" : 2,
      "context" : "The NP is also a Markovian variant of the Social LSTM (Alahi et al., 2016); it sums the encodings of context objects after encoding each object independently, similar to the Social LSTM’s “social pooling.” Information for modeling how objects interact would only be present after the encoding step. A possible mechanism for predicting dynamics with the NP is if the encoder’s object encoding consists of an abstract object representation and a force field created by that object. Therefore the decoder could apply the sum of the force fields of all context objects to the focus object’s abstract object representation to predict the focus object’s velocity. As Alahi et al. (2016) has demonstrated the Social LSTM’s performance in modeling human trajectories, it would be interesting to see how the same architectural assumptions perform for the physics of moving objects.",
      "startOffset" : 55,
      "endOffset" : 681
    }, {
      "referenceID" : 21,
      "context" : "LSTM Long Short-Term Memory (LSTM) networks (Hochreiter and Schmidhuber, 1997) have been shown to sequentially attend to objects (Eslami et al.",
      "startOffset" : 44,
      "endOffset" : 78
    }, {
      "referenceID" : 12,
      "context" : "LSTM Long Short-Term Memory (LSTM) networks (Hochreiter and Schmidhuber, 1997) have been shown to sequentially attend to objects (Eslami et al., 2016), so it is interesting to test whether a LSTM is well-suited for modeling object interactions, when the object states are explicitly given as input.",
      "startOffset" : 129,
      "endOffset" : 150
    }, {
      "referenceID" : 34,
      "context" : "From a cognitive science viewpoint, an LSTM can be interpreted as a serial mechanism in object tracking (Pylyshyn and Annan, 2006).",
      "startOffset" : 104,
      "endOffset" : 130
    }, {
      "referenceID" : 36,
      "context" : "While the NP and LSTM fail to predict plausible physical movement entirely, the NPE’s predictions initially adhere closely to the ground truth, then slowly diverge due to the accumulation of subtle errors, just as the human perceptual system also accumulates errors (Smith and Vul, 2013).",
      "startOffset" : 266,
      "endOffset" : 287
    }, {
      "referenceID" : 14,
      "context" : "Bouncing balls have been of interest in cognitive science to study causality and counterfactual reasoning, as in Gerstenberg et al. (2012). We trained on 3-timestep windows in trajectories of 60 timesteps (10 timesteps ≈ 1 second).",
      "startOffset" : 113,
      "endOffset" : 139
    }, {
      "referenceID" : 6,
      "context" : "Like those of Battaglia et al. (2016) the NPE predictions can be effective over long timescales even when the NPE is only trained to predict the immediate next time step.",
      "startOffset" : 14,
      "endOffset" : 38
    }, {
      "referenceID" : 6,
      "context" : "This proposal is motivated by the experiments in Battaglia et al. (2013), which uses a probabilistic physics simulator to infer various properties of a scene configuration.",
      "startOffset" : 49,
      "endOffset" : 73
    }, {
      "referenceID" : 5,
      "context" : "Top-down and bottom-up approaches A recent set of top-down approaches investigate probabilistic game physics engines as computational models for physical simulation in humans (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014).",
      "startOffset" : 175,
      "endOffset" : 262
    }, {
      "referenceID" : 7,
      "context" : "Top-down and bottom-up approaches A recent set of top-down approaches investigate probabilistic game physics engines as computational models for physical simulation in humans (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014).",
      "startOffset" : 175,
      "endOffset" : 262
    }, {
      "referenceID" : 19,
      "context" : "Top-down and bottom-up approaches A recent set of top-down approaches investigate probabilistic game physics engines as computational models for physical simulation in humans (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014).",
      "startOffset" : 175,
      "endOffset" : 262
    }, {
      "referenceID" : 43,
      "context" : "Top-down and bottom-up approaches A recent set of top-down approaches investigate probabilistic game physics engines as computational models for physical simulation in humans (Bates et al., 2015; Battaglia et al., 2013; Hamrick et al., 2011; Ullman et al., 2014).",
      "startOffset" : 175,
      "endOffset" : 262
    }, {
      "referenceID" : 9,
      "context" : "Given such a specification, inferring how physical laws compose and apply to a given scenario are their strength, but automatically inferring from visual data what physical laws and object properties are present requires more work in inverse graphics (Chen et al., 2016; Kulkarni et al., 2014; 2015a;b; Whitney et al., 2016) and physics-based visual understanding (Brand, 1997; Wu et al.",
      "startOffset" : 251,
      "endOffset" : 324
    }, {
      "referenceID" : 23,
      "context" : "Given such a specification, inferring how physical laws compose and apply to a given scenario are their strength, but automatically inferring from visual data what physical laws and object properties are present requires more work in inverse graphics (Chen et al., 2016; Kulkarni et al., 2014; 2015a;b; Whitney et al., 2016) and physics-based visual understanding (Brand, 1997; Wu et al.",
      "startOffset" : 251,
      "endOffset" : 324
    }, {
      "referenceID" : 44,
      "context" : "Given such a specification, inferring how physical laws compose and apply to a given scenario are their strength, but automatically inferring from visual data what physical laws and object properties are present requires more work in inverse graphics (Chen et al., 2016; Kulkarni et al., 2014; 2015a;b; Whitney et al., 2016) and physics-based visual understanding (Brand, 1997; Wu et al.",
      "startOffset" : 251,
      "endOffset" : 324
    }, {
      "referenceID" : 8,
      "context" : ", 2016) and physics-based visual understanding (Brand, 1997; Wu et al., 2015; 2016).",
      "startOffset" : 47,
      "endOffset" : 83
    }, {
      "referenceID" : 45,
      "context" : ", 2016) and physics-based visual understanding (Brand, 1997; Wu et al., 2015; 2016).",
      "startOffset" : 47,
      "endOffset" : 83
    }, {
      "referenceID" : 29,
      "context" : "Bottom-up approaches attempt to bypass the intermediate step of finding physics representations and directly map visual observations to physical judgments (Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016) or passive (Lerer et al.",
      "startOffset" : 155,
      "endOffset" : 221
    }, {
      "referenceID" : 30,
      "context" : "Bottom-up approaches attempt to bypass the intermediate step of finding physics representations and directly map visual observations to physical judgments (Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016) or passive (Lerer et al.",
      "startOffset" : 155,
      "endOffset" : 221
    }, {
      "referenceID" : 32,
      "context" : "Bottom-up approaches attempt to bypass the intermediate step of finding physics representations and directly map visual observations to physical judgments (Lerer et al., 2016; Li et al., 2016; Mottaghi et al., 2015; 2016) or passive (Lerer et al.",
      "startOffset" : 155,
      "endOffset" : 221
    }, {
      "referenceID" : 29,
      "context" : ", 2015; 2016) or passive (Lerer et al., 2016; Srivastava et al., 2015; Sutskever et al., 2009) and action-conditioned (Agrawal et al.",
      "startOffset" : 25,
      "endOffset" : 94
    }, {
      "referenceID" : 40,
      "context" : ", 2015; 2016) or passive (Lerer et al., 2016; Srivastava et al., 2015; Sutskever et al., 2009) and action-conditioned (Agrawal et al.",
      "startOffset" : 25,
      "endOffset" : 94
    }, {
      "referenceID" : 41,
      "context" : ", 2015; 2016) or passive (Lerer et al., 2016; Srivastava et al., 2015; Sutskever et al., 2009) and action-conditioned (Agrawal et al.",
      "startOffset" : 25,
      "endOffset" : 94
    }, {
      "referenceID" : 1,
      "context" : ", 2009) and action-conditioned (Agrawal et al., 2016; Finn et al., 2016; Fragkiadaki et al., 2015b) motion prediction.",
      "startOffset" : 31,
      "endOffset" : 99
    }, {
      "referenceID" : 13,
      "context" : ", 2009) and action-conditioned (Agrawal et al., 2016; Finn et al., 2016; Fragkiadaki et al., 2015b) motion prediction.",
      "startOffset" : 31,
      "endOffset" : 99
    }, {
      "referenceID" : 18,
      "context" : "Other work have taken similar hybrid approaches as the NPE, such as the NeuroAnimator (Grzeszczuk et al., 1998), one of the first work to train a neural network to emulate a physics simulator, and the interaction network (Battaglia et al.",
      "startOffset" : 86,
      "endOffset" : 111
    }, {
      "referenceID" : 6,
      "context" : ", 1998), one of the first work to train a neural network to emulate a physics simulator, and the interaction network (Battaglia et al., 2016), which learns to simulate physics over a graph of objects and their relations.",
      "startOffset" : 117,
      "endOffset" : 141
    }, {
      "referenceID" : 11,
      "context" : "This approach of starting with a general sketch of a program and filling in the specifics is inspired by ideas from the program synthesis community (Ellis et al., 2015; Gaunt et al., 2016; Solar-Lezama, 2008).",
      "startOffset" : 148,
      "endOffset" : 208
    }, {
      "referenceID" : 15,
      "context" : "This approach of starting with a general sketch of a program and filling in the specifics is inspired by ideas from the program synthesis community (Ellis et al., 2015; Gaunt et al., 2016; Solar-Lezama, 2008).",
      "startOffset" : 148,
      "endOffset" : 208
    }, {
      "referenceID" : 38,
      "context" : "This approach of starting with a general sketch of a program and filling in the specifics is inspired by ideas from the program synthesis community (Ellis et al., 2015; Gaunt et al., 2016; Solar-Lezama, 2008).",
      "startOffset" : 148,
      "endOffset" : 208
    }, {
      "referenceID" : 22,
      "context" : "Examples of other work that combine symbolic with neural approaches via sketching include graph-based neural networks (Jain et al., 2016; Li et al., 2015; Scarselli et al., 2009) and transforming autoencoders (Hinton et al.",
      "startOffset" : 118,
      "endOffset" : 178
    }, {
      "referenceID" : 31,
      "context" : "Examples of other work that combine symbolic with neural approaches via sketching include graph-based neural networks (Jain et al., 2016; Li et al., 2015; Scarselli et al., 2009) and transforming autoencoders (Hinton et al.",
      "startOffset" : 118,
      "endOffset" : 178
    }, {
      "referenceID" : 35,
      "context" : "Examples of other work that combine symbolic with neural approaches via sketching include graph-based neural networks (Jain et al., 2016; Li et al., 2015; Scarselli et al., 2009) and transforming autoencoders (Hinton et al.",
      "startOffset" : 118,
      "endOffset" : 178
    }, {
      "referenceID" : 20,
      "context" : ", 2009) and transforming autoencoders (Hinton et al., 2011).",
      "startOffset" : 38,
      "endOffset" : 59
    }, {
      "referenceID" : 0,
      "context" : "Composing functions for reuse Just as the NPE repeatedly applies the same encoder to each object pair, iteratively applies itself to each object in the scene as a focus object, and recursively predicts future timesteps using predictions from previous timesteps, employing function reuse to achieve generalization is also featured in work such as Abelson et al. (1996); Andreas et al.",
      "startOffset" : 346,
      "endOffset" : 368
    }, {
      "referenceID" : 0,
      "context" : "Composing functions for reuse Just as the NPE repeatedly applies the same encoder to each object pair, iteratively applies itself to each object in the scene as a focus object, and recursively predicts future timesteps using predictions from previous timesteps, employing function reuse to achieve generalization is also featured in work such as Abelson et al. (1996); Andreas et al. (2016); Lake et al.",
      "startOffset" : 346,
      "endOffset" : 391
    }, {
      "referenceID" : 0,
      "context" : "Composing functions for reuse Just as the NPE repeatedly applies the same encoder to each object pair, iteratively applies itself to each object in the scene as a focus object, and recursively predicts future timesteps using predictions from previous timesteps, employing function reuse to achieve generalization is also featured in work such as Abelson et al. (1996); Andreas et al. (2016); Lake et al. (2015); Reed and de Freitas (2015); Socher et al.",
      "startOffset" : 346,
      "endOffset" : 411
    }, {
      "referenceID" : 0,
      "context" : "Composing functions for reuse Just as the NPE repeatedly applies the same encoder to each object pair, iteratively applies itself to each object in the scene as a focus object, and recursively predicts future timesteps using predictions from previous timesteps, employing function reuse to achieve generalization is also featured in work such as Abelson et al. (1996); Andreas et al. (2016); Lake et al. (2015); Reed and de Freitas (2015); Socher et al.",
      "startOffset" : 346,
      "endOffset" : 439
    }, {
      "referenceID" : 0,
      "context" : "Composing functions for reuse Just as the NPE repeatedly applies the same encoder to each object pair, iteratively applies itself to each object in the scene as a focus object, and recursively predicts future timesteps using predictions from previous timesteps, employing function reuse to achieve generalization is also featured in work such as Abelson et al. (1996); Andreas et al. (2016); Lake et al. (2015); Reed and de Freitas (2015); Socher et al. (2011). These work all assemble small subprograms to form larger programs.",
      "startOffset" : 346,
      "endOffset" : 461
    }, {
      "referenceID" : 12,
      "context" : "Object-based approaches Fragkiadaki et al. (2015b) and Battaglia et al.",
      "startOffset" : 24,
      "endOffset" : 51
    }, {
      "referenceID" : 6,
      "context" : "(2015b) and Battaglia et al. (2016) are two notably similar work in the sense that our work and theirs all take an object-based approach to model the bouncing balls environment.",
      "startOffset" : 12,
      "endOffset" : 36
    }, {
      "referenceID" : 6,
      "context" : "(2015b) and Battaglia et al. (2016) are two notably similar work in the sense that our work and theirs all take an object-based approach to model the bouncing balls environment. Our work was inspired by Fragkiadaki et al. (2015b)’s iterative approach to predicting the motion of each object in turn, conditioned on a context.",
      "startOffset" : 12,
      "endOffset" : 230
    }, {
      "referenceID" : 6,
      "context" : "Recently, Battaglia et al. (2016) independently and in parallel developed an architecture that they call the interaction network for learning to model physical systems.",
      "startOffset" : 10,
      "endOffset" : 34
    } ],
    "year" : 2017,
    "abstractText" : "We present the Neural Physics Engine (NPE), a framework for learning simulators of intuitive physics that naturally generalize across variable object count and different scene configurations. We propose a factorization of a physical scene into composable object-based representations and a neural network architecture whose compositional structure factorizes object dynamics into pairwise interactions. Like a symbolic physics engine, the NPE is endowed with generic notions of objects and their interactions; realized as a neural network, it can be trained via stochastic gradient descent to adapt to specific object properties and dynamics of different worlds. We evaluate the efficacy of our approach on simple rigid body dynamics in two-dimensional worlds. By comparing to less structured architectures, we show that the NPE’s compositional representation of the structure in physical interactions improves its ability to predict movement, generalize across variable object count and different scene configurations, and infer latent properties of objects such as mass.",
    "creator" : "LaTeX with hyperref package"
  }
}