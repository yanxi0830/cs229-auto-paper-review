{
  "name" : "308.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ "Martin Arjovsky", "Léon Bottou" ],
    "emails" : [ "martinarjovsky@gmail.com", "leonb@fb.com" ],
    "sections" : [ {
      "heading" : "1 INTRODUCTION",
      "text" : "Generative adversarial networks (GANs)(Goodfellow et al., 2014a) have achieved great success at generating realistic and sharp looking images. However, they are widely general methods, now starting to be applied to several other important problems, such as semisupervised learning, stabilizing sequence learning methods for speech and language, and 3D modelling. (Denton et al., 2015; Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016)\nHowever, they still remain remarkably difficult to train, with most current papers dedicated to heuristically finding stable architectures. (Radford et al., 2015; Salimans et al., 2016)\nDespite their success, there is little to no theory explaining the unstable behaviour of GAN training. Furthermore, approaches to attacking this problem still rely on heuristics that are extremely sensitive to modifications. This makes it extremely hard to experiment with new variants, or to use them in new domains, which limits their applicability drastically. This paper aims to change that, by providing a solid understanding of these issues, and creating principled research directions towards adressing them.\nIt is interesting to note that the architecture of the generator used by GANs doesn’t differ significantly from other approaches like variational autoencoders (Kingma & Welling, 2013). After all, at the core of it we first sample from a simple prior z ∼ p(z), and then output our final sample gθ(z), sometimes adding noise in the end. Always, gθ is a neural network parameterized by θ, and the main difference is how gθ is trained.\nTraditional approaches to generative modeling relied on maximizing likelihood, or equivalently minimizing the Kullback-Leibler (KL) divergence between our unknown data distribution Pr and our generator’s distribution Pg (that depends of course on θ). If we assume that both distributions are continuous with densities Pr and Pg , then these methods try to minimize\nKL(Pr‖Pg) = ∫ X Pr(x) log Pr(x) Pg(x) dx\nThis cost function has the good property that it has a unique minimum at Pg = Pr, and it doesn’t require knowledge of the unknown Pr(x) to optimize it (only samples). However, it is interesting to see how this divergence is not symetrical between Pr and Pg:\n• If Pr(x) > Pg(x), then x is a point with higher probability of coming from the data than being a generated sample. This is the core of the phenomenon commonly described as ‘mode dropping’: when there are large regions with high values of Pr, but small or zero values in Pg . It is important to note that when Pr(x) > 0 but Pg(x) → 0, the integrand inside the KL grows quickly to infinity, meaning that this cost function assigns an extremely high cost to a generator’s distribution not covering parts of the data.\n• If Pr(x) < Pg(x), then x has low probability of being a data point, but high probability of being generated by our model. This is the case when we see our generator outputting an image that doesn’t look real. In this case, when Pr(x)→ 0 and Pg(x) > 0, we see that the value inside the KL goes to 0, meaning that this cost function will pay extremely low cost for generating fake looking samples.\nClearly, if we would minimize KL(Pg‖Pr) instead, the weighting of these errors would be reversed, meaning that this cost function would pay a high cost for generating not plausibly looking pictures. Generative adversarial networks have been shown to optimize (in its original formulation), the Jensen-shannon divergence, a symmetric middle ground to this two cost functions\nJSD(Pr‖Pg) = 1\n2 KL(Pr‖PA) +\n1 2 KL(Pg‖PA)\nwhere PA is the ‘average’ distribution, with density Pr+Pg2 . An impressive experimental analysis of the similarities, uses and differences of these divergences in practice can be seen at Theis et al. (2016). It is indeed conjectured that the reason of GANs success at producing reallistically looking images is due to the switch from the traditional maximum likelihood approaches. (Theis et al., 2016; Huszar, 2015). However, the problem is far from closed.\nGenerative adversarial networks are formulated in two steps. We first train a discriminator D to maximize\nL(D, gθ) = Ex∼Pr [logD(x)] + Ex∼Pg [log(1−D(x))] (1)\nOne can show easily that the optimal discriminator has the shape\nD∗(x) = Pr(x)\nPr(x) + Pg(x) (2)\nand that L(D∗, gθ) = 2JSD(Pr‖Pg)− 2 log 2, so minimizing equation (1) as a function of θ yields minimizing the Jensen-Shannon divergence when the discriminator is optimal. In theory, one would expect therefore that we would first train the discriminator as close as we can to optimality (so the cost function on θ better approximates the JSD), and then do gradient steps on θ, alternating these two things. However, this doesn’t work. In practice, as the discriminator gets better, the updates to the generator get consistently worse. The original GAN paper argued that this issue arose from saturation, and switched to another similar cost function that doesn’t have this problem. However, even with this new cost function, updates tend to get worse and optimization gets massively unstable. Therefore, several questions arize:\n• Why do updates get worse as the discriminator gets better? Both in the original and the new cost function.\n• Why is GAN training massively unstable?\n• Is the new cost function following a similar divergence to the JSD? If so, what are its properties?\n• Is there a way to avoid some of these issues?\nThe fundamental contributions of this paper are the answer to all these questions, and perhaps more importantly, to introduce the tools to analyze them properly. We provide a new direction designed to avoid the instability issues in GANs, and examine in depth the theory behind it. Finally, we state a series of open questions and problems, that determine several new directions of research that begin with our methods."
    }, {
      "heading" : "2 SOURCES OF INSTABILITY",
      "text" : "The theory tells us that the trained discriminator will have cost at most 2 log 2 − 2JSD(Pr‖Pg). However, in practice, if we just train D till convergence, its error will go to 0, as observed in Figure 1, pointing to the fact that the JSD between them is maxed out. The only way this can happen is if the distributions are not continuous1, or they have disjoint supports.\nOne possible cause for the distributions not to be continuous is if their supports lie on low dimensional manifolds. There is strong empirical and theoretical evidence to believe that Pr is indeed extremely concentrated on a low dimensional manifold (Narayanan & Mitter, 2010). As of Pg , we will prove soon that such is the case as well.\nIn the case of GANs, Pg is defined via sampling from a simple prior z ∼ p(z), and then applying a function g : Z → X , so the support of Pg has to be contained in g(Z). If the dimensionality of Z is less than the dimension of X (as is typically the case), then it’s imposible for Pg to be continuous. This is because in most cases g(Z) will be contained in a union of low dimensional manifolds, and therefore have measure 0 in X . Note that while intuitive, this is highly nontrivial, since having an ndimensional parameterization does absolutely not imply that the image will lie on an n-dimensional manifold. In fact, there are many easy counterexamples, such as Peano curves, lemniscates, and many more. In order to show this for our case, we rely heavily on g being a neural network, since we are able to leverage that g is made by composing very well behaved functions. We now state this properly in the following Lemma: Lemma 1. Let g : Z → X be a function composed by affine transformations and pointwise nonlinearities, which can either be rectifiers, leaky rectifiers, or smooth strictly increasing functions (such as the sigmoid, tanh, softplus, etc). Then, g(Z) is contained in a countable union of manifolds of dimension at most dimZ . Therefore, if the dimension of Z is less than the one of X , g(Z) will be a set of measure 0 in X .\nProof. See Appendix A.\nDriven by this, this section shows that if the supports of Pr and Pg are disjoint or lie in low dimensional manifolds, there is always a perfect discriminator between them, and we explain exactly how and why this leads to an unreliable training of the generator."
    }, {
      "heading" : "2.1 THE PERFECT DISCRIMINATION THEOREMS",
      "text" : "For simplicity, and to introduce the methods, we will first explain the case where Pr and Pg have disjoint supports. We say that a discriminator D : X → [0, 1] has accuracy 1 if it takes the value 1 on a set that contains the support of Pr and value 0 on a set that contains the support of Pg . Namely, Pr[D(x) = 1] = 1 and Pg[D(x) = 0] = 1. Theorem 2.1. If two distributions Pr and Pg have support contained on two disjoint compact subsetsM and P respectively, then there is a smooth optimal discrimator D∗ : X → [0, 1] that has accuracy 1 and ∇xD∗(x) = 0 for all x ∈M∪P .\nProof. The discriminator is trained to maximize Ex∼Pr [logD(x)] + Ex∼Pg [log(1−D(x))] SinceM and P are compact and disjoint, 0 < δ = d(P,M) the distance between both sets. We now define\nM̂ = {x : d(x,M) ≤ δ/3} P̂ = {x : d(x, P ) ≤ δ/3}\nBy definition of δ we have that P̂ and M̂ are clearly disjoint compact sets. Therefore, by Urysohn’s smooth lemma there exists a smooth function D∗ : X → [0, 1] such that D∗|M̂ ≡ 1 and D∗|P̂ ≡ 0. Since logD∗(x) = 0 for all x in the support of Pr and log(1−D∗(x)) = 0 for all x in the support of Pg , the discriminator is completely optimal and has accuracy 1. Furthermore, let x be inM∪P . If we assume that x ∈ M, there is an open ball B = B(x, δ/3) on which D∗|B is constant. This shows that∇xD∗(x) ≡ 0. Taking x ∈ P and working analogously we finish the proof.\n1By continuous we will actually refer to an absolutely continuous random variable (i.e. one that has a density), as it typically done. For further clarification see Appendix B.\nIn the next theorem, we take away the disjoint assumption, to make it general to the case of two different manifolds. However, if the two manifolds match perfectly on a big part of the space, no discriminator could separate them. Intuitively, the chances of two low dimensional manifolds having this property is rather dim: for two curves to match in space in a specific segment, they couldn’t be perturbed in any arbitrarilly small way and still satisfy this property. To do this, we will define the notion of two manifolds perfectly aligning, and show that this property never holds with probability 1 under any arbitrarilly small perturbations.\nDefinition 2.1. We first need to recall the definition of transversallity. LetM andP be two boundary free regular submanifolds of F , which in our cases will simply be F = Rd. Let x ∈ M ∩ P be an intersection point of the two manifolds. We say that M and P intersect transversally in x if TxM+ TxP = TxF , where TxM means the tangent space ofM around x.\nDefinition 2.2. We say that two manifolds without boundaryM and P perfectly align if there is an x ∈M∩P such thatM and P don’t intersect transversally in x. We shall note the boundary and interior of a manifoldM by ∂M and Int M respectively. We say that two manifoldsM and P (with or without boundary) perfectly align if any of the boundary free manifold pairs (IntM, Int P), (IntM, ∂P), (∂M, Int P) or (∂M, ∂P) perfectly align.\nThe interesting thing is that we can safely assume in practice that any two manifolds never perfectly align. This can be done since an arbitrarilly small random perturbation on two manifolds will lead them to intersect transversally or don’t intersect at all. This is precisely stated and proven in Lemma 2.\nAs stated by Lemma 3, if two manifolds don’t perfectly align, their intersection L = M∩ P will be a finite union of manifolds with dimensions strictly lower than both the dimension ofM and the one of P . Lemma 2. LetM andP be two regular submanifolds of Rd that don’t have full dimension. Let η, η′ be arbitrary independent continuous random variables. We therefore define the perturbed manifolds as M̃ =M+ η and P̃ = P + η′. Then\nPη,η′(M̃ does not perfectly align with P̃) = 1\nProof. See Appendix A.\nLemma 3. Let M and P be two regular submanifolds of Rd that don’t perfectly align and don’t have full dimension. Let L =M∩P . IfM and P don’t have boundary, then L is also a manifold, and has strictly lower dimension than both the one ofM and the one of P . If they have boundary, L is a union of at most 4 strictly lower dimensional manifolds. In both cases, L has measure 0 in bothM and P .\nProof. See Appendix A.\nWe now state our perfect discrimination result for the case of two manifolds. Theorem 2.2. Let Pr and Pg be two distributions that have support contained in two closed manifoldsM and P that don’t perfectly align and don’t have full dimension. We further assume that Pr and Pg are continuous in their respective manifolds, meaning that if there is a set A with measure 0 in M, then Pr(A) = 0 (and analogously for Pg). Then, there exists an optimal discriminator D∗ : X → [0, 1] that has accuracy 1 and for almost any x inM or P , D∗ is smooth in a neighbourhood of x and ∇xD∗(x) = 0.\nProof. By Lemma 3 we know that L = M∩P is strictly lower dimensional than bothM and P , and has measure 0 on both of them. By continuity, Pr(L) = 0 and Pg(L) = 0. Note that this implies the support of Pr is contained inM\\L and the support of Pg is contained in P \\ L. Let x ∈ M \\ L. Therefore, x ∈ Pc (the complement of P) which is an open set, so there exists a ball of radius x such that B(x, x) ∩ P = ∅. This way, we define\nM̂ = ⋃\nx∈M\\L\nB(x, x/3)\nWe define P̂ analogously. Note that by construction these are both open sets on Rd. SinceM\\L ⊆ M̂, and P \\ L ⊆ P̂ , the support of Pr and Pg is contained in M̂ and P̂ respectively. As well by construction, M̂ ∩ P̂ = ∅. Let us defineD∗(x) = 1 for all x ∈ M̂, and 0 elsewhere (clearly including P̂ . Since logD∗(x) = 0 for all x in the support of Pr and log(1−D∗(x)) = 0 for all x in the support of Pg , the discriminator is completely optimal and has accuracy 1. Furthermore, let x ∈ M̂. Since M̂ is an open set and D∗ is constant on M̂, then ∇xD∗|M̂ ≡ 0. Analogously, ∇xD∗|P̂ ≡ 0. Therefore, the set of points where D∗ is non-smooth or has non-zero gradient insideM∪P is contained in L, which has null-measure in both manifolds, therefore concluding the theorem.\nThese two theorems tell us that there are perfect discriminators which are smooth and constant almost everywhere inM and P . The fact that the discriminator is constant in both manifolds points to the fact that we won’t really be able to learn anything by backproping through it, as we shall see in the next subsection. To conclude this general statement, we state the following theorem on the divergences of Pr and Pg , whose proof is trivial and left as an exercise to the reader. Theorem 2.3. Let Pr and Pg be two distributions whose support lies in two manifoldsM and P that don’t have full dimension and don’t perfectly align. We further assume that Pr and Pg are continuous in their respective manifolds. Then,\nJSD(Pr‖Pg) = log 2 KL(Pr‖Pg) = +∞ KL(Pg‖Pr) = +∞\nNote that these divergences will be maxed out even if the two manifolds lie arbitrarilly close to each other. The samples of our generator might look impressively good, yet both KL divergences will be infinity. Therefore, Theorem 2.3 points us to the fact that attempting to use divergences out of the box to test similarities between the distributions we typically consider might be a terrible idea. Needless to say, if these divergencies are always maxed out attempting to minimize them by gradient descent isn’t really possible. We would like to have a perhaps softer measure, that incorporates a notion of distance between the points in the manifolds. We will come back to this topic later in section 3, where we explain an alternative metric and provide bounds on it that we are able to analyze and optimize."
    }, {
      "heading" : "2.2 THE CONSEQUENCES, AND THE PROBLEMS OF EACH COST FUNCTION",
      "text" : "Theorems 2.1 and 2.2 showed one very important fact. If the two distributions we care about have supports that are disjoint or lie on low dimensional manifolds, the optimal discriminator will be perfect and its gradient will be zero almost everywhere."
    }, {
      "heading" : "2.2.1 THE ORIGINAL COST FUNCTION",
      "text" : "We will now explore what happens when we pass gradients to the generator through a discriminator. One crucial difference with the typical analysis done so far is that we will develop the theory for an approximation to the optimal discriminator, instead of working with the (unknown) true discriminator. We will prove that as the approximaton gets better, either we see vanishing gradients or the massively unstable behaviour we see in practice, depending on which cost function we use.\nIn what follows, we denote by ‖D‖ the norm\n‖D‖ = sup x∈X |D(x)|+ ‖∇xD(x)‖2\nThe use of this norm is to make the proofs simpler, but could have been done in another Sobolev norm ‖ · ‖1,p for p < ∞ covered by the universal approximation theorem in the sense that we can guarantee a neural network approximation in this norm (Hornik, 1991).\nTheorem 2.4 (Vanishing gradients on the generator). Let gθ : Z → X be a differentiable function that induces a distribution Pg . Let Pr be the real data distribution. Let D be a differentiable discriminator. If the conditions of Theorems 2.1 or 2.2 are satisfied, ‖D − D∗‖ < , and Ez∼p(z) [ ‖Jθgθ(z)‖22 ] ≤M2, 2 then\n‖∇θEz∼p(z)[log(1−D(gθ(z)))]‖2 < M\n1−\nProof. In both proofs of Theorems 2.1 and 2.2 we showed that D∗ is locally 0 on the support of Pg . Then, using Jensen’s inequality and the chain rule on this support we have\n‖∇θEz∼p(z)[log(1−D(gθ(z)))]‖22 ≤ Ez∼p(z) [ ‖∇θD(gθ(z))‖22 |1−D(gθ(z))|2 ] ≤ Ez∼p(z) [ ‖∇xD(gθ(z))‖22‖Jθgθ(z)‖22\n|1−D(gθ(z))|2 ] < Ez∼p(z) [ (‖∇xD∗(gθ(z))‖2 + )2 ‖Jθgθ(z)‖22\n(|1−D∗(gθ(z))| − )2\n]\n= Ez∼p(z)\n[ 2‖Jθgθ(z)‖22\n(1− )2\n]\n≤M2 2\n(1− )2\nTaking square root of everything we get\n‖∇θEz∼p(z)[log(1−D(gθ(z)))]‖2 < M\n1− finishing the proof\nCorollary 2.1. Under the same assumptions of Theorem 2.4\nlim ‖D−D∗‖→0\n∇θEz∼p(z)[log(1−D(gθ(z)))] = 0\n2Since M can depend on θ, this condition is trivially verified for a uniform prior and a neural network. The case of a Gaussian prior requires more work because we need to bound the growth on z, but is also true for current architectures.\nThis shows that as our discriminator gets better, the gradient of the generator vanishes. For completeness, this was experimentally verified in Figure 2. The fact that this happens is terrible, since the fact that the generator’s cost function being close to the Jensen Shannon divergence depends on the quality of this approximation. This points us to a fundamental: either our updates to the discriminator will be inacurate, or they will vanish. This makes it difficult to train using this cost function, or leave up to the user to decide the precise amount of training dedicated to the discriminator, which can make GAN training extremely hard.\n2.2.2 THE − logD ALTERNATIVE\nTo avoid gradients vanishing when the discriminator is very confident, people have chosen to use a different gradient step for the generator.\n∆θ = ∇θEz∼p(z) [− logD(gθ(z))]\nWe now state and prove for the first time which cost function is being optimized by this gradient step. Later, we prove that while this gradient doesn’t necessarily suffer from vanishing gradients, it does cause massively unstable updates (that have been widely experienced in practice) under the prescence of a noisy approximation to the optimal discriminator. Theorem 2.5. Let Pr and Pgθ be two continuous distributions, with densities Pr and Pgθ respectively. Let D∗ = PrPgθ0 +Pr be the optimal discriminator, fixed for a value θ03. Therefore,\nEz∼p(z) [−∇θ logD∗(gθ(z))|θ=θ0 ] = ∇θ [KL(Pgθ‖Pr)− 2JSD(Pgθ‖Pr)] |θ=θ0 (3)\nBefore diving into the proof, let’s look at equation (3) for a second. This is the inverted KL minus two JSD. First of all, the JSDs are in the opposite sign, which means they are pushing for the distributions to be different, which seems like a fault in the update. Second, the KL appearing in the equation is KL(Pg‖Pr), not the one equivalent to maximum likelihood. As we know, this KL assigns an extremely high cost to generating fake looking samples, and an extremely low cost on mode dropping; and the JSD is symetrical so it shouldn’t alter this behaviour. This explains what we see in practice, that GANs (when stabilized) create good looking samples, and justifies what is commonly conjectured, that GANs suffer from an extensive amount of mode dropping.\n3This is important since when backpropagating to the generator, the discriminator is assumed fixed\nProof. We already know by Goodfellow et al. (2014a) that\nEz∼p(z) [∇θ log(1−D∗(gθ(z)))|θ=θ0 ] = ∇θ2JSD(Pgθ‖Pr)|θ=θ0 Furthermore, as remarked by Huszar (2016),\nKL(Pgθ‖Pr) = Ex∼Pgθ\n[ log Pgθ (x)\nPr(x) ] = Ex∼Pgθ [ log Pgθ0 (x)\nPr(x)\n] − Ex∼Pgθ [ log Pgθ (x)\nPgθ0 (x)\n]\n= −Ex∼Pgθ\n[ log D∗(x)\n1−D∗(x)\n] −KL(Pgθ‖Pgθ0 )\n= −Ez∼p(z) [ log D∗(gθ(z))\n1−D∗(gθ(z))\n] −KL(Pgθ‖Pgθ0 )\nTaking derivatives in θ at θ0 we get ∇θKL(Pgθ‖Pr)|θ=θ0 = −∇θEz∼p(z) [ log D∗(gθ(z))\n1−D∗(gθ(z))\n] |θ=θ0 −∇θKL(Pgθ‖Pgθ0 )|θ=θ0\n= Ez∼p(z) [ −∇θ log D∗(gθ(z))\n1−D∗(gθ(z))\n] |θ=θ0\nSubstracting this last equation with the result for the JSD, we obtain our desired result.\nWe now turn to our result regarding the instability of a noisy version of the true distriminator.\nTheorem 2.6 (Instability of generator gradient updates). Let gθ : Z → X be a differentiable function that induces a distribution Pg . Let Pr be the real data distribution, with either conditions of Theorems 2.1 or 2.2 satisfied. Let D be a discriminator such that D∗ − D = is a centered Gaussian process indexed by x and independent for every x (popularly known as white noise) and ∇xD∗ −∇xD = r another independent centered Gaussian process indexed by x and independent for every x. Then, each coordinate of\nEz∼p(z) [−∇θ logD(gθ(z))]\nis a centered Cauchy distribution with infinite expectation and variance.4\nProof. Let us remember again that in this case D is locally constant equal to 0 on the support of Pg . We denote r(z), (z) the random variables r(gθ(z)), (gθ(z)). By the chain rule and the definition of r, , we get\nEz∼p(z) [−∇θ logD(gθ(z))] = Ez∼p(z) [ −Jθgθ(z)∇xD(gθ(z))\nD(gθ(z)) ] = Ez∼p(z) [ −Jθgθ(z)r(z)\n(z)\n]\nSince r(z) is a centered Gaussian distribution, multiplying by a matrix doesn’t change this fact. Furthermore, when we divide by (z), a centered Gaussian independent from the numerator, we get a centered Cauchy random variable on every coordinate. Averaging over z the different independent Cauchy random variables again yields a centered Cauchy distribution. 5\n4Note that the theorem holds regardless of the variance of r and . As the approximation gets better, this error looks more and more as centered random noise due to the finite precision.\n5A note on technicality: when is defined as such, the remaining process is not measurable in x, so we can’t take the expectation in z trivially. This is commonly bypassed, and can be formally worked out by stating the expectation as the result of a stochastic differential equation.\nNote that even if we ignore the fact that the updates have infinite variance, we still arrive to the fact that the distribution of the updates is centered, meaning that if we bound the updates the expected update will be 0, providing no feedback to the gradient.\nSince the assumption that the noises of D and ∇D are decorrelated is albeit too strong, we show in Figure 3 how the norm of the gradient grows drastically as we train the discriminator closer to optimality, at any stage in training of a well stabilized DCGAN except when it has already converged. In all cases, using this updates lead to a notorious decrease in sample quality. The noise in the curves also shows that the variance of the gradients is increasing, which is known to delve into slower convergence and more unstable behaviour in the optimization (Bottou et al., 2016)."
    }, {
      "heading" : "3 TOWARDS SOFTER METRICS AND DISTRIBUTIONS",
      "text" : "An important question now is how to fix the instability and vanishing gradients issues. Something we can do to break the assumptions of these theorems is add continuous noise to the inputs of the discriminator, therefore smoothening the distribution of the probability mass. Theorem 3.1. If X has distribution PX with support on M and is an aboslutely continuous distribution with density P , then PX+ is absolutely continuous with density\nPX+ (x) = Ey∼PX [P (x− y)]\n= ∫ M P (x− y) dPX(y)\nProof. See Appendix A.\nCorollary 3.1. • If ∼ N (0, σ2I) then\nPX+ (x) = 1\nZ ∫ M e− ‖y−x‖2 2σ2 dPX(y)\n• If ∼ N (0,Σ) then PX+ (x) = 1\nZ Ey∼PX\n[ e− 1 2‖y−x‖ 2 Σ−1 ]\n• If P (x) ∝ 1‖x‖d+1 then\nPX+ (x) = 1\nZ Ey∼PX\n[ 1\n‖x− y‖d+1\n]\nThis theorem therefore tells us that the density PX+ (x) is inversely proportional to the average distance to points in the support of PX , weighted by the probability of these points. In the case of the support of PX being a manifold, we will have the weighted average of the distance to the points along the manifold. How we choose the distribution of the noise will impact the notion of distance we are choosing. In our corolary, for example, we can see the effect of changing the covariance matrix by altering the norm inside the exponential. Different noises with different types of decays can therefore be used.\nNow, the optimal discriminator between Pg+ and Pr+ is\nD∗(x) = Pr+ (x)\nPr+ (x) + Pg+ (x)\nand we want to calculate what the gradient passed to the generator is.\nTheorem 3.2. Let Pr and Pg be two distributions with support on M and P respectively, with ∼ N (0, σ2I). Then, the gradient passed to the generator has the form\nEz∼p(z) [∇θ log(1−D∗(gθ(z)))] (4) = Ez∼p(z) [ a(z) ∫ M P (gθ(z)− y)∇θ‖gθ(z)− y‖2 dPr(y)\n− b(z) ∫ P P (gθ(z)− y)∇θ‖gθ(z)− y‖2 dPg(y) ] where a(z) and b(z) are positive functions. Furthermore, b > a if and only if Pr+ > Pg+ , and b < a if and only if Pr+ < Pg+ .\nThis theorem proves that we will drive our samples gθ(z) towards points along the data manifold, weighted by their probability and the distance from our samples. Furthermore, the second term drives our points away from high probability samples, again, weighted by the sample manifold and distance to these samples. This is similar in spirit to contrastive divergence, where we lower the free energy of our samples and increase the free energy of data points. The importance of this term is seen more clearly when we have samples that have higher probability of coming from Pg than from Pr. In this case, we will have b > a and the second term will have the strength to lower the probability of this too likely samples. Finally, if there’s an area around x that has the same probability to come from Pg than Pr, the gradient contributions between the two terms will cancel, therefore stabilizing the gradient when Pr is similar to Pg .\nThere is one important problem with taking gradient steps exactly of the form (4), which is that in that case, D will disregards errors that lie exactly in g(Z), since this is a set of measure 0. However, g will be optimizing its cost only on that space. This will make the discriminator extremely susceptible to adversarial examples, and will render low cost on the generator without high cost on the discriminator, and lousy meaningless samples. This is easilly seen when we realize the term inside the expectation of equation (4) will be a positive scalar times ∇x log(1 − D∗(x))∇θgθ(z), which is the directional derivative towards the exact adversarial term of Goodfellow et al. (2014b). Because of this, it is important to backprop through noisy samples in the generator as well. This will yield a crucial benefit: the generator’s backprop term will be through samples on a set of positive measure that the discriminator will care about. Formalizing this notion, the actual gradient through the generator will now be proportional to ∇θJSD(Pr+ ‖Pg+ ), which will make the two noisy distributions match. As we anneal the noise, this will make Pr and Pg match as well. For completeness, we show the smooth gradient we get in this case. The proof is identical to the one of Theorem 3.2, so we leave it to the reader.\nCorollary 3.2. Let , ′ ∼ N (0, σ2I) and g̃θ(z) = gθ(z) + ′, then\nEz∼p(z), ′ [∇θ log(1−D∗(g̃θ(z)))] (5) = Ez∼p(z), ′ [ a(z) ∫ M P (g̃θ(z)− y)∇θ‖g̃θ(z)− y‖2 dPr(y)\n− b(z) ∫ P P (g̃θ(z)− y)∇θ‖g̃θ(z)− y‖2 dPg(y) ] = 2∇θJSD(Pr+ ‖Pg+ )\nIn the same as with Theorem 3.2, a and b will have the same properties. The main difference is that we will be moving all our noisy samples towards the data manifold, which can be thought of as moving a small neighbourhood of samples towards it. This will protect the discriminator against measure 0 adversarial examples.\nProof of theorem 3.2. Since the discriminator is assumed fixed when backproping to the generator, the only thing that depends on θ is gθ(z) for every z. By taking derivatives on our cost function\nEz∼p(z) [∇θ log(1−D∗(gθ(z)))] = Ez∼p(z) [ ∇θ log Pg+ (gθ(z))\nPr+ (gθ(z)) + Pg+ (gθ(z)) ] = Ez∼p(z) [∇θ logPg+ (gθ(z))−∇θ log (Pg+ (gθ(z)) + Pr+ (gθ(z)))]\n= Ez∼p(z) [ ∇θPg+ (gθ(z)) Pg+ (gθ(z)) − ∇θPg+ (gθ(z)) +∇θPr+ (gθ(z)) Pg+ (gθ(z)) + Pr+ (gθ(z)) ] = Ez∼p(z) [ 1\nPg+ (gθ(z)) + Pr+ (gθ(z)) ∇θ[−Pr+ (gθ(z))]−\n1\nPg+ (gθ(z)) + Pr+ (gθ(z))\nPr+ (gθ(z)) Pg+ (gθ(z)) ∇θ[−Pg+ (gθ(z))] ] Let the density of be 1Z e − ‖x‖ 2 2σ2 . We now define\na(z) = 1 2σ2 1\nPg+ (gθ(z)) + Pr+ (gθ(z))\nb(z) = 1 2σ2 1\nPg+ (gθ(z)) + Pr+ (gθ(z))\nPr+ (gθ(z))\nPg+ (gθ(z))\nTrivially, a and b are positive functions. Since b = aPr+ Pg+ , we know that b > a if and only if Pr+ > Pg+ , and b < a if and only if Pr+ < Pg+ as we wanted. Continuing the proof, we know\nEz∼p(z) [∇θ log(1−D∗(gθ(z)))] = Ez∼p(z) [ 2σ2a(z)∇θ[−Pr+ (gθ(z))]− 2σ2b(z)∇θ[−Pg+ (gθ(z)) ] = Ez∼p(z) [ 2σ2a(z) ∫ M −∇θ 1 Z e −‖gθ(z)−y‖ 2 2 2σ2 dPr(y)− 2σ2b(z) ∫ P −∇θ 1 Z e −‖gθ(z)−y‖ 2 2 2σ2 dPg(y) ]\n= Ez∼p(z) [ a(z) ∫ M 1 Z e −‖gθ(z)−y‖ 2 2 2σ2 ∇θ‖gθ(z)− y‖2 dPr(y)\n− b(z) ∫ P 1 Z e −‖gθ(z)−y‖ 2 2 2σ2 ∇θ‖gθ(z)− y‖2 dPg(y) ]\n= Ez∼p(z) [ a(z) ∫ M P (gθ(z)− y)∇θ‖gθ(z)− y‖2 dPr(y)\n− b(z) ∫ P P (gθ(z)− y)∇θ‖gθ(z)− y‖2 dPg(y) ] Finishing the proof.\nAn interesting observation is that if we have two distributions Pr and Pg with support on manifolds that are close, the noise terms will make the noisy distributions Pr+ and Pg+ almost overlap, and the JSD between them will be small. This is in drastic contrast to the noiseless variants Pr and Pg , where all the divergences are maxed out, regardless of the closeness of the manifolds. We could argue to use the JSD of the noisy variants to measure a similarity between the original distributions, but this would depend on the amount of noise, and is not an intrinsic measure of Pr and Pg . Luckilly, there are alternatives.\nDefinition 3.1. We recall the definition of the Wasserstein metric W (P,Q) for P and Q two distributions over X . Namely,\nW (P,Q) = inf γ∈Γ ∫ X×X ‖x− y‖2dγ(x, y)\nwhere Γ is the set of all possible joints on X × X that have marginals P and Q.\nThe Wasserstein distance also goes by other names, most commonly the transportation metric and the earth mover’s distance. This last name is most explicative: it’s the minimum cost of transporting the whole probability mass of P from its support to match the probability mass ofQ onQ’s support. This identification of transporting points from P toQ is done via the coupling γ. We refer the reader to Villani (2009) for an in-depth explanation of these ideas. It is easy to see now that the Wasserstein metric incorporates the notion of distance (as also seen inside the integral) between the elements in the support of P and the ones in the support of Q, and that as the supports of P and Q get closer and closer, the metric will go to 0, inducing as well a notion of distance between manifolds.\nIntuitively, as we decrease the noise, PX and PX+ become more similar. However, it is easy to see again that JSD(PX‖PX+ ) is maxed out, regardless of the amount of noise. The following Lemma shows that this is not the case for the Wasserstein metric, and that it goes to 0 smoothly when we decrease the variance of the noise.\nLemma 4. If is a random vector with mean 0, then we have\nW (PX ,PX+ ) ≤ V 1 2\nwhere V = E[‖ ‖22] is the variance of .\nProof. Let x ∼ PX , and y = x+ with independent from x. We call γ the joint of (x, y), which clearly has marginals PX and PX+ . Therefore,\nW (PX ,PX+ ) ≤ ∫ ‖x− y‖2dγ(x, y)\n= Ex∼PXEy∼x+ [‖x− y‖2] = Ex∼PXEy∼x+ [‖ ‖2] = Ex∼PXE [‖ ‖2] = E [‖ ‖2]\n≤ E [‖ ‖22] 1 2 = V 1 2\nwhere the last inequality was due to Jensen.\nWe now turn to one of our main results. We are interested in studying the distance between Pr and Pg without any noise, even when their supports lie on different manifolds, since (for example) the closer these manifolds are, the closer to actual points on the data manifold the samples will be. Furthermore, we eventually want a way to evaluate generative models, regardless of whether they are continuous (as in a VAE) or not (as in a GAN), a problem that has for now been completely unsolved. The next theorem relates the Wasserstein distance of Pr and Pg , without any noise or modification, to the divergence of Pr+ and Pg+ , and the variance of the noise. Since Pr+ and Pg+ are continuous distributions, this divergence is a sensible estimate, which can even be attempted to minimize, since a discriminator trained on those distributions will approximate the JSD between them, and provide smooth gradients as per Corolary 3.2.\nTheorem 3.3. Let Pr and Pg be any two distributions, and be a random vector with mean 0 and variance V . If Pr+ and Pg+ have support contained on a ball of diameter C, then 6\nW (Pr,Pg) ≤ 2V 1 2 + 2C √ JSD(Pr+ ‖Pg+ ) (6)\nProof.\nW (Pr,Pg) ≤W (Pr,Pr+ ) +W (Pr+ ,Pg+ ) +W (Pg+ ,Pg)\n≤ 2V 12 +W (Pr+ ,Pg+ )\n≤ 2V 12 + Cδ(Pr+ ,Pg+ )\n≤ 2V 12 + C (δ(Pr+ ,Pm) + δ(Pg+ ,Pm))\n≤ 2V 12 + C\n(√ 1\n2 KL(Pr+ ‖Pm) +\n√ 1\n2 KL(Pg+ ‖Pm) ) ≤ 2V 12 + 2C √ JSD(Pr+ ‖Pg+ )\nWe first used the Lemma 4 to bound everything but the middle term as a function of V . After that, we followed by the fact that W (P,Q) ≤ Cδ(P,Q) wih δ the total variation, which is a popular Lemma arizing from the Kantorovich-Rubinstein duality. After that, we used the triangular inequality on δ and Pm the mixture distribution between Pg+ and Pr+ . Finally, we used Pinsker’s inequality and later the fact that each individual KL is only one of the non-negative sumands of the JSD.\nTheorem 3.3 points us to an interesting idea. The two terms in equation (6) can be controlled. The first term can be decreased by annealing the noise, and the second term can be minimized by a GAN when the discriminator is trained on the noisy inputs, since it will be approximating the JSD between the two continuous distributions. One great advantage of this is that we no longer have to worry about training schedules. Because of the noise, we can train the discriminator till optimality without any problems and get smooth interpretable gradients by Corollary 3.2. All this while still minimizing the distance between Pr and Pg , the two noiseless distributions we in the end care about."
    }, {
      "heading" : "ACKNOWLEDGMENTS",
      "text" : "The first author would like to especially thank Luis Scoccola for help with the proof of Lemma 1.\nThe authors would also like to thank Ishmael Belghazi, Yoshua Bengio, Gerry Che, Soumith Chintala, Caglar Gulcehre, Daniel Jiwoong Im, Alex Lamb, Luis Scoccola, Pablo Sprechmann, Arthur Szlam, Jake Zhao for insightful comments and advice."
    }, {
      "heading" : "A PROOFS OF THINGS",
      "text" : "Proof of Lemma 1. We first consider the case where the nonlinearities are rectifiers or leaky rectifiers of the form σ(x) = 1[x < 0]c1x + 1[x ≥ 0]c2x for some c1, c2 ∈ R. In this case, g(z) = DnWn . . .D1W1z, where Wi are affine transformations and Di are some diagonal matrices dependent on z that have diagonal entries c1 or c2. If we consider D to be the (finite) set of all diagonal matrices with diagonal entries c1 or c2, then g(Z) ⊆ ⋃ Di∈DDnWn . . .D1W1Z , which is a finite union of linear manifolds.\nThe proof for the second case is technical and slightly more involved. When σ is a pointwise smooth strictly increasing nonlinearity, then applying it vectorwise it’s a diffeomorphism to its image. Therefore, it sends a countable union of manifolds of dimension d to a countable union of manifolds of dimension d. If we can prove the same thing for affine transformations we will be finished, since g(Z) is just a composition of these applied to a dimZ dimensional manifold. Of course, it suffices to prove that an affine transformation sends a manifold to a countable union of manifolds without increasing dimension, since a countable union of countable unions is still a countable union. Furthermore, we only need to show this for linear transformations, since applying a bias term is a diffeomorphism.\nLet W ∈ Rn×m be a matrix. Note that by the singular value decomposition, W = UΣV, where Σ is a square diagonal matrix with diagonal positive entries and U,V are compositions of changes of basis, inclusions (meaning adding 0s to new coordinates) and projections to a subset of the coordinates. Multiplying by Σ and applying a change of basis are diffeomorphisms, and adding 0s to new coordinates is a manifold embedding, so we only need to prove our statement for projections onto a subset of the coordinates. Let π : Rn+k → Rn, where π(x1, . . . , xn+k) = (x1, . . . , xn) be our projection andM⊆ Rn+k our d-dimensional manifold. If n ≤ d, we are done since the image of π is contained in all Rn, a manifold with at most dimension d. We now turn to the case where n > d. Let πi(x) = xi be the projection onto the i-th coordinate. If x is a critical point of π, since the coordinates of π are independent, then x has to be a critical point of a πi. By a consequence of the Morse Lemma, the critical points of πi are isolated, and therefore so are the ones of π, meaning that there is at most a countable number of them. Since π maps the non-critical points onto a d dimensional manifold (because it acts as an embedding) and the countable number of critical points into a countable number of points (or 0 dimensional manifolds), the proof is finished.\nProof of Lemma 2. For now we assume thatM and P are without boundary. If dimM+ dimP ≥ d it is known that under arbitrarilly small perturbations defined as the ones in the statement of this Lemma, the two dimensions will intersect only transversally with probability 1 by the General Position Lemma. If dimM+ dimP < d, we will show that with probability 1,M+ η and P + η′ will not intersect, thereby getting our desired result. Let us then assume dimM+ dimP < d. Note that M̂ ∩ P̂ 6= ∅ if and only if there are x ∈ M, y ∈ P such that x + η = y + η′, or equivalently x − y = η′ − η. Therefore, M̂ and P̂ intersect if and only if η′ − η ∈ M − P . Since η, η′ are independent continuous random variables, the difference is also continuous. IfM−P has measure 0 in Rd then P(η′ − η ∈ M− P) = 0, concluding the proof. We will therefore show thatM−P has measure 0. Let f :M×P → Rd be f(x, y) = x− y. If m and p are the dimensions ofM and P , then f is a smooth function between an m + p-dimensional manifold and a d dimensional one. Clearly, the image of f isM−P . Therefore,\nM−P = f({z ∈M×P|rank(dzf) < m+ p}) ∪ f({z ∈M×P|rank(dzf) = m+ p})\nThe first set is the image of the critical points, namely the critical values. By Sard’s Lemma, this set has measure 0. Let’s call A = {z ∈ M × P|rank(dzf) = m + p}. Let z be an element of A. By the inverse function theorem, there is a neighbourhood Uz ⊆ M × P of z such that f |Uz is an embedding. Since every manifold has a countable topological basis, we can cover A by countable sets Uzn , where n ∈ N. We will just note them by Un. Since f |Un is an embedding, f(Un) is an m+ p-dimensional manifold, and since m+ p < d, this set has measure 0 in Rd. Now, f(A) = ⋃ n∈N f(Un), which therefore has measure 0 in Rd, finishing the proof of the boundary free case.\nNow we consider the case whereM and P are manifolds with boundary. By a simple union bound, Pη,η′(M̃ perfectly aligns with P̃) ≤ Pη,η′(Int M̃ perfectly aligns with Int P̃)\n+ Pη,η′(Int M̃ perfectly aligns with ∂P̃) + Pη,η′(∂M̃ perfectly aligns with Int P̃) + Pη,η′(∂M̃ perfectly aligns with ∂P̃) = 0\nwhere the last equality arizes when combining the facts that ˜IntM = η + IntM = Int (η +M) = Int M̃ (and analogously for the boundary and P), that the boundary and interiors ofM and P are boundary free regular submanifolds of Rd without full dimension, and then applying the boundary free case of the proof.\nProof of Lemma 3. Let m = dimM and p = dimP . We again consider first the case whereM and P are manifolds without boundary. If m+p < d, then L = ∅ so the statement is obviously true. If m+ p ≥ d, thenM and P intersect transversally. This implies that L is a manifold of dimension m + p − d < m, p. Since L is a submanifold of bothM and P that has lower dimension, it has measure 0 on both of them.\nWe now tackle the case whereM and P have boundaries. Let us remember thatM = IntM∪∂M and the union is disjoint (and analogously for P). By using elementary properties of sets, we can trivially see that"
    }, {
      "heading" : "L =M∩P = (IntM∩ Int P) ∪ (IntM∩ ∂P) ∪ (∂M∩ Int P) ∪ (∂M∩ ∂P)",
      "text" : "where the unions are disjoint. This is the disjoint union of 4 strictly lower dimensional manifolds, by using the first part of the proof. Since each one of these intersections has measure 0 on either the interior or boundary ofM (again, by the first part of the proof), and interior and boundary are contained in M, each one of the four intersections has measure 0 in M. Analogously, they have measure 0 in P , and by a simple union bound we see that L has measure 0 inM and P finishing the remaining case of the proof.\nProof of Theorem 3.1. We first need to show that PX+ is absolutely continuous. Let A be a Borel set with Lebesgue measure 0. Then, by the fact that and X are independent, we know by Fubini\nPX+ (A) = ∫ Rd P (A− x) dPX(x)\n= ∫ Rd 0 dPX(x) = 0\nWhere we used the fact that if A has Lebesgue measure zero, then so does A − x and since P is absolutely continuous, P (A− x) = 0. Now we calculate the density of PX+ . Again, by using the independence of X and , for any Borel set B we know\nPX+ (B) = ∫ Rd P (B − y) dPX(y)\n= Ey∼PX [P (B − y)] = Ey∼Px [∫\nB−y P (x)dx ] = Ey∼Px [∫ B P (x− y)dx ]\n= ∫ B Ey∼Px [P (x− y)] dx\nTherefore, PX+ (B) = ∫ B PX+ (x)dx for our proposed PX+ and all Borel sets B. By the uniqueness of the Radon-Nikodym theorem, this implies the proposed PX+ is the density of PX+ . The equivalence of the formula changing the expectation for ∫ M PX is trivial by the definition of expectation and the fact that the support of PX lies onM."
    }, {
      "heading" : "B FURTHER CLARIFICATIONS",
      "text" : "In this appendix we further explain some of the terms and ideas mentioned in the paper, which due to space constrains, and to keep the flow of the paper, couldn’t be extremely developed in the main text. Some of these have to do with notation, others with technical elements of the proofs. On the latter case, we try to convey more intuition than we previously could. We present these clarifications in a very informal fashion in the following item list.\n• There are two different but very related properties a random variable can have. A random variable X is said to be continuous if P (X = x) = 0 for all single points x ∈ X . Note that a random variable concentrated on a low dimensional manifold such as a plane can have this property. However, an absolutely continuous random variable has the following property: if a set A has Lebesgue measure 0, then P (X ∈ A) = 0. Since points have measure 0 with the Lebesgue measure, absolute continuity implies continuity. A random variable that’s supported on a low dimensional manifold therefore will not be absolutely continuous: let M a low dimensional manifold be the support of X . Since a low dimensional manifold has 0 Lebesgue measure, this would imply P (X ∈ M) = 0, which is an absurd since M was the support of X . The property of X being absolutely continuous can be shown to be equivalent to X having a density: the existence of a function f : X → R such that P (X ∈ A) = ∫ A f(x) dx (this is a consequence of the Radon-Nikodym theorem).\nThe annoying part is that in everyday paper writing when we talk about continuous random variables, we omit the ”absolutely” word to keep the text concise and actually talk about absolutely continuous random variables (ones that have a density), this is done through almost all sciences and throughout mathematics as well, annoying as it is. However we made the clarification in here since it’s relevant to our paper not to mistake the two terms. • The notation Pr[D(x) = 1] = 1 is the abbreviation of Pr[{x ∈ X : D(x) = 1}] = 1 for a\nmeasure Pr. Another way of expressing this more formally is Pr[D−1(1)] = 1. • In the proof of Theorem 2.1, the distance between sets d(A,B) is defined as the usual\ndistance between sets in a metric space\nd(A,B) = inf x∈A,y∈B d(x, y)\nwhere d(x, y) is the distance between points (in our case the Euclidean distance). • Note that not everything that’s outside of the support of Pr has to be a generated image.\nGenerated images are only things that lie in the support of Pg , and there are things that don’t need to be in the support of either Pr or Pg (these could be places where 0 < D < 1 for example). This is because the discriminator is not trained to discriminate Pr from all things that are not Pr, but to distinguish Pr from Pg . Points that don’t lie in the support of Pr or Pg are not important to the performance of the discriminator (as is easily evidenced in its cost). Why we define accuracy 1 as is done in the text is to avoid the identification of a single ‘tight’ support, since this typically leads to problems (if I take a measure 0 set from any support it still is the support of the distribution). In the end, what we aim for is:\n– We want D(x) = 1 with probability 1 when x ∼ Pr. – We want D(x) = 0 with probability 1 when x ∼ Pg . – Whatever happens elsewhere is irrelevant (as it is also reflected by the cost of the\ndiscriminator) • We say that a discriminator D∗ is optimal for gθ (or its corresponding Pg) if for all mea-\nsurable functions D : X → [0, 1] we have\nL(D∗, gθ) ≥ L(D, gθ)\nfor L defined as in equation (1)."
    } ],
    "references" : [ {
      "title" : "Optimization methods for large-scale machine",
      "author" : [ "Léon Bottou", "Frank E. Curtis", "Jorge Nocedal" ],
      "venue" : "learning. CoRR,",
      "citeRegEx" : "Bottou et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Bottou et al\\.",
      "year" : 2016
    }, {
      "title" : "Deep generative image models using a laplacian pyramid of adversarial networks",
      "author" : [ "Emily L. Denton", "Soumith Chintala", "Arthur Szlam", "Rob Fergus" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Denton et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Denton et al\\.",
      "year" : 2015
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Ian J. Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Goodfellow et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Goodfellow et al\\.",
      "year" : 2014
    }, {
      "title" : "Explaining and harnessing adversarial examples",
      "author" : [ "Ian J. Goodfellow", "Jonathon Shlens", "Christian Szegedy" ],
      "venue" : "CoRR, abs/1412.6572,",
      "citeRegEx" : "Goodfellow et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Goodfellow et al\\.",
      "year" : 2014
    }, {
      "title" : "Approximation capabilities of multilayer feedforward networks",
      "author" : [ "Kurt Hornik" ],
      "venue" : "Neural Networks,",
      "citeRegEx" : "Hornik.,? \\Q1991\\E",
      "shortCiteRegEx" : "Hornik.",
      "year" : 1991
    }, {
      "title" : "Auto-encoding variational bayes",
      "author" : [ "Diederik P. Kingma", "Max Welling" ],
      "venue" : "CoRR, abs/1312.6114,",
      "citeRegEx" : "Kingma and Welling.,? \\Q2013\\E",
      "shortCiteRegEx" : "Kingma and Welling.",
      "year" : 2013
    }, {
      "title" : "Professor forcing: A new algorithm for training recurrent",
      "author" : [ "Alex Lamb", "Anirudh Goyal", "Ying Zhang", "Saizheng Zhang", "Aaron Courville", "Yoshua Bengio" ],
      "venue" : "networks. Corr,",
      "citeRegEx" : "Lamb et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Lamb et al\\.",
      "year" : 2016
    }, {
      "title" : "Sample complexity of testing the manifold hypothesis",
      "author" : [ "Hariharan Narayanan", "Sanjoy Mitter" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Narayanan and Mitter.,? \\Q2010\\E",
      "shortCiteRegEx" : "Narayanan and Mitter.",
      "year" : 2010
    }, {
      "title" : "Unsupervised representation learning with deep convolutional generative adversarial networks",
      "author" : [ "Alec Radford", "Luke Metz", "Soumith Chintala" ],
      "venue" : "CoRR, abs/1511.06434,",
      "citeRegEx" : "Radford et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Radford et al\\.",
      "year" : 2015
    }, {
      "title" : "Improved techniques for training",
      "author" : [ "Tim Salimans", "Ian J. Goodfellow", "Wojciech Zaremba", "Vicki Cheung", "Alec Radford", "Xi Chen" ],
      "venue" : "gans. CoRR,",
      "citeRegEx" : "Salimans et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Salimans et al\\.",
      "year" : 2016
    }, {
      "title" : "A note on the evaluation of generative models",
      "author" : [ "Lucas Theis", "Aaron van den Oord", "Matthias Bethge" ],
      "venue" : "In International Conference on Learning Representations,",
      "citeRegEx" : "Theis et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Theis et al\\.",
      "year" : 2016
    }, {
      "title" : "Optimal Transport: Old and New. Grundlehren der mathematischen Wissenschaften",
      "author" : [ "Cédric Villani" ],
      "venue" : "URL http://opac.inria. fr/record=b1129524",
      "citeRegEx" : "Villani.,? \\Q2009\\E",
      "shortCiteRegEx" : "Villani.",
      "year" : 2009
    }, {
      "title" : "Learning a probabilistic latent space of object shapes via 3d generative-adversarial",
      "author" : [ "Jiajun Wu", "Chengkai Zhang", "Tianfan Xue", "William T. Freeman", "Joshua B. Tenenbaum" ],
      "venue" : "modeling. Corr,",
      "citeRegEx" : "Wu et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Wu et al\\.",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "(Denton et al., 2015; Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016) However, they still remain remarkably difficult to train, with most current papers dedicated to heuristically finding stable architectures.",
      "startOffset" : 0,
      "endOffset" : 102
    }, {
      "referenceID" : 8,
      "context" : "(Denton et al., 2015; Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016) However, they still remain remarkably difficult to train, with most current papers dedicated to heuristically finding stable architectures.",
      "startOffset" : 0,
      "endOffset" : 102
    }, {
      "referenceID" : 9,
      "context" : "(Denton et al., 2015; Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016) However, they still remain remarkably difficult to train, with most current papers dedicated to heuristically finding stable architectures.",
      "startOffset" : 0,
      "endOffset" : 102
    }, {
      "referenceID" : 6,
      "context" : "(Denton et al., 2015; Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016) However, they still remain remarkably difficult to train, with most current papers dedicated to heuristically finding stable architectures.",
      "startOffset" : 0,
      "endOffset" : 102
    }, {
      "referenceID" : 12,
      "context" : "(Denton et al., 2015; Radford et al., 2015; Salimans et al., 2016; Lamb et al., 2016; Wu et al., 2016) However, they still remain remarkably difficult to train, with most current papers dedicated to heuristically finding stable architectures.",
      "startOffset" : 0,
      "endOffset" : 102
    }, {
      "referenceID" : 8,
      "context" : "(Radford et al., 2015; Salimans et al., 2016) Despite their success, there is little to no theory explaining the unstable behaviour of GAN training.",
      "startOffset" : 0,
      "endOffset" : 45
    }, {
      "referenceID" : 9,
      "context" : "(Radford et al., 2015; Salimans et al., 2016) Despite their success, there is little to no theory explaining the unstable behaviour of GAN training.",
      "startOffset" : 0,
      "endOffset" : 45
    }, {
      "referenceID" : 10,
      "context" : "(Theis et al., 2016; Huszar, 2015).",
      "startOffset" : 0,
      "endOffset" : 34
    }, {
      "referenceID" : 10,
      "context" : "An impressive experimental analysis of the similarities, uses and differences of these divergences in practice can be seen at Theis et al. (2016). It is indeed conjectured that the reason of GANs success at producing reallistically looking images is due to the switch from the traditional maximum likelihood approaches.",
      "startOffset" : 126,
      "endOffset" : 146
    }, {
      "referenceID" : 4,
      "context" : "The use of this norm is to make the proofs simpler, but could have been done in another Sobolev norm ‖ · ‖1,p for p < ∞ covered by the universal approximation theorem in the sense that we can guarantee a neural network approximation in this norm (Hornik, 1991).",
      "startOffset" : 246,
      "endOffset" : 260
    }, {
      "referenceID" : 2,
      "context" : "We already know by Goodfellow et al. (2014a) that Ez∼p(z) [∇θ log(1−D(gθ(z)))|θ=θ0 ] = ∇θ2JSD(Pgθ‖Pr)|θ=θ0 Furthermore, as remarked by Huszar (2016),",
      "startOffset" : 19,
      "endOffset" : 45
    }, {
      "referenceID" : 2,
      "context" : "We already know by Goodfellow et al. (2014a) that Ez∼p(z) [∇θ log(1−D(gθ(z)))|θ=θ0 ] = ∇θ2JSD(Pgθ‖Pr)|θ=θ0 Furthermore, as remarked by Huszar (2016),",
      "startOffset" : 19,
      "endOffset" : 149
    }, {
      "referenceID" : 0,
      "context" : "The noise in the curves also shows that the variance of the gradients is increasing, which is known to delve into slower convergence and more unstable behaviour in the optimization (Bottou et al., 2016).",
      "startOffset" : 181,
      "endOffset" : 202
    }, {
      "referenceID" : 2,
      "context" : "This is easilly seen when we realize the term inside the expectation of equation (4) will be a positive scalar times ∇x log(1 − D(x))∇θgθ(z), which is the directional derivative towards the exact adversarial term of Goodfellow et al. (2014b). Because of this, it is important to backprop through noisy samples in the generator as well.",
      "startOffset" : 216,
      "endOffset" : 242
    }, {
      "referenceID" : 11,
      "context" : "We refer the reader to Villani (2009) for an in-depth explanation of these ideas.",
      "startOffset" : 23,
      "endOffset" : 38
    } ],
    "year" : 2017,
    "abstractText" : "The goal of this paper is not to introduce a single algorithm or method, but to make theoretical steps towards fully understanding the training dynamics of generative adversarial networks. In order to substantiate our theoretical analysis, we perform targeted experiments to verify our assumptions, illustrate our claims, and quantify the phenomena. This paper is divided into three sections. The first section introduces the problem at hand. The second section is dedicated to studying and proving rigorously the problems including instability and saturation that arize when training generative adversarial networks. The third section examines a practical and theoretically grounded direction towards solving these problems, while introducing new tools to study them.",
    "creator" : "LaTeX with hyperref package"
  }
}