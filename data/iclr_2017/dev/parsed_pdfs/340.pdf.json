{
  "name" : "340.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ "yaniv@fb.com", "adampolyak@fb.com", "wolf@fb.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "We study the problem of transferring a sample in one domain to an analog sample in another domain. Given two related domains, S and T , we would like to learn a generative function G that maps an input sample from S to the domain T , such that the output of a given representation function f , which accepts inputs in either domains, would remain unchanged. Other than f , the training data is unsupervised and consist of a set of samples from each domain, without any mapping between them. The Domain Transfer Network (DTN) we present employs a compound loss function that includes a multiclass GAN loss, an f preserving component, and a regularizing component that encourages G to map samples from T to themselves. We apply our method to visual domains including digits and face images and demonstrate its ability to generate convincing novel images of previously unseen entities, while preserving their identity."
    }, {
      "heading" : "1 INTRODUCTION",
      "text" : "Humans excel in tasks that require making analogies between distinct domains, transferring elements from one domain to another, and using these capabilities in order to blend concepts that originated from multiple source domains. Our experience tells us that these remarkable capabilities are developed with very little, if any, supervision that is given in the form of explicit analogies.\nRecent achievements replicate some of these capabilities to some degree: Generative Adversarial Networks (GANs) are able to convincingly generate novel samples that match that of a given training set; style transfer methods are able to alter the visual style of images; domain adaptation methods are able to generalize learned functions to new domains even without labeled samples in the target domain and transfer learning is now commonly used to import existing knowledge and to make learning much more efficient.\nThese capabilities, however, do not address the general analogy synthesis problem that we tackle in this work. Namely, given separated but otherwise unlabeled samples from domains S and T and a perceptual function f , learn a mapping G : S → T such that f(x) ∼ f(G(x)). In order to solve this problem, we make use of deep neural networks of a specific structure in which the function G is a composition of the input function f and a learned function g. A compound loss that integrates multiple terms is used. One term is a Generative Adversarial Network (GAN) term that encourages the creation of samples G(x) that are indistinguishable from the training samples of the target domain, regardless of x ∈ S or x ∈ T . The second loss term enforces that for every x in the source domain training set, ||f(x)− f(G(x))|| is small. The third loss term is a regularizer that encourages G to be the identity mapping for all x ∈ T . The type of problems we focus on in our experiments are visual, although our methods are not limited to visual or even to perceptual tasks. Typically, f would be a neural network representation that is taken as the activations of a network that was trained, e.g., by using the cross entropy loss, in order to classify or to capture identity.\nAs a main application challenge, we tackle the problem of emoji generation for a given facial image. Despite a growing interest in emoji and the hurdle of creating such personal emoji manually, no system has been proposed, to our knowledge, that can solve this problem. Our method is able to\nproduce face emoji that are visually appealing and capture much more of the facial characteristics than the emoji created by well-trained human annotators who use the conventional tools."
    }, {
      "heading" : "2 RELATED WORK",
      "text" : "As far as we know, the domain transfer problem we formulate is novel despite being ecological (i.e., appearing naturally in the real-world), widely applicable, and related to cognitive reasoning (Fauconnier & Turner, 2003). In the discussion below, we survey recent GAN work, compare our work to the recent image synthesis work and make links to unsupervised domain adaptation.\nGAN (Goodfellow et al., 2014) methods train a generator network G that synthesizes samples from a target distribution given noise vectors. G is trained jointly with a discriminator network D, which distinguishes between samples generated by G and a training set from the target distribution. The goal of G is to create samples that are classified by D as real samples.\nWhile originally proposed for generating random samples, GANs can be used as a general tool to measure equivalence between distributions. Specifically, the optimization of D corresponds to taking the most discriminative D achievable, which in turn implies that the indistinguishability is true for every D. Formally, Ganin et al. (2016) linked the GAN loss to the H-divergence between two distributions of Ben-david et al. (2006).\nThe generative architecture that we employ is based on the successful architecture of Radford et al. (2015). There has recently been a growing concern about the uneven distribution of the samples generated by G – that they tend to cluster around a set of modes in the target domain (Salimans et al., 2016). In general, we do not observe such an effect in our results, due to the requirement to generate samples that satisfy specific f -constancy criteria.\nA few contributions (“Conditional GANs”) have employed GANs in order to generate samples from a specific class (Mirza & Osindero, 2014), or even based on a textual description (Reed et al., 2016). When performing such conditioning, one can distinguish between samples that were correctly generated but fail to match the conditional constraint and samples that were not correctly generated. This is modeled as a ternary discriminative function D (Reed et al., 2016; Brock et al., 2016).\nThe recent work by Dosovitskiy & Brox (2016), has shown promising results for learning to map embeddings to their pre-images, given input-target pairs. Like us, they employ a GAN as well as additional losses in the feature- and the pixel-space. Their method is able to invert the midlevel activations of AlexNet and reconstruct the input image. In contrast, we solve the problem of unsupervised domain transfer and apply the loss terms in different domains: pixel loss in the target domain, and feature loss in the source domain.\nAnother class of very promising generative techniques that has recently gained traction is neural style transfer. In these methods, new images are synthesized by minimizing the content loss with respect to one input sample and the style loss with respect to one or more input samples. The content loss is typically the encoding of the image by a network training for an image categorization task, similar to our work. The style loss compares the statistics of the activations in various layers of the neural network. We do not employ style losses in our method. While initially style transfer was obtained by a slow optimization process (Gatys et al., 2016), recently, the emphasis was put on feed-forward methods (Ulyanov et al., 2016; Johnson et al., 2016).\nThere are many links between style transfer and our work: both are unsupervised and generate a sample under f constancy given an input sample. However, our work is much more general in its scope and does not rely on a predefined family of perceptual losses. Our method can be used in order to perform style transfer, but not the other way around. Another key difference is that the current style transfer methods are aimed at replicating the style of one or several images, while our work considers a distribution in the target space. In many applications, there is an abundance of unlabeled data in the target domain T , which can be modeled accurately in an unsupervised manner.\nGiven the impressive results of recent style transfer work, in particular for face images, one might get the false impression that emoji are just a different style of drawing faces. By way of analogy, this claim is similar to stating that a Siamese cat is a Labrador in a different style. Emoji differ from facial photographs in both content and style. Style transfer can create visually appealing face images; However, the properties of the target domain are compromised.\nIn the computer vision literature, work has been done to automatically generate sketches from images, see Kyprianidis et al. (2013) for a survey. These systems are able to emphasize image edges and facial features in a convincing way. However, unlike our method, they require matching pairs of samples, and were not shown to work across two distant domains as in our method. Due to the lack of supervised training data, we did not try to apply such methods to our problems. However, one can assume that if such methods were appropriate for emoji synthesis, automatic face emoji services would be available.\nUnsupervised domain adaptation addresses the following problem: given a labeled training set in S × Y , for some target space Y , and an unlabeled set of samples from domain T , learn a function h : T → Y (Chen et al., 2012; Ganin et al., 2016). One can solve the sample transfer problem (our problem) using domain adaptation and vice versa. In both cases, the solution is indirect. In order to solve domain adaptation using domain transfer, one would learn a function from S to Y and use it as the input method of the domain transfer algorithm in order to obtain a map from S to T 1. The training samples could then be transferred to T and used to learn a classifier there.\nIn the other direction, given the function f , one can invert f in the domain T by generating training samples (f(x), x) for x ∈ T and learn from them a function h from f(T ) = {f(x)|x ∈ T} to T . Domain adaptation can then be used in order to map f(S) = {f(x)|x ∈ S} to T , thus achieving domain transfer. Based on the work by Zhmoginov & Sandler (2016), we expect that h, even in the target domain of emoji, will be hard to learn, making this solution hypothetical at this point."
    }, {
      "heading" : "3 A BASELINE PROBLEM FORMULATION",
      "text" : "Given a set s of unlabeled samples in a source domain S sampled i.i.d according to some distribution DS , a set of samples in the target domain t ⊂ T sampled i.i.d from distribution DT , a function f from the domain S ∪ T , some metric d, and a weight α, we wish to learn a function G : S → T that minimizes the combined risk R = RGAN + αRCONST, which is comprised of\nRGAN = max D Ex∼DS log[1−D(G(x))] + Ex∼DT log[D(x)], (1)\nwhere D is a binary classification function from T , D(x) the probability of the class 1 it assigns for a sample x ∈ T , and\nRCONST = Ex∼DS d(f(x), f(G(x))) (2)\nThe first term is the adversarial risk, which requires that for every discriminative function D, the samples from the target domain would be indistinguishable from the samples generated by G for samples in the source domain. An adversarial risk is not the only option. An alternative term that does not employ GANs would directly compare the distribution DT to the distribution of G(x) where x ∼ DS , e.g., by using KL-divergence. The second term is the f -constancy term, which requires that f is invariant under G. In practice, we have experimented with multiple forms of d including Mean Squared Error (MSE) and cosine distance, as well as other variants including metric learning losses (hinge) and triplet losses. The performance is mostly unchanged, and we report results using the simplest MSE solution.\nSimilarly to other GAN formulations, one can minimize the loss associated with the risk R over G, while maximizing it over D, where G and D are deep neural networks, and the expectations in R are replaced by summations over the corresponding training sets. However, this baseline solution, as we will show experimentally, does not produce desirable results.\n1The function trained this way would be more accurate on S than on T . This asymmetry is shared with all experiments done in this work."
    }, {
      "heading" : "4 THE DOMAIN TRANSFER NETWORK",
      "text" : "We suggest to employ a more elaborate architecture that contains two high level modifications. First, we employ f(x) as the baseline representation to the function G. Second, we consider, during training, the generated samples G(x) for x ∈ t. The first change is stated as G = g ◦ f , for some learned function g. By applying this, we focus the learning effort ofG on the aspects that are most relevant toRCONST. In addition, in most applications, f is not as accurate on T as it on S. The composed function, which is trained on samples from both S and T , adds layers on top of f , which adapt it.\nThe second change alters the form of LGAN, making it multiclass instead of binary. It also introduces a new term LTID that requires G to be the identity matrix on samples from T . Taken together and written in terms of training loss, we now have two losses LD and LG = LGANG + αLCONST + βLTID + γLTV, for some weights α, β, γ, where\nLD = − ∑ x∈s logD1(g(f(x)))− ∑ x∈t logD2(g(f(x)))− ∑ x∈t logD3(x) (3)\nLGANG = − ∑ x∈s logD3(g(f(x)))− ∑ x∈t logD3(g(f(x))) (4)\nLCONST = ∑ x∈s d(f(x), f(g(f(x)))) (5)\nLTID = ∑ x∈t d2(x,G(x)) (6)\nand where D is a ternary classification function from the domain T to 1, 2, 3, and Di(x) is the probability it assigns to class i = 1, 2, 3 for an input sample x, and d2 is a distance function in T . During optimization, LG is minimized over g and LD is minimized over D. See Fig. 1 for an illustration of our method.\nEq. 3 and 4 make sure that the generated analogy, i.e., the output ofG, is in the target space T . Since D is ternary and can therefore confuse classes in more than one way, this role, which is captured by Eq. 1 in the baseline formulation, is split into two. However, the two equations do not enforce any similarity between the source sample x and the generated G(x). This is done by Eq. 5 and 6: Eq. 5 enforces f -constancy for x ∈ S, while Eq. 6 enforces that for samples x ∈ T , which are already in the target space, G is the identity mapping. The latter is a desirable behavior, e.g., for the cartooning task, given an input emoji, one would like it to remain constant under the mapping of G. It can also be seen as an autoencoder type of loss, applied only to samples from T . The experiments reported in Sec. 5 evaluate the contributions of LCONST and LTID and reveal that at least one of these is required, and that when employing only one loss, LCONST leads to a better performance than LTID.\nThe last loss, LTV is an anisotropic total variation loss (Rudin et al., 1992; Mahendran & Vedaldi, 2015), which is added in order to slightly smooth the resulting image. The loss is defined on the generated image z = [zij ] = G(x) as\nLTV (z) = ∑ i,j ( (zi,j+1 − zij)2 + (zi+1,j − zij)2 )B 2 , (7)\nwhere we employ B = 1.\nIn our work, MSE is used for both d and d2. We also experimented with replacing d2, which, in visual domains, compares images, with a second GAN. No noticeable improvement was observed. Throughout the experiments, the adaptive learning rate method Adam by Kingma & Ba (2016) is used as the optimization algorithm."
    }, {
      "heading" : "5 EXPERIMENTS",
      "text" : "The Domain Transfer Network (DTN) is evaluated in two application domains: digits and face images. In the first domain, we transfer images from the Street View House Number (SVHN) dataset of Netzer et al. (2011) to the domain of the MNIST dataset by LeCun & Cortes (2010). In\nthe face domain, we transfer a set of random and unlabeled face images to a space of emoji images. In both cases, the source and target domains differ considerably."
    }, {
      "heading" : "5.1 DIGITS: FROM SVHN TO MNIST",
      "text" : "For working with digits, we employ the extra training split of SVHN, which contains 531,131 images for two purposes: learning the function f and as an unsupervised training set s for the domain transfer method. The evaluation is done on the test split of SVHN, comprised of 26,032 images. The architecture of f consists of four convolutional layers with 64, 128, 256, 128 filters respectively, each followed by max pooling and ReLU non-linearity. The error on the test split is 4.95%. Even tough this accuracy is far from the best reported results, it seems to be sufficient for the purpose of domain transfer. Within the DTN, f maps a 32 × 32 RGB image to the activations of the last convolutional layer of size 128× 1× 1 (post a 4× 4 max pooling and before the ReLU). In order to apply f on MNIST images, we replicate the grayscale image three times.\nThe set t contains the test set of the MNIST dataset. For supporting quantitative evaluation, we have trained a classifier on the train set of the MNIST dataset, consisting of the same architecture as f . The accuracy of this classifier on the test set approaches perfect performance at 99.4% accuracy, and is, therefore, trustworthy as an evaluation metric. In comparison, the network f , achieves 76.08% accuracy on t.\nNetwork g, inspired by Radford et al. (2015), maps SVHN-trained f ’s 128D representations to 32× 32 grayscale images. g employs four blocks of deconvolution, batch-normalization, and ReLU, with a hyperbolic tangent terminal. The architecture ofD consists of four batch-normalized convolutional layers and employs ReLU. See Radford et al. (2015) for more details on the networks architecture. In the digit experiments, the results were obtained with the tradeoff hyperparamemters α = β = 15. We did not observe a need to add a smoothness term and the weight of LTV was set to γ = 0.\nDespite not being very accurate on both domains (and also considerably worse than the SVHN state of the art), we were able to achieve visually appealing domain transfer, as shown in Fig. 2(a). In order to evaluate the contribution of each of the method’s components, we have employed the MNIST network on the set of samples G(sTEST ) = {G(x)|x ∈ sTEST }, using the true SVHN labels of the test set.\nWe first compare to the baseline method of Sec. 3, where the generative function, which works directly with samples in S, is composed out of a few additional layers at the bottom of G. The results, shown in Tab. 1, demonstrate that DTN has a clear advantage over the baseline method. In addition, the contribution of each one of the terms in the loss function is shown in the table. The regularization term LTID seems less crucial than the constancy term. However, at least one of them is required in order to obtain good performance. The GAN constraints are also important. Finally, the inclusion of f within the generator function G has a dramatic influence on the results.\nAs explained in Sec. 2, domain transfer can be used in order to perform unsupervised domain adaptation. For this purposes, we transformed the set s to the MNIST domain (as above), and using the true labels of s employed a simple nearest neighbor classifier there. The choice of classifier was\nto emphasize the simplicity of the approach; However, the constraints of the unsupervised domain transfer problem would be respected for any classifier trained on G(s). The results of this experiment are reported in Tab. 2, which shows a clear advantage over the state of the art method of Ganin et al. (2016). This is true both when transferring the samples of the set s and when transferring the test set of SVHN, which is much smaller and was not seen during the training of the DTN."
    }, {
      "heading" : "5.1.1 UNSEEN DIGITS",
      "text" : "Another set of experiments was performed in order to study the ability of the domain transfer network to overcome the omission of a class of samples. This type of ablation can occur in the source or the target domain, or during the training of f and can help us understand the importance of each of these inputs. The results are shown visually in Fig. 3, and qualitatively in Tab. 3, based on the accuracy of the MNIST classifier only on the transferred samples from the test set of SVHN that belong to class ‘3’.\nIt is evident that not including the class in the source domain is much less detrimental than eliminating it from the target domain. This is the desirable behavior: never seeing any ‘3’-like shapes in t, the generator should not generate such samples. Results are better when not observing ‘3’ in both s, t than when not seeing it only in t since in the latter case, G learns to map source samples of ‘3’ to target images of other classes."
    }, {
      "heading" : "5.2 FACES: FROM PHOTOS TO EMOJI",
      "text" : "For face images, we use a set s of one million random images without identity information. The set t consists of assorted facial avatars (emoji) created by an online service (bitmoji.com). The emoji images were processed by a fully automatic process that localizes, based on a set of heuristics, the center of the irides and the tip of the nose. Based on these coordinates, the emoji were centered and scaled into 152× 152 RGB images. As the function f , we employ the representation layer of the DeepFace network Taigman et al. (2014). This representation is 256-dimensional and was trained on a labeled set of four million images that does not intersect the set s. Network D takes 152 × 152 RGB images (either natural or scaled-up emoji) and consists of 6 blocks, each containing a convolution with stride 2, batch normalization, and a leaky ReLU with a parameter of 0.2. Network g maps f ’s 256D representations to 64× 64 RGB images through a network with 5 blocks, each consisting of an upscaling convolution, batch-normalization and ReLU. Adding 1 × 1 convolution to each block resulted in lower LCONST training errors, and made g 9-layers deep. We set α = 100, β = 1, γ = 0.05 as the tradeoff hyperparameters within LG via validation. As expected, higher values of α resulted in better f -constancy, however introduced artifacts such as general noise or distortions. The network was trained for 3 epochs, the point where no further reduction of validation error was observed on LCONST.\nIn order to upscale the 64 × 64 output to print quality, we used the method of Dong et al. (2015), which was shown to work well on art. We did not retrain this network for our application, and apply the published one to the final output of our method after its training was finished. Results without this upscale are shown, for comparison, in Appendix C.\nComparison With Human Annotators For evaluation purposes only, a team of professional annotators manually created an emoji, using a web service, for 118 random images from the CelebA dataset (Yang et al., 2015). Fig. 4 shows side by side samples of the original image, the human generated emoji and the emoji generated by the learned generator function G. As can be seen, the automatically generated emoji tend to be more informative, albeit less restrictive than the ones created manually.\nIn order to evaluate the identifiability of the resulting emoji, we have collected a second example for each identity in the set of 118 CelebA images and a set s′ of 100,000 random face images, which were not included in s. We then employed the VGG face CNN descriptor of Parkhi et al. (2015) in order to perform retrieval as follows. For each image x in our manually annotated set, we create a gallery s′ ∪ x′, where x′ is the other image of the person in x. We then perform retrieval using the VGG face descriptor using either the manually created emoji or G(x) as probe.\nThe VGG network is used in order to avoid a bias that might be caused by using f both for training the DTN and for evaluation. The results are reported in Tab. 4. As can be seen, the emoji generated by G are much more discriminative than the emoji created manually and obtain a median rank of 16 in cross-domain identification out of 105 distractors.\nMultiple Images Per Person We evaluate the visual quality that is obtained per person and not just per image, by testing DTN on the Facescrub dataset (Ng & Winkler, 2014). For each person p, we considered the set of their images Xp, and selected the emoji that was most similar to their\nsource image: argmin x∈Xp ||f(x)− f(G(x))|| (8)\nThis simple heuristic seems to work well in practice; The general problem of mapping a set X ⊂ S to a single output in T is left for future work. Fig. 2(b) contains several examples from the Facescrub dataset. For the complete set of identities, see Appendix A.\nTransferring both identity and expression We also experimented with multiple expressions. As it turns out the face identification network f encodes enough expression information to support a successful transfer of both identity as well as expression, see Appendix B.\nNetwork Visualization The obtained mapping g can serve as a visualization tool for studying the properties of the face representation. This is studied in Appendix D by computing the emoji generated for the standard basis of R256. The resulting images present a large amount of variability, indicating that g does not present a significant mode effect."
    }, {
      "heading" : "5.3 STYLE TRANSFER AS A SPECIFIC DOMAIN TRANSFER TASK",
      "text" : "Fig. 5(a-c) demonstrates that neural style transfer Gatys et al. (2016) cannot solve the photo to emoji transfer task in a convincing way. The output image is perhaps visually appealing; However, it does not belong to the space t of emoji. Our result are given in Fig. 5(d) for comparison. Note that DTN is able to fix the missing hair in the image.\nDomain transfer is more general than style transfer in the sense that we can perform style transfer using a DTN. In order to show this, we have transformed, using the method of Johnson et al. (2016), the training images of CelebA based on the style of a single image (shown in Fig. 5(e)). The original photos were used as the set s, and the transformed images were used as t. Applying DTN, using face representation f , we obtained styled face images such as the one shown in the figure 5(f)."
    }, {
      "heading" : "6 DISCUSSION AND LIMITATIONS",
      "text" : "Asymmetry is central to our work. Not only does our solution handle the two domains S and T differently, the function f is unlikely to be equally effective in both domains since in most practical cases, f would be trained on samples from one domain. While an explicit domain adaptation step can be added in order to make f more effective on the second domain, we found it to be unnecessary. Adaptation of f occurs implicitly due to the application of D downstream.\nUsing the same function f , we can replace the roles of the two domains, S and T . For example, we can synthesize an SVHN image that resembles a given MNIST image, or synthesize a face that matches an emoji. As expected, this yields less appealing results due to the asymmetric nature of f and the lower information content in these new source domains, see Appendix E.\nDomain transfer, as an unsupervised method, could prove useful across a wide variety of computational tasks. Here, we demonstrate the ability to use domain transfer in order to perform unsupervised domain adaptation. While this is currently only shown in a single experiment, the simplicity of performing domain adaptation and the fact that state of the art results were obtained effortlessly with a simple nearest neighbor classifier suggest it to be a promising direction for future research."
    }, {
      "heading" : "A FACESCRUB DATASET GENERATIONS",
      "text" : "In Fig. 6 we show the full set of identities of the Facescrub dataset, and their corresponding generated emoji."
    }, {
      "heading" : "B TRANSFERRING NON-IDENTITY DATA",
      "text" : "f may encode, in addition to identity, other data that is desirable to transfer. In the example of faces, this information might include expression, facial hair, glasses, pose, etc. In order to transfer such information, it is important that the set of samples in the target domain t present variability along the desirable dimensions. Otherwise, the GAN applied in the target domain (Eq. 4) would maintain these dimensions fixed. The set t employed throughout our experiments in Sec. 5.2 was constructed by sampling emoji of neutral expression. To support a smiling expression for example, we simply added to set t random smiling emoji and re-trained the DTN. The results, presented in Fig. 7, demonstrate that f contains expression information in addition to identity information, and that this information is enough in order to transfer smiling photos to smiling emoji."
    }, {
      "heading" : "C THE EFFECT OF SUPER-RESOLUTION",
      "text" : "As mentioned in Sec. 5, in order to upscale the 64× 64 output to print quality, the method of Dong et al. (2015) is used. Fig. 8 shows the effect of applying this postprocessing step."
    }, {
      "heading" : "D THE BASIS ELEMENTS OF THE FACE REPRESENTATION",
      "text" : "Fig. 9 depicts the face emoji generated by g for the standard basis of the face representation (Taigman et al., 2014), viewed as the vector space R256."
    }, {
      "heading" : "E DOMAIN TRANSFER IN THE REVERSE DIRECTION",
      "text" : "For completion, we present, in Fig. 10 results obtained by performing domain transfer using DTNs in the reverse direction of the one reported in Sec. 5."
    } ],
    "references" : [ {
      "title" : "Analysis of representations for domain adaptation",
      "author" : [ "Shai Ben-david", "John Blitzer", "Koby Crammer", "Fernando Pereira" ],
      "venue" : "In NIPS, pp",
      "citeRegEx" : "Ben.david et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Ben.david et al\\.",
      "year" : 2006
    }, {
      "title" : "Neural photo editing with introspective adversarial networks",
      "author" : [ "Andrew Brock", "Theodore Lim", "J.M. Nick Ritchie", "Weston" ],
      "venue" : "arXiv preprint arXiv:1609.07093,",
      "citeRegEx" : "Brock et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Brock et al\\.",
      "year" : 2016
    }, {
      "title" : "Marginalized denoising autoencoders for domain adaptation",
      "author" : [ "Minmin Chen", "Zhixiang Xu", "Kilian Weinberger", "Fei Sha" ],
      "venue" : "In ICML, pp",
      "citeRegEx" : "Chen et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2012
    }, {
      "title" : "Image super-resolution using deep convolutional networks",
      "author" : [ "Chao Dong", "Chen Change Loy", "Kaiming He", "Xiaoou Tang" ],
      "venue" : "arXiv preprint arXiv:1501.00092,",
      "citeRegEx" : "Dong et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Dong et al\\.",
      "year" : 2015
    }, {
      "title" : "Generating images with perceptual similarity metrics based on deep",
      "author" : [ "Alexey Dosovitskiy", "Thomas Brox" ],
      "venue" : "networks. CoRR,",
      "citeRegEx" : "Dosovitskiy and Brox.,? \\Q2016\\E",
      "shortCiteRegEx" : "Dosovitskiy and Brox.",
      "year" : 2016
    }, {
      "title" : "The Way We Think: Conceptual Blending and the Mind’s Hidden Complexities",
      "author" : [ "Gilles Fauconnier", "Mark Turner" ],
      "venue" : "Basic Books,",
      "citeRegEx" : "Fauconnier and Turner.,? \\Q2003\\E",
      "shortCiteRegEx" : "Fauconnier and Turner.",
      "year" : 2003
    }, {
      "title" : "Unsupervised visual domain adaptation using subspace alignment",
      "author" : [ "Basura Fernando", "Amaury Habrard", "Marc Sebban", "Tinne Tuytelaars" ],
      "venue" : "In ICCV, pp",
      "citeRegEx" : "Fernando et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Fernando et al\\.",
      "year" : 2013
    }, {
      "title" : "Domain-adversarial training of neural networks",
      "author" : [ "Yaroslav Ganin", "Evgeniya Ustinova", "Hana Ajakan", "Pascal Germain", "Hugo Larochelle", "François Laviolette", "Mario Marchand", "Victor Lempitsky" ],
      "venue" : null,
      "citeRegEx" : "Ganin et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Ganin et al\\.",
      "year" : 2016
    }, {
      "title" : "Image style transfer using convolutional neural networks",
      "author" : [ "Leon A. Gatys", "Alexander S. Ecker", "Matthias Bethge" ],
      "venue" : null,
      "citeRegEx" : "Gatys et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Gatys et al\\.",
      "year" : 2016
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Goodfellow et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Goodfellow et al\\.",
      "year" : 2014
    }, {
      "title" : "Perceptual losses for real-time style transfer and super-resolution",
      "author" : [ "Justin Johnson", "Alexandre Alahi", "Li Fei-Fei" ],
      "venue" : "In ECCV,",
      "citeRegEx" : "Johnson et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Johnson et al\\.",
      "year" : 2016
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "D.P. Kingma", "J. Ba" ],
      "venue" : "In The International Conference on Learning Representations (ICLR),",
      "citeRegEx" : "Kingma and Ba.,? \\Q2016\\E",
      "shortCiteRegEx" : "Kingma and Ba.",
      "year" : 2016
    }, {
      "title" : "State of the “art”: A taxonomy of artistic stylization techniques for images and video",
      "author" : [ "J.E. Kyprianidis", "J. Collomosse", "T. Wang", "T. Isenberg" ],
      "venue" : "IEEE Transactions on Visualization and Computer Graphics,",
      "citeRegEx" : "Kyprianidis et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Kyprianidis et al\\.",
      "year" : 2013
    }, {
      "title" : "URL http://yann",
      "author" : [ "Yann LeCun", "Corinna Cortes. MNIST handwritten digit database." ],
      "venue" : "lecun.com/exdb/mnist/.",
      "citeRegEx" : "LeCun and database.,? 2010",
      "shortCiteRegEx" : "LeCun and database.",
      "year" : 2010
    }, {
      "title" : "Understanding deep image representations by inverting them",
      "author" : [ "A. Mahendran", "A. Vedaldi" ],
      "venue" : "In CVPR,",
      "citeRegEx" : "Mahendran and Vedaldi.,? \\Q2015\\E",
      "shortCiteRegEx" : "Mahendran and Vedaldi.",
      "year" : 2015
    }, {
      "title" : "Conditional generative adversarial nets",
      "author" : [ "Mehdi Mirza", "Simon Osindero" ],
      "venue" : "arXiv preprint arXiv:1411.1784,",
      "citeRegEx" : "Mirza and Osindero.,? \\Q2014\\E",
      "shortCiteRegEx" : "Mirza and Osindero.",
      "year" : 2014
    }, {
      "title" : "Reading digits in natural images with unsupervised feature learning",
      "author" : [ "Yuval Netzer", "Tao Wang", "Adam Coates", "Alessandro Bissacco", "Bo Wu", "Andrew Y. Ng" ],
      "venue" : "In NIPS Workshop on Deep Learning and Unsupervised Feature Learning,",
      "citeRegEx" : "Netzer et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Netzer et al\\.",
      "year" : 2011
    }, {
      "title" : "A data-driven approach to cleaning large face datasets",
      "author" : [ "H.W. Ng", "S. Winkler" ],
      "venue" : "In Proc. IEEE International Conference on Image Processing (ICIP),",
      "citeRegEx" : "Ng and Winkler.,? \\Q2014\\E",
      "shortCiteRegEx" : "Ng and Winkler.",
      "year" : 2014
    }, {
      "title" : "Deep face recognition",
      "author" : [ "O.M. Parkhi", "A. Vedaldi", "A. Zisserman" ],
      "venue" : "In British Machine Vision Conference,",
      "citeRegEx" : "Parkhi et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Parkhi et al\\.",
      "year" : 2015
    }, {
      "title" : "Unsupervised representation learning with deep convolutional generative adversarial networks",
      "author" : [ "Alec Radford", "Luke Metz", "Soumith Chintala" ],
      "venue" : "arXiv preprint arXiv:1511.06434,",
      "citeRegEx" : "Radford et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Radford et al\\.",
      "year" : 2015
    }, {
      "title" : "Generative adversarial text to image synthesis",
      "author" : [ "Scott Reed", "Zeynep Akata", "Xinchen Yan", "Lajanugen Logeswaran", "Bernt Schiele", "Honglak Lee" ],
      "venue" : null,
      "citeRegEx" : "Reed et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Reed et al\\.",
      "year" : 2016
    }, {
      "title" : "Nonlinear total variation based noise removal algorithms",
      "author" : [ "Leonid I. Rudin", "Stanley Osher", "Emad Fatemi" ],
      "venue" : "In International Conference of the Center for Nonlinear Studies on Experimental Mathematics : Computational Issues in Nonlinear Science,",
      "citeRegEx" : "Rudin et al\\.,? \\Q1992\\E",
      "shortCiteRegEx" : "Rudin et al\\.",
      "year" : 1992
    }, {
      "title" : "Improved techniques for training gans",
      "author" : [ "Tim Salimans", "Ian J. Goodfellow", "Wojciech Zaremba", "Vicki Cheung", "Alec Radford", "Xi Chen" ],
      "venue" : "arXiv preprint arXiv:1606.03498,",
      "citeRegEx" : "Salimans et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Salimans et al\\.",
      "year" : 2016
    }, {
      "title" : "Deepface: Closing the gap to human-level performance in face verification",
      "author" : [ "Yaniv Taigman", "Ming Yang", "Marc’Aurelio Ranzato", "Lior Wolf" ],
      "venue" : "In CVPR,",
      "citeRegEx" : "Taigman et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Taigman et al\\.",
      "year" : 2014
    }, {
      "title" : "Texture networks: Feed-forward synthesis of textures and stylized images",
      "author" : [ "D. Ulyanov", "V. Lebedev", "A. Vedaldi", "V. Lempitsky" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Ulyanov et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Ulyanov et al\\.",
      "year" : 2016
    }, {
      "title" : "From facial parts responses to face detection: A deep learning approach",
      "author" : [ "Shuo Yang", "Ping Luo", "Chen Change Loy", "Xiaoou Tang" ],
      "venue" : "In ICCV,",
      "citeRegEx" : "Yang et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Yang et al\\.",
      "year" : 2015
    }, {
      "title" : "Inverting face embeddings with convolutional neural networks",
      "author" : [ "Andrey Zhmoginov", "Mark Sandler" ],
      "venue" : "arXiv preprint arXiv:1606.04189,",
      "citeRegEx" : "Zhmoginov and Sandler.,? \\Q2016\\E",
      "shortCiteRegEx" : "Zhmoginov and Sandler.",
      "year" : 2016
    } ],
    "referenceMentions" : [ {
      "referenceID" : 9,
      "context" : "GAN (Goodfellow et al., 2014) methods train a generator network G that synthesizes samples from a target distribution given noise vectors.",
      "startOffset" : 4,
      "endOffset" : 29
    }, {
      "referenceID" : 22,
      "context" : "There has recently been a growing concern about the uneven distribution of the samples generated by G – that they tend to cluster around a set of modes in the target domain (Salimans et al., 2016).",
      "startOffset" : 173,
      "endOffset" : 196
    }, {
      "referenceID" : 20,
      "context" : "A few contributions (“Conditional GANs”) have employed GANs in order to generate samples from a specific class (Mirza & Osindero, 2014), or even based on a textual description (Reed et al., 2016).",
      "startOffset" : 176,
      "endOffset" : 195
    }, {
      "referenceID" : 20,
      "context" : "This is modeled as a ternary discriminative function D (Reed et al., 2016; Brock et al., 2016).",
      "startOffset" : 55,
      "endOffset" : 94
    }, {
      "referenceID" : 1,
      "context" : "This is modeled as a ternary discriminative function D (Reed et al., 2016; Brock et al., 2016).",
      "startOffset" : 55,
      "endOffset" : 94
    }, {
      "referenceID" : 8,
      "context" : "While initially style transfer was obtained by a slow optimization process (Gatys et al., 2016), recently, the emphasis was put on feed-forward methods (Ulyanov et al.",
      "startOffset" : 75,
      "endOffset" : 95
    }, {
      "referenceID" : 24,
      "context" : ", 2016), recently, the emphasis was put on feed-forward methods (Ulyanov et al., 2016; Johnson et al., 2016).",
      "startOffset" : 64,
      "endOffset" : 108
    }, {
      "referenceID" : 10,
      "context" : ", 2016), recently, the emphasis was put on feed-forward methods (Ulyanov et al., 2016; Johnson et al., 2016).",
      "startOffset" : 64,
      "endOffset" : 108
    }, {
      "referenceID" : 5,
      "context" : "Formally, Ganin et al. (2016) linked the GAN loss to the H-divergence between two distributions of Ben-david et al.",
      "startOffset" : 10,
      "endOffset" : 30
    }, {
      "referenceID" : 0,
      "context" : "(2016) linked the GAN loss to the H-divergence between two distributions of Ben-david et al. (2006). The generative architecture that we employ is based on the successful architecture of Radford et al.",
      "startOffset" : 76,
      "endOffset" : 100
    }, {
      "referenceID" : 0,
      "context" : "(2016) linked the GAN loss to the H-divergence between two distributions of Ben-david et al. (2006). The generative architecture that we employ is based on the successful architecture of Radford et al. (2015). There has recently been a growing concern about the uneven distribution of the samples generated by G – that they tend to cluster around a set of modes in the target domain (Salimans et al.",
      "startOffset" : 76,
      "endOffset" : 209
    }, {
      "referenceID" : 0,
      "context" : "(2016) linked the GAN loss to the H-divergence between two distributions of Ben-david et al. (2006). The generative architecture that we employ is based on the successful architecture of Radford et al. (2015). There has recently been a growing concern about the uneven distribution of the samples generated by G – that they tend to cluster around a set of modes in the target domain (Salimans et al., 2016). In general, we do not observe such an effect in our results, due to the requirement to generate samples that satisfy specific f -constancy criteria. A few contributions (“Conditional GANs”) have employed GANs in order to generate samples from a specific class (Mirza & Osindero, 2014), or even based on a textual description (Reed et al., 2016). When performing such conditioning, one can distinguish between samples that were correctly generated but fail to match the conditional constraint and samples that were not correctly generated. This is modeled as a ternary discriminative function D (Reed et al., 2016; Brock et al., 2016). The recent work by Dosovitskiy & Brox (2016), has shown promising results for learning to map embeddings to their pre-images, given input-target pairs.",
      "startOffset" : 76,
      "endOffset" : 1088
    }, {
      "referenceID" : 2,
      "context" : "Unsupervised domain adaptation addresses the following problem: given a labeled training set in S × Y , for some target space Y , and an unlabeled set of samples from domain T , learn a function h : T → Y (Chen et al., 2012; Ganin et al., 2016).",
      "startOffset" : 205,
      "endOffset" : 244
    }, {
      "referenceID" : 7,
      "context" : "Unsupervised domain adaptation addresses the following problem: given a labeled training set in S × Y , for some target space Y , and an unlabeled set of samples from domain T , learn a function h : T → Y (Chen et al., 2012; Ganin et al., 2016).",
      "startOffset" : 205,
      "endOffset" : 244
    }, {
      "referenceID" : 10,
      "context" : "In the computer vision literature, work has been done to automatically generate sketches from images, see Kyprianidis et al. (2013) for a survey.",
      "startOffset" : 106,
      "endOffset" : 132
    }, {
      "referenceID" : 2,
      "context" : "Unsupervised domain adaptation addresses the following problem: given a labeled training set in S × Y , for some target space Y , and an unlabeled set of samples from domain T , learn a function h : T → Y (Chen et al., 2012; Ganin et al., 2016). One can solve the sample transfer problem (our problem) using domain adaptation and vice versa. In both cases, the solution is indirect. In order to solve domain adaptation using domain transfer, one would learn a function from S to Y and use it as the input method of the domain transfer algorithm in order to obtain a map from S to T 1. The training samples could then be transferred to T and used to learn a classifier there. In the other direction, given the function f , one can invert f in the domain T by generating training samples (f(x), x) for x ∈ T and learn from them a function h from f(T ) = {f(x)|x ∈ T} to T . Domain adaptation can then be used in order to map f(S) = {f(x)|x ∈ S} to T , thus achieving domain transfer. Based on the work by Zhmoginov & Sandler (2016), we expect that h, even in the target domain of emoji, will be hard to learn, making this solution hypothetical at this point.",
      "startOffset" : 206,
      "endOffset" : 1030
    }, {
      "referenceID" : 21,
      "context" : "The last loss, LTV is an anisotropic total variation loss (Rudin et al., 1992; Mahendran & Vedaldi, 2015), which is added in order to slightly smooth the resulting image.",
      "startOffset" : 58,
      "endOffset" : 105
    }, {
      "referenceID" : 16,
      "context" : "In the first domain, we transfer images from the Street View House Number (SVHN) dataset of Netzer et al. (2011) to the domain of the MNIST dataset by LeCun & Cortes (2010).",
      "startOffset" : 92,
      "endOffset" : 113
    }, {
      "referenceID" : 16,
      "context" : "In the first domain, we transfer images from the Street View House Number (SVHN) dataset of Netzer et al. (2011) to the domain of the MNIST dataset by LeCun & Cortes (2010). In",
      "startOffset" : 92,
      "endOffset" : 173
    }, {
      "referenceID" : 6,
      "context" : "SA Fernando et al. (2013) 59.",
      "startOffset" : 3,
      "endOffset" : 26
    }, {
      "referenceID" : 6,
      "context" : "SA Fernando et al. (2013) 59.32% DANN Ganin et al. (2016) 73.",
      "startOffset" : 3,
      "endOffset" : 58
    }, {
      "referenceID" : 19,
      "context" : "Network g, inspired by Radford et al. (2015), maps SVHN-trained f ’s 128D representations to 32× 32 grayscale images.",
      "startOffset" : 23,
      "endOffset" : 45
    }, {
      "referenceID" : 19,
      "context" : "Network g, inspired by Radford et al. (2015), maps SVHN-trained f ’s 128D representations to 32× 32 grayscale images. g employs four blocks of deconvolution, batch-normalization, and ReLU, with a hyperbolic tangent terminal. The architecture ofD consists of four batch-normalized convolutional layers and employs ReLU. See Radford et al. (2015) for more details on the networks architecture.",
      "startOffset" : 23,
      "endOffset" : 345
    }, {
      "referenceID" : 7,
      "context" : "2, which shows a clear advantage over the state of the art method of Ganin et al. (2016). This is true both when transferring the samples of the set s and when transferring the test set of SVHN, which is much smaller and was not seen during the training of the DTN.",
      "startOffset" : 69,
      "endOffset" : 89
    }, {
      "referenceID" : 22,
      "context" : "As the function f , we employ the representation layer of the DeepFace network Taigman et al. (2014). This representation is 256-dimensional and was trained on a labeled set of four million images that does not intersect the set s.",
      "startOffset" : 79,
      "endOffset" : 101
    }, {
      "referenceID" : 3,
      "context" : "In order to upscale the 64 × 64 output to print quality, we used the method of Dong et al. (2015), which was shown to work well on art.",
      "startOffset" : 79,
      "endOffset" : 98
    }, {
      "referenceID" : 25,
      "context" : "Comparison With Human Annotators For evaluation purposes only, a team of professional annotators manually created an emoji, using a web service, for 118 random images from the CelebA dataset (Yang et al., 2015).",
      "startOffset" : 191,
      "endOffset" : 210
    }, {
      "referenceID" : 18,
      "context" : "We then employed the VGG face CNN descriptor of Parkhi et al. (2015) in order to perform retrieval as follows.",
      "startOffset" : 48,
      "endOffset" : 69
    }, {
      "referenceID" : 8,
      "context" : "5(a-c) demonstrates that neural style transfer Gatys et al. (2016) cannot solve the photo to emoji transfer task in a convincing way.",
      "startOffset" : 47,
      "endOffset" : 67
    }, {
      "referenceID" : 8,
      "context" : "5(a-c) demonstrates that neural style transfer Gatys et al. (2016) cannot solve the photo to emoji transfer task in a convincing way. The output image is perhaps visually appealing; However, it does not belong to the space t of emoji. Our result are given in Fig. 5(d) for comparison. Note that DTN is able to fix the missing hair in the image. Domain transfer is more general than style transfer in the sense that we can perform style transfer using a DTN. In order to show this, we have transformed, using the method of Johnson et al. (2016), the training images of CelebA based on the style of a single image (shown in Fig.",
      "startOffset" : 47,
      "endOffset" : 544
    }, {
      "referenceID" : 8,
      "context" : "(c) The result of applying the style transfer method of Gatys et al. (2016). (d) The result of the emoji DTN.",
      "startOffset" : 56,
      "endOffset" : 76
    } ],
    "year" : 2017,
    "abstractText" : "We study the problem of transferring a sample in one domain to an analog sample in another domain. Given two related domains, S and T , we would like to learn a generative function G that maps an input sample from S to the domain T , such that the output of a given representation function f , which accepts inputs in either domains, would remain unchanged. Other than f , the training data is unsupervised and consist of a set of samples from each domain, without any mapping between them. The Domain Transfer Network (DTN) we present employs a compound loss function that includes a multiclass GAN loss, an f preserving component, and a regularizing component that encourages G to map samples from T to themselves. We apply our method to visual domains including digits and face images and demonstrate its ability to generate convincing novel images of previously unseen entities, while preserving their identity.",
    "creator" : "LaTeX with hyperref package"
  }
}