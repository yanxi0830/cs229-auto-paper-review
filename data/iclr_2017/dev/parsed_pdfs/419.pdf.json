{
  "name" : "419.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "TOPICRNN: A RECURRENT NEURAL NETWORK WITH LONG-RANGE SEMANTIC DEPENDENCY",
    "authors" : [ "Adji B. Dieng", "Chong Wang", "Jianfeng Gao" ],
    "emails" : [ "abd2141@columbia.edu", "chowang@microsoft.com", "jfgao@microsoft.com", "jpaisley@columbia.edu" ],
    "sections" : [ {
      "heading" : "1 INTRODUCTION",
      "text" : "When reading a document, short or long, humans have a mechanism that somehow allows them to remember the gist of what they have read so far. Consider the following example:\n“The U.S.presidential race isn’t only drawing attention and controversy in the United States – it’s being closely watched across the globe. But what does the rest of the world think about a campaign that has already thrown up one surprise after another? CNN asked 10 journalists for their take on the race so far, and what their country might be hoping for in America’s next —”\nThe missing word in the text above is easily predicted by any human to be either President or Commander in Chief or their synonyms. There have been various language models – from simple ngrams to the most recent RNN-based language models – that aim to solve this problem of predicting correctly the subsequent word in an observed sequence of words.\nA good language model should capture at least two important properties of natural language. The first one is correct syntax. In order to do prediction that enjoys this property, we often only need to consider a few preceding words. Therefore, correct syntax is more of a local property. Word order matters in this case. The second property is the semantic coherence of the prediction. To achieve\n∗Work was done while at Microsoft Research.\nthis, we often need to consider many preceding words to understand the global semantic meaning of the sentence or document. The ordering of the words usually matters much less in this case.\nBecause they only consider a fixed-size context window of preceding words, traditional n-gram and neural probabilistic language models (Bengio et al., 2003) have difficulties in capturing global semantic information. To overcome this, RNN-based language models (Mikolov et al., 2010; 2011) use hidden states to “remember” the history of a word sequence. However, none of these approaches explicitly model the two main properties of language mentioned above, correct syntax and semantic coherence. Previous work by Chelba and Jelinek (2000) and Gao et al. (2004) exploit syntactic or semantic parsers to capture long-range dependencies in language.\nIn this paper, we propose TopicRNN, a RNN-based language model that is designed to directly capture long-range semantic dependencies via latent topics. These topics provide context to the RNN. Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016). However, the models closest to ours are the contextual RNN model proposed by Mikolov and Zweig (2012) and its most recent extension to the long-short term memory (LSTM) architecture (Ghosh et al., 2016). These models use pre-trained topic model features as an additional input to the hidden states and/or the output of the RNN. In contrast, TopicRNN does not require pre-trained topic model features and can be learned in an end-to-end fashion. We introduce an automatic way for handling stop words that topic models usually have difficulty dealing with. Under a comparable model size set up, TopicRNN achieves better perplexity scores than the contextual RNN model of Mikolov and Zweig (2012) on the Penn TreeBank dataset 1. Moreover, TopicRNN can be used as an unsupervised feature extractor for downstream applications. For example, we derive document features of the IMDB movie review dataset using TopicRNN for sentiment classification. We reported an error rate of 6.28%. This is close to the state-of-the-art 5.91% (Miyato et al., 2016) despite that we do not use the labels and adversarial training in the feature extraction stage.\nThe remainder of the paper is organized as follows: Section 2 provides background on RNN-based language models and probabilistic topic models. Section 3 describes the TopicRNN network architecture, its generative process and how to perform inference for it. Section 4 presents per-word perplexity results on the Penn TreeBank dataset and the classification error rate on the IMDB 100K dataset. Finally, we conclude and provide future research directions in Section 5."
    }, {
      "heading" : "2 BACKGROUND",
      "text" : "We present the background necessary for building the TopicRNN model. We first review RNN-based language modeling, followed by a discussion on the construction of latent topic models."
    }, {
      "heading" : "2.1 RECURRENT NEURAL NETWORK-BASED LANGUAGE MODELS",
      "text" : "Language modeling is fundamental to many applications. Examples include speech recognition and machine translation. A language model is a probability distribution over a sequence of words in a predefined vocabulary. More formally, let V be a vocabulary set and y1, ..., yT a sequence of T words with each yt ∈ V . A language model measures the likelihood of a sequence through a joint probability distribution,\np(y1, ..., yT ) = p(y1) T∏ t=2 p(yt|y1:t−1).\nTraditional n-gram and feed-forward neural network language models (Bengio et al., 2003) typically make Markov assumptions about the sequential dependencies between words, where the chain rule shown above limits conditioning to a fixed-size context window.\nRNN-based language models (Mikolov et al., 2011) sidestep this Markov assumption by defining the conditional probability of each word yt given all the previous words y1:t−1 through a hidden\n1Ghosh et al. (2016) did not publish results on the PTB and we did not find the code online.\nstate ht (typically via a softmax function):\np(yt|y1:t−1) , p(yt|ht), ht = f(ht−1, xt).\nThe function f(·) can either be a standard RNN cell or a more complex cell such as GRU (Cho et al., 2014) or LSTM (Hochreiter and Schmidhuber, 1997). The input and target words are related via the relation xt ≡ yt−1. These RNN-based language models have been quite successful (Mikolov et al., 2011; Chelba et al., 2013; Jozefowicz et al., 2016).\nWhile in principle RNN-based models can “remember” arbitrarily long histories if provided enough capacity, in practice such large-scale neural networks can easily encounter difficulties during optimization (Bengio et al., 1994; Pascanu et al., 2013; Sutskever, 2013) or overfitting issues (Srivastava et al., 2014). Finding better ways to model long-range dependencies in language modeling is therefore an open research challenge. As motivated in the introduction, much of the long-range dependency in language comes from semantic coherence, not from syntactic structure which is more of a local phenomenon. Therefore, models that can capture long-range semantic dependencies in language are complementary to RNNs. In the following section, we describe a family of such models called probabilistic topic models."
    }, {
      "heading" : "2.2 PROBABILISTIC TOPIC MODELS",
      "text" : "Probabilistic topic models are a family of models that can be used to capture global semantic coherency (Blei and Lafferty, 2009). They provide a powerful tool for summarizing, organizing, and navigating document collections. One basic goal of such models is to find groups of words that tend to co-occur together in the same document. These groups of words are called topics and represent a probability distribution that puts most of its mass on this subset of the vocabulary. Documents are then represented as mixtures over these latent topics. Through posterior inference, the learned topics capture the semantic coherence of the words they cluster together (Mimno et al., 2011).\nThe simplest topic model is latent Dirichlet allocation (LDA) (Blei et al., 2003). It assumes K underlying topics β = {β1, . . . , βK} , each of which is a distribution over a fixed vocabulary. The generative process of LDA is as follows: First generate the K topics, βk ∼iid Dirichlet(τ). Then for each document containing words y1:T , independently generate document-level variables and data:\n1. Draw a document-specific topic proportion vector θ ∼ Dirichlet(α).\n2. For the tth word in the document,\n(a) Draw topic assignment zt ∼ Discrete(θ). (b) Draw word yt ∼ Discrete(βzt).\nMarginalizing each zt, we obtain the probability of y1:T via a matrix factorization followed by an integration over the latent variable θ,\np(y1:T |β) = ∫ p(θ) T∏ t=1 ∑ zt p(zt|θ)p(yt|zt, β)dθ = ∫ p(θ) T∏ t=1 (βθ)ytdθ. (1)\nIn LDA the prior distribution on the topic proportions is a Dirichlet distribution; it can be replaced by many other distributions. For example, the correlated topic model (Blei and Lafferty, 2006) uses a log-normal distribution. Most topic models are “bag of words” models in that word order is ignored. This makes it easier for topic models to capture global semantic information. However, this is also one of the reasons why topic models do not perform well on general-purpose language modeling applications such as word prediction. While bi-gram topic models have been proposed (Wallach, 2006), higher order models quickly become intractable.\nAnother issue encountered by topic models is that they do not model stop words well. This is because stop words usually do not carry semantic meaning; their appearance is mainly to make the sentence more readable according to the grammar of the language. They also appear frequently in\nalmost every document and can co-occur with almost any word2. In practice, these stop words are chosen using tf-idf (Blei and Lafferty, 2009)."
    }, {
      "heading" : "3 THE TOPICRNN MODEL",
      "text" : "We next describe the proposed TopicRNN model. In TopicRNN, latent topic models are used to capture global semantic dependencies so that the RNN can focus its modeling capacity on the local dynamics of the sequences. With this joint modeling, we hope to achieve better overall performance on downstream applications.\nThe model. TopicRNN is a generative model. For a document containing the words y1:T ,\n1. Draw a topic vector3 θ ∼ N(0, I). 2. Given word y1:t−1, for the tth word yt in the document,\n(a) Compute hidden state ht = fW (xt, ht−1), where we let xt , yt−1. (b) Draw stop word indicator lt ∼ Bernoulli(σ(Γ>ht)), with σ the sigmoid function. (c) Draw word yt ∼ p(yt|ht, θ, lt, B), where\np(yt = i|ht, θ, lt, B) ∝ exp ( v>i ht + (1− lt)b>i θ ) .\nThe stop word indicator lt controls how the topic vector θ affects the output. If lt = 1 (indicating yt is a stop word), the topic vector θ has no contribution to the output. Otherwise, we add a bias to favor those words that are more likely to appear when mixing with θ, as measured by the dot product between θ and the latent word vector bi for the ith vocabulary word. As we can see, the longrange semantic information captured by θ directly affects the output through an additive procedure. Unlike Mikolov and Zweig (2012), the contextual information is not passed to the hidden layer of the RNN. The main reason behind our choice of using the topic vector as bias instead of passing it into the hidden states of the RNN is because it enables us to have a clear separation of the contributions of global semantics and those of local dynamics. The global semantics come from the topics which are meaningful when stop words are excluded. However these stop words are needed for the local dynamics of the language model. We hence achieve this separation of global vs local via a binary decision model for the stop words. It is unclear how to achieve this if we pass the topics to the\n2Wallach et al. (2009) described using asymmetric priors to alleviate this issue. Although it is not clear how to use this idea in TopicRNN, we plan to investigate such priors in future work.\n3Instead of using the Dirichlet distribution, we choose the Gaussian distribution. This allows for more flexibility in the sequence prediction problem and also has advantages during inference.\nhidden states of the RNN. This is because the hidden states of the RNN will account for all words (including stop words) whereas the topics exclude stop words.\nWe show the unrolled graphical representation of TopicRNN in Figure 1(a). We denote all model parameters as Θ = {Γ, V, B,W,Wc} (see Appendix A.1 for more details). Parameter Wc is for the inference network, which we will introduce below. The observations are the word sequences y1:T and stop word indicators l1:T .4 The log marginal likelihood of the sequence y1:T is\nlog p(y1:T , l1:T |ht) = log ∫ p(θ) T∏ t=1 p(yt|ht, lt, θ)p(lt|ht)dθ. (2)\nModel inference. Direct optimization of Equation 2 is intractable so we use variational inference for approximating this marginal (Jordan et al., 1999). Let q(θ) be the variational distribution on the marginalized variable θ. We construct the variational objective function, also called the evidence lower bound (ELBO), as follows:\nL(y1:T , l1:T |q(θ),Θ) , Eq(θ) [ T∑ t=1 log p(yt|ht, lt, θ) + log p(lt|ht) + log p(θ)− log q(θ) ] ≤ log p(y1:T , l1:T |ht,Θ).\nFollowing the proposed variational autoencoder technique, we choose the form of q(θ) to be an inference network using a feed-forward neural network (Kingma and Welling, 2013; Miao et al., 2015). Let Xc ∈ N |Vc|+ be the term-frequency representation of y1:T excluding stop words (with Vc the vocabulary size without the stop words). The variational autoencoder inference network q(θ|Xc,Wc) with parameter Wc is a feed-forward neural network with ReLU activation units that projects Xc into a K-dimensional latent space. Specifically, we have\nq(θ|Xc,Wc) = N(θ;µ(Xc), diag(σ2(Xc))), µ(Xc) = W1g(Xc) + a1,\nlog σ(Xc) = W2g(Xc) + a2,\nwhere g(·) denotes the feed-forward neural network. The weight matrices W1, W2 and biases a1, a2 are shared across documents. Each document has its own µ(Xc) and σ(Xc) resulting in a unique distribution q(θ|Xc) for each document. The output of the inference network is a distribution on θ, which we regard as the summarization of the semantic information, similar to the topic proportions in latent topic models. We show the role of the inference network in Figure 1(b). During training, the parameters of the inference network and the model are jointly learned and updated via truncated backpropagation through time using the Adam algorithm (Kingma and Ba, 2014). We use stochastic samples from q(θ|Xc) and the reparameterization trick towards this end (Kingma and Welling, 2013; Rezende et al., 2014).\nGenerating sequential text and computing perplexity. Suppose we are given a word sequence y1:t−1, from which we have an initial estimation of q(θ|Xc). To generate the next word yt, we compute the probability distribution of yt given y1:t−1 in an online fashion. We choose θ to be a point estimate θ̂, the mean of its current distribution q(θ|Xc). Marginalizing over the stop word indicator lt which is unknown prior to observing yt, the approximate distribution of yt is\np(yt|y1:t−1) ≈ ∑ lt p(yt|ht, θ̂, lt)p(lt|ht).\nThe predicted word yt is a sample from this predictive distribution. We update q(θ|Xc) by including yt toXc if yt is not a stop word. However, updating q(θ|Xc) after each word prediction is expensive, so we use a sliding window as was done in Mikolov and Zweig (2012). To compute the perplexity, we use the approximate predictive distribution above.\nModel Complexity. TopicRNN has a complexity of O(H × H + H × (C + K) + Wc), where H is the size of the hidden layer of the RNN, C is the vocabulary size, K is the dimension of the topic vector, and Wc is the number of parameters of the inference network. The contextual RNN of Mikolov and Zweig (2012) accounts forO(H×H+H×(C+K)), not including the pre-training process, which might require more parameters than the additional Wc in our complexity.\n4Stop words can be determined using one of the several lists available online. For example, http://www. lextek.com/manuals/onix/stopwords2.html"
    }, {
      "heading" : "4 EXPERIMENTS",
      "text" : "We assess the performance of our proposed TopicRNN model on word prediction and sentiment analysis5. For word prediction we use the Penn TreeBank dataset, a standard benchmark for assessing new language models (Marcus et al., 1993). For sentiment analysis we use the IMDB 100k dataset (Maas et al., 2011), also a common benchmark dataset for this application6. We use RNN, LSTM, and GRU cells in our experiments leading to TopicRNN, TopicLSTM, and TopicGRU."
    }, {
      "heading" : "4.1 WORD PREDICTION",
      "text" : "We first tested TopicRNN on the word prediction task using the Penn Treebank (PTB) portion of the Wall Street Journal. We use the standard split, where sections 0-20 (930K tokens) are used for training, sections 21-22 (74K tokens) for validation, and sections 23-24 (82K tokens) for testing (Mikolov et al., 2010). We use a vocabulary of size 10K that includes the special token unk for rare words and eos that indicates the end of a sentence. TopicRNN takes documents as inputs. We split the PTB data into blocks of 10 sentences to constitute documents as done by (Mikolov and Zweig, 2012). The inference network takes as input the bag-of-words representation of the input document. For that reason, the vocabulary size of the inference network is reduced to 9551 after excluding 449 pre-defined stop words.\nIn order to compare with previous work on contextual RNNs we trained TopicRNN using different network sizes. We performed word prediction using a recurrent neural network with 10 neurons,\n5Our code will be made publicly available for reproducibility. 6These datasets are publicly available at http://www.fit.vutbr.cz/~imikolov/rnnlm/\nsimple-examples.tgz and http://ai.stanford.edu/~amaas/data/sentiment/.\n100 neurons and 300 neurons. For these experiments, we used a multilayer perceptron with 2 hidden layers and 200 hidden units per layer for the inference network. The number of topics was tuned depending on the size of the RNN. For 10 neurons we used 18 topics. For 100 and 300 neurons we found 50 topics to be optimal. We used the validation set to tune the hyperparameters of the model. We used a maximum of 15 epochs for the experiments and performed early stopping using the validation set. For comparison purposes we did not apply dropout and used 1 layer for the RNN and its counterparts in all the word prediction experiments as reported in Table 2. One epoch for 10 neurons takes 2.5 minutes. For 100 neurons, one epoch is completed in less than 4 minutes. Finally, for 300 neurons one epoch takes less than 6 minutes. These experiments were ran on Microsoft Azure NC12 that has 12 cores, 2 Tesla K80 GPUs, and 112 GB memory. First, we show five randomly drawn topics in Table 1. These results correspond to a network with 100 neurons. We also illustrate some inferred topic distributions for several documents from TopicGRU in Figure 2. Similar to standard topic models, these distributions are also relatively peaky.\nNext, we compare the performance of TopicRNN to our baseline contextual RNN using perplexity. Perplexity can be thought of as a measure of surprise for a language model. It is defined as the exponential of the average negative log likelihood. Table 2 summarizes the results for different network sizes. We learn three things from these tables. First, the perplexity is reduced the larger the network size. Second, RNNs with context features perform better than RNNs without context features. Third, we see that TopicRNN gives lower perplexity than the previous baseline result reported by Mikolov and Zweig (2012). Note that to compute these perplexity scores for word prediction we use a sliding window to compute θ as we move along the sequences. The topic vector θ that is used from the current batch of words is estimated from the previous batch of words. This enables fair comparison to previously reported results (Mikolov and Zweig, 2012).7\nAnother aspect of the TopicRNN model we studied is its capacity to generate coherent text. To do this, we randomly drew a document from the test set and used this document as seed input to the inference network to compute θ. Our expectation is that the topics contained in this seed document are reflected in the generated text. Table 3 shows generated text from models learned on the PTB and IMDB datasets. See Appendix A.3 for more examples.\n7We adjusted the scores in Table 2 from what was previously reported after correcting a bug in the computation of the ELBO."
    }, {
      "heading" : "4.2 SENTIMENT ANALYSIS",
      "text" : "We performed sentiment analysis using TopicRNN as a feature extractor on the IMDB 100K dataset. This data consists of 100,000 movie reviews from the Internet Movie Database (IMDB) website. The data is split into 75% for training and 25% for testing. Among the 75K training reviews, 50K are unlabelled and 25K are labelled as carrying either a positive or a negative sentiment. All 25K test reviews are labelled. We trained TopicRNN on 65K random training reviews and used the remaining 10K reviews for validation. To learn a classifier, we passed the 25K labelled training reviews through the learned TopicRNN model. We then concatenated the output of the inference network and the last state of the RNN for each of these 25K reviews to compute the feature vectors. We then used these feature vectors to train a neural network with one hidden layer, 50 hidden units, and a sigmoid activation function to predict sentiment, exactly as done in Le and Mikolov (2014).\nTo train the TopicRNN model, we used a vocabulary of size 5,000 and mapped all other words to the unk token. We took out 439 stop words to create the input of the inference network. We used 500 units and 2 layers for the inference network, and used 2 layers and 300 units per-layer for the\nRNN. We chose a step size of 5 and defined 200 topics. We did not use any regularization such as dropout. We trained the model for 13 epochs and used the validation set to tune the hyperparameters of the model and track perplexity for early stopping. This experiment took close to 78 hours on a MacBook pro quad-core with 16GHz of RAM. See Appendix A.4 for the visualization of some of the topics learned from this data.\nTable 4 summarizes sentiment classification results from TopicRNN and other methods. Our error rate is 6.28%.8 This is close to the state-of-the-art 5.91% (Miyato et al., 2016) despite that we do not use the labels and adversarial training in the feature extraction stage. Our approach is most similar to Le and Mikolov (2014), where the features were extracted in a unsupervised way and then a one-layer neural net was trained for classification.\nFigure 3 shows the ability of TopicRNN to cluster documents using the feature vectors as created during the sentiment analysis task. Reviews with positive sentiment are coloured in green while reviews carrying negative sentiment are shown in red. This shows that TopicRNN can be used as an unsupervised feature extractor for downstream applications. Table 3 shows generated text from models learned on the PTB and IMDB datasets. See Appendix A.3 for more examples. The overall generated text from IMDB encodes a negative sentiment."
    }, {
      "heading" : "5 DISCUSSION AND FUTURE WORK",
      "text" : "In this paper we introduced TopicRNN, a RNN-based language model that combines RNNs and latent topics to capture local (syntactic) and global (semantic) dependencies between words. The global dependencies as captured by the latent topics serve as contextual bias to an RNN-based language model. This contextual information is learned jointly with the RNN parameters by maximizing the evidence lower bound of variational inference. TopicRNN yields competitive per-word perplexity on the Penn Treebank dataset compared to previous contextual RNN models. We have reported a competitive classification error rate for sentiment analysis on the IMDB 100K dataset. We have also illustrated the capacity of TopicRNN to generate sensible topics and text. In future work, we will study the performance of TopicRNN when stop words are dynamically discovered during training. We will also extend TopicRNN to other applications where capturing context is important such as in dialog modeling. If successful, this will allow us to have a model that performs well across different natural language processing applications.\n8The experiments were solely based on TopicRNN. Experiments using TopicGRU/TopicLSTM are being carried out and will be added as an extended version of this paper."
    }, {
      "heading" : "A APPENDIX",
      "text" : "A.1 DIMENSION OF THE PARAMETERS OF THE MODEL:\nWe use the following notation: C is the vocabulary size (including stop words), H is the number of hidden units of the RNN, K is the number of topics, and E is the dimension of the inference network hidden layer. Table 5 gives the dimension of each of the parameters of the TopicRNN model (ignoring the biases).\nA.2 DOCUMENTS USED TO INFER THE DISTRIBUTIONS ON FIGURE 2\nFigure on the left: ’the’, ’market’, ’has’, ’grown’, ’relatively’, ’quiet’, ’since’, ’the’, ’china’, ’crisis’, ’but’, ’if’, ’the’, ’japanese’, ’return’, ’in’, ’force’, ’their’, ’financial’, ’might’, ’could’, ’compensate’, ’to’, ’some’, ’extent’, ’for’, ’local’, ’investors’, \"’\", ’<unk>’, ’commitment’, ’another’, ’and’, ’critical’, ’factor’, ’is’, ’the’, ’u.s.’, ’hong’, ’kong’, \"’s\", ’biggest’, ’export’, ’market’, ’even’, ’before’, ’the’, ’china’, ’crisis’, ’weak’, ’u.s.’, ’demand’, ’was’, ’slowing’, ’local’, ’economic’, ’growth’, ’<unk>’, ’strong’, ’consumer’, ’spending’, ’in’, ’the’, ’u.s.’, ’two’, ’years’, ’ago’, ’helped’, ’<unk>’, ’the’, ’local’, ’economy’, ’at’, ’more’, ’than’, ’twice’, ’its’, ’current’, ’rate’, ’indeed’, ’a’, ’few’, ’economists’, ’maintain’, ’that’, ’global’, ’forces’, ’will’, ’continue’, ’to’, ’govern’, ’hong’, ’kong’, \"’s\", ’economic’, ’<unk>’, ’once’, ’external’, ’conditions’, ’such’, ’as’, ’u.s.’, ’demand’, ’swing’, ’in’, ’the’, ’territory’, \"’s\", ’favor’, ’they’, ’argue’, ’local’, ’businessmen’, ’will’, ’probably’, ’overcome’, ’their’, ’N’, ’worries’, ’and’, ’continue’, ’doing’, ’business’, ’as’, ’usual’, ’but’, ’economic’, ’arguments’, ’however’, ’solid’, ’wo’, \"n’t\", ’necessarily’, ’<unk>’, ’hong’, ’kong’, \"’s\", ’N’, ’million’, ’people’, ’many’, ’are’, ’refugees’, ’having’, ’fled’, ’china’, \"’s\", ’<unk>’, ’cycles’, ’of’, ’political’, ’repression’, ’and’, ’poverty’, ’since’, ’the’, ’communist’, ’party’, ’took’, ’power’, ’in’, ’N’, ’as’, ’a’, ’result’, ’many’, ’of’, ’those’, ’now’, ’planning’, ’to’, ’leave’, ’hong’, ’kong’, ’ca’, \"n’t\", ’easily’, ’be’, ’<unk>’, ’by’, ’<unk>’, ’improvements’, ’in’, ’the’, ’colony’, \"’s\", ’political’, ’and’, ’economic’, ’climate’\nFigure on the middle: ’it’, ’said’, ’the’, ’man’, ’whom’, ’it’, ’did’, ’not’, ’name’, ’had’, ’been’, ’found’, ’to’, ’have’, ’the’, ’disease’, ’after’, ’hospital’, ’tests’, ’once’, ’the’, ’disease’, ’was’, ’confirmed’, ’all’, ’the’, ’man’, \"’s\", ’associates’, ’and’, ’family’, ’were’, ’tested’, ’but’, ’none’, ’have’, ’so’, ’far’, ’been’, ’found’, ’to’, ’have’, ’aids’, ’the’, ’newspaper’, ’said’, ’the’, ’man’, ’had’, ’for’, ’a’, ’long’, ’time’, ’had’, ’a’, ’chaotic’, ’sex’, ’life’, ’including’, ’relations’, ’with’, ’foreign’, ’men’, ’the’, ’newspaper’, ’said’, ’the’, ’polish’, ’government’, ’increased’, ’home’, ’electricity’, ’charges’, ’by’, ’N’, ’N’, ’and’, ’doubled’, ’gas’, ’prices’, ’the’, ’official’, ’news’, ’agency’, ’<unk>’, ’said’, ’the’, ’increases’, ’were’, ’intended’, ’to’, ’bring’, ’<unk>’, ’low’, ’energy’, ’charges’, ’into’, ’line’, ’with’, ’production’, ’costs’, ’and’, ’compensate’, ’for’, ’a’, ’rise’, ’in’, ’coal’, ’prices’, ’in’, ’<unk>’, ’news’, ’south’, ’korea’, ’in’, ’establishing’, ’diplomatic’, ’ties’, ’with’, ’poland’, ’yesterday’, ’announced’, ’$’, ’N’, ’million’, ’in’, ’loans’, ’to’, ’the’, ’financially’, ’strapped’, ’warsaw’, ’government’, ’in’, ’a’, ’victory’, ’for’, ’environmentalists’, ’hungary’, \"’s\", ’parliament’, ’terminated’, ’a’, ’multibillion-dollar’, ’river’, ’<unk>’, ’dam’, ’being’, ’built’, ’by’, ’<unk>’, ’firms’, ’the’, ’<unk>’, ’dam’, ’was’, ’designed’, ’to’, ’be’, ’<unk>’, ’with’, ’another’, ’dam’, ’now’, ’nearly’, ’complete’, ’N’, ’miles’, ’<unk>’, ’in’, ’czechoslovakia’, ’in’, ’ending’, ’hungary’, \"’s\", ’part’, ’of’, ’the’, ’project’, ’parliament’, ’authorized’, ’prime’, ’minister’, ’<unk>’, ’<unk>’, ’to’, ’modify’, ’a’, ’N’, ’agreement’, ’with’, ’czechoslovakia’, ’which’, ’still’, ’wants’, ’the’, ’dam’, ’to’, ’be’, ’built’, ’mr.’, ’<unk>’, ’said’, ’in’, ’parliament’, ’that’, ’czechoslovakia’, ’and’, ’hungary’, ’would’, ’suffer’, ’environmental’, ’damage’, ’if’, ’the’, ’<unk>’, ’<unk>’, ’were’, ’built’, ’as’, ’planned’\nFigure on the right: ’in’, ’hartford’, ’conn.’, ’the’, ’charter’, ’oak’, ’bridge’, ’will’, ’soon’, ’be’, ’replaced’, ’the’, ’<unk>’, ’<unk>’, ’from’, ’its’, ’<unk>’, ’<unk>’, ’to’, ’a’, ’park’, ’<unk>’, ’are’, ’possible’, ’citizens’, ’in’, ’peninsula’, ’ohio’, ’upset’, ’over’, ’changes’, ’to’, ’a’, ’bridge’, ’negotiated’, ’a’, ’deal’, ’the’, ’bottom’, ’half’, ’of’, ’the’, ’<unk>’, ’will’, ’be’, ’type’, ’f’, ’while’, ’the’, ’top’, ’half’, ’will’, ’have’, ’the’, ’old’, ’bridge’, \"’s\", ’<unk>’, ’pattern’, ’similarly’, ’highway’, ’engineers’, ’agreed’, ’to’, ’keep’, ’the’, ’old’, ’<unk>’, ’on’, ’the’, ’key’, ’bridge’, ’in’, ’washington’, ’d.c.’, ’as’, ’long’, ’as’, ’they’, ’could’, ’install’, ’a’, ’crash’, ’barrier’, ’between’, ’the’, ’sidewalk’, ’and’, ’the’, ’road’, ’<unk>’, ’<unk>’, ’drink’, ’carrier’, ’competes’, ’with’, ’<unk>’, ’<unk>’, ’<unk>’, ’just’, ’got’, ’easier’, ’or’, ’so’, ’claims’, ’<unk>’, ’corp.’, ’the’, ’maker’, ’of’, ’the’, ’<unk>’, ’the’, ’chicago’, ’company’, \"’s\", ’beverage’, ’carrier’, ’meant’, ’to’, ’replace’, ’<unk>’, ’<unk>’, ’at’, ’<unk>’, ’stands’, ’and’, ’fast-food’, ’outlets’, ’resembles’, ’the’, ’plastic’, ’<unk>’, ’used’, ’on’, ’<unk>’, ’of’, ’beer’, ’only’, ’the’, ’<unk>’, ’hang’, ’from’, ’a’, ’<unk>’, ’of’, ’<unk>’, ’the’, ’new’, ’carrier’, ’can’, ’<unk>’, ’as’, ’many’, ’as’, ’four’, ’<unk>’, ’at’, ’once’, ’inventor’, ’<unk>’, ’marvin’, ’says’, ’his’, ’design’, ’virtually’, ’<unk>’, ’<unk>’\nA.3 MORE GENERATED TEXT FROM THE MODEL:\nWe illustrate below some generated text resulting from training TopicRNN on the PTB dataset. Here we used 50 neurons and 100 topics:\nText1: but the refcorp bond fund might have been unk and unk of the point rate eos house in national unk wall restraint in the property pension fund sold willing to zenith was guaranteed by $ N million at short-term rates maturities around unk products eos deposit posted yields slightly\nText2: it had happened by the treasury ’s clinical fund month were under national disappear institutions but secretary nicholas instruments succeed eos and investors age far compound average new york stock exchange bonds typically sold $ N shares in the N but paying yields further an average rate of long-term funds\nWe illustrate below some generated text resulting from training TopicRNN on the IMDB dataset. The settings are the same as for the sentiment analysis experiment:\nthe film ’s greatest unk unk and it will likely very nice movies to go to unk why various david proves eos the story were always well scary friend high can be a very strange unk unk is in love with it lacks even perfect for unk for some of the worst movies come on a unk gave a rock unk eos whatever let ’s possible eos that kyle can ’t different reasons about the unk and was not what you ’re not a fan of unk unk us rock which unk still in unk ’s music unk one as\nA.4 TOPICS FROM IMDB:\nBelow we show some topics resulting from the sentiment analysis on the IMDB dataset. The total number of topics is 200. Note here all the topics turn around movies which is expected since all reviews are about movies."
    } ],
    "references" : [ {
      "title" : "Learning long-term dependencies with gradient descent is difficult",
      "author" : [ "Y. Bengio", "P. Simard", "P. Frasconi" ],
      "venue" : "IEEE transactions on neural networks,",
      "citeRegEx" : "Bengio et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Bengio et al\\.",
      "year" : 1994
    }, {
      "title" : "A neural probabilistic language model",
      "author" : [ "Y. Bengio", "R. Ducharme", "P. Vincent", "C. Jauvin" ],
      "venue" : "journal of machine learning research,",
      "citeRegEx" : "Bengio et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Bengio et al\\.",
      "year" : 2003
    }, {
      "title" : "Correlated topic models",
      "author" : [ "D. Blei", "J. Lafferty" ],
      "venue" : "Advances in neural information processing systems,",
      "citeRegEx" : "Blei and Lafferty.,? \\Q2006\\E",
      "shortCiteRegEx" : "Blei and Lafferty.",
      "year" : 2006
    }, {
      "title" : "Latent dirichlet allocation",
      "author" : [ "D.M. Blei", "A.Y. Ng", "M.I. Jordan" ],
      "venue" : "Journal of machine Learning research,",
      "citeRegEx" : "Blei et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Blei et al\\.",
      "year" : 2003
    }, {
      "title" : "Structured language modeling",
      "author" : [ "C. Chelba", "F. Jelinek" ],
      "venue" : "Computer Speech & Language,",
      "citeRegEx" : "Chelba and Jelinek.,? \\Q2000\\E",
      "shortCiteRegEx" : "Chelba and Jelinek.",
      "year" : 2000
    }, {
      "title" : "One billion word benchmark for measuring progress in statistical language modeling",
      "author" : [ "C. Chelba", "T. Mikolov", "M. Schuster", "Q. Ge", "T. Brants", "P. Koehn", "T. Robinson" ],
      "venue" : "arXiv preprint arXiv:1312.3005,",
      "citeRegEx" : "Chelba et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Chelba et al\\.",
      "year" : 2013
    }, {
      "title" : "Learning phrase representations using rnn encoder-decoder for statistical machine translation",
      "author" : [ "K. Cho", "B. Van Merriënboer", "C. Gulcehre", "D. Bahdanau", "F. Bougares", "H. Schwenk", "Y. Bengio" ],
      "venue" : "arXiv preprint arXiv:1406.1078,",
      "citeRegEx" : "Cho et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Cho et al\\.",
      "year" : 2014
    }, {
      "title" : "Semi-supervised sequence learning",
      "author" : [ "A.M. Dai", "Q.V. Le" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Dai and Le.,? \\Q2015\\E",
      "shortCiteRegEx" : "Dai and Le.",
      "year" : 2015
    }, {
      "title" : "Dependence language model for information retrieval",
      "author" : [ "J. Gao", "J.-Y. Nie", "G. Wu", "G. Cao" ],
      "venue" : "In Proceedings of the 27th annual international ACM SIGIR conference on Research and development in information retrieval,",
      "citeRegEx" : "Gao et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Gao et al\\.",
      "year" : 2004
    }, {
      "title" : "Contextual lstm (clstm) models for large scale nlp tasks",
      "author" : [ "S. Ghosh", "O. Vinyals", "B. Strope", "S. Roy", "T. Dean", "L. Heck" ],
      "venue" : "arXiv preprint arXiv:1602.06291,",
      "citeRegEx" : "Ghosh et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Ghosh et al\\.",
      "year" : 2016
    }, {
      "title" : "Long short-term memory",
      "author" : [ "S. Hochreiter", "J. Schmidhuber" ],
      "venue" : "Neural computation,",
      "citeRegEx" : "Hochreiter and Schmidhuber.,? \\Q1997\\E",
      "shortCiteRegEx" : "Hochreiter and Schmidhuber.",
      "year" : 1997
    }, {
      "title" : "Document context language models",
      "author" : [ "Y. Ji", "T. Cohn", "L. Kong", "C. Dyer", "J. Eisenstein" ],
      "venue" : "arXiv preprint arXiv:1511.03962,",
      "citeRegEx" : "Ji et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Ji et al\\.",
      "year" : 2015
    }, {
      "title" : "A latent variable recurrent neural network for discourse relation language models",
      "author" : [ "Y. Ji", "G. Haffari", "J. Eisenstein" ],
      "venue" : null,
      "citeRegEx" : "Ji et al\\.,? \\Q1913\\E",
      "shortCiteRegEx" : "Ji et al\\.",
      "year" : 1913
    }, {
      "title" : "An introduction to variational methods for graphical models",
      "author" : [ "M.I. Jordan", "Z. Ghahramani", "T.S. Jaakkola", "L.K. Saul" ],
      "venue" : "Machine learning,",
      "citeRegEx" : "Jordan et al\\.,? \\Q1999\\E",
      "shortCiteRegEx" : "Jordan et al\\.",
      "year" : 1999
    }, {
      "title" : "Exploring the limits of language modeling",
      "author" : [ "R. Jozefowicz", "O. Vinyals", "M. Schuster", "N. Shazeer", "Y. Wu" ],
      "venue" : "arXiv preprint arXiv:1602.02410,",
      "citeRegEx" : "Jozefowicz et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Jozefowicz et al\\.",
      "year" : 2016
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "D. Kingma", "J. Ba" ],
      "venue" : "arXiv preprint arXiv:1412.6980,",
      "citeRegEx" : "Kingma and Ba.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kingma and Ba.",
      "year" : 2014
    }, {
      "title" : "Auto-encoding variational bayes",
      "author" : [ "D.P. Kingma", "M. Welling" ],
      "venue" : "arXiv preprint arXiv:1312.6114,",
      "citeRegEx" : "Kingma and Welling.,? \\Q2013\\E",
      "shortCiteRegEx" : "Kingma and Welling.",
      "year" : 2013
    }, {
      "title" : "Distributed representations of sentences and documents",
      "author" : [ "Q.V. Le", "T. Mikolov" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Le and Mikolov.,? \\Q2014\\E",
      "shortCiteRegEx" : "Le and Mikolov.",
      "year" : 2014
    }, {
      "title" : "Hierarchical recurrent neural network for document modeling",
      "author" : [ "R. Lin", "S. Liu", "M. Yang", "M. Li", "M. Zhou", "S. Li" ],
      "venue" : "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,",
      "citeRegEx" : "Lin et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Lin et al\\.",
      "year" : 2015
    }, {
      "title" : "Learning word vectors for sentiment analysis",
      "author" : [ "A.L. Maas", "R.E. Daly", "P.T. Pham", "D. Huang", "A.Y. Ng", "C. Potts" ],
      "venue" : "In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies-Volume",
      "citeRegEx" : "Maas et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Maas et al\\.",
      "year" : 2011
    }, {
      "title" : "Building a large annotated corpus of english: The penn treebank",
      "author" : [ "M.P. Marcus", "M.A. Marcinkiewicz", "B. Santorini" ],
      "venue" : "Computational linguistics,",
      "citeRegEx" : "Marcus et al\\.,? \\Q1993\\E",
      "shortCiteRegEx" : "Marcus et al\\.",
      "year" : 1993
    }, {
      "title" : "Neural variational inference for text processing",
      "author" : [ "Y. Miao", "L. Yu", "P. Blunsom" ],
      "venue" : "arXiv preprint arXiv:1511.06038,",
      "citeRegEx" : "Miao et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Miao et al\\.",
      "year" : 2015
    }, {
      "title" : "Context dependent recurrent neural network language model",
      "author" : [ "T. Mikolov", "G. Zweig" ],
      "venue" : "In SLT,",
      "citeRegEx" : "Mikolov and Zweig.,? \\Q2012\\E",
      "shortCiteRegEx" : "Mikolov and Zweig.",
      "year" : 2012
    }, {
      "title" : "Recurrent neural network based language model",
      "author" : [ "T. Mikolov", "M. Karafiát", "L. Burget", "J. Cernockỳ", "S. Khudanpur" ],
      "venue" : "In Interspeech,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2010
    }, {
      "title" : "Extensions of recurrent neural network language model",
      "author" : [ "T. Mikolov", "S. Kombrink", "L. Burget", "J. Černockỳ", "S. Khudanpur" ],
      "venue" : "In 2011 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP),",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2011
    }, {
      "title" : "Learning longer memory in recurrent neural networks",
      "author" : [ "T. Mikolov", "A. Joulin", "S. Chopra", "M. Mathieu", "M. Ranzato" ],
      "venue" : "arXiv preprint arXiv:1412.7753,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2014
    }, {
      "title" : "Optimizing semantic coherence in topic models",
      "author" : [ "D. Mimno", "H.M. Wallach", "E. Talley", "M. Leenders", "A. McCallum" ],
      "venue" : "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,",
      "citeRegEx" : "Mimno et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Mimno et al\\.",
      "year" : 2011
    }, {
      "title" : "Adversarial training methods for semi-supervised text classification",
      "author" : [ "T. Miyato", "A.M. Dai", "I. Goodfellow" ],
      "venue" : null,
      "citeRegEx" : "Miyato et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Miyato et al\\.",
      "year" : 2016
    }, {
      "title" : "On the difficulty of training recurrent neural networks",
      "author" : [ "R. Pascanu", "T. Mikolov", "Y. Bengio" ],
      "venue" : "ICML (3),",
      "citeRegEx" : "Pascanu et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Pascanu et al\\.",
      "year" : 2013
    }, {
      "title" : "Stochastic backpropagation and approximate inference in deep generative models",
      "author" : [ "D.J. Rezende", "S. Mohamed", "D. Wierstra" ],
      "venue" : "arXiv preprint arXiv:1401.4082,",
      "citeRegEx" : "Rezende et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Rezende et al\\.",
      "year" : 2014
    }, {
      "title" : "Dropout: a simple way to prevent neural networks from overfitting",
      "author" : [ "N. Srivastava", "G.E. Hinton", "A. Krizhevsky", "I. Sutskever", "R. Salakhutdinov" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Srivastava et al\\.,? \\Q1929\\E",
      "shortCiteRegEx" : "Srivastava et al\\.",
      "year" : 1929
    }, {
      "title" : "Training recurrent neural networks",
      "author" : [ "I. Sutskever" ],
      "venue" : "PhD thesis, University of Toronto,",
      "citeRegEx" : "Sutskever.,? \\Q2013\\E",
      "shortCiteRegEx" : "Sutskever.",
      "year" : 2013
    }, {
      "title" : "Topic modeling: beyond bag-of-words",
      "author" : [ "H.M. Wallach" ],
      "venue" : "In Proceedings of the 23rd international conference on Machine learning,",
      "citeRegEx" : "Wallach.,? \\Q2006\\E",
      "shortCiteRegEx" : "Wallach.",
      "year" : 2006
    }, {
      "title" : "Rethinking lda: Why priors matter. In Advances in neural information processing",
      "author" : [ "H.M. Wallach", "D.M. Mimno", "A. McCallum" ],
      "venue" : null,
      "citeRegEx" : "Wallach et al\\.,? \\Q1973\\E",
      "shortCiteRegEx" : "Wallach et al\\.",
      "year" : 1973
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "Because they only consider a fixed-size context window of preceding words, traditional n-gram and neural probabilistic language models (Bengio et al., 2003) have difficulties in capturing global semantic information.",
      "startOffset" : 135,
      "endOffset" : 156
    }, {
      "referenceID" : 23,
      "context" : "To overcome this, RNN-based language models (Mikolov et al., 2010; 2011) use hidden states to “remember” the history of a word sequence.",
      "startOffset" : 44,
      "endOffset" : 72
    }, {
      "referenceID" : 22,
      "context" : "Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016).",
      "startOffset" : 49,
      "endOffset" : 168
    }, {
      "referenceID" : 25,
      "context" : "Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016).",
      "startOffset" : 49,
      "endOffset" : 168
    }, {
      "referenceID" : 11,
      "context" : "Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016).",
      "startOffset" : 49,
      "endOffset" : 168
    }, {
      "referenceID" : 18,
      "context" : "Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016).",
      "startOffset" : 49,
      "endOffset" : 168
    }, {
      "referenceID" : 9,
      "context" : "Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016).",
      "startOffset" : 49,
      "endOffset" : 168
    }, {
      "referenceID" : 9,
      "context" : "However, the models closest to ours are the contextual RNN model proposed by Mikolov and Zweig (2012) and its most recent extension to the long-short term memory (LSTM) architecture (Ghosh et al., 2016).",
      "startOffset" : 182,
      "endOffset" : 202
    }, {
      "referenceID" : 27,
      "context" : "91% (Miyato et al., 2016) despite that we do not use the labels and adversarial training in the feature extraction stage.",
      "startOffset" : 4,
      "endOffset" : 25
    }, {
      "referenceID" : 0,
      "context" : "Because they only consider a fixed-size context window of preceding words, traditional n-gram and neural probabilistic language models (Bengio et al., 2003) have difficulties in capturing global semantic information. To overcome this, RNN-based language models (Mikolov et al., 2010; 2011) use hidden states to “remember” the history of a word sequence. However, none of these approaches explicitly model the two main properties of language mentioned above, correct syntax and semantic coherence. Previous work by Chelba and Jelinek (2000) and Gao et al.",
      "startOffset" : 136,
      "endOffset" : 540
    }, {
      "referenceID" : 0,
      "context" : "Because they only consider a fixed-size context window of preceding words, traditional n-gram and neural probabilistic language models (Bengio et al., 2003) have difficulties in capturing global semantic information. To overcome this, RNN-based language models (Mikolov et al., 2010; 2011) use hidden states to “remember” the history of a word sequence. However, none of these approaches explicitly model the two main properties of language mentioned above, correct syntax and semantic coherence. Previous work by Chelba and Jelinek (2000) and Gao et al. (2004) exploit syntactic or semantic parsers to capture long-range dependencies in language.",
      "startOffset" : 136,
      "endOffset" : 562
    }, {
      "referenceID" : 0,
      "context" : "Because they only consider a fixed-size context window of preceding words, traditional n-gram and neural probabilistic language models (Bengio et al., 2003) have difficulties in capturing global semantic information. To overcome this, RNN-based language models (Mikolov et al., 2010; 2011) use hidden states to “remember” the history of a word sequence. However, none of these approaches explicitly model the two main properties of language mentioned above, correct syntax and semantic coherence. Previous work by Chelba and Jelinek (2000) and Gao et al. (2004) exploit syntactic or semantic parsers to capture long-range dependencies in language. In this paper, we propose TopicRNN, a RNN-based language model that is designed to directly capture long-range semantic dependencies via latent topics. These topics provide context to the RNN. Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016). However, the models closest to ours are the contextual RNN model proposed by Mikolov and Zweig (2012) and its most recent extension to the long-short term memory (LSTM) architecture (Ghosh et al.",
      "startOffset" : 136,
      "endOffset" : 1113
    }, {
      "referenceID" : 0,
      "context" : "Because they only consider a fixed-size context window of preceding words, traditional n-gram and neural probabilistic language models (Bengio et al., 2003) have difficulties in capturing global semantic information. To overcome this, RNN-based language models (Mikolov et al., 2010; 2011) use hidden states to “remember” the history of a word sequence. However, none of these approaches explicitly model the two main properties of language mentioned above, correct syntax and semantic coherence. Previous work by Chelba and Jelinek (2000) and Gao et al. (2004) exploit syntactic or semantic parsers to capture long-range dependencies in language. In this paper, we propose TopicRNN, a RNN-based language model that is designed to directly capture long-range semantic dependencies via latent topics. These topics provide context to the RNN. Contextual RNNs have received a lot of attention (Mikolov and Zweig, 2012; Mikolov et al., 2014; Ji et al., 2015; Lin et al., 2015; Ji et al., 2016; Ghosh et al., 2016). However, the models closest to ours are the contextual RNN model proposed by Mikolov and Zweig (2012) and its most recent extension to the long-short term memory (LSTM) architecture (Ghosh et al., 2016). These models use pre-trained topic model features as an additional input to the hidden states and/or the output of the RNN. In contrast, TopicRNN does not require pre-trained topic model features and can be learned in an end-to-end fashion. We introduce an automatic way for handling stop words that topic models usually have difficulty dealing with. Under a comparable model size set up, TopicRNN achieves better perplexity scores than the contextual RNN model of Mikolov and Zweig (2012) on the Penn TreeBank dataset 1.",
      "startOffset" : 136,
      "endOffset" : 1705
    }, {
      "referenceID" : 1,
      "context" : "Traditional n-gram and feed-forward neural network language models (Bengio et al., 2003) typically make Markov assumptions about the sequential dependencies between words, where the chain rule shown above limits conditioning to a fixed-size context window.",
      "startOffset" : 67,
      "endOffset" : 88
    }, {
      "referenceID" : 24,
      "context" : "RNN-based language models (Mikolov et al., 2011) sidestep this Markov assumption by defining the conditional probability of each word yt given all the previous words y1:t−1 through a hidden",
      "startOffset" : 26,
      "endOffset" : 48
    }, {
      "referenceID" : 6,
      "context" : "The function f(·) can either be a standard RNN cell or a more complex cell such as GRU (Cho et al., 2014) or LSTM (Hochreiter and Schmidhuber, 1997).",
      "startOffset" : 87,
      "endOffset" : 105
    }, {
      "referenceID" : 10,
      "context" : ", 2014) or LSTM (Hochreiter and Schmidhuber, 1997).",
      "startOffset" : 16,
      "endOffset" : 50
    }, {
      "referenceID" : 24,
      "context" : "These RNN-based language models have been quite successful (Mikolov et al., 2011; Chelba et al., 2013; Jozefowicz et al., 2016).",
      "startOffset" : 59,
      "endOffset" : 127
    }, {
      "referenceID" : 5,
      "context" : "These RNN-based language models have been quite successful (Mikolov et al., 2011; Chelba et al., 2013; Jozefowicz et al., 2016).",
      "startOffset" : 59,
      "endOffset" : 127
    }, {
      "referenceID" : 14,
      "context" : "These RNN-based language models have been quite successful (Mikolov et al., 2011; Chelba et al., 2013; Jozefowicz et al., 2016).",
      "startOffset" : 59,
      "endOffset" : 127
    }, {
      "referenceID" : 0,
      "context" : "While in principle RNN-based models can “remember” arbitrarily long histories if provided enough capacity, in practice such large-scale neural networks can easily encounter difficulties during optimization (Bengio et al., 1994; Pascanu et al., 2013; Sutskever, 2013) or overfitting issues (Srivastava et al.",
      "startOffset" : 206,
      "endOffset" : 266
    }, {
      "referenceID" : 28,
      "context" : "While in principle RNN-based models can “remember” arbitrarily long histories if provided enough capacity, in practice such large-scale neural networks can easily encounter difficulties during optimization (Bengio et al., 1994; Pascanu et al., 2013; Sutskever, 2013) or overfitting issues (Srivastava et al.",
      "startOffset" : 206,
      "endOffset" : 266
    }, {
      "referenceID" : 31,
      "context" : "While in principle RNN-based models can “remember” arbitrarily long histories if provided enough capacity, in practice such large-scale neural networks can easily encounter difficulties during optimization (Bengio et al., 1994; Pascanu et al., 2013; Sutskever, 2013) or overfitting issues (Srivastava et al.",
      "startOffset" : 206,
      "endOffset" : 266
    }, {
      "referenceID" : 26,
      "context" : "Through posterior inference, the learned topics capture the semantic coherence of the words they cluster together (Mimno et al., 2011).",
      "startOffset" : 114,
      "endOffset" : 134
    }, {
      "referenceID" : 3,
      "context" : "The simplest topic model is latent Dirichlet allocation (LDA) (Blei et al., 2003).",
      "startOffset" : 62,
      "endOffset" : 81
    }, {
      "referenceID" : 2,
      "context" : "For example, the correlated topic model (Blei and Lafferty, 2006) uses a log-normal distribution.",
      "startOffset" : 40,
      "endOffset" : 65
    }, {
      "referenceID" : 32,
      "context" : "While bi-gram topic models have been proposed (Wallach, 2006), higher order models quickly become intractable.",
      "startOffset" : 46,
      "endOffset" : 61
    }, {
      "referenceID" : 22,
      "context" : "Unlike Mikolov and Zweig (2012), the contextual information is not passed to the hidden layer of the RNN.",
      "startOffset" : 7,
      "endOffset" : 32
    }, {
      "referenceID" : 13,
      "context" : "Direct optimization of Equation 2 is intractable so we use variational inference for approximating this marginal (Jordan et al., 1999).",
      "startOffset" : 113,
      "endOffset" : 134
    }, {
      "referenceID" : 16,
      "context" : "Following the proposed variational autoencoder technique, we choose the form of q(θ) to be an inference network using a feed-forward neural network (Kingma and Welling, 2013; Miao et al., 2015).",
      "startOffset" : 148,
      "endOffset" : 193
    }, {
      "referenceID" : 21,
      "context" : "Following the proposed variational autoencoder technique, we choose the form of q(θ) to be an inference network using a feed-forward neural network (Kingma and Welling, 2013; Miao et al., 2015).",
      "startOffset" : 148,
      "endOffset" : 193
    }, {
      "referenceID" : 15,
      "context" : "During training, the parameters of the inference network and the model are jointly learned and updated via truncated backpropagation through time using the Adam algorithm (Kingma and Ba, 2014).",
      "startOffset" : 171,
      "endOffset" : 192
    }, {
      "referenceID" : 16,
      "context" : "We use stochastic samples from q(θ|Xc) and the reparameterization trick towards this end (Kingma and Welling, 2013; Rezende et al., 2014).",
      "startOffset" : 89,
      "endOffset" : 137
    }, {
      "referenceID" : 29,
      "context" : "We use stochastic samples from q(θ|Xc) and the reparameterization trick towards this end (Kingma and Welling, 2013; Rezende et al., 2014).",
      "startOffset" : 89,
      "endOffset" : 137
    }, {
      "referenceID" : 22,
      "context" : "However, updating q(θ|Xc) after each word prediction is expensive, so we use a sliding window as was done in Mikolov and Zweig (2012). To compute the perplexity, we use the approximate predictive distribution above.",
      "startOffset" : 109,
      "endOffset" : 134
    }, {
      "referenceID" : 22,
      "context" : "However, updating q(θ|Xc) after each word prediction is expensive, so we use a sliding window as was done in Mikolov and Zweig (2012). To compute the perplexity, we use the approximate predictive distribution above. Model Complexity. TopicRNN has a complexity of O(H × H + H × (C + K) + Wc), where H is the size of the hidden layer of the RNN, C is the vocabulary size, K is the dimension of the topic vector, and Wc is the number of parameters of the inference network. The contextual RNN of Mikolov and Zweig (2012) accounts forO(H×H+H×(C+K)), not including the pre-training process, which might require more parameters than the additional Wc in our complexity.",
      "startOffset" : 109,
      "endOffset" : 518
    }, {
      "referenceID" : 20,
      "context" : "For word prediction we use the Penn TreeBank dataset, a standard benchmark for assessing new language models (Marcus et al., 1993).",
      "startOffset" : 109,
      "endOffset" : 130
    }, {
      "referenceID" : 19,
      "context" : "For sentiment analysis we use the IMDB 100k dataset (Maas et al., 2011), also a common benchmark dataset for this application6.",
      "startOffset" : 52,
      "endOffset" : 71
    }, {
      "referenceID" : 23,
      "context" : "We use the standard split, where sections 0-20 (930K tokens) are used for training, sections 21-22 (74K tokens) for validation, and sections 23-24 (82K tokens) for testing (Mikolov et al., 2010).",
      "startOffset" : 172,
      "endOffset" : 194
    }, {
      "referenceID" : 22,
      "context" : "We split the PTB data into blocks of 10 sentences to constitute documents as done by (Mikolov and Zweig, 2012).",
      "startOffset" : 85,
      "endOffset" : 110
    }, {
      "referenceID" : 22,
      "context" : "Table 2: TopicRNN and its counterparts exhibit lower perplexity scores across different network sizes than reported in Mikolov and Zweig (2012). Table 2a shows per-word perplexity scores for 10 neurons.",
      "startOffset" : 119,
      "endOffset" : 144
    }, {
      "referenceID" : 22,
      "context" : "This enables fair comparison to previously reported results (Mikolov and Zweig, 2012).",
      "startOffset" : 60,
      "endOffset" : 85
    }, {
      "referenceID" : 22,
      "context" : "Third, we see that TopicRNN gives lower perplexity than the previous baseline result reported by Mikolov and Zweig (2012). Note that to compute these perplexity scores for word prediction we use a sliding window to compute θ as we move along the sequences.",
      "startOffset" : 97,
      "endOffset" : 122
    }, {
      "referenceID" : 19,
      "context" : "Model Reported Error rate BoW (bnc) (Maas et al., 2011) 12.",
      "startOffset" : 36,
      "endOffset" : 55
    }, {
      "referenceID" : 19,
      "context" : "20% BoW (b∆ tć) (Maas et al., 2011) 11.",
      "startOffset" : 16,
      "endOffset" : 35
    }, {
      "referenceID" : 19,
      "context" : "77% LDA (Maas et al., 2011) 32.",
      "startOffset" : 8,
      "endOffset" : 27
    }, {
      "referenceID" : 19,
      "context" : "58% Full + BoW (Maas et al., 2011) 11.",
      "startOffset" : 15,
      "endOffset" : 34
    }, {
      "referenceID" : 19,
      "context" : "67% Full + Unlabelled + BoW (Maas et al., 2011) 11.",
      "startOffset" : 28,
      "endOffset" : 47
    }, {
      "referenceID" : 27,
      "context" : "24% Virtual Adversarial (Miyato et al. 2016) 5.",
      "startOffset" : 24,
      "endOffset" : 44
    }, {
      "referenceID" : 17,
      "context" : "We then used these feature vectors to train a neural network with one hidden layer, 50 hidden units, and a sigmoid activation function to predict sentiment, exactly as done in Le and Mikolov (2014). To train the TopicRNN model, we used a vocabulary of size 5,000 and mapped all other words to the unk token.",
      "startOffset" : 176,
      "endOffset" : 198
    }, {
      "referenceID" : 27,
      "context" : "91% (Miyato et al., 2016) despite that we do not use the labels and adversarial training in the feature extraction stage.",
      "startOffset" : 4,
      "endOffset" : 25
    }, {
      "referenceID" : 17,
      "context" : "Our approach is most similar to Le and Mikolov (2014), where the features were extracted in a unsupervised way and then a one-layer neural net was trained for classification.",
      "startOffset" : 32,
      "endOffset" : 54
    } ],
    "year" : 2017,
    "abstractText" : "In this paper, we propose TopicRNN, a recurrent neural network (RNN)-based language model designed to directly capture the global semantic meaning relating words in a document via latent topics. Because of their sequential nature, RNNs are good at capturing the local structure of a word sequence – both semantic and syntactic – but might face difficulty remembering long-range dependencies. Intuitively, these long-range dependencies are of semantic nature. In contrast, latent topic models are able to capture the global semantic structure of a document but do not account for word ordering. The proposed TopicRNN model integrates the merits of RNNs and latent topic models: it captures local (syntactic) dependencies using an RNN and global (semantic) dependencies using latent topics. Unlike previous work on contextual RNN language modeling, our model is learned endto-end. Empirical results on word prediction show that TopicRNN outperforms existing contextual RNN baselines. In addition, TopicRNN can be used as an unsupervised feature extractor for documents. We do this for sentiment analysis on the IMDB movie review dataset and report an error rate of 6.28%. This is comparable to the state-of-the-art 5.91% resulting from a semi-supervised approach. Finally, TopicRNN also yields sensible topics, making it a useful alternative to document models such as latent Dirichlet allocation.",
    "creator" : "LaTeX with hyperref package"
  }
}