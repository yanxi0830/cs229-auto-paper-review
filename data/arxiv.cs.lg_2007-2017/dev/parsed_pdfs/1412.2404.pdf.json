{
  "name" : "1412.2404.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Dimensionality Reduction with Subspace Structure Preservation",
    "authors" : [ "Devansh Arpit", "Ifeoma Nwogu" ],
    "emails" : [ "devansha@buffalo.edu", "inwogu@buffalo.edu", "govind@buffalo.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "A number of real world applications model data as being sampled from a union of independent subspaces. These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few. Dimensionality reduction is generally used prior to applying these methods because most of these algorithms optimize expensive loss functions like nuclear norm, `1 regularization, e.t.c. Most of these applications simply apply off-the-shelf dimensionality reduction techniques or resize images (in case of image data) as a pre-processing step.\nThe union of independent subspace model can be thought of as a generalization of the traditional approach of representing a given set of data points using a single low dimensional subspace (e.g. Principal Component Analysis). For the application of algorithms that model data at hand with this independence assumption, the subspace structure of the data needs to be preserved after dimensionality reduction. Although a number of existing dimensionality reduction techniques [10, 3, 1, 4] try to preserve the spacial geometry of any given data, no prior work has tried to explicitly preserve the independence between subspaces to the best of our knowledge.\nIn this paper, we propose a novel dimensionality reduction technique that preserves independence between multiple subspaces. In order to achieve this, we first show that for any two disjoint subspaces with arbitrary dimensionality, there exists a two dimensional subspace such that both the\nar X\niv :1\n41 2.\n24 04\nv1 [\ncs .L\nsubspaces collapse to form two lines. We then extend this non-trivial idea to multi-class case and show that 2K projection vectors are sufficient for preserving the subspace structure of a K class dataset. Further, we design an efficient algorithm that finds the projection vectors with the aforementioned properties while being able to handle corrupted data at the same time."
    }, {
      "heading" : "2 Preliminaries",
      "text" : "Let S1, S2 . . . SK be K subspaces in Rn. We say that these K subspaces are independent if there does not exist any non-zero vector in Si which is a linear combination of vectors in the other K − 1 subspaces. Let the columns of the matrix Bi ∈ Rn×d denote the support of the ith subspace of d dimensions. Then any vector in this subspace can be represented as x = Biw ∀w ∈ Rd. Now we define the notion of margin between two subspaces.\nDefinition 1 (Subspace Margin) Subspaces Si and Sj are separated by margin γij if\nγij = max u∈Si,v∈Sj 〈u, v〉 ‖u‖2‖v‖2\n(1)\nThus margin between any two subspaces is defined as the maximum dot product between two unit vectors (u, v), one from either subspace. Such a vector pair (u, v) is known as the principal vector pair between the two subspaces while the angle between these vectors is called the principal angle.\nWith these definitions of independent subspaces and margin, assume that we are given a dataset which has been sampled from a union of independent linear subspaces. Specifically, each class in this dataset lies along one such independent subspace. Then our goal is to reduce the dimensionality of this dataset such that after projection, each class continues to lie along a linear subspace and that each such subspace is independent of all others. Formally, let X = [X1, X2 . . . , XK ] be a K class dataset in Rn such that vectors from class i (x ∈ Xi) lie along subspace Si. Then our goal is to find a projection matrix (P ∈ Rn×m) such that the projected data vectors X̄i := {PTx : x ∈ Xi} (i ∈ {1 . . .K}) are such that data vectors X̄i belong to a linear subspace (S̄i in Rm). Further, each subspace S̄i (i ∈ {1 . . .K}) is independent of all others."
    }, {
      "heading" : "3 Proposed Approach",
      "text" : "In this section, we propose a novel subspace learning approach applicable to labeled datasets that theoretically guarantees independent subspace structure preservation. The number of projection vectors required by our approach is not only independent of the size of the dataset but is also fixed, depending only on the number of classes. Specifically, we show that for any K class labeled dataset with independent subspace structure, only 2K projection vectors are required for structure preservation.\nThe entire idea of being able to find a fixed number of projection vectors for the structure preservation of a K class dataset is motivated by theorem 2. This theorem states a useful property of any pair of disjoint subspaces.\nTheorem 2 Let unit vectors v1 and v2 be the ith principal vector pair for any two disjoint subspaces S1 and S2 in Rn. Let the columns of the matrix P ∈ Rn×2 be any two orthonormal vectors in the span of v1 and v2. Then for all vectors x ∈ Sj , PTx = αtj (j ∈ {1, 2}), where α ∈ R depends on x and tj ∈ R2 is a fixed vector independent of x. Further, t T 1 t2\n‖t1‖2‖t2‖2 = v T 1 v2\nProof: We use the notation (M)j to denote the jth column vector of matrix M for any arbitrary matrix M . We claim that tj = PT vj (j ∈ {1, 2}). Also, without any loss of generality, assume that (P )1 = v1. Then in order to prove theorem 2, it suffices to show that ∀x ∈ S1, (P )T2 x = 0. By symmetry, ∀x ∈ S2, PTx will also lie along a line in the subspace spanned by the columns of P . Let the columns ofB1 ∈ Rn×d1 andB2 ∈ Rn×d2 be the support of S1 and S2 respectively, where d1 and d2 are the dimensionality of the two subspaces. Then we can represent v1 and v2 as v1 = B1w1 and v2 = B2w2 for some w1 ∈ Rd1 and w2 ∈ Rd2 . Let B1w be any arbitrary vector in S1 where\nw ∈ Rd1 . Then we need to show that T := (B1w)T (P )2 = 0∀w. Notice that,\nT = (B1w) T (B2w2 − (wT1 BT1 B2w2)B1w1)\n= wT (BT1 B2w2 − (wT1 BT1 B2w2)w1) ∀w (2)\nLet USV T be the svd of BT1 B2. Then w1 and w2 are the i th columns of U and V respectively, and vT1 v2 is the i th diagonal element of S if v1 and v2 are the ith principal vectors of S1 and S2. Thus,\nT = wT (USV Tw2 − Sii(U)i) = wT (Sii(U)i − Sii(U)i) = 0\n(3)\nGeometrically, this theorem says that after projection on the plane (P ) defined by any one of the principal vector pairs between subspaces S1 and S2, both the entire subspaces collapse to just two lines such that points from S1 lie along one line while points from S2 lie along the second line. Further, the angle that separates these lines is equal to the angle between the ith principal vector pair between S1 and S2 if the span of the ith principal vector pair is used as P .\nWe apply theorem 2 on a three dimensional example as shown in figure 1. In figure 1 (a), the first subspace (y-z plane) is denoted by red color while the second subspace is the black line in x-y axis. Notice that for this setting, the x-y plane (denoted by blue color) is in the span of the 1st (and only) principal vector pair between the two subspaces. After projection of both the entire subspaces onto the x-y plane, we get two lines (figure 1 (b)) as stated in the theorem.\nFinally, we now show that for any K class dataset with independent subspace structure, 2K projection vectors are sufficient for structure preservation.\nTheorem 3 Let X = {x}Ni=1 be a K class dataset in Rn with Independent Subspace structure. Let P = [P1 . . . PK ] ∈ Rn×2K be a projection matrix for X such that the columns of the matrix Pk ∈ Rn×2 consists of orthonormal vectors in the span of any principal vector pair between subspaces Sk and ∑ j 6=k Sj . Then the Independent Subspace structure of the dataset X is preserved after projection on the 2K vectors in P .\nBefore stating the proof of this theorem, we first state lemma 4 which we will use later in our proof. This lemma states that if two vectors are separated by a non-zero angle, then after augmenting these vectors with any arbitrary vectors, the new vectors remain separated by some non-zero angle as well. This straightforward idea will help us extend the two subspace case in theorem 2 to multiple subspaces.\nLemma 4 Let x1, y1 be any two fixed vectors of same dimensionality with respect to each other such that x T 1 y1\n‖x1‖2‖y1‖2 = γ where γ ∈ [0, 1). Let x2, y2 be any two arbitrary vectors of same dimensionality with respect to each other. Then there exists a constant γ̄ ∈ [0, 1) such that vectors x′ = [x1;x2] and y′ = [y1; y2] are also separated such that x ′T y′\n‖x′‖2‖y′‖2 ≤ γ̄.\nProof:\nx′T y′ ‖x′‖2‖y′‖2 = xT1 y1 + x T 2 y2 ‖x′‖2‖y′‖2\n= γ‖x1‖2‖y1‖2 + xT2 y2\n‖x′‖2‖y′‖2\n< ‖x1‖2‖y1‖2 + xT2 y2 ‖x′‖2‖y′‖2\n≤ max x2,y2 ‖x1‖2‖y1‖2 + xT2 y2 ‖x′‖2‖y′‖2 = 1\n(4)\nProof of theorem 3: For the proof of theorem 3, it suffices to show that data vectors from subspaces Sk and ∑\nj 6=k Sj (for any k ∈ {1 . . .K}) are separated by margin less than 1 after projection using P . Let x and y be any vectors in Sk and ∑ j 6=k Sj respectively and the columns of the matrix Pk be in the span of the ith (say) principal vector pair between these subspaces. Using theorem 2, the projected vectors PTk x and P T k y are separated by an angle equal to the the angle between the i\nth principal vector pair between Sk and ∑ j 6=k Sj . Let the cosine of this angle be γ. Then, using lemma 4, the added dimensions in the vectors PTk x and P T k y to form the vectors P\nTx and PT y are also separated by some margin γ̄ < 1. As the same argument holds for vectors from all classes, the Independent Subspace Structure of the dataset remains preserved after projection.\nFor any two disjoint subspaces, theorem 2 tells us that there is a two dimensional plane in which the entire projected subspaces form two lines. It can be argued that after adding arbitrary valued finite dimensions to the basis of this plane, the two projected subspaces will also remain disjoint (see proof of theorem 3). Theorem 3 simply applies this argument to each subspace and the sum of the remaining subspaces one at a time. Thus for K subspaces, we get 2K projection vectors.\nFinally, our approach projects data to 2K dimensions which could be a concern if the original feature dimension itself is less than 2K. However, since we are only concerned with data that has underlying independent subspace assumption, notice that the feature dimension must be at least K. This is because each class must lie on at least 1 dimension which is linearly independent of others. However, this is too strict an assumption and it is straight forward to see that if we relax this assumption to 2 dimensions for each class, the feature dimensions are already at 2K."
    }, {
      "heading" : "3.1 Implementation",
      "text" : "A naive approach to finding projection vectors (say for a binary class case) would be to compute the SVD of the matrix XT1 X2, where the columns of X1 and X2 contain vectors from class 1 and class 2 respectively. For large datasets this would not only be computationally expensive but also be incapable of handling noise. Thus, even though theorem 3 guarantees the structure preservation of the dataset X after projection using P as specified, this does not solve the problem of dimensionality reduction. The reason is that given a labeled dataset sampled from a union of independent subspaces, we do not have any information about the basis or even the dimensionality of the underlying subspaces. Under these circumstances, constructing the projection matrix P as specified in theorem 3 itself becomes a problem. To solve this problem, we propose an algorithm that tries to find the underlying principal vector pair between subspaces Sk and ∑ j 6=k Sj (for k = 1 to K) given the labeled dataset X . The assumption behind this attempt is that samples from each subspace (class) are not heavily corrupted and that the underlying subspaces are independent.\nNotice that we are not specifically interested in a particular principal vector pair between any two subspaces for the computation of the projection matrix. This is because we have assumed independent subspaces and so each principal vector pair is separated by some margin γ < 1. Hence we need an algorithm that computes any arbitrary principal vector pair, given data from two independent subspaces. These vectors can then be used to form one of the K submatrices in P as specified in theorem 3 . For computing the submatrix Pk, we need to find a principal vector pair between subspaces Sk and ∑ j 6=k Sj . In terms of dataset X , we estimate the vector pair using data in Xk\nAlgorithm 1 Computation of projection matrix P INPUT: X ,K,λ, itermax\nfor k=1 to K do w∗2 ← random vector in RN̄k while iter < itermax or γ not converged do w∗1 ← arg minw1‖Xkw1 − X̄kw ∗ 2\n‖X̄kw∗2‖2 ‖2 + λ‖w1‖2\nw∗1 ← w∗1/norm(w∗1) w∗2 ← arg minw2‖ Xkw ∗ 1\n‖Xkw∗1‖2 − X̄kw2‖2 + λ‖w2‖2\nw∗2 ← w∗2/norm(w∗2) γ ← (Xkw∗1)T (X̄kw∗2)\nend while Pk ← [Xkw∗1 , X̄kw∗2 ]\nend for P ∗ ← [P1 . . . PK ]\nOUTPUT: P ∗\nand X̄k where X̄k := X \\ {Xk}. We repeat this process for each class to finally form the entire matrix P ∗. Our approach is stated in algorithm 1. For each class k, the idea is to start with a random vector in the span of X̄k and find the vector in Xk closest to this vector. Then fix this vector and search of the closest vector in X̄k. Repeating this process till the convergence of the cosine between these 2 vectors leads to a principal vector pair. In order to estimate the closest vector from opposite subspace, we have used a quadratic program in 1 that minimizes the reconstruction error of the fixed vector (of one subspace) using vectors from the opposite subspace. The regularization in the optimization is to handle noise in data."
    }, {
      "heading" : "3.2 Justification",
      "text" : "The definition 1 for margin γ between two subspaces S1 and S2 can be equivalently expressed as\n1− γ = min w1,w2\n1 2 ‖B1w1 −B2w2‖2 s.t. ‖B1w1‖2 = 1, ‖B2w2‖2 = 1 (5)\nwhere the columns of B1 ∈ Rn×d1 and B2 ∈ Rn×d2 are the basis of the subspaces S1 and S2 respectively such that BT1 B1 and B T 2 B2 are both identity matrices.\nProposition 5 Let B1 ∈ Rn×d1 and B2 ∈ Rn×d2 be the basis of two disjoint subspaces S1 and S2. Then for any principal vector pair (ui, vi) between the subspaces S1 and S2, the corresponding vector pair (w1 ∈ Rd1 ,w2 ∈ Rd2 ), s.t. ui = B1w1 and vi = B2w2, is a local minima to the objective in equation (5).\nProof: The Lagrangian function for the above objective is:\nL(w1, w2,η) = 1\n2 wT1 B T 1 B1w1+\n1 2 wT2 B T 2 B2w2−wT1 BT1 B2w2+η1(‖B1w1‖2−1)+η2(‖B2w2‖2−1)\n(6)\nThen setting the gradient w.r.t. w1 to zero we get\n∇w1L = (1 + 2η1)w1 −BT1 B2w2 = 0 (7) Let USV T be the SVD of BT1 B2 and w1 and w2 be the i\nth columns of U and V respectively. Then equation (7) becomes\n∇w1L = (1 + 2η1)w1 − USV Tw2 = (1 + 2η1)w1 − Siiw1 = 0\n(8)\nThus the gradient w.r.t. w1 is zero when η1 = 12 (Sii−1). Similarly, it can be shown that the gradient w.r.t. w2 is zero when η2 = 12 (Sii − 1). Thus the gradient of the Lagrangian L is 0 w.r.t. both w1 and w2 for every corresponding principal vector pair. Thus vector pair (w1, w2) corresponding to any of the principal vector pairs between subspaces S1 and S2 is a local minima to the objective 5.\nSince (w1, w2) corresponding to any principal vector pair between two disjoint subspaces form a local minima to the objective given by equation (5), one can alternatively minimize equation (5) w.r.t. w1 and w2 and reach one of the local minima. Thus, by assuming independent subspace structure for all the K classes in algorithm 1 and setting λ to zero, it is straight forward to see that the algorithm yields a projection matrix that satisfies the criteria specified by theorem 3.\nFinally, real world data do not strictly satisfy the independent subspace assumption in general and even a slight corruption in data may easily lead to the violation of this independence. In order to tackle this problem, we add a regularization (λ > 0) term while solving for the principal vector pair in algorithm 1. If we assume that the corruption is not heavy, reconstructing a sample using vectors belonging to another subspace would require a large coefficient over those vectors. The regularization avoids reconstructing data from one class using vectors from another class that are slightly corrupted by assigning such vectors small coefficients."
    }, {
      "heading" : "3.3 Complexity",
      "text" : "Solving algorithm 1 requires solving an unconstrained quadratic program within a while-loop. Assume that we run this while loop for T iterations and that we use conjugate gradient descent to solve the quadratic program in each iteration. Also, it is known that for any matrix A ∈ Ra×b and vector b ∈ Ra, conjugate gradient applied to a problem of the form\narg min w ‖Ax− b‖2 (9)\ntakes time O(ab √ K), where K is the condition number of ATA. Thus it is straight forward to see that the time required to compute the projection matrix for a K class problem in our case is O(KTnN √ K), where n is the dimensionality of feature space, N is the total number of samples and K is the condition number of the matrix (XTk Xk + λI). Here I is the identity matrix."
    }, {
      "heading" : "4 Empirical Analysis",
      "text" : "In this section, we present empirical evidence to support our theoretical analysis of our subspace learning approach. For real world data, we use the following datasets:\n1. Extended Yale dataset B [2]: It consists of∼ 2414 frontal face images of 38 individuals (K = 38) with 64 images per person. These images were taken under constrained but varying illumination conditions.\n2. AR dataset [9]: This dataset consists of more than 4000 frontal face images of 126 individuals with 26 images per person. These images were taken under varying illumination, expression and facial disguise. For our experiments, similar to [14], we use images from 100 individuals (K = 100) with 50 males and 50 females. We further use only 14 images per class which correspond to illumination and expression changes. This corresponds to 7 images from Session 1 and rest 7 from Session 2.\n3. PIE dataset [11]: The pose, illumination, and expression (PIE) database is a subset of CMU PIE dataset consisting of 11, 554 images of 68 people (K = 68).\nWe crop all the images to 32×32, and concatenate all the pixel intensity to form our feature vectors. Further, we normalize all data vectors to have unit `2 norm."
    }, {
      "heading" : "4.1 Qualitative Analysis",
      "text" : ""
    }, {
      "heading" : "4.1.1 Two Subspaces-Two Lines",
      "text" : "We test both the claim of theorem 2 and the quality of approximation achieved by algorithm 1 in this section. We perform these tests on both synthetic and real data.\n1. Synthetic Data: We generate two random subspaces in R1000 of dimensionality 20 and 30 (notice that these subspaces will be independent with probability 1). We randomly generate 100 data vectors from each subspace and normalize them to have unit length. We then compute the 1st principal vector pair between the two subspaces using their basis vectors by performing SVD of BT1 B2, where B1 and B2 are the basis of the two subspaces. We orthonormalize the vector pair to form the projection matrix Pa. Next, we use the labeled dataset of 200 points generated to form the projection matrix Pb by applying algorithm 1. The entire dataset of 200 points is then projected onto Pa and Pb separately and plotted in figure 2. The green and red points denote data from either subspace. The results not only substantiate our claim in theorem 2 but also suggest that the proposed algorithm for estimating the projection matrix is a good approximation.\n2. Real Data: Here we use Extended Yale dataset B for analysis. Since we are interested in projection of two class data in this experimental setup, we randomly choose 4 different pairs of classes from the dataset and use the labeled data from each pair to generate the two dimensional projection matrix (for that pair) using algorithm 1. The resulting projected data from the 4 pairs can be seen in figure 3. As is evident from the figure, the projected two class data for each pair approximately lie along two different lines."
    }, {
      "heading" : "4.1.2 Multi-class separability",
      "text" : "We analyze the separation between the K classes of a given K-class dataset after dimensionality reduction. First we compute the projection matrix for that dataset using our approach and project the data. Second, we compute the top principal vector for each class separately from the projected data. This gives us K vectors. Let the columns of the matrix Z ∈ R2K×K contain these vectors. Then in order to visualize inter-class separability, we simply take the dot product of the matrix Z with itself, i.e. ZTZ. Figure 4 shows this visualization for the three face datasets. The diagonal elements represent self-dot product; thus the value is 1 (white). The off-diagonal elements represent inter-\nclass dot product and these values are consistently small (dark) for all the three datasets reflecting between class separability."
    }, {
      "heading" : "4.2 Quantitative Analysis",
      "text" : "In order to evaluate theorem 3, we perform a classification experiment on all the three real world datasets mentioned above after projecting the data vectors using different dimensionality reduction techniques. We compare our quantitative results against PCA, Linear discriminant analysis (LDA), Regularized LDA and Random Projections (RP) 1. We make use of sparse coding [14] for classification.\nFor Extended Yale dataset B, we use all 38 classes for evaluation with 50%− 50% train-test split 1 and 70%− 30% train-test split 2. Since our method is randomized, we perform 50 runs of computing the projection matrix using algorithm 1 and report the mean accuracy with standard deviation. Similarly for RP, we generate 50 different random matrices and then perform classification. Since all other methods are deterministic, there is no need for multiple runs.\nFor AR dataset, we take the 7 images from Session 1 for training and the 7 images from Session 2 for testing. The results are shown in table 3. The result using LDA is not reported because we found that the summed within class covariance was degenerate and hence LDA was not applicable. It can be clearly seen that our approach significantly outperforms other dimensionality reduction methods.\nFinally for PIE dataset, we perform experiments on two different subsets. First, we take all the 68 classes and for each class, we randomly choose 25 images for training and 25 for testing. The performance for this subset is shown in table 4. Second, we take only the first 10 classes of the dataset and of all the 170 images per class, we randomly split the data into 70%−30% train-test set. The performance for this subset is shown in table 5.\nEvidently, our approach consistently yields the best performance on all the three datasets compared to other dimensionality reduction methods.\n1We also used LPP (Locality Preserving Projections) [3], NPE (Neighborhood Preserving Embedding) [4], and Laplacian Eigenmaps [1] for dimensionality reduction on Extended Yale B dataset. However, because the best performing of these reduction techniques yielded a result of only 73% compared to the close to 98% accuracy from our approach, we do not report results from these methods."
    }, {
      "heading" : "5 Conclusion",
      "text" : "We proposed a theoretical analysis on the preservation of independence between multiple subspaces. We show that for K independent subspaces, 2K projection vectors are sufficient for independence preservation (theorem 3). This result is motivated from our observation that for any two disjoint subspaces of arbitrary dimensionality, there exists a two dimensional plane such that after projection, the entire subspaces collapse to just two lines (theorem 2). Resulting from this analysis, we proposed an efficient iterative algorithm (1) that tries to exploit these properties for learning a projection matrix for dimensionality reduction that preserves independence between multiple subspaces. Our empirical results on three real world datasets yield state-of-the-art results compared to popular dimensionality reduction methods."
    } ],
    "references" : [ {
      "title" : "Laplacian eigenmaps for dimensionality reduction and data representation",
      "author" : [ "Mikhail Belkin", "Partha Niyogi" ],
      "venue" : "Neural Comput.,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2003
    }, {
      "title" : "From few to many: Illumination cone models for face recognition under variable lighting and pose",
      "author" : [ "A.S. Georghiades", "P.N. Belhumeur", "D.J. Kriegman" ],
      "venue" : "IEEE Trans. Pattern Anal. Mach. Intelligence,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2001
    }, {
      "title" : "Locality preserving projections (lpp)",
      "author" : [ "X. He", "P. Niyogi" ],
      "venue" : "Proc. of the NIPS, Advances in Neural Information Processing Systems. Vancouver: MIT Press,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2004
    }, {
      "title" : "Neighborhood preserving embedding",
      "author" : [ "Xiaofei He", "Deng Cai", "Shuicheng Yan", "Hong-Jiang Zhang" ],
      "venue" : "In Computer Vision,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2005
    }, {
      "title" : "Clustering appearances of objects under varying illumination conditions",
      "author" : [ "Jeffrey Ho", "Ming-Husang Yang", "Jongwoo Lim", "Kuang-Chih Lee", "David Kriegman" ],
      "venue" : "In Computer Vision and Pattern Recognition,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2003
    }, {
      "title" : "Multiscale hybrid linear models for lossy image representation",
      "author" : [ "Wei Hong", "John Wright", "Kun Huang", "Yi Ma" ],
      "venue" : "Image Processing, IEEE Transactions on,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2006
    }, {
      "title" : "Robust subspace segmentation by low-rank representation",
      "author" : [ "Guangcan Liu", "Zhouchen Lin", "Yong Yu" ],
      "venue" : "In ICML,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2010
    }, {
      "title" : "Segmentation of multivariate mixed data via lossy coding and compression",
      "author" : [ "Yi Ma", "Harm Derksen", "Wei Hong", "John Wright", "Student Member" ],
      "venue" : "IEEE Transactions on Pattern Analysis and Machine Intelligence,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2007
    }, {
      "title" : "Nonlinear dimensionality reduction by locally linear embedding",
      "author" : [ "Sam T. Roweis", "Lawrence K. Saul" ],
      "venue" : "Science,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2000
    }, {
      "title" : "The cmu pose, illumination, and expression (pie) database",
      "author" : [ "Terence Sim", "Simon Baker", "Maan Bsat" ],
      "venue" : "In Automatic Face and Gesture Recognition,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2002
    }, {
      "title" : "An algebraic geometric approach to the identification of a class of linear hybrid systems",
      "author" : [ "René Vidal", "Stefano Soatto", "Yi Ma", "Shankar Sastry" ],
      "venue" : "In Decision and Control,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2003
    }, {
      "title" : "Multiframe motion segmentation with missing data using powerfactorization and gpca",
      "author" : [ "René Vidal", "Roberto Tron", "Richard Hartley" ],
      "venue" : "International Journal of Computer Vision,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2008
    }, {
      "title" : "Robust face recognition via sparse representation",
      "author" : [ "J. Wright", "A.Y. Yang", "A. Ganesh", "S.S. Sastry", "Yi Ma" ],
      "venue" : "IEEEE TPAMI,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2009
    }, {
      "title" : "Unsupervised segmentation of natural images via lossy data compression",
      "author" : [ "Allen Y Yang", "John Wright", "Yi Ma", "S Shankar Sastry" ],
      "venue" : "Computer Vision and Image Understanding,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2008
    } ],
    "referenceMentions" : [ {
      "referenceID" : 5,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 64,
      "endOffset" : 67
    }, {
      "referenceID" : 10,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 84,
      "endOffset" : 88
    }, {
      "referenceID" : 13,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 109,
      "endOffset" : 113
    }, {
      "referenceID" : 11,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 135,
      "endOffset" : 139
    }, {
      "referenceID" : 6,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 157,
      "endOffset" : 163
    }, {
      "referenceID" : 4,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 157,
      "endOffset" : 163
    }, {
      "referenceID" : 7,
      "context" : "These applications include image representation and compression [6], systems theory [12], image segmentation [15], motion segmentation [13], face clustering [7, 5] and texture segmentation [8], to name a few.",
      "startOffset" : 189,
      "endOffset" : 192
    }, {
      "referenceID" : 8,
      "context" : "Although a number of existing dimensionality reduction techniques [10, 3, 1, 4] try to preserve the spacial geometry of any given data, no prior work has tried to explicitly preserve the independence between subspaces to the best of our knowledge.",
      "startOffset" : 66,
      "endOffset" : 79
    }, {
      "referenceID" : 2,
      "context" : "Although a number of existing dimensionality reduction techniques [10, 3, 1, 4] try to preserve the spacial geometry of any given data, no prior work has tried to explicitly preserve the independence between subspaces to the best of our knowledge.",
      "startOffset" : 66,
      "endOffset" : 79
    }, {
      "referenceID" : 0,
      "context" : "Although a number of existing dimensionality reduction techniques [10, 3, 1, 4] try to preserve the spacial geometry of any given data, no prior work has tried to explicitly preserve the independence between subspaces to the best of our knowledge.",
      "startOffset" : 66,
      "endOffset" : 79
    }, {
      "referenceID" : 3,
      "context" : "Although a number of existing dimensionality reduction techniques [10, 3, 1, 4] try to preserve the spacial geometry of any given data, no prior work has tried to explicitly preserve the independence between subspaces to the best of our knowledge.",
      "startOffset" : 66,
      "endOffset" : 79
    }, {
      "referenceID" : 1,
      "context" : "Extended Yale dataset B [2]: It consists of∼ 2414 frontal face images of 38 individuals (K = 38) with 64 images per person.",
      "startOffset" : 24,
      "endOffset" : 27
    }, {
      "referenceID" : 12,
      "context" : "For our experiments, similar to [14], we use images from 100 individuals (K = 100) with 50 males and 50 females.",
      "startOffset" : 32,
      "endOffset" : 36
    }, {
      "referenceID" : 9,
      "context" : "PIE dataset [11]: The pose, illumination, and expression (PIE) database is a subset of CMU PIE dataset consisting of 11, 554 images of 68 people (K = 68).",
      "startOffset" : 12,
      "endOffset" : 16
    }, {
      "referenceID" : 12,
      "context" : "We make use of sparse coding [14] for classification.",
      "startOffset" : 29,
      "endOffset" : 33
    }, {
      "referenceID" : 2,
      "context" : "We also used LPP (Locality Preserving Projections) [3], NPE (Neighborhood Preserving Embedding) [4], and Laplacian Eigenmaps [1] for dimensionality reduction on Extended Yale B dataset.",
      "startOffset" : 51,
      "endOffset" : 54
    }, {
      "referenceID" : 3,
      "context" : "We also used LPP (Locality Preserving Projections) [3], NPE (Neighborhood Preserving Embedding) [4], and Laplacian Eigenmaps [1] for dimensionality reduction on Extended Yale B dataset.",
      "startOffset" : 96,
      "endOffset" : 99
    }, {
      "referenceID" : 0,
      "context" : "We also used LPP (Locality Preserving Projections) [3], NPE (Neighborhood Preserving Embedding) [4], and Laplacian Eigenmaps [1] for dimensionality reduction on Extended Yale B dataset.",
      "startOffset" : 125,
      "endOffset" : 128
    } ],
    "year" : 2017,
    "abstractText" : "Modeling data as being sampled from a union of independent subspaces has been widely applied to a number of real world applications. However, dimensionality reduction approaches that theoretically preserve this independence assumption have not been well studied. Our key contribution is to show that 2K projection vectors are sufficient for the independence preservation of any K class data sampled from a union of independent subspaces. It is this non-trivial observation that we use for designing our dimensionality reduction technique. In this paper, we propose a novel dimensionality reduction algorithm that theoretically preserves this structure for a given dataset. We support our theoretical analysis with empirical results on both synthetic and real world data achieving state-of-the-art results compared to popular dimensionality reduction techniques.",
    "creator" : "LaTeX with hyperref package"
  }
}