{
  "name" : "1411.0169.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Near–Optimal Density Estimation in Near–Linear Time Using Variable–Width Histograms",
    "authors" : [ "Siu-On Chan", "Ilias Diakonikolas", "Rocco A. Servedio", "Xiaorui Sun" ],
    "emails" : [ "sochan@gmail.com.", "ilias.d@ed.ac.uk.", "rocco@cs.columbia.edu.", "xiaoruisun@cs.columbia.edu." ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n41 1.\n01 69\nv1 [\ncs .L\nIn more detail, for any k and ε, we give an algorithm that makes Õ(k/ε2) draws from p, runs in Õ(k/ε2) time, and outputs a hypothesis distribution h that is piecewise constant with O(k log2(1/ε)) pieces. With high probability the hypothesis h satisfies dTV(p, h) ≤ C ·optk(p)+ε, where dTV denotes the total variation distance (statistical distance), C is a universal constant, and opt\nk (p) is the smallest total variation distance between p and any k-piecewise constant\ndistribution. The sample size and running time of our algorithm are optimal up to logarithmic factors. The “approximation factor” C in our result is inherent in the problem, as we prove that no algorithm with sample size bounded in terms of k and ε can achieve C < 2 regardless of what kind of hypothesis distribution it uses."
    }, {
      "heading" : "1 Introduction",
      "text" : "Consider the following fundamental statistical task: Given independent draws from an unknown probability distribution, what is the minimum sample size needed to obtain an accurate estimate of the distribution? This is the question of density estimation, a classical problem in statistics with a rich history and an extensive literature (see e.g., [BBBB72, DG85, Sil86, Sco92, DL01]). While this broad question has mostly been studied from an information–theoretic perspective, it is an inherently algorithmic question as well, since the ultimate goal is to describe and understand algorithms that are both computationally and information-theoretically efficient. The need for computationally efficient learning algorithms is only becoming more acute with the recent flood\n∗Supported by EPSRC grant EP/L021749/1, and a Marie Curie Career Integration Grant. †Supported by NSF grants CCF-0915929 and CCF-1115703. ‡Supported by NSF grant CCF-1149257.\nof data across the sciences; the “gold standard” in this “big data” context is an algorithm with information-theoretically (near-) optimal sample size and running time (near-) linear in its sample size.\nIn this paper we consider learning scenarios in which an algorithm is given an input data set which is a sample of i.i.d. draws from an unknown probability distribution. It is natural to expect (and can be easily formalized) that, if the underlying distribution of the data is inherently “complex”, it may be hard to even approximately reconstruct the distribution. But what if the underlying distribution is “simple” or “succinct” – can we then reconstruct the distribution to high accuracy in a computationally and sample-efficient way? In this paper we answer this question in the affirmative for the problem of learning “noisy” histograms, arguably one of the most basic density estimation problems in the literature.\nTo motivate our results, we begin by briefly recalling the role of histograms in density estimation. Histograms constitute “the oldest and most widely used method for density estimation” [Sil86], first introduced by Karl Pearson in [Pea95]. Given a sample from a probability density function (pdf) p, the method partitions the domain into a number of intervals (bins) B1, . . . , Bk, and outputs the “empirical” pdf which is constant within each bin. A k-histogram is a piecewise constant distribution over bins B1, . . . , Bk, where the probability mass of each interval Bj , j ∈ [k], equals the fraction of observations in the interval. Thus, the goal of the “histogram method” is to approximate an unknown pdf p by an appropriate k-histogram. It should be emphasized that the number k of bins to be used and the “width” and location of each bin are unspecified; they are parameters of the estimation problem and are typically selected in an ad hoc manner.\nWe study the following distribution learning question:\nSuppose that there exists a k-histogram that provides an accurate approximation to the unknown target distribution. Can we efficiently find such an approximation?\nIn this paper, we provide a fairly complete affirmative answer to this basic question. Given a bound k on the number of intervals, we give an algorithm that uses a near-optimal sample size, runs in near-linear time (in its sample size), and approximates the target distribution nearly as accurately as the best k-histogram.\nTo formally state our main result, we will need a few definitions. We work in a standard model of learning an unknown probability distribution from samples, essentially that of [KMR+94], which is a natural analogue of Valiant’s well-known PAC model for learning Boolean functions [Val84] to the unsupervised setting of learning an unknown probability distribution.1 A distribution learning problem is defined by a class C of distributions over a domain Ω. The algorithm has access to independent draws from an unknown pdf p, and its goal is to output a hypothesis distribution h that is “close” to the target distribution p. We measure the closeness between distributions using the statistical distance or total variation distance. In the “noiseless” setting, we are promised that p ∈ C and the goal is to construct a hypothesis h such that (with high probability) the total variation distance dTV(h, p) between h and p is at most ε, where ε > 0 is the accuracy parameter.\nThe more challenging “noisy” or agnostic model captures the situation of having arbitrary (or even adversarial) noise in the data. In this setting, we do not make any assumptions about the target density p and the goal is to find a hypothesis h that is almost as accurate as the “best” approximation of p by any distribution in C. Formally, given sample access to a (potentially arbitrary) target distribution p and ε > 0, the goal of an agnostic learning algorithm for C is to compute a hypothesis distribution h such that dTV(h, p) ≤ α · optC(p) + ε, where optC(p) :=\n1We remark that our model is essentially equivalent to the “minimax rate of convergence under the L1 distance” in statistics [DL01], and our results carry over to this setting as well.\ninfq∈C dTV(q, p) – i.e., optC(p) is the statistical distance between p and the closest distribution to it in C – and α ≥ 1 is a constant (that may depend on the class C). We will call such a learning algorithm an α-agnostic learning algorithm for C; when α > 1 we sometimes refer to this as a semi-agnostic learning algorithm.\nA distribution f over a finite interval I ⊆ R is called k-flat if there exists a partition of I into k intervals I1, . . . , Ik such that the pdf f is constant within each such interval. We henceforth (without loss of generality for densities with bounded support) restrict ourselves to the case I = [0, 1). Let Ck be the class of all k-flat distributions over [0, 1). For a (potentially arbitrary) distribution p over [0, 1) we will denote by optk(p) := inff∈Ck dTV(f, p).\nIn this terminology, our learning problem is exactly the problem of agnostically learning the class of k-flat distributions. Our main positive result is a near-optimal algorithm for this problem, i.e., a semi-agnostic learning algorithm that has near-optimal sample size and near-linear running time. More precisely, we prove the following:\nTheorem 1 (Main). There is an algorithm A with the following property: Given k ≥ 1, ε > 0, and sample access to a target distribution p, algorithm A uses Õ(k/ε2) independent draws from p, runs in time Õ(k/ε2), and outputs a O(k log2(1/ε))-flat hypothesis distribution h that satisfies dTV(h, p) ≤ O(optk(p)) + ε with probability at least 9/10.\nUsing standard techniques, the confidence probability can be boosted to 1 − δ, for any δ > 0, with a (necessary) overhead of O(log(1/δ)) in the sample size and the running time.\nWe emphasize that the difficulty of our result lies in the fact that the “optimal” piecewise constant decomposition of the domain is both unknown and approximate (in the sense that optk(p) > 0); and that our algorithm is both sample-optimal and runs in (near-) linear time. Even in the (significantly easier) case that the target p ∈ Ck (i.e., optk(p) = 0), and the optimal partition is explicitly given to the algorithm, it is known that a sample of size Ω(k/ε2) is informationtheoretically necessary. (This lower bound can, e.g., be deduced from the standard fact that learning an unknown discrete distribution over a k-element set to statistical distance ε requires an Ω(k/ε2) size sample.) Hence, our algorithm has provably optimal sample complexity (up to a logarithmic factor), runs in essentially sample linear time, and is α-agnostic for a universal constant α > 1.\nIt should be noted that the sample size required for our problem is well-understood; it follows from the VC theorem (Theorem 3) that O(k/ε2) draws from p are information-theoretically sufficient. However, the theorem is non-constructive, and the “obvious” algorithm following from it has running time exponential in k and 1/ε. In recent work, Chan et al [CDSS14] presented an approach employing an intricate combination of dynamic programming and linear programming which yields a poly(k/ε) time algorithm for the above problem. However, the running time of the [CDSS14] algorithm is Ω(k3) even for constant values of ε, making it impractical for applications. As discussed below our algorithmic approach is significantly different from that of [CDSS14], using neither dynamic nor linear programming. Applications. Nonparametric density estimation for shape restricted classes has been a subject of study in statistics since the 1950’s (see [BBBB72] for an early book on the topic and [Gre56, Bru58, Rao69, Weg70, HP76, Gro85, Bir87] for some of the early literature), and has applications to a range of areas including reliability theory (see [Reb05] and references therein). By using the structural approximation results of Chan et al [CDSS13], as an immediate corollary of Theorem 1 we obtain sample optimal and near-linear time estimators for various well-studied classes of shape restricted densities including monotone, unimodal, and multimodal densities (with unknown mode locations), monotone hazard rate (MHR) distributions, and others (because of space constraints we do not enumerate the exact descriptions of these classes or statements of these results here,\nbut instead refer the interested reader to [CDSS13]). Birgé [Bir87] obtained a sample optimal and linear time estimator for monotone densities, but prior to our work, no linear time and sample optimal estimator was known for any of the other classes.\nOur algorithm from Theorem 1 is α-agnostic for a constant α > 1. It is natural to ask whether a significantly stronger accuracy guarantee is efficiently achievable; in particular, is there an agnostic algorithm with similar running time and sample complexity and α = 1? Perhaps surprisingly, we provide a negative answer to this question. Even in the simplest nontrivial case that k = 2, and the target distribution is defined over a discrete domain [N ] = {1, . . . , N}, any α-agnostic algorithm with α < 2 requires large sample size:\nTheorem 2 (Lower bound, Informal statement). Any 1.99-agnostic learning algorithm for 2-flat distributions over [N ] requires a sample of size Ω( √ N).\nSee Theorem 7 in Section 4 for a precise statement. Note that there is an exact correspondence between distributions over the discrete domain [N ] and pdf’s over [0, 1) which are piecewise constant on each interval of the form [k/N, (k + 1)/N) for k ∈ {0, 1, . . . , N − 1}. Thus, Theorem 2 implies that no finite sample algorithm can 1.99-agnostically learn even 2-flat distributions over [0, 1). (See Corollary 4.3 in Section 4 for a detailed statement.) Related work. A number of techniques for density estimation have been developed in the mathematical statistics literature, including kernels and variants thereof, nearest neighbor estimators, orthogonal series estimators, maximum likelihood estimators (MLE), and others (see Chapter 2 of [Sil86] for a survey of existing methods). The main focus of these methods has been on the statistical rate of convergence, as opposed to the running time of the corresponding estimators. We remark that the MLE does not exist for very simple classes of distributions (e.g., unimodal distributions with an unknown mode, see e.g, [Bir97]). We note that the notion of agnostic learning is related to the literature on model selection and oracle inequalities [MP007], however this work is of a different flavor and is not technically related to our results.\nHistograms have also been studied extensively in various areas of computer science, including databases and streaming [JKM+98, GKS06, CMN98, GGI+02] under various assumptions about the input data and the precise objective. Recently, Indyk et al [ILR12] studied the problem of learning a k-flat distribution over [N ] under the L2 norm and gave an efficient algorithm with sample complexity O(k2 log(N)/ε4). Since the L1 distance is a stronger metric, Theorem 1 implies an improved sample and time bound of Õ(k/ε2) for their setting."
    }, {
      "heading" : "2 Preliminaries",
      "text" : "Throughout the paper we assume that the underlying distributions have Lebesgue measurable densities. For a pdf p : [0, 1) → R+ and a Lebesgue measurable subset A ⊆ [0, 1), i.e., A ∈ L([0, 1)), we use p(A) to denote ∫ z∈A p(z). The statistical distance or total variation distance between two densities p, q : [0, 1) → R+ is dTV(p, q) := supA∈L([0,1)) |p(A) − q(A)|. The statistical distance satisfies the identity dTV(p, q) =\n1 2‖p − q‖1 where ‖p − q‖1, the L1 distance between p and q, is∫\n[0,1) |p(x) − q(x)|dx; for convenience in the rest of the paper we work with L1 distance. We refer to a nonnegative function p over an interval (which need not necessarily integrate to one over the interval) as a “sub-distribution.” Given a value κ > 0, we say that a (sub-)distribution p over [0, 1) is κ-well-behaved if supx∈[0,1)Prx∼p[x] ≤ κ, i.e., no individual real value is assigned more than κ probability under p. Any probability distribution with no atoms is κ-well-behaved for all κ > 0. Our results apply for general distributions over [0, 1) which may have an atomic part as well as a non-atomic part. Given m independent draws s1, . . . , sm from a distribution p over [0, 1), the\nempirical distribution p̂m over [0, 1) is the discrete distribution supported on {s1, . . . , sm} defined as follows: for all z ∈ [0, 1), Prx∼p̂m [x = z] = |{j ∈ [m] | sj = z}|/m. The VC inequality. Let p : [0, 1) → R be a Lebesgue measurable function. Given a family of subsets A ⊆ L([0, 1)) over [0, 1), define ‖p‖A = supA∈A |p(A)|. The VC dimension of A is the maximum size of a subset X ⊆ [0, 1) that is shattered by A (a set X is shattered by A if for every Y ⊆ X, some A ∈ A satisfies A∩X = Y ). If there is a shattered subset of size s for all s ∈ Z+, then we say that the VC dimension of A is ∞. The well-known Vapnik-Chervonenkis (VC) inequality states the following:\nTheorem 3 (VC inequality, [DL01, p.31]). Let p : I → R+ be a probability density function over I ⊆ R and p̂m be the empirical distribution obtained after drawing m points from p. Let A ⊆ 2I be a family of subsets with VC dimension d. Then E[‖p− p̂m‖A] ≤ O( √ d/m).\nPartitioning into intervals of approximately equal mass. As a basic primitive, given access to a sample drawn from a κ-well-behaved target distribution p over [0, 1), we will need to partition [0, 1) into Θ(1/κ) intervals each of which has probability Θ(κ) under p. There is a simple algorithm, based on order statistics, which does this and has the following performance guarantee (see Appendix A.2 of [CDSS14]):\nLemma 2.1. Given κ ∈ (0, 1) and access to points drawn from a κ/64-well-behaved distribution p over [0, 1), the procedure Approximately-Equal-Partition draws O((1/κ) log(1/κ)) points from p, runs in time Õ(1/κ), and with probability at least 99/100 outputs a partition of [0, 1) into ℓ = Θ(1/κ) intervals such that p(Ij) ∈ [κ/2, 3κ] for all 1 ≤ j ≤ ℓ."
    }, {
      "heading" : "3 The algorithm and its analysis",
      "text" : "In this section we prove our main algorithmic result, Theorem 1. Our approach has the following high-level structure: In Section 3.1 we give an algorithm for agnostically learning a target distribution p that is “nice” in two senses: (i) p is well-behaved (i.e., it does not have any heavy atomic elements), and (ii) optk(p) is bounded from above by the error parameter ε. In Section 3.2 we give a general efficient reduction showing how the second assumption can be removed, and in Section 3.3 we briefly explain how the first assumption can be removed, thus yielding Theorem 1."
    }, {
      "heading" : "3.1 The main algorithm",
      "text" : "In this section we give our main algorithmic result, which handles well-behaved distributions p for which optk(p) is not too large:\nTheorem 4. There is an algorithm Learn-WB-small-opt-k-histogram that given as input Õ(k/ε2) i.i.d. draws from a target distribution p and a parameter ε > 0, runs in time Õ(k/ε2), and has the following performance guarantee: If (i) p is ε/ log(1/ε)384k -well-behaved, and (ii) optk(p) ≤ ε, then with probability at least 19/20, it outputs an O(k · log2(1/ε))-flat distribution h such that dTV(p, h) ≤ 2 · optk(p) + 3ε.\nWe require some notation and terminology. Let r be a distribution over [0, 1), and let P be a set of disjoint intervals that are contained in [0, 1). We say that the P-flattening of r, denoted (r)P , is the sub-distribution defined as\nr(v) = { r(I)/|I| if v ∈ I, I ∈ P 0 if v does not belong to any I ∈ P\nObserve that if P is a partition of [0, 1), then (since r is a distribution) (r)P is a distribution. We say that two intervals I, I ′ are consecutive if I = [a, b) and I ′ = [b, c). Given two consecutive intervals I, I ′ contained in [0, 1) and a sub-distribution r, we use αr(I, I ′) to denote the L1 distance between (r){I,I ′} and (r){I∪I ′}, i.e., αr(I, I ′) = ∫ I∪I′ |(r){I,I\n′}(x) − (r){I∪I′}(x)|dx. Note here that {I ∪ I ′} is a set that contains one element, the interval [a, c)."
    }, {
      "heading" : "3.1.1 Intuition for the algorithm",
      "text" : "We begin with a high-level intuitive explanation of the Learn-WB-small-opt-k-histogram algorithm. It starts in Step 1 by constructing a partition of [0, 1) into z = Θ(k/ε′) intervals I1, . . . , Iz (where ε′ = Θ̃(ε)) such that p has weight Θ(ε′/k) on each subinterval. In Step 2 the algorithm draws a sample of Õ(k/ε2) points from p and uses them to define an empirical distribution p̂m. This is the only step in which points are drawn from p. For the rest of this intuitive explanation we pretend that the weight p̂(I) that the empirical distribution p̂m assigns to each interval I is actually the same as the true weight p(I) (Lemma 3.1 below shows that this is not too far from the truth).\nBefore continuing with our explanation of the algorithm, let us digress briefly by imagining for a moment that the target distribution p actually is a k-flat distribution (i.e., that optk(p) = 0). In this case there are at most k “breakpoints”, and hence at most k intervals Ij for which αp̂m(Ij , Ij+1) > 0, so computing the αp̂m(Ij , Ij+1) values would be an easy way to identify the true breakpoints (and given these it is not difficult to construct a high-accuracy hypothesis).\nIn reality, we may of course have optk(p) > 0; this means that if we try to use the αp̂m(Ij , Ij+1) criterion to identify “breakpoints” of the optimal k-flat distribution that is closest to p (call this k-flat distribution q), we may sometimes be “fooled” into thinking that q has a breakpoint in an interval Ij where it does not (but rather the value αp̂m(Ij , Ij+1) is large because of the difference between q and p). However, recall that by assumption we have optk(p) ≤ ε; this bound can be used to show that there cannot be too many intervals Ij for which a large value of αp̂m(Ij, Ij+1) suggests a “spurious breakpoint” (see the proof of Lemma 3.3). This is helpful, but in and of itself not enough; since our partition I1, . . . , Iz divides [0, 1) into k/ε\n′ intervals, a naive approach based on this would result in a (k/ε′)-flat hypothesis distribution, which in turn would necessitate a sample complexity of Õ(k/ε′3), which is unacceptably high. Instead, our algorithm performs a careful process of iteratively merging consecutive intervals for which the αp̂m(Ij , Ij+1) criterion indicates that a merge will not adversely affect the final accuracy by too much. As a result of this process we end up with k · polylog(1/ε) intervals for the final hypothesis, which enables us to output a (k · polylog(1/ε′))-flat final hypothesis using Õ(k/ε′2) draws from p.\nIn more detail, this iterative merging is carried out by the main loop of the algorithm in Step 4. Going into the t-th iteration of the loop, the algorithm has a partition Pt−1 of [0, 1) into disjoint sub-intervals, and a set Ft−1 ⊆ Pt−1 (i.e., every interval belonging to Ft−1 also belongs to Pt−1). Initially P0 contains all the intervals I1, . . . , Iz and F0 is empty. Intuitively, the intervals in Pt−1 \\Ft−1 are still being “processed”; such an interval may possibly be merged with a consecutive interval from Pt−1 \\ Ft−1 if doing so would only incur a small “cost” (see condition (iii) of Step 4(b) of the algorithm).The intervals in Ft−1 have been “frozen” and will not be altered or used subsequently in the algorithm."
    }, {
      "heading" : "3.1.2 The algorithm",
      "text" : "Algorithm Learn-WB-small-opt-k-histogram: Input: parameters k ≥ 1, ε > 0; access to i.i.d. draws from target distribution p over [0, 1) Output: If (i) p is ε/ log(1/ε)384k -well-behaved and (ii) optk(p) ≤ ε, then with probability at least 99/100 the output is a distribution q such that dTV(p, q) ≤ 2optk(p) + 3ε.\n1. Let ε′ = ε/ log(1/ε). Run Algorithm Approximately-Equal-Partition on input parameter ε ′\n6k to partition [0, 1) into z = Θ(k/ε ′) intervals I1 = [i0, i1), . . . , Iz = [iz−1, iz), where\ni0 = 0 and iz = 1, such that with probability at least 99/100, for each j ∈ {1, . . . , z} we have p([ij−1, ij)) ∈ [ε′/12k, ε′/2k] (assuming p is ε′/(384k)-well-behaved).\n2. Draw m = Õ(k/ε′2) points from p and let p̂m be the resulting empirical distribution.\n3. Set P0 = {I1, I2, . . . Iz}, and F0 = ∅.\n4. Let s = log2 1 ε′ . Repeat for t = 1, . . . until t = s:\n(a) Initialize Pt to ∅ and Ft to Ft−1. (b) Without loss of generality, assume Pt−1 = {It−1,1, . . . , It−1,zt−1} where interval It−1,i\nis to the left of It−1,i+1 for all i. Scan left to right across the intervals in Pt−1 (i.e., iterate over i = 1, . . . , zt−1 − 1). If intervals It−1,i, It−1,i+1 are (i) both not in Ft−1, and (ii) αp̂m(It−1,i, It−1,i+1) > ε\n′/(2k), then add both It−1,i and It−1,i+1 into Ft. (c) Initialize i to 1, and repeatedly execute one of the following four (mutually exclusive\nand exhaustive) cases until i > zt−1: [Case 1] i ≤ zt−1−1 and It−1,i = [a, b), It−1,i+1 = [b, c) are consecutive intervals both not in Ft. Add the merged interval It−1,i ∪ It−1,i+1 = [a, c) into Pt. Set i ← i+ 2. [Case 2] i ≤ zt−1 − 1 and It−1,i ∈ Ft. Set i ← i+ 1. [Case 3] i ≤ zt−1 − 1, It−1,i /∈ Ft and It−1,i+1 ∈ Ft. Add It−1,i into Ft and set i ← i+ 2. [Case 4] i = zt−1. Add It−1,zt−1 into Ft if It−1,zt−1 is not in Ft and set i ← i+ 1.\n(d) Set Pt ← Pt ∪ Ft.\n5. Output the |Ps|-flat hypothesis distribution (p̂m)Ps ."
    }, {
      "heading" : "3.1.3 Analysis of the algorithm and proof of Theorem 4",
      "text" : "It is straightforward to verify the claimed running time given Lemma 2.1, which bounds the running time of Approximately-Equal-Partition. Indeed, we note that Step 2, which simply draws Õ(k/ε′2) points and constructs the resulting empirical distribution, dominates the overall running time. In the rest of this subsection we prove correctness.\nWe first observe that with high probability the empirical distribution p̂m defined in Step 2 gives a high-accuracy estimate of the true probability of any union of consecutive intervals from I1, . . . , Iz. The following lemma from [CDSS14] follows from the standard multiplicative Chernoff bound:\nLemma 3.1 (Lemma 12, [CDSS14]). With probability 99/100 over the sample drawn in Step 2, for every 0 ≤ a < b ≤ z we have that |p̂m([ia, ib))− p([ia, ib))| ≤ √ ε′(b− a) · ε′/(10k).\nWe henceforth assume that this 99/100-likely event indeed takes place, so the above inequality holds for all 0 ≤ a < b ≤ z. We use this to show that the αp̂m(It−1,i, It−1,i+1) value that the algorithm uses in Step 4(b) is a good proxy for the actual value αp(It−1,i, It−1,i+1) (which of course is not accessible to the algorithm):\nLemma 3.2. Fix 1 ≤ t ≤ s. Then we have |αp̂m(It−1,i, It−1,i+1)− αp(It−1,i, It−1,i+1)| ≤ 2ε′/(5k).\nProof. Observe that in iteration t, two consecutive intervals It−1,i and It−1,i+1 correspond to two unions of consecutive intervals Ia∪· · ·∪Ib and Ib+1∪· · ·∪Ic respectively from the original partition P0. Moreover, since each interval in Pt−1 \\ Ft−1, t > 1, is formed by merging two consecutive intervals from Pt−2 \\ Ft−2, it must be the case that b − a + 1, c − b + 1 ≤ 2t−1 < 2s−1 ≤ 1/(2ε′). Hence, by Lemma 3.1, we have\n|p(It−1,i)− p̂m(It−1,i))| ≤ √ ε′ · 2s−1 · ε ′\n10k ≤ ε\n′\n10 √ 2k\nand similarly,\n|p(It−1,i+1)− p̂m(It−1,i+1))| ≤ ε′\n10 √ 2k .\nTo simplify notation, let I = It−1,i and J = It−1,i+1. By definition of α,\nαp(I, J) = ∣∣∣∣ p(I) |I| − p(I) + p(J) |I|+ |J | ∣∣∣∣ |I|+ ∣∣∣∣ p(J) |J | − p(I) + p(J) |I|+ |J | ∣∣∣∣ |J |\n= 2 |I|+ |J | ∣∣p(I)|J | − p(J)|I| ∣∣. (1)\nA straightforward calculation now gives that\n|αp(I, J)− αp̂m(I, J)| = 2 |I|+ |J | ∣∣∣ ∣∣p(I)|J | − p(J)|I| ∣∣ − ∣∣p̂m(I)|J | − p̂m(J)|I| ∣∣ ∣∣∣\n≤ 2|I|+ |J | (∣∣p(I)− p̂m(I) ∣∣|J |+ ∣∣p(J)− p̂m(J) ∣∣|I| ) ≤ 2ε′/(5k).\nFor the rest of the analysis, let q denote a fixed k-flat distribution that is closest to p, so ‖p − q‖1 = optk(p). (We note that while optk(p) is defined as infq∈C ‖p − q‖1, standard closure arguments can be used to show that the infimum is actually achieved by some k-flat distribution q.) Let Q be the partition of [0, 1) corresponding to the intervals on which q is piecewise constant. We say that a breakpoint of Q is a value in [0, 1] that is an endpoint of one of the (at most) k intervals in Q.\nThe following important lemma bounds the number of intervals in the final partition Ps:\nLemma 3.3. Ps contains at most O(k log2(1/ε)) intervals.\nProof. We start by recording a basic fact that will be useful in the proof of the lemma. Let p be a distribution over an interval I and let q be any sub-distribution over I. Perhaps contrary to initial intuition, the optimal scaling c · q, c > 0, of q to approximate p (with respect to the L1-distance) is not necessarily obtained by scaling q so that c · q is a distribution over I. However, a simple argument (see e.g., Appendix A.1 of [CDSS14]) shows that scaling so that c · q is a distribution cannot result in L1-error more than twice that of the optimal scaling: Claim 3.4. Let p, g : I → R≥0 be probability distributions over I (so ∫ I p(x)dx = ∫ I g(x)dx = 1).\nThen, writing ‖f‖1 to denote ∫ I |f(x)|dx, for every a > 0 we have that ‖p − g‖1 ≤ 2‖p− ag‖1.\nWe now proceed with the proof of Lemma 3.3. We first show that a total of at most O(k log(1/ε′)) intervals are ever added into Ft across all executions of Step 4(b). Suppose that intervals It−1,i, It−1,i+1 are added into Ft in some execution of Step 4(b). We consider the following two cases:\nCase 1: It−1,i ∪ It−1,i+1 contains at least one breakpoint of Q. Since Q has at most k breakpoints, this can happen at most k times in total.\nCase 2: It−1,i ∪ It−1,i+1 does not contain any breakpoint of Q. Then It−1,i ∪ It−1,i+1 is a subset of an interval in Q. Recalling that intervals It−1,i, It−1,i+1 were added into Ft in an execution of Step 4(b), we have that αp̂m(It−1,i, It−1,i+1) > ε ′/(2k), and hence by Lemma 3.2, we have that\nαp(It−1,i, It−1,i+1) ≥ 15 · ε ′ k . Claim 3.4 now implies that the contribution to the L1 distance\nbetween p and q from It−1,i ∪ It−1,i+1, i.e., ∫ It−1,i∪It−1,i+1 |p(x)− q(x)|dx, is at least 110 ε ′ k . Since ‖p− q‖1 = optk(p), there can be at most\nk +O\n( optk(p) · k\nε′\n) = O ( k · log 1\nε\n)\nintervals ever added into Ft across all executions of Step 4(b) (note that for the last equality we have used the assumption that optk(p) ≤ ε).\nNext, we argue that each Ft satisfies |Ft| ≤ O(k log2(1/ε)). We have bounded the number of intervals added into Ft in Step 4(b) by O(k log(1/ε′)), so it remains to bound the number of intervals added in Step 4(c)(Case 3) and 4(c)(Case 4). It is clear that a total of at most O(log(1/ε′)) intervals are ever added in 4(c)(Case 4). Inspection of Step 4(c)(Case 3) shows that for a given value of t, the number of intervals that this step adds to Ft is at most the number of “blocks” of consecutive Ft-intervals. Since each interval added in Step 4(c)(Case 3) extends some blocks of consecutive Ft-intervals but does not create a new one (and hence does not increase their number), across the s = log(1/ε′) stages, the total number of intervals that can be added in executions of Step 4(c)(Case 3) is at most O(k log2(1/ε′)). It follows that we have |Fs| = O(k log2(1/ε)) as claimed.\nTo bound |Pt\\Ft|, we observe that by inspection of the algorithm, for each t we have |Pt \\Ft| ≤ 1 2 |Pt−1 \\Ft−1|. Since |P0| = Θ(k/ε′), it follows that |Ps \\Fs| = O(k), and the lemma is proved.\nThe following definition will be useful:\nDefinition 5. Let P denote any partition of [0, 1). We say that partition P is ε′-good for (p, q) if for every breakpoint v of Q, the interval I in P containing v satisfies p(I) ≤ ε′/(2k).\nThe above definition is justified by the following lemma:\nLemma 3.5. If P is ε′-good for (p, q), then ‖p − (p)P‖1 ≤ 2optk(p) + ε′.\nProof. Fix an interval I in P. If there does not exist an interval J in Q such that I ⊆ J , then I must contain a breakpoint of Q, and hence since P is ε′-good for (p, q), we have p(I) ≤ ε′/(2k). This implies that the contribution to ‖(p)P − q‖1 that comes from I, namely ∫ I |(p)P(x)− q(x)|dx, satisfies ∫\nI |(p)P (x)− q(x)|dx ≤\n∫\nI |(p)P (x)− p(x)|dx+\n∫\nI |p(x)− q(x)|dx\n≤ ∫\nI |p(x)− q(x)|dx+ 2p(I)\n≤ ∫\nI |p(x)− q(x)|dx+ ε\n′\nk .\nThe other possibility is that there exists an interval J in Q such that I ⊆ J . In this case, we have that ∫\nI |(p)P (x)− q(x)|dx ≤\n∫\nI |p(x)− q(x)|dx.\nSince there are at most k intervals in P containing breakpoints of Q, summing the above inequalities over all intervals I in P, we get that\n‖(p)P − q‖1 ≤ ‖p − q‖1 + ε′ = optk(p) + ε′,\nand hence ‖(p)P − p‖1 ≤ ‖(p)P − q‖1 + ‖p− q‖1 ≤ 2optk(p) + ε′.\nWe are now in a position to prove the following:\nLemma 3.6. There exists a partition R of [0, 1) that is ε′-good for (p, q) and satisfies\n‖(p)Ps − (p)R‖1 ≤ ε.\nProof. We construct the claimed R based on Ps,Ps−1, . . . ,P0 as follows:\n(i) If I is an interval in Ps not containing a breakpoint of Q, then I is also in R.\n(ii) If I is an interval in Ps that does contain a breakpoint of Q, then we further partition I into a set of intervals S by calling procedure Refine-partition(s, I). This recursive procedure exploits the local structure of the earlier, finer partitions Ps−1,Ps−2, . . . as described below.\nProcedure Refine-partition:\nInput: Integer t, Interval J\nOutput: S, a partition of interval J\n1. If t = 0, then output {J}. 2. If J is an interval in Pt, then\n(a) If J contains a breakpoint of Q, then output Refine-partition(t− 1, J).\n(b) Otherwise output {J}. 3. Otherwise, J is a union of two intervals in Pt. Let J1 and J2 denote the two\nintervals in Pt such that J1 ∪ J2 = J . Output Refine-partition(t, J1) ∪ Refine-partition(t, J2).\nWe claim that |R| (the number of intervals in R) is at most |Ps| + O(k · log 1ε ). To see this, note that each interval I ∈ Ps not containing a breakpoint of Q (corresponding to (i) above) translates directly to a single interval of R. For each interval of type (ii) in Ps, inspection of the Refine-Partition procedure shows that that these intervals are partitioned into at most O(k log(1/ε)) intervals in R.\nIn the rest of the proof, we show that for any interval J in Ps containing at least one breakpoint of Q, the contribution to the L1 distance between (p)Ps and (p)R coming from interval J is at most |bJ | · ε ′ log 1 ε\nk , where bJ is the set of breakpoints of Q in J . Consider a fixed breakpoint v of Q. Let It,v denote the interval containing v in the partition Pt. If It,v merges with another interval in Pt in Case 1 of Step 4(c), we denote that other interval as I ′t,v. Since It,v merges with I ′ t,v in Case 1 of Step 4(c), these intervals are both not in Ft and hence were both not in Ft−1 in Step 4(b). Consequently when t > 1 it must be the case that condition (ii) of Step 4(b) does not hold for these intervals, i.e., αp̂m(It,v, I ′ t,v) ≤ ε′/(2k). It follows that by Lemma 3.2, we have that αp(It,v, I ′ t,v) is at most 4ε′\n5k . When t = 1, we have a similar bound αp(It,v, I ′ t,v) ≤ ε′/k, by using (1) and the fact that p(It,v), p(I ′t,v) ≤ ε′/2k when It,v, I ′t,v ∈ P0.\nOn the other hand, inspection of the procedure Refine-Partition gives that if two intervals in Pt are unions of some intervals in Refine-partition(s, I), and their union is an interval in Pt+1, then there exists v which is a breakpoint of Q such that the two intervals are It,v and I ′t,v.\nThus, the contribution to the L1 distance between (p) Ps and (p)R coming from interval J is at\nmost ε ′ k · log 1ε′ · |bJ |. Summing over all intervals J that contain at least one breakpoint and recalling that the total number of breakpoints is at most k, we get that the overall L1 distance between (p)Ps and (p)R is at most ε.\nFinally, by putting everything together we can prove Theorem 4:\nProof of Theorem 4. By Lemma 3.5 applied to R, we have that ‖p− (p)R‖1 ≤ 2optk(p)+ ε′. By Lemma 3.6, we have that ‖(p)Ps −(p)R‖1 ≤ ε; thus the triangle inequality gives that ‖p−(p)Ps‖1 ≤ 2optk(p)+2ε. By Lemma 3.3 the partition Ps contains at mostO(k log2(1/ε)) intervals, so both (p)Ps and (p̂m)\nPs are O(k log2(1/ε))-flat distributions. Thus, ‖(p)Ps − (p̂m)Ps‖1 = ‖(p)Ps − (p̂m)Ps‖Aℓ , where ℓ = O(k log2(1/ε)) and Aℓ is the family of all subsets of [0, 1) that consist of unions of up to ℓ intervals (which has VC dimension 2ℓ). Consequently by the VC inequality (Theorem 3, for a suitable choice of m = Õ(k/ε′2), we have that E[‖(p)Ps − (p̂m)Ps‖1] ≤ 4ε′/100. Markov’s inequality now gives that with probability at least 96/100, we have ‖(p)Ps −(p̂m)Ps‖1 ≤ ε′. Hence, with overall probability at least 19/20 (recall the 1/100 error probability incurred in Lemma 3.1), we have that ‖p− (p̂m)Ps‖1 ≤ 2optk(p) + 3ε, and the theorem is proved.\n3.2 A general reduction to the case of small opt for semi-agnostic learning\nIn this section we show that under mild conditions, the general problem of agnostic distribution learning for a class C can be efficiently reduced to the special case when optC is not too large compared with ε. While the reduction is simple and generic, we have not previously encountered it\nin the literature on density estimation, so we provide a proof in the following. A precise statement of the reduction follows:\nTheorem 6. Let A be an algorithm with the following behavior: A is given as input i.i.d. points drawn from p and a parameter ε > 0. A uses m(ε) = Ω(1/ε) draws from p, runs in time t(ε) = Ω(1/ε), and satisfies the following: if optC(p) ≤ 10ε, then with probability at least 19/20 it outputs a hypothesis distribution q such that (i) ‖p− q‖1 ≤ α · optC(p)+ ε, where α is an absolute constant, and (ii) given any r ∈ [0, 1), the value q(r) of the pdf of q at r can be efficiently computed in T time steps.\nThen there is an algorithm A′ with the following performance guarantee: A′ is given as input i.i.d. draws from p and a parameter ε > 0.2 Algorithm A′ uses O(m(ε/10)+ log log(1/ε)/ε2) draws from p, runs in time O(t(ε/10)) + T · Õ(1/ε2), and outputs a hypothesis distribution q′ such that with probability at least 39/40 we have ‖p− q′‖1 ≤ 10(α+ 2) · optC(p) + ε.\nProof. The algorithm A′ works in two stages, which we describe and analyze below. In the first stage, A′ iterates over ⌈log(20/ε)⌉ “guesses” for the value of optC(p), where the i-th guess gi is ε 10 · 2i−1 (so g1 = ε10 and g⌈log(20/ε)⌉ ≥ 1). For each value of gi, it performs r = O(1) runs of Algorithm A (using a fresh sample from p for each run) using parameter gi as the “ε” parameter for each run; let h1,i, . . . , hr,i be the r hypotheses thus obtained for the i-th guess. It is clear that this stage uses O(m(ε/10)+m(2ε/10)+ · · · ) = O(m(ε)) draws from p, and similarly that it runs in time O(t(ε)). If optC(p) ≤ ε, then (for a suitable choice of r = O(1)) we get that with probability at least 39/40, some hypothesis h1,ℓ satisfies ‖p−h1,ℓ‖ ≤ α · optC(p)+ ε/10. Otherwise, there must be some i ∈ {2, . . . , ⌈log(20/ε)⌉} such that gi/2 < optC(p) ≤ gi; in this case, for a suitable choice of r = O(1) we get that with probability at least 39/40, there is some hypothesis hi,ℓ that satisfies ‖p − hi,ℓ‖1 ≤ α · optC(p) + gi ≤ (α + 2) · optC(p). Thus in either event, with probability at least 39/40 some hi,ℓ satisfies ‖p − hi,ℓ‖1 ≤ (α+ 2) · optC(p) + ε/10.\nIn the second stage, A′ runs a hypothesis selection procedure to choose one of the candidate hypotheses hi,ℓ. A number of such procedures are known (see e.g., Section 6.6 of [DL01] or [DDS12, DK14, AJOS14]); all of them work by running some sort of “tournament” over the hypotheses, and all have the guarantee that with high probability they will output a hypothesis from the pool of candidates which has L1 error (with respect to the target distribution p) not much worse than that of the best candidate in the pool. We use the classic Scheffé algorithm (see [DL01]) as described and analyzed in [AJOS14] (see Algorithm SCHEFFE∗ in Appendix B of that paper). Adapted to our context, this algorithm has the following performance guarantee:\nProposition 3.7. Let p be a target distribution over [0, 1) and let Dτ = {pj}Nj=1 be a collection of N distributions over [0, 1) with the property that there exists i ∈ [N ] such that ‖p−pi‖1 ≤ τ . There is a procedure SCHEFFE which is given as input a parameter ε > 0 and a confidence parameter δ > 0, and is provided with access to\n(i) i.i.d. draws from p and from pi for all i ∈ [N ], and\n(ii) an evaluation oracle evalpi for each ∈ [N ]. This is a procedure which, on input r ∈ [0, 1), outputs the value pi(r) of the pdf of pi at the point r.\nThe procedure SCHEFFE has the following behavior: It makes s = O ( (1/ε2) · (logN + log(1/δ)) )\ndraws from p and from each pi, i ∈ [N ], and O(s) calls to each oracle evalpi , i ∈ [N ], and performs O(sN2) arithmetic operations. With probability at least 1 − δ it outputs an index i⋆ ∈ [N ] that satisfies ‖p− pi⋆‖1 ≤ 10max{τ, ε}.\n2 Note that now there is no guarantee that optC(p) ≤ ε; indeed, the point here is that optC(p) may be arbitrary.\nThe algorithm A′ runs the procedure SCHEFFE using the N = O(log(1/ε)) hypotheses hi,ℓ, with its “ε” parameter set to 110 ·(the input parameter ε that is given to A′) and its “δ” parameter set to 1/40. By Proposition 3.7, with overall probability at least 19/20 the output is a hypothesis hi,ℓ satisfying ‖p− hi,ℓ‖1 ≤ 10(α+2)optC(p) + ε. The overall running time and sample complexity are easily seen to be as claimed, and the theorem is proved."
    }, {
      "heading" : "3.3 Dealing with distributions that are not well behaved",
      "text" : "The assumption that the target distribution p is Θ̃(ε/k)-well-behaved can be straightforwardly removed by following the approach in Section 3.6 of [CDSS14]. That paper presents a simple linear-time sampling-based procedure, using Õ(k/ε) samples, that with high probability identifies all the “heavy” elements (atoms which cause p to not be well-behaved, if any such points exist).\nOur overall algorithm first runs this procedure to find the set S of “heavy” elements, and then runs the algorithm presented above (which succeeds for well-behaved distributions, i.e., distributions that have no “heavy” elements) using as its target distribution the conditional distribution of p over [0, 1) \\ S (let us denote this conditional distribution by p′). A straightforward analysis given in [CDSS14] shows that (i) optk(p) ≥ optk(p′), and moreover (ii) dTV(p, p′) ≤ optk(p). Thus, by the triangle inequality, any hypothesis h satisfying dTV(h, p\n′) ≤ Coptk(p′) + ε will also satisfy dTV(h, p) ≤ (C + 1)optk(p) + ε as desired."
    }, {
      "heading" : "4 Lower bounds on agnostic learning",
      "text" : "In this section we establish that α-agnostic learning with α < 2 is information theoretically impossible, thus establishing Theorem 2.\nFix any 0 < t < 1/2. We define a probability distribution Dt over a finite set of discrete distributions over the domain [2N ] = {1, . . . , 2N} as follows. (We assume without loss of generality below that t is rational and that tN is an integer.) A draw of pS1,S2,t from Dt is obtained as follows.\n1. A set S1 ⊂ [N ] is chosen uniformly at random from all subsets of [N ] that contain precisely tN elements. For i ∈ [N ], the distribution pS1,S2,t assigns probability weight as follows:\npS1,S2,t(i) = 1\n4N if i ∈ S1, pS1,S2,t(i) =\n1\n2N\n( 1 +\nt\n2(1 − t)\n) if i ∈ [N ] \\ S1.\n2. A set S2 ⊂ [N +1, . . . , 2N ] is chosen uniformly at random from all subsets of [N +1, . . . , 2N ] that contain precisely tN elements. For i ∈ [N + 1, . . . , 2N ], the distribution pS1,S2,t assigns probability weight as follows:\npS1,S2,t(i) = 3\n4N if i ∈ S2,\n1\n2N\n( 1− t\n2(1− t)\n) if i ∈ [N ] \\ S1.\nUsing a birthday paradox type argument, we show that no o( √ N)-sample algorithm can successfully distinguish between a distribution pS1,S2,t ∼ Dt and the uniform distribution over [2N ]. We then leverage this indistinguishability to show that any (2−δ)-semi-agnostic learning algorithm, even for 2-flat distributions, must use a sample of size Ω( √ N):\nTheorem 7. Fix any δ > 0 and any function f(·). There is no algorithm A with the following property: given ε > 0 and access to independent points drawn from an unknown distribution p over\n[2N ], algorithm A makes o( √ N) · f(ε) draws from p and with probability at least 51/100 outputs a hypothesis distribution h over [2N ] satisfying ‖h− p‖1 ≤ (2− δ)opt2(p) + ε.\nProof. We write U2N to denote the uniform distribution over [2N ]. The following proposition shows that U2N has L1 distance from pS1,S2,t almost twice that of the optimal 2-flat distribution: Proposition 4.1. Fix any 0 < t < 1/2.\n1. For any distribution pS1,S2,t in the support of Dt, we have\n‖U2N − pS1,S2,t‖1 = t.\n2. For any distribution pS1,S2,t in the support of Dt, we have\nopt2(pS1,S2,t) ≤ t\n2\n( 1 + t\n1− t\n) .\nProof. Part (1.) is a simple calculation. For part (2.), consider the 2-flat distribution\nq(i) =    1 2N ( 1 + t2(1−t) ) if i ∈ [N ]\n1 2N ( 1− t2(1−t) ) if i ∈ [N + 1, . . . , 2N ]\nIt is straightforward to verify that ‖pS1,S2,t − q‖1 = t2 ( 1 + t1−t ) as claimed.\nFor a distribution p we write Ap to indicate that algorithm A is given access to i.i.d. points drawn from p.\nThe following simple proposition states that no algorithm can successfully distinguish between a distribution pS1,S2,t ∼ Dt and U2N using fewer than (essentially) √ N draws:\nProposition 4.2. There is an absolute constant c > 0 such that the following holds: Fix any 0 < t < 1/2, and let B be any “distinguishing algorithm” which receives c √ N i.i.d. draws from a distribution over [2N ] and outputs either “uniform” or “non-uniform”. Then\n∣∣∣Pr[BU[2N] outputs “uniform”]−PrpS1,S2,t∼Dt [B pS1,S2,t outputs “uniform”] ∣∣∣ ≤ 0.01. (2)\nThe proof is an easy consequence of the fact that in both cases (the distribution is U[2N ], or the distribution is pS1,S2,t ∼ Dt), with probability at least 0.99 the c √ N draws received by A are a\nuniform random set of c √ N distinct elements from [2N ] (this can be shown straighforwardly using a birthday paradox type argument). Now we use Proposition 4.2 to show that any (2− δ)-semi-agnostic learning algorithm even for\n2-flat distributions must use a sample of size Ω( √ N), and thereby prove Theorem 7.\nFix a value of δ > 0 and suppose, for the sake of contradiction, that there exists such an algorithm A. We describe how the existence of such an algorithm A yields a distinguishing algorithm B that violates Proposition 4.2.\nThe algorithm B works as follows, given access to i.i.d. draws from an unknown distribution p. It first runs algorithm A with its “ε” parameter set to ε := δ 3\n12(2+δ) , obtaining (with probability\nat least 51/100) a hypothesis distribution h over [2N ] such that ‖h − p‖1 ≤ (2 − δ)opt2(p) + ε. It then computes the value ‖h − U2N‖1 of the L1-distance between h and the uniform distribution\n(note that this step uses no draws from the distribution). If ‖h − U2N‖1 < 3ε/2 then it outputs “uniform” and otherwise it outputs “non-uniform.”\nSince δ (and hence ε) is independent of N , the algorithm B makes fewer than c √ N draws from p (for N sufficiently large). To see that the above-described algorithm B violates (2), consider first the case that p is U[2N ]. In this case opt2(p) = 0 and so with probability at least 51/100 the hypothesis h satisfies ‖h− U2N‖1 ≤ ε, and hence algorithm B outputs “uniform” with probability at least 51/100.\nOn the other hand, suppose that p = pS1,S2,t is drawn from Dt, where t = δ2+δ . In this case, with probability at least 51/100 the hypothesis h satisfies\n‖h− pS1,S2,t‖1 ≤ (2− δ)opt2(pS1,S2,t) + ε ≤ (2− δ) · t 2 · ( 1 + t 1− t ) + ε,\nby part (2.) of Proposition 4.1. Since by part (1.) of Proposition 4.1 we have ‖U2N − pS1,S2,t‖1 = t, the triangle inequality gives that\n‖h− U2N‖1 ≥ t− (2− δ) · t 2 · ( 1 + t 1− t ) − ε = 2ε,\nwhere to obtain the final equality we recalled the settings ε = δ 3 12(2+δ) , t = δ 2+δ . Hence algorithm B outputs “uniform” with probability at most 49/100. Thus we have\n∣∣∣Pr[BU[2N] outputs “uniform”]−PrpS1,S2,t∼Dt [B pS1,S2,t outputs “uniform”] ∣∣∣ ≥ 0.02\nwhich contradicts (2) and proves the theorem.\nAs described in the Introduction, via the obvious correspondence that maps distributions over [N ] to distributions over [0, 1), we get the following:\nCorollary 4.3. Fix any δ > 0 and any function f(·). There is no algorithm A with the following property: given ε > 0 and access to independent draws from an unknown distribution p over [0, 1), algorithm A makes f(ε) draws from p and with probability at least 51/100 outputs a hypothesis distribution h over [0, 1) satisfying ‖h− p‖1 ≤ (2− δ)opt2(p) + ε."
    } ],
    "references" : [ {
      "title" : "Near-optimal-sample estimators for spherical gaussian mixtures",
      "author" : [ "J. Acharya", "A. Jafarpour", "A. Orlitsky", "A.T. Suresh" ],
      "venue" : "Technical Report http://arxiv.org/abs/1402.4746,",
      "citeRegEx" : "Acharya et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Acharya et al\\.",
      "year" : 2014
    }, {
      "title" : "Statistical Inference under Order Restrictions",
      "author" : [ "R.E. Barlow", "D.J. Bartholomew", "J.M. Bremner", "H.D. Brunk" ],
      "venue" : null,
      "citeRegEx" : "Barlow et al\\.,? \\Q1972\\E",
      "shortCiteRegEx" : "Barlow et al\\.",
      "year" : 1972
    }, {
      "title" : "Estimating a density under order restrictions: Nonasymptotic minimax risk",
      "author" : [ "L. Birgé" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "Birgé.,? \\Q1987\\E",
      "shortCiteRegEx" : "Birgé.",
      "year" : 1987
    }, {
      "title" : "Estimation of unimodal densities without smoothness assumptions",
      "author" : [ "L. Birgé" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "Birgé.,? \\Q1997\\E",
      "shortCiteRegEx" : "Birgé.",
      "year" : 1997
    }, {
      "title" : "On the estimation of parameters restricted by inequalities",
      "author" : [ "H.D. Brunk" ],
      "venue" : "Ann. Math. Statist.,",
      "citeRegEx" : "Brunk.,? \\Q1958\\E",
      "shortCiteRegEx" : "Brunk.",
      "year" : 1958
    }, {
      "title" : "Learning mixtures of structured distributions over discrete domains",
      "author" : [ "S. Chan", "I. Diakonikolas", "R. Servedio", "X. Sun" ],
      "venue" : "In SODA,",
      "citeRegEx" : "Chan et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Chan et al\\.",
      "year" : 2013
    }, {
      "title" : "Efficient density estimation via piecewise polynomial approximation",
      "author" : [ "S. Chan", "I. Diakonikolas", "R. Servedio", "X. Sun" ],
      "venue" : "Technical Report http://arxiv.org/abs/1305.3207, conference version in STOC,",
      "citeRegEx" : "Chan et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Chan et al\\.",
      "year" : 2014
    }, {
      "title" : "Random sampling for histogram construction: How much is enough",
      "author" : [ "S. Chaudhuri", "R. Motwani", "V. Narasayya" ],
      "venue" : "In SIGMOD Conference,",
      "citeRegEx" : "Chaudhuri et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Chaudhuri et al\\.",
      "year" : 1998
    }, {
      "title" : "Inverse problems in approximate uniform generation",
      "author" : [ "A. De", "I. Diakonikolas", "R. Servedio" ],
      "venue" : "Available at http://arxiv.org/pdf/1211.1722v1.pdf,",
      "citeRegEx" : "De et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "De et al\\.",
      "year" : 2012
    }, {
      "title" : "Nonparametric Density Estimation: The L1 View",
      "author" : [ "L. Devroye", "L. Györfi" ],
      "venue" : null,
      "citeRegEx" : "Devroye and Györfi.,? \\Q1985\\E",
      "shortCiteRegEx" : "Devroye and Györfi.",
      "year" : 1985
    }, {
      "title" : "Faster and sample near-optimal algorithms for proper learning mixtures of gaussians",
      "author" : [ "C. Daskalakis", "G. Kamath" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Daskalakis and Kamath.,? \\Q2014\\E",
      "shortCiteRegEx" : "Daskalakis and Kamath.",
      "year" : 2014
    }, {
      "title" : "Combinatorial methods in density estimation",
      "author" : [ "L. Devroye", "G. Lugosi" ],
      "venue" : null,
      "citeRegEx" : "Devroye and Lugosi.,? \\Q2001\\E",
      "shortCiteRegEx" : "Devroye and Lugosi.",
      "year" : 2001
    }, {
      "title" : "Fast, small-space algorithms for approximate histogram maintenance",
      "author" : [ "A. Gilbert", "S. Guha", "P. Indyk", "Y. Kotidis", "S. Muthukrishnan", "M. Strauss" ],
      "venue" : "In STOC,",
      "citeRegEx" : "Gilbert et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Gilbert et al\\.",
      "year" : 2002
    }, {
      "title" : "Approximation and streaming algorithms for histogram construction problems",
      "author" : [ "S. Guha", "N. Koudas", "K. Shim" ],
      "venue" : "ACM Trans. Database Syst.,",
      "citeRegEx" : "Guha et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Guha et al\\.",
      "year" : 2006
    }, {
      "title" : "On the theory of mortality",
      "author" : [ "U. Grenander" ],
      "venue" : "measurement. Skand. Aktuarietidskr.,",
      "citeRegEx" : "Grenander.,? \\Q1956\\E",
      "shortCiteRegEx" : "Grenander.",
      "year" : 1956
    }, {
      "title" : "Estimating a monotone density",
      "author" : [ "P. Groeneboom" ],
      "venue" : "In Proc. of the Berkeley Conference in Honor of Jerzy Neyman and Jack Kiefer,",
      "citeRegEx" : "Groeneboom.,? \\Q1985\\E",
      "shortCiteRegEx" : "Groeneboom.",
      "year" : 1985
    }, {
      "title" : "Consistency in concave regression",
      "author" : [ "D.L. Hanson", "G. Pledger" ],
      "venue" : "The Annals of Statistics,",
      "citeRegEx" : "Hanson and Pledger.,? \\Q1976\\E",
      "shortCiteRegEx" : "Hanson and Pledger.",
      "year" : 1976
    }, {
      "title" : "Approximating and Testing k-Histogram Distributions in Sub-linear Time",
      "author" : [ "P. Indyk", "R. Levi", "R. Rubinfeld" ],
      "venue" : "In PODS,",
      "citeRegEx" : "Indyk et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Indyk et al\\.",
      "year" : 2012
    }, {
      "title" : "Optimal histograms with quality guarantees",
      "author" : [ "H.V. Jagadish", "N. Koudas", "S. Muthukrishnan", "V. Poosala", "K. Sevcik", "T. Suel" ],
      "venue" : "In VLDB,",
      "citeRegEx" : "Jagadish et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Jagadish et al\\.",
      "year" : 1998
    }, {
      "title" : "On the learnability of discrete distributions",
      "author" : [ "M. Kearns", "Y. Mansour", "D. Ron", "R. Rubinfeld", "R. Schapire", "L. Sellie" ],
      "venue" : "In Proc. 26th STOC,",
      "citeRegEx" : "Kearns et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Kearns et al\\.",
      "year" : 1994
    }, {
      "title" : "Estimation of a unimodal density",
      "author" : [ "B.L.S. Prakasa Rao" ],
      "venue" : "Sankhya Ser. A,",
      "citeRegEx" : "Rao.,? \\Q1969\\E",
      "shortCiteRegEx" : "Rao.",
      "year" : 1969
    }, {
      "title" : "Estimation of a function under shape restrictions",
      "author" : [ "L. Reboul" ],
      "venue" : "Applications to reliability. Ann. Statist.,",
      "citeRegEx" : "Reboul.,? \\Q2005\\E",
      "shortCiteRegEx" : "Reboul.",
      "year" : 2005
    }, {
      "title" : "Multivariate Density Estimation: Theory, Practice and Visualization",
      "author" : [ "D.W. Scott" ],
      "venue" : null,
      "citeRegEx" : "Scott.,? \\Q1992\\E",
      "shortCiteRegEx" : "Scott.",
      "year" : 1992
    }, {
      "title" : "Density Estimation",
      "author" : [ "B.W. Silverman" ],
      "venue" : null,
      "citeRegEx" : "Silverman.,? \\Q1986\\E",
      "shortCiteRegEx" : "Silverman.",
      "year" : 1986
    }, {
      "title" : "A theory of the learnable",
      "author" : [ "L.G. Valiant" ],
      "venue" : "In Proc. 16th Annual ACM Symposium on Theory of Computing (STOC),",
      "citeRegEx" : "Valiant.,? \\Q1984\\E",
      "shortCiteRegEx" : "Valiant.",
      "year" : 1984
    }, {
      "title" : "Maximum likelihood estimation of a unimodal density",
      "author" : [ "E.J. Wegman" ],
      "venue" : "I. and II. Ann. Math. Statist.,",
      "citeRegEx" : "Wegman.,? \\Q1970\\E",
      "shortCiteRegEx" : "Wegman.",
      "year" : 1970
    } ],
    "referenceMentions" : [ ],
    "year" : 2014,
    "abstractText" : "Let p be an unknown and arbitrary probability distribution over [0, 1). We consider the problem of density estimation, in which a learning algorithm is given i.i.d. draws from p and must (with high probability) output a hypothesis distribution that is close to p. The main contribution of this paper is a highly efficient density estimation algorithm for learning using a variable-width histogram, i.e., a hypothesis distribution with a piecewise constant probability density function. In more detail, for any k and ε, we give an algorithm that makes Õ(k/ε) draws from p, runs in Õ(k/ε) time, and outputs a hypothesis distribution h that is piecewise constant with O(k log(1/ε)) pieces. With high probability the hypothesis h satisfies dTV(p, h) ≤ C ·optk(p)+ε, where dTV denotes the total variation distance (statistical distance), C is a universal constant, and opt k (p) is the smallest total variation distance between p and any k-piecewise constant distribution. The sample size and running time of our algorithm are optimal up to logarithmic factors. The “approximation factor” C in our result is inherent in the problem, as we prove that no algorithm with sample size bounded in terms of k and ε can achieve C < 2 regardless of what kind of hypothesis distribution it uses.",
    "creator" : "LaTeX with hyperref package"
  }
}