{
  "name" : "1407.2657.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Beyond Disagreement-based Agnostic Active Learning",
    "authors" : [ "Chicheng Zhang" ],
    "emails" : [ "chz038@eng.ucsd.edu", "kamalika@cs.ucsd.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 7.\n26 57\nv2 [\ncs .L\nWe study agnostic active learning, where the goal is to learn a classifier in a pre-specified hypothesis class interactively with as few label queries as possible, while making no assumptions on the true function generating the labels. The main algorithms for this problem are disagreement-based active learning, which has a high label requirement, and margin-based active learning, which only applies to fairly restricted settings. A major challenge is to find an algorithm which achieves better label complexity, is consistent in an agnostic setting, and applies to general classification problems.\nIn this paper, we provide such an algorithm. Our solution is based on two novel contributions – a reduction from consistent active learning to confidence-rated prediction with guaranteed error, and a novel confidence-rated predictor."
    }, {
      "heading" : "1 Introduction",
      "text" : "In this paper, we study active learning of classifiers in an agnostic setting, where no assumptions are made on the true function that generates the labels. The learner has access to a large pool of unlabelled examples, and can interactively request labels for a small subset of these; the goal is to learn an accurate classifier in a pre-specified class with as few label queries as possible. Specifically, we are given a hypothesis class H and a target ǫ, and our aim is to find a binary classifier in H whose error is at most ǫ more than that of the best classifier in H, while minimizing the number of requested labels.\nThere has been a large body of previous work on active learning; see the surveys by [Das11, Set10] for overviews. The main challenge in active learning is ensuring consistency in the agnostic setting while still maintaining low label complexity. In particular, a very natural approach to active learning is to view it as a generalization of binary search [FSST97, Das05, Now11]. While this strategy has been extended to several different noise models [Kää06, Now11, NJC13], it is generally inconsistent in the agnostic case [DH08].\nThe primary algorithm for agnostic active learning is called disagreement-based active learning. The main idea is as follows. A set Vk of possible risk minimizers is maintained with time, and the label of an example x is queried if there exist two hypotheses h1 and h2 in Vk such that h1(x) 6= h2(x). This algorithm is consistent in the agnostic setting [CAL94, BBL09, DHM07, Han07, BDL09, Han09, BHLZ10, Kol10]; however, due to the conservative label query policy, its label requirement is high. A line of work due to [BBZ07, BL13, ABL14] have provided algorithms that achieve better label complexity for linear classification on the uniform\ndistribution over the unit sphere as well as log-concave distributions; however, their algorithms are limited to these specific cases, and it is unclear how to apply them more generally.\nThus, a major challenge in the agnostic active learning literature has been to find a general active learning strategy that applies to any hypothesis class and data distribution, is consistent in the agnostic case, and has a better label requirement than disagreement based active learning. This has been mentioned as an open problem by several works, such as [BBL09, Das11, BL13].\nIn this paper, we provide such an algorithm. Our solution is based on two key contributions, which may be of independent interest. The first is a general connection between confidence-rated predictors and active learning. A confidence-rated predictor is one that is allowed to abstain from prediction on occasion, and as a result, can guarantee a target prediction error. Given a confidence-rated predictor with guaranteed error, we show how to use it to construct an active label query algorithm consistent in the agnostic setting. Our second key contribution is a novel confidence-rated predictor with guaranteed error that applies to any general classification problem. We show that our predictor is optimal in the realizable case, in the sense that it has the lowest abstention rate out of all predictors that guarantee a certain error. Moreover, we show how to extend our predictor to the agnostic setting.\nCombining the label query algorithm with our novel confidence-rated predictor, we get a general active learning algorithm consistent in the agnostic setting. We provide a characterization of the label complexity of our algorithm, and show that this is better than disagreement-based active learning in general. Finally, we show that for linear classification with respect to the uniform distribution and log-concave distributions, our bounds reduce to those of [BBZ07, BL13]."
    }, {
      "heading" : "2 Algorithm",
      "text" : ""
    }, {
      "heading" : "2.1 The Setting",
      "text" : "We study active learning for binary classification. Examples belong to an instance space X , and their labels lie in a label space Y = {−1, 1}; labelled examples are drawn from an underlying data distribution D on X × Y. We use DX to denote the marginal on D on X , and DY |X to denote the conditional distribution on Y |X = x induced by D. Our algorithm has access to examples through two oracles – an example oracle U which returns an unlabelled example x ∈ X drawn from DX and a labelling oracle O which returns the label y of an input x ∈ X drawn from DY |X .\nGiven a hypothesis class H of VC dimension d, the error of any h ∈ H with respect to a data distribution Π over X × Y is defined as errΠ(h) = P(x,y)∼Π(h(x) 6= y). We define: h∗(Π) = argminh∈HerrΠ(h), ν∗(Π) = errΠ(h\n∗(Π)). For a set S, we abuse notation and use S to also denote the uniform distribution over the elements of S. We define PΠ(·) := P(x,y)∼Π(·), EΠ(·) := E(x,y)∼Π(·).\nGiven access to examples from a data distribution D through an example oracle U and a labeling oracle O, we aim to provide a classifier ĥ ∈ H such that with probability ≥ 1 − δ, errD(ĥ) ≤ ν∗(D) + ǫ, for some target values of ǫ and δ; this is achieved in an adaptive manner by making as few queries to the labelling oracle O as possible. When ν∗(D) = 0, we are said to be in the realizable case; in the more general agnostic case, we make no assumptions on the labels, and thus ν∗(D) can be positive.\nPrevious approaches to agnostic active learning have frequently used the notion of disagreements. The disagreement between two hypotheses h1 and h2 with respect to a data distribution Π is the fraction of examples according to Π to which h1 and h2 assign different labels; formally: ρΠ(h1, h2) = P(x,y)∼Π(h1(x) 6= h2(x)). Observe that a data distribution Π induces a pseudo-metric ρΠ on the elements of H; this is called the disagreement metric. For any r and any h ∈ H, define BΠ(h, r) to be the disagreement ball of radius r around h with respect to the data distribution Π. Formally: BΠ(h, r) = {h′ ∈ H : ρΠ(h, h′) ≤ r}.\nFor notational simplicity, we assume that the hypothesis space is “dense” with repsect to the data distribution D, in the sense that ∀r > 0, suph∈BD(h∗(D),r) ρD(h, h∗(D)) = r. Our analysis will still apply without the denseness assumption, but will be significantly more messy. Finally, given a set of hypotheses V ⊆ H, the disagreement region of V is the set of all examples x such that there exist two hypotheses h1, h2 ∈ V for which h1(x) 6= h2(x).\nThis paper establishes a connection between active learning and confidence-rated predictors with guaranteed error. A confidence-rated predictor is a prediction algorithm that is occasionally allowed to abstain from classification. We will consider such predictors in the transductive setting. Given a set V of candidate hypotheses, an error guarantee η, and a set U of unlabelled examples, a confidence-rated predictor P either assigns a label or abstains from prediction on each unlabelled x ∈ U . The labels are assigned with the guarantee that the expected disagreement1 between the label assigned by P and any h ∈ V is ≤ η. Specifically, for all h ∈ V, Px∼U (h(x) 6= P (x), P (x) 6= 0) ≤ η (1) This ensures that if some h∗ ∈ V is the true risk minimizer, then, the labels predicted by P on U do not differ very much from those predicted by h∗. The performance of a confidence-rated predictor which has a guarantee such as in Equation (1) is measured by its coverage, or the probability of non-abstention Px∼U (P (x) 6= 0); higher coverage implies better performance."
    }, {
      "heading" : "2.2 Main Algorithm",
      "text" : "Our active learning algorithm proceeds in epochs, where the goal of epoch k is to achieve excess generalization error ǫk = ǫ2\nk0−k+1, by querying a fresh batch of labels. The algorithm maintains a candidate set Vk that is guaranteed to contain the true risk minimizer.\nThe critical decision at each epoch is how to select a subset of unlabelled examples whose labels should be queried. We make this decision using a confidence-rated predictor P . At epoch k, we run P with candidate hypothesis set V = Vk and error guarantee η = ǫk/64. Whenever P abstains, we query the label of the example. The number of labels mk queried is adjusted so that it is enough to achieve excess generalization error ǫk+1.\nAn outline is described in Algorithm 1; we next discuss each individual component in detail.\nAlgorithm 1 Active Learning Algorithm: Outline\n1: Inputs: Example oracle U , Labelling oracle O, hypothesis class H of VC dimension d, confidence-rated predictor P , target excess error ǫ and target confidence δ. 2: Set k0 = ⌈log 1/ǫ⌉. Initialize candidate set V1 = H. 3: for k = 1, 2, ..k0 do 4: Set ǫk = ǫ2 k0−k+1, δk = δ\n2(k0−k+1)2 .\n5: Call U to generate a fresh unlabelled sample Uk = {zk,1, ..., zk,nk} of size nk = 192(256ǫk ) 2(d ln 256ǫk +\nln 288δk ).\n6: Run confidence-rated predictor P with inputs V = Vk, U = Uk and error guarantee η = ǫk/64 to get abstention probabilities γk,1, . . . , γk,nk on the examples in Uk. These probabilities induce a distribution Γk on Uk. Let φk = Px∼Uk(P (x) = 0) = 1 nk ∑nk i=1 γk,i. 7: if in the Realizable Case then 8: Let mk =\n768φk ǫk (d ln 768φkǫk + ln 48 δk ). Draw mk i.i.d examples from Γk and query O for labels of\nthese examples to get a labelled data set Sk. Update Vk+1 using Sk: Vk+1 := {h ∈ Vk : h(x) = y, for all (x, y) ∈ Sk}.\n9: else\n10: In the non-realizable case, use Algorithm 2 with inputs hypothesis set Vk, distribution Γk, target excess error ǫk8φk , target confidence δk 2 , and the labeling oracle O to get a new hypothesis set Vk+1. 11: return an arbitrary ĥ ∈ Vk0+1.\nCandidate Sets. At epoch k, we maintain a set Vk of candidate hypotheses guaranteed to contain the true risk minimizer h∗(D) (w.h.p). In the realizable case, we use a version space as our candidate set. The\n1where the expectation is with respect to the random choices made by P\nversion space with respect to a set S of labelled examples is the set of all h ∈ H such that h(xi) = yi for all (xi, yi) ∈ S.\nLemma 1. Suppose we run Algorithm 1 in the realizable case with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P , target excess error ǫ and target confidence δ. Then, with probability 1, h∗(D) ∈ Vk, for all k = 1, 2, . . . , k0 + 1.\nIn the non-realizable case, the version space is usually empty; we use instead a (1−α)-confidence set for the true risk minimizer. Given a set S of n labelled examples, let C(S) ⊆ H be a function of S; C(S) is said to be a (1− α)-confidence set for the true risk minimizer if for all data distributions ∆ over X × Y,\nPS∼∆n [h ∗(∆) ∈ C(S)] ≥ 1− α,\nRecall that h∗(∆) = argminh∈Herr∆(h). In the non-realizable case, our candidate sets are (1−α)-confidence sets for h∗(D), for α = δ. The precise setting of Vk is explained in Algorithm 2.\nLemma 2. Suppose we run Algorithm 1 in the non-realizable case with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P , target excess error ǫ and target confidence δ. Then with probability 1− δ, h∗(D) ∈ Vk, for all k = 1, 2, . . . , k0 + 1.\nLabel Query. We next discuss our label query procedure – which examples should we query labels for, and how many labels should we query at each epoch?\nWhich Labels to Query? Our goal is to query the labels of the most informative examples. To choose these examples while still maintaining consistency, we use a confidence-rated predictor P with guaranteed error. The inputs to the predictor are our candidate hypothesis set Vk which contains (w.h.p) the true risk minimizer, a fresh set Uk of unlabelled examples, and an error guarantee η = ǫk/64. For notation simplicity, assume the elements in Uk are distinct. The output is a sequence of abstention probabilities {γk,1, γk,2, . . . , γk,nk}, for each example in Uk. It induces a distribution Γk over Uk, from which we independently draw examples for label queries.\nHow Many Labels to Query? The goal of epoch k is to achieve excess generalization error ǫk. To achieve this, passive learning requires Õ(d/ǫk) labelled examples 2 in the realizable case, and Õ(d(ν∗(D) + ǫk)/ǫ 2 k) examples in the agnostic case. A key observation in this paper is that in order to achieve excess generalization error ǫk onD, it suffices to achieve a much larger excess generalization errorO(ǫk/φk) on the data distribution induced by Γk and DY |X , where φk is the fraction of examples on which the confidence-rated predictor abstains.\nIn the realizable case, we achieve this by sampling mk = 768φk ǫk (d ln 768φkǫk + ln 48 δk ) i.i.d examples from Γk, and querying their labels to get a labelled dataset Sk. Observe that as φk is the abstention probability of P with guaranteed error ≤ ǫk/64, it is generally smaller than the measure of the disagreement region of the version space; this key fact results in improved label complexity over disagreement-based active learning. This sampling procedure has the following property:\nLemma 3. Suppose we run Algorithm 1 in the realizable case with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P , target excess error ǫ and target confidence δ. Then with probability 1− δ, for all k = 1, 2, . . . , k0 + 1, and for all h ∈ Vk, errD(h) ≤ ǫk. In particular, the ĥ returned at the end of the algorithm satisfies errD(ĥ) ≤ ǫ.\nThe agnostic case has an added complication – in practice, the value of ν∗ is not known ahead of time. Inspired by [Kol10], we use a doubling procedure(stated in Algorithm 2) which adaptively finds the number mk of labelled examples to be queried and queries them. The following two lemmas illustrate its properties – that it is consistent, and that it does not use too many label queries.\n2Õ(·) hides logarithmic factors\nLemma 4. Suppose we run Algorithm 2 with inputs hypothesis set V , example distribution ∆, labelling oracle O, target excess error ǫ̃ and target confidence δ̃. Let ∆̃ be the joint distribution on X × Y induced by ∆ and DY |X . Then there exists an event Ẽ, P(Ẽ) ≥ 1 − δ̃, such that on Ẽ, (1) Algorithm 2 halts and (2) the set Vj0 has the following properties:\n(2.1) If for h ∈ H, err∆̃(h)− err∆̃(h∗(∆̃)) ≤ ǫ̃/2, then h ∈ Vj0 . (2.2) On the other hand, if h ∈ Vj0 , then err∆̃(h)− err∆̃(h∗(∆̃)) ≤ ǫ̃.\nWhen event Ẽ happens, we say Algorithm 2 succeeds.\nLemma 5. Suppose we run Algorithm 2 with inputs hypothesis set V , example distribution ∆, labelling oracle O, target excess error ǫ̃ and target confidence δ̃. There exists some absolute constant c1 > 0, such that on the event that Algorithm 2 succeeds, nj0 ≤ c1((d ln 1ǫ̃ + ln 1δ̃ ) ν∗(∆̃)+ǫ̃ ǫ̃2 ). Thus the total number of labels queried is ∑j0\nj=1 nj ≤ 2nj0 ≤ 2c1((d ln 1ǫ̃ + ln 1δ̃ ) ν∗(∆̃)+ǫ̃ ǫ̃2 ).\nA naive approach (see Algorithm 4 in the Appendix) which uses an additive VC bound gives a sample complexity of O((d ln(1/ǫ̃) + ln(1/δ̃))ǫ̃−2); Algorithm 2 gives a better sample complexity.\nThe following lemma is a consequence of our label query procedure in the non-realizable case.\nLemma 6. Suppose we run Algorithm 1 in the non-realizable case with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P , target excess error ǫ and target confidence δ. Then with probability 1− δ, for all k = 1, 2, . . . , k0 + 1, and for all h ∈ Vk, errD(h) ≤ errD(h∗(D)) + ǫk. In particular, the ĥ returned at the end of the algorithm satisfies errD(ĥ) ≤ errD(h∗(D)) + ǫ.\nAlgorithm 2 An Adaptive Algorithm for Label Query Given Target Excess Error\n1: Inputs: Hypothesis set V of VC dimension d, Example distribution ∆, Labeling oracle O, target excess error ǫ̃, target confidence δ̃. 2: for j = 1, 2, . . . do 3: Draw nj = 2\nj i.i.d examples from ∆; query their labels from O to get a labelled dataset Sj . Denote δ̃j := δ̃/(j(j + 1)).\n4: Train an ERM classifier ĥj ∈ V over Sj . 5: Define the set Vj as follows:\nVj = { h ∈ V : errSj (h) ≤ errSj(ĥj) + ǫ̃\n2 + σ(nj , δ̃j) +\n√\nσ(nj , δ̃j)ρSj (h, ĥj) }\nWhere σ(n, δ) := 8n (2d ln 2en d + ln 24 δ ).\n6: if suph∈Vj (σ(nj , δ̃j) + √\nσ(nj , δ̃j)ρSj (h, ĥj)) ≤ ǫ̃6 then 7: j0 = j, break 8: return Vj0 ."
    }, {
      "heading" : "2.3 Confidence-Rated Predictor",
      "text" : "Our active learning algorithm uses a confidence-rated predictor with guaranteed error to make its label query decisions. In this section, we provide a novel confidence-rated predictor with guaranteed error. This predictor has optimal coverage in the realizable case, and may be of independent interest. The predictor P receives as input a set V ⊆ H of hypotheses (which is likely to contain the true risk minimizer), an error guarantee η, and a set of U of unlabelled examples. We consider a soft prediction algorithm; so, for each example in U , the predictor P outputs three probabilities that add up to 1 – the probability of predicting 1, −1 and 0. This output is subject to the constraint that the expected disagreement3 between the ±1 labels\n3where the expectation is taken over the random choices made by P\nassigned by P and those assigned by any h ∈ V is at most η, and the goal is to maximize the coverage, or the expected fraction of non-abstentions.\nOur key insight is that this problem can be written as a linear program, which is described in Algorithm 3. There are three variables, ξi, ζi and γi, for each unlabelled zi ∈ U ; there are the probabilities with which we predict 1, −1 and 0 on zi respectively. Constraint (2) ensures that the expected disagreement between the label predicted and any h ∈ V is no more than η, while the LP objective maximizes the coverage under these constraints. Observe that the LP is always feasible. Although the LP has infinitely many constraints, the number of constraints in Equation (2) distinguishable by Uk is at most (em/d)\nd, where d is the VC dimension of the hypothesis class H.\nAlgorithm 3 Confidence-rated Predictor\n1: Inputs: hypothesis set V , unlabelled data U = {z1, . . . , zm}, error bound η. 2: Solve the linear program:\nmin\nm ∑\ni=1\nγi\nsubject to: ∀i, ξi + ζi + γi = 1 ∀h ∈ V, ∑\ni:h(zi)=1\nζi + ∑\ni:h(zi)=−1\nξi ≤ ηm (2)\n∀i, ξi, ζi, γi ≥ 0\n3: For each zi ∈ U , output probabilities for predicting 1, −1 and 0: ξi, ζi, and γi.\nThe performance of a confidence-rated predictor is measured by its error and coverage. The error of a confidence-rated predictor is the probability with which it predicts the wrong label on an example, while the coverage is its probability of non-abstention. We can show the following guarantee on the performance of the predictor in Algorithm 3.\nTheorem 1. In the realizable case, if the hypothesis set V is the version space with respect to a training set, then Px∼U (P (x) 6= h∗(x), P (x) 6= 0) ≤ η. In the non-realizable case, if the hypothesis set V is an (1 − α)confidence set for the true risk minimizer h∗, then, w.p ≥ 1−α, Px∼U (P (x) 6= y, P (x) 6= 0) ≤ Px∼U (h∗(x) 6= y) + η.\nIn the realizable case, we can also show that our confidence rated predictor has optimal coverage. Observe that we cannot directly show optimality in the non-realizable case, as the performance depends on the exact choice of the (1 − α)-confidence set.\nTheorem 2. In the realizable case, suppose that the hypothesis set V is the version space with respect to a training set. If P ′ is any confidence rated predictor with error guarantee η, and if P is the predictor in Algorithm 3, then, the coverage of P is at least much as the coverage of P ′."
    }, {
      "heading" : "3 Performance Guarantees",
      "text" : "An essential property of any active learning algorithm is consistency – that it converges to the true risk minimizer given enough labelled examples. We observe that our algorithm is consistent provided we use any confidence-rated predictor P with guaranteed error as a subroutine. The consistency of our algorithm is a consequence of Lemmas 3 and 6 and is shown in Theorem 3.\nTheorem 3 (Consistency). Suppose we run Algorithm 1 with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P , target excess error ǫ and target confidence δ. Then with probability 1− δ, the classifier ĥ returned by Algorithm 1 satisfies errD(ĥ)− errD(h∗(D)) ≤ ǫ.\nWe now establish a label complexity bound for our algorithm; however, this label complexity bound applies only if we use the predictor described in Algorithm 3 as a subroutine.\nFor any hypothesis set V , data distribution D, and η, define ΦD(V, η) to be the minimum abstention probability of a confidence-rated predictor which guarantees that the disagreement between its predicted labels and any h ∈ V under DX is at most η.\nFormally, ΦD(V, η) = min{EDγ(x) : ED[I(h(x) = +1)ζ(x) + I(h(x) = −1)ξ(x)] ≤ η for all h ∈ V, γ(x) + ξ(x)+ζ(x) ≡ 1, γ(x), ξ(x), ζ(x) ≥ 0}. Define φ(r, η) := ΦD(BD(h∗, r), η). The label complexity of our active learning algorithm can be stated as follows.\nTheorem 4 (Label Complexity). Suppose we run Algorithm 1 with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P of Algorithm 3, target excess error ǫ and target confidence δ. Then there exist constants c3, c4 > 0 such that with probability 1− δ: (1) In the realizable case, the total number of labels queried by Algorithm 1 is at most:\nc3\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(ǫk, ǫk/256)\nǫk + ln( ⌈log(1/ǫ)⌉ − k + 1 δ )) φ(ǫk, ǫk/256) ǫk\n(2) In the agnostic case, the total number of labels queried by Algorithm 1 is at most:\nc4\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(2ν∗(D) + ǫk, ǫk/256)\nǫk + ln( ⌈log(1/ǫ)⌉ − k + 1 δ )) φ(2ν∗(D) + ǫk, ǫk/256) ǫk (1 + ν∗(D) ǫk )\nComparison. The label complexity of disagreement-based active learning is characterized in terms of the disagreement coefficient. Given a radius r, the disagreement coefficent θ(r) is defined as:\nθ(r) = sup r′≥r\nP(DIS(BD(h ∗, r′)))\nr′ ,\nwhere for any V ⊆ H, DIS(V ) is the disagreement region of V . As P(DIS(BD(h∗, r))) = φ(r, 0) [EYW10], in our notation, θ(r) = supr′≥r φ(r′,0) r′ .\nIn the realizable case, the label complexity of disagreement-based active learning is Õ(θ(ǫ) · ln(1/ǫ) · (d ln θ(ǫ) + ln ln(1/ǫ))) [Han13]4. Our label complexity bound may be simplified to:\nÕ\n(\nln 1\nǫ · sup k≤⌈log(1/ǫ)⌉\nφ(ǫk, ǫk/256) ǫk · ( d ln ( sup k≤⌈log(1/ǫ)⌉ φ(ǫk, ǫk/256) ǫk ) + ln ln 1 ǫ )) ,\nwhich is essentially the bound of [Han13] with θ(ǫ) replaced by supk≤⌈log(1/ǫ)⌉ φ(ǫk,ǫk/256)\nǫk . As enforcing a\nlower error guarantee requires more abstention, φ(r, η) is a decreasing function of η; as a result,\nsup k≤⌈log(1/ǫ)⌉\nφ(ǫk, ǫk/256)\nǫk ≤ θ(ǫ),\nand our label complexity is better.\nIn the agnostic case, [DHM07] provides a label complexity bound of Õ(θ(2ν∗(D) + ǫ) · (dν ∗(D)2\nǫ2 ln(1/ǫ)+\nd ln2(1/ǫ))) for disagreement-based active-learning. In contrast, by Proposition 1 our label complexity is at most:\nÕ\n(\nsup k≤⌈log(1/ǫ)⌉\nφ(2ν∗(D) + ǫk, ǫk/256) 2ν∗(D) + ǫk · ( d ν∗(D)2 ǫ2 ln(1/ǫ) + d ln2(1/ǫ) )\n)\n4Here the Õ() notation hides factors logarithmic in 1/δ\nAgain, this is essentially the bound of [DHM07] with θ(2ν∗(D) + ǫ) replaced by the smaller quantity\nsup k≤⌈log(1/ǫ)⌉\nφ(2ν∗(D) + ǫk, ǫk/256)\n2ν∗(D) + ǫk ,\n[Han13] has provided a more refined analysis of disagreement-based active learning that gives a label\ncomplexity of Õ(θ(ν∗(D) + ǫ)(ν ∗(D)2\nǫ2 + ln 1 ǫ )(d ln θ(ν ∗(D) + ǫ) + ln ln 1ǫ )); observe that their dependence is still on θ(ν∗(D) + ǫ). We leave a more refined label complexity analysis of our algorithm for future work."
    }, {
      "heading" : "3.1 Tsybakov Noise Conditions",
      "text" : "An important sub-case of learning from noisy data is learning under the Tsybakov noise conditions [Tsy04].\nDefinition 1. (Tsybakov Noise Condition) Let κ ≥ 1. A labelled data distribution D over X × Y satisfies (C0, κ)-Tsybakov Noise Condition with respect to a hypothesis class H for some constant C0 > 0, if for all h ∈ H, ρD(h, h∗(D)) ≤ C0(errD(h)− errD(h∗(D))) 1 κ .\nThe following theorem shows the performance guarantees achieved by Algorithm 1 under the Tsybakov noise conditions.\nTheorem 5. Suppose (C0, κ)-Tsybakov Noise Condition holds for D with respect to H. Then Algorithm 1 with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P of Algorithm 3, target excess error ǫ and target confidence δ satisfies the following properties. There exists a constant c5 > 0 such that with probability 1− δ, the total number of labels queried by Algorithm 1 is at most:\nc5\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln(φ(C0ǫ 1 κ k , ǫk/256)ǫ 1 κ−2 k ) + ln( ⌈log 1ǫ ⌉ − k + 1\nδ ))φ(C0ǫ\n1 κ k , ǫk/256)ǫ 1 κ−2 k\nComparison. [Han13] provides a label complexity bound of Õ(θ(C0ǫ 1 κ )ǫ 2 κ−2 ln 1ǫ (d ln θ(C0ǫ 1 κ ) + ln ln 1ǫ )) for disagreement-based active learning. For κ > 1, by Proposition 2, our label complexity is at most:\nÕ\n(\nsup k≤⌈log(1/ǫ)⌉\nφ(C0ǫ 1/κ k , ǫk/256)\nǫ 1/κ k\n· ǫ2/κ−2k · d ln(1/ǫ) ) ,\nFor κ = 1, our label complexity is at most\nÕ\n(\nln 1\nǫ · sup k≤⌈log(1/ǫ)⌉\nφ(C0ǫk, ǫk/256) ǫk · ( d ln( sup k≤⌈log(1/ǫ)⌉ φ(C0ǫk, ǫk/256) ǫk ) + ln ln 1 ǫ )) .\nIn both cases, our bounds are better, as supk≤⌈log(1/ǫ)⌉ · φ(C0ǫ\n1/κ k ,ǫk/256)\nC0ǫ 1/κ k ≤ θ(C0ǫ1/κ). In further work, [HY12] provides a refined analysis with a bound of Õ(θ(C0ǫ 1 κ )ǫ 2 κ−2 d ln θ(C0ǫ 1\nκ )); however, this work is not directly comparable to ours, as they need prior knowledge of C0 and κ."
    }, {
      "heading" : "3.2 Case Study: Linear Classification under the Log-concave Distribution",
      "text" : "We now consider learning linear classifiers with respect to log-concave data distribution on Rd. In this case, for any r, the disagreement coefficient θ(r) ≤ O( √ d ln(1/r)) [BL13]; however, for any η > 0, φ(r,η)r ≤ O(ln(r/η)) (see Lemma 14 in the Appendix), which is much smaller so long as η/r is not too small. This leads to the following label complexity bounds.\nCorollary 1. Suppose DX is isotropic and log-concave on R d, and H is the set of homogeneous linear classifiers on Rd. Then Algorithm 1 with inputs example oracle U , labelling oracle O, hypothesis class H, confidence-rated predictor P of Algorithm 3, target excess error ǫ and target confidence δ satisfies the following properties. With probability 1− δ: (1) In the realizable case, there exists some absolute constant c8 > 0 such that the total number of labels queried is at most c8 ln 1 ǫ (d+ ln ln 1 ǫ + ln 1 δ ). (2) In the agnostic case, there exists some absolute constant c9 > 0 such that the total number of labels queried is at most c9( ν∗(D)2 ǫ2 + ln 1 ǫ ) ln ǫ+ν∗(D) ǫ (d ln ǫ+ν∗(D) ǫ + ln 1 δ ) + ln 1 ǫ ln ǫ+ν∗(D) ǫ ln ln 1 ǫ . (3) If (C0, κ)-Tsybakov Noise condition holds for D with respect to H, then there exists some constant c10 > 0 (that depends on C0, κ) such that the total number of labels queried is at most c10ǫ 2 κ−2 ln 1ǫ (d ln 1 ǫ + ln 1 δ ).\nIn the realizable case, our bound matches [BL13]. For disagreement-based algorithms, the bound is\nÕ(d 3 2 ln2 1ǫ (ln d + ln ln 1 ǫ )), which is worse by a factor of O(\n√ d ln(1/ǫ)). [BL13] does not address the fully\nagnostic case directly; however, if ν∗(D) is known a-priori, then their algorithm can achieve roughly the same label complexity as ours.\nFor the Tsybakov Noise Condition with κ > 1, [BBZ07, BL13] provides a label complexity bound for\nÕ(ǫ 2 κ−2 ln2 1ǫ (d + ln ln 1 ǫ )) with an algorithm that has a-priori knowledge of C0 and κ. We get a slightly better bound. On the other hand, a disagreement based algorithm [Han13] gives a label complexity of Õ(d 3\n2 ln2 1ǫ ǫ 2 κ−2(ln d + ln ln 1ǫ )). Again our bound is better by factor of Ω( √ d) over disagreement-based\nalgorithms. For κ = 1, we can tighten our label complexity to get a Õ(ln 1ǫ (d + ln ln 1 ǫ + ln 1 δ )) bound, which again matches [BL13], and is better than the ones provided by disagreement-based algorithm – Õ(d 3\n2 ln2 1ǫ (ln d+ ln ln 1 ǫ )) [Han13]."
    }, {
      "heading" : "4 Related Work",
      "text" : "Active learning has seen a lot of progress over the past two decades, motivated by vast amounts of unlabelled data and the high cost of annotation [Set10, Das11, Han13]. According to [Das11], the two main threads of research are exploitation of cluster structure [UWBD13, DH08], and efficient search in hypothesis space, which is the setting of our work. We are given a hypothesis class H, and the goal is to find an h ∈ H that achieves a target excess generalization error, while minimizing the number of label queries.\nThree main approaches have been studied in this setting. The first and most natural one is generalized binary search [FSST97, Das04, Das05, Now11], which was analyzed in the realizable case by [Das05] and in various limited noise settings by [Kää06, Now11, NJC13]. While this approach has the advantage of low label complexity, it is generally inconsistent in the fully agnostic setting [DH08]. The second approach, disagreement-based active learning, is consistent in the agnostic PAC model. [CAL94] provides the first disagreement-based algorithm for the realizable case. [BBL09] provides an agnostic disagreement-based algorithm, which is analyzed in [Han07] using the notion of disagreement coefficient. [DHM07] reduces disagreement-based active learning to passive learning; [BDL09] and [BHLZ10] further extend this work to provide practical and efficient implementations. [Han09, Kol10] give algorithms that are adaptive to the Tsybakov Noise condition. The third line of work [BBZ07, BL13, ABL14], achieves a better label complexity than disagreement-based active learning for linear classifiers on the uniform distribution over unit sphere and logconcave distributions. However, a limitation is that their algorithm applies only to these specific settings, and it is not apparent how to apply it generally.\nResearch on confidence-rated prediction has been mostly focused on empirical work, with relatively less theoretical development. Theoretical work on this topic includes KWIK learning [LLW08], conformal prediction [SV08] and the weighted majority algorithm of [FMS04]. The closest to our work is the recent learning-theoretic treatment by [EYW10, EYW11]. [EYW10] addresses confidence-rated prediction with guaranteed error in the realizable case, and provides a predictor that abstains in the disagreement region of the version space. This predictor achieves zero error, and coverage equal to the measure of the agreement region. [EYW11] shows how to extend this algorithm to the non-realizable case and obtain zero error with respect to the best hypothesis in H. Note that the predictors in [EYW10, EYW11] generally achieve less\ncoverage than ours for the same error guarantee; in fact, if we plug them into our Algorithm 1, then we recover the label complexity bounds of disagreement-based algorithms [DHM07, Han09, Kol10].\nA formal connection between disagreement-based active learning in realizable case and perfect confidencerated prediction (with a zero error guarantee) was established by [EYW12]. Our work can be seen as a step towards bridging these two areas, by demonstrating that active learning can be further reduced to imperfect confidence-rated prediction, with potentially higher label savings.\nAcknowledgements. We thank NSF under IIS-1162581 for research support. We thank Sanjoy Dasgupta and Yoav Freund for helpful discussions. CZ would also like to thank Liwei Wang for introducing the problem of selective classification to him."
    }, {
      "heading" : "A Additional Notation and Concentration Lemmas",
      "text" : "We begin with some additional notation that will be used in the subsequent proofs. Recall that we define:\nσ(n, δ) = 8\nn (2d ln\n2en\nd + ln\n24\nδ ), (3)\nwhere d is the VC dimension of the hypothesis class H. The following lemma is an immediate corollary of the multiplicative VC bound; we pick the version of the multiplicative VC bound due to [Hsu10].\nLemma 7. Pick any n ≥ 1, δ ∈ (0, 1). Let Sn be a set of n iid copies of (X,Y ) drawn from a distribution D over labelled examples. Then, the following hold with probability at least 1− δ over the choice of Sn: (1) For all h ∈ H,\n|errD(h)− errSn(h)| ≤ min(σ(n, δ) + √ σ(n, δ)errD(h), σ(n, δ) + √ σ(n, δ)errSn(h)) (4)\nIn particular, all classifiers h in H consistent with Sn satisfies errD(h) ≤ σ(n, δ) (5)\n(2) For all h, h′ in H,\n|(errD(h)− errD(h′))− (errSn(h)− errSn(h′))| ≤ σ(n, δ) +min( √ σ(n, δ)ρD(h, h′), √ σ(n, δ)ρSn(h, h ′)) (6)\n|ρD(h, h′)− ρSn(h, h′)| ≤ σ(n, δ) + min( √ σ(n, δ)ρD(h, h′), √ σ(n, δ)ρSn(h, h ′)) (7)\nWhere σ(n, δ) is defined in Equation (3).\nWe occasionally use the following (weaker) version of Lemma 7.\nLemma 8. Pick any n ≥ 1, δ ∈ (0, 1). Let Sn be a set of n iid copies of (X,Y ). The following holds with probability at least 1− δ: (1) For all h ∈ H,\n|errD(h)− errSn(h)| ≤ √ 4σ(n, δ) (8)\n(2) For all h, h′ in H,\n|(errD(h)− errD(h′))− (errSn(h)− errSn(h′))| ≤ √ 4σ(n, δ) (9)\n|ρD(h, h′)− ρSn(h, h′)| ≤ √ 4σ(n, δ) (10)\nWhere σ(n, δ) is defined in Equation (3).\nFor an unlabelled sample Uk, we use Ũk to denote the joint distribution over X ×Y induced by uniform distribution over Uk and DY |X . We have:\nLemma 9. If the size of nk of the unlabelled dataset Uk is at least 192( 256 ǫk )2(d ln 256ǫk + ln 288 δk ), then with probability 1− δk/4, the following conditions hold for all h, h′ ∈ Vk:\n|errD(h)− errŨk(h)| ≤ ǫk 64\n(11)\n|(errD(h)− errD(h′))− (errŨk(h)− errŨk(h ′))| ≤ ǫk\n32 (12)\n|ρD(h, h′)− ρŨk(h, h ′)| ≤ ǫk\n64 (13)\nLemma 10. If the size of nk of the unlabelled dataset Uk is at least 192( 256 ǫk )2(d ln 256ǫk + ln 288 δk ), then with probability 1− δk/4, the following hold: (1) The outputs {(ξk,i, ζk,i, γk,i)}nki=1 of any confidence-rated predictor with inputs hypothesis set Vk, unlabelled data Uk, and error bound ǫk/64 satisfy:\n1\nnk\nnk ∑\ni=1\n[I(h(xi) 6= h′(xi))(1 − γk,i)] ≤ ǫk 32 ; (14)\n(2) The outputs {(ξk,i, ζk,i, γk,i)}nki=1 of the confidence-rated predictor of Algortihm 3 with inputs hypothesis set Vk, unlabelled data Uk, and error bound ǫk/64 satisfy:\nφk ≤ ΦD(Vk, ǫk 128 ) + ǫk 256\n(15)\nWe use Γ̃k to denote the joint distribution over X×Y induced by Γk andDY |X . Denote γk(x) : X → [0, 1], where γk(xi) = γk,i, and 0 elsewhere. Clearly, Γk({x}) = γk(x)nkφk and Γ̃k({(x, y)}) = Ũk({(x,y)})γk(x) φk . Also, Equations (14) and (15) of Lemma 10 can be restated as\n∀h, h′ ∈ Vk,EŨk [(1− γk(x))I(h(x) 6= h ′(x))] ≤ ǫk\n32\nEŨk [γk(x)] = φk ≤ ΦD(Vk, ǫk 128 ) + ǫk 256\nIn the realizable case, define event\nEr = {For all k = 1, 2, . . . , k0: Equations (11), (12), (13), (14), (15) hold for Ũk and all classifiers consistent with Sk have error at most\nǫk 8φk with respect to Γ̃k }.\nFact 1. P(Er) ≥ 1− δ.\nProof. By Equation (5) of Lemma 7, with probability 1− δk/2, if h ∈ Vk is consistent with Sk, then\nerrΓ̃k(h) ≤ σ(mk, δk/2)\nBecause mk = 768φk ǫk (d ln 768φkǫk + ln 48 δk ), we have errΓ̃k(h) ≤ ǫk/8φk. The fact follows from combining the fact above with Lemma 9 and Lemma 10, and the union bound.\nIn the non-realizable case, define event\nEa = {For all k = 1, 2, . . . , k0: Equations (11), (12), (13), (14), (15) hold for Ũk, and Algorithm 2 succeeds with inputs hypothesis set V = Vk, example distribution ∆ = Γk, labelling oracle O, target excess error ǫ̃ = ǫk 8φk and target confidence δ̃ = δk 2 }.\nFact 2. P(Ea) ≥ 1− δ.\nProof. This is an immediate consequence of Lemma 9, Lemma 10, Lemma 4 and union bound.\nRecall that we assume the hypothesis space is “dense”, in the sense that ∀r > 0, suph∈BD(h∗(D),r) ρ(h, h∗(D)) = r. We will call this the “denseness assumption”."
    }, {
      "heading" : "B Proofs related to the properties of Algorithm 2",
      "text" : "We first establish some properties of Algorithm 2. The inputs to Algorithm 2 are a set V of hypotheses of VC dimension d, an example distribution ∆, a labeling oracle O, a target excess error ǫ̃ and a target confidence δ̃.\nWe define the event\nẼ = {For all j = 1, 2, . . . : Equations (4)-(7) hold for sample Sj with n = nj and δ = δ̃j }\nBy union bound, P(Ẽ) ≥ 1−∑j δ̃j ≥ 1− δ̃.\nProof. (of Lemma 4) Assume Ẽ happens. For the proof of (1), define jmax as the smallest integer j such that σ(nj , δ̃j) ≤ ǫ̃2/144. Since njmax is a power of 2,\nnjmax ≤ 2min{n = 1, 2, . . . : 8(2d ln 2end + ln 24 logn(log n+1) δ )\nn ≤ ǫ\n2\n144 }\nThus, njmax ≤ 192 144ǫ̃2 (d ln 144ǫ̃ + ln 24δ̃ ). Then in round jmax, the stopping criterion (6) of Algorithm 2 is satisified; thus, Algorithm 2 halts with j0 ≤ jmax.\nTo prove (2.1), we observe that as h∗(∆̃) is the risk minimizer in V , if h satisfies err∆̃(h)−err∆̃(h∗(∆̃)) ≤ ǫ̃ 2 , then err∆̃(h)− err∆̃(ĥj0) ≤ ǫ̃2 . By Equation (6) of Lemma 7,\n(errSj0 (h)− errSj0 (ĥj0)) ≤ (err∆̃(h)− err∆̃(ĥj0)) + σ(nj0 , δ̃j0) + √ σ(nj0 , δ̃j0)ρSj0 (h, ĥj0)\n≤ ǫ̃ 2 + σ(nj0 , δ̃j0) +\n√\nσ(nj0 , δ̃j0)ρSj0 (h, ĥj0)\nHence h ∈ Vj0 .\nFor the proof of (2.2), note first that by (2.1), in particular, h∗(∆̃) ∈ Vj0 . Hence by Equation (6) of Lemma 7, and the stopping criterion Equation (6),\n(err∆̃(ĥj0)− err∆̃(h∗(∆̃)))− (errSj0 (ĥj0 )− errSj0 (h ∗(∆̃))) ≤ σ(nj0 , δ̃j0) +\n√\nσ(nj0 , δ̃j0)ρSj0 (ĥj0 , h ∗(∆̃)) ≤ ǫ̃\n6\nThus,\nerr∆̃(ĥj0)− err∆̃(h∗(∆̃)) ≤ ǫ̃\n6 (16)\nOn the other hand, if h ∈ Vj0 , then\n(err∆̃(h)− err∆̃(ĥj0))− (errSj0 (h)− errSj0 (ĥj0)) ≤ σ(nj0 , δ̃j0) + √ σ(nj0 , δ̃j0)ρSj0 (h, ĥj0) ≤ ǫ̃\n6\nBy definition of Vj0 ,\n(errSj0 (h)− errSj0 (ĥj0)) ≤ σ(nj0 , δ̃j0) + √ σ(nj0 , δ̃j0)ρSj0 (h, ĥj0) + ǫ̃ 2 ≤ 2ǫ̃ 3\nHence,\nerr∆̃(h)− err∆̃(ĥj0 ) ≤ 5ǫ̃\n6 (17)\nCombining Equations (16) and (17), we have\nerr∆̃(h)− err∆̃(h∗(∆̃)) ≤ ǫ̃\nProof. (of Lemma 5) Assume Ẽ happens. For each j, by triangle inequality, we have that ρSj (ĥj , h) ≤ errSj (ĥj) + errSj (h). If h ∈ Vj , then, by defintion of Vj ,\nerrSj (h)− errSj (ĥj) ≤ ǫ̃\n2 + σ(nj , δ̃j) +\n√\nσ(nj , δ̃j)errSj (ĥj) + √ σ(nj , δ̃j)errSj (h)\nUsing the fact that A ≤ B + C √ A ⇒ A ≤ 2B + C2,\nerrSj (h) ≤ ǫ̃+ 2errSj (ĥj) + 2 √ σ(nj , δ̃j)errSj (ĥj) + 3σ(nj , δ̃j) ≤ 3errSj (ĥj) + 4σ(nj , δ̃j) + ǫ̃\nSince\nerrSj (ĥj) ≤ errSj (h∗(∆̃)) ≤ ν∗(∆̃) + √ σ(nj , δ̃j)ν∗(∆̃) + σ(nj , δ̃j) ≤ 2ν∗(∆̃) + 2σ(nj , δ̃j),\nby the triangle inequality, we get that for all h ∈ Vj ,\nρSj (h, ĥj) ≤ errSj (h) + errSj (ĥj) ≤ 8ν∗(∆̃) + 12σ(nj, δ̃j) + ǫ̃ (18)\nNow observe that for any j,\nsup h∈Vj\n√\nσ(nj , δ̃j)ρSj (h, ĥj) + σ(nj , δ̃j)\n≤ sup h∈Vj max(2\n√\nσ(nj , δ̃j)ρSj (h, ĥj), 2σ(nj , δ̃j))\n≤ max(2 √ (8ν∗(∆̃) + 12σ(nj , δ̃j) + ǫ̃)σ(nj , δ̃j), 2σ(nj , δ̃j))\n≤ max(12 √ 2ν∗(∆̃)σ(nj , δ̃j), ǫ̃/6, 216σ(nj, δ̃j)),\nWhere the first inequality follows from A + B ≤ 2max(A,B), the second inequality follows from Equation (18), the third inequality follows from √ A+B ≤ √ A + √ B, A + B + C ≤ 3max(A,B,C) and√\nAB ≤ max(A,B). It can be easily seen that there exists some constant c1 > 0, such that taking j1 = ⌈log ( c1 2 (d ln 1 ǫ̃ + ln 1 δ̃ )(ν ∗(∆̃)+ǫ̃ ǫ̃2 ) ) ⌉\nensures that nj1 ≥ c12 (d ln 1ǫ̃ + ln 1δ̃ )( ν∗(∆̃)+ǫ̃ ǫ̃2 ); this, in turn, suffices to make\nmax(12\n√\n2ν∗(∆̃)σ(nj , δ̃j), 216σ(nj, δ̃j)) ≤ ǫ̃/6\nHence the stopping criterion suph∈Vj\n√\nσ(nj , δ̃j)ρSj (h, ĥj) + σ(nj , δ̃j) ≤ ǫ̃/6 is satisfied in iteration j1, and Algorithm 2 exits at iteration j0 ≤ j1, which ensures that nj0 ≤ nj1 ≤ c1(d ln 1ǫ̃ + ln 1δ̃ )( ν∗(∆̃)+ǫ̃ ǫ̃2 ).\nThe following lemma examines the behavior of Algorithm 2 under the Tsybakov Noise Condition and is crucial in the proof of Theorem 5. We observe that even if the (C0, κ)-Tsybakov Noise Conditions hold with respect to D, they do not necessarily hold with respect to Γk. In particular, it is not necessarily true that:\nρΓ̃k(h, h ∗(D)) ≤ C0(errΓ̃k(h)− errΓ̃k(h ∗(D))) 1 κ , ∀h ∈ Vk\nHowever, we show that an “approximate” Tsybakov Noise Condition with a significantly larger “C0”, namely Condition (19) is met by Γ̃k and Vk, with C = max(8C0, 4)φ 1 κ−1 k and h̃ = h ∗(D). In the Lemma below, we carefully track the dependence of the number of our label queries on C, since C = max(8C0, 4)φ 1 κ−1\nk can be ω(1) in our particular application.\nLemma 11. Suppose we run Algorithm 2 with inputs hypothesis set V , example distribution ∆̃, labelling oracle O, excess generalization error ǫ̃ and confidence δ̃. Then there exists some absolute constant c2 > 0 (independent of C) such that the following holds. Suppose there exist C > 0 and a classifier h̃ ∈ V , such that\n∀h ∈ V, ρ∆̃(h, h̃) ≤ Cmax(ǫ̃, err∆̃(h)− err∆̃(h̃)) 1 κ , (19)\nwhere ǫ̃ is the target exccess error parameter in Algorithm 2. Then, on the event that Algorithm 2 succeeds,\nnj0 ≤ c2 max((d ln 1\nǫ̃ + ln\n1 δ̃ )ǫ̃−1, (d ln(Cǫ̃ 1 κ−2) + ln 1 δ̃ )Cǫ̃ 1 κ−2)\nObserve that Condition (19), the approximate Tsybakov Noise Condition in the statement of Lemma 11, is with respect to h̃, which is not necessarily the true risk minimizer in V with respect to ∆̃. We therefore prove Lemma 11 in three steps; first, in Lemma 12, we analyze the difference err∆̃(ĥ)− err∆̃(h̃), where ĥ is the empirical risk minimizer. Then, in Lemma 13, we bound the difference err∆̃(h)− err∆̃(h̃) for any h ∈ Vj for some j. Finally, we combine these two lemmas to provide sample complexity bounds for the Vj0 output by Algorithm 2.\nProof. (of Lemma 11) Assume the event Ẽ happens. Then, Consider iteration j, by Lemma 13, if h ∈ Vj , then\nρ∆̃(h, ĥj) ≤ ρ∆̃(h, h̃) + ρ∆̃(ĥj , h̃) ≤ max(2C(36ǫ̃) 1 κ , 2C(52σ(nj, δ̃j)) 1 κ , 2C(6400Cσ(nj, δ̃j)) 1 2κ−1 ). (20)\nWe can write:\nsup h∈Vj σ(nj , δ̃j) +\n√\nσ(nj , δ̃j)ρSj (h, ĥj) ≤ sup h∈Vj 3σ(nj , δ̃j) +\n√\n2σ(nj , δ̃j)ρ∆̃(h, ĥj)\n≤ sup h∈Vj max(6σ(nj , δ̃j), 2\n√\n2σ(nj , δ̃j)ρ∆̃(h, ĥj)),\nwhere the first inequality follows from Equation (23) and the second inequality follows A+B ≤ 2max(A,B). We can further use Equation (20) to show that this is at most:\n≤ max(6σ(nj , δ̃j), (16Cσ(nj , δ̃j)) 1 2 (36ǫ̃) 1 2κ , (16Cσ(nj , δ̃j)) 1 2 (52σ(nj , δ̃j)) 1 2κ , (6400Cσ(nj, δ̃j)) κ 2κ−1 ) ≤ max(6σ(nj , δ̃j), ǫ̃/6, (6400Cσ(nj, δ̃j)) κ 2κ−1 )\nHere the last inequality follows from the fact that (16Cσ(nj , δ̃j)) 1 2 (36ǫ̃) 1 2κ ≤ max((3456Cσ(nj , δ̃j)) κ 2κ−1 , ǫ̃/6) and (16Cσ(nj , δ̃j)) 1 2 (52σ(nj , δ̃j)) 1 2κ ≤ max((144Cσ(nj , δ̃j)) κ 2κ−1 , 6σ(nj , δ̃j)), since A 2κ−1 2κ B 1\n2κ ≤ max(A,B). It can be easily seen that there exists c2 > 0, such that taking j1 = ⌈log c22 (d ln max(C,1) ǫ̃ + ln 1 δ̃ )(Cǫ̃ 1 κ−2 +\nǫ̃−1)⌉, so that nj ≥ c22 (d ln max(C,1) ǫ̃ + ln 1 δ̃ )(Cǫ̃ 1 κ−2 + ǫ̃−1) suffices to make\nmax(6σ(nj , δ̃j), (6400Cσ(nj, δ̃j)) κ 2κ−1 ) ≤ ǫ̃/6\nHence the stopping criterion suph∈Vj\n√\nσ(nj , δ̃j)ρSj (h, ĥj) + σ(nj , δ̃j) ≤ ǫ̃/6 is satisfied in iteration j1. Thus the number of the exit iteration j0 satisfies j0 ≤ j1, and nj0 ≤ nj1 ≤ c2 max((d ln 1ǫ̃ +ln 1δ̃ )ǫ̃ −1, (d ln(Cǫ̃ 1 κ−2)+ ln 1 δ̃ )Cǫ̃ 1 κ−2).\nLemma 12. Suppose there exist C > 0 and a classifier h̃ ∈ V , such that Equation (19) holds. Suppose we draw a set S of n examples, denote the empirical risk minimizer over S as ĥ, then with probability 1− δ:\nerr∆̃(ĥ)− err∆̃(h̃) ≤ max(2σ(n, δ), (4Cσ(n, δ)) κ 2κ−1 , 2ǫ̃)\nρ∆̃(ĥ, h̃) ≤ max(C(2σ(n, δ)) 1 κ , C(4Cσ(n, δ)) 1 2κ−1 , C(2ǫ̃) 1 κ )\nProof. By Lemma 7, with probability 1− δ, Equation (6) holds. Assume this happens.\nerr∆̃(ĥ)− err∆̃(h̃)\n≤ σ(n, δ) + √\nσ(n, δ)ρ∆̃(ĥ, h̃)\n≤ 2max(σ(n, δ), √\nσ(n, δ)C(err∆̃(h)− err∆̃(h̃) 1 κ ),\n√\nσ(n, δ)Cǫ̃ 1 κ )\n≤ max(2σ(n, δ), (4Cσ(n, δ)) κ2κ−1 , 2ǫ̃)\nWhere the first inequality is by Equation (6) of Lemma 7; the second inequality follow from Equation (19) and A + B ≤ 2max(A,B). The third inequality follows from 2 √ σ(n, δ)Cǫ̃ 1\nκ ≤ max(2(Cσ(n, δ)) κ2κ−1 , 2ǫ̃), since A 2κ−1 2κ B 1 2κ ≤ max(A,B). As a consequence, by Equation (19),\nρ∆̃(ĥ, h̃) ≤ max(C(2σ(n, δ)) 1 κ , C(4Cσ(n, δ)) 1 2κ−1 , C(2ǫ̃) 1 κ )\nLemma 13. Suppose there exist a C > 0 and a classifier h̃ ∈ V such that Equation (19) holds. Suppose we draw a set S of n iid examples, and let ĥ denote the empirical risk minimizer over S. Moreover, we define:\nṼ = { h ∈ V : errS(h) ≤ errS(ĥ) + ǫ̃\n2 + σ(n, δ) +\n√\nσ(n, δ)ρS(h, ĥ) }\nthen with probability 1− δ, for all h ∈ Ṽ ,\nerr∆̃(h)− err∆̃(h̃) ≤ max(52σ(n, δ), 36ǫ̃, (6400Cσ(n, δ)) κ 2κ−1 )\nρ∆̃(h, h̃) ≤ max(C(36ǫ̃) 1 κ , C(52σ(n, δ)) 1 κ , C(6400Cσ(n, δ)) 1 2κ−1 )\nProof. First, by Lemma 12,\nerr∆̃(ĥ)− err∆̃(h̃) ≤ max(2σ(n, δ), (4Cσ(n, δ)) κ 2κ−1 , 2ǫ̃) (21)\nρ∆̃(ĥ, h̃) ≤ max(C(2σ(n, δ)) 1 κ , C(4Cσ(n, δ)) 1 2κ−1 , C(2ǫ̃) 1 κ ) (22)\nNext, if h ∈ Ṽ , then errS(h)− errS(ĥ) ≤ σ(n, δ) + √ σ(n, δ)ρS(h, ĥ) + ǫ̃\n2\nCombining it with Equation (6) of Lemma 7: err∆̃(h) − err∆̃(ĥ) ≤ errS(h) − errS(ĥ) + √ σ(n, δ)ρS(h, ĥ) + σ(n, δ), we get\nerr∆̃(h)− err∆̃(ĥ) ≤ 2σ(n, δ) + 2 √ σ(n, δ)ρS(h, ĥ) + ǫ̃\n2\nBy Equation (7) of Lemma 7,\nρS(h, ĥ) ≤ ρ∆̃(h, ĥ) + √ σ(n, δ)ρ∆̃(h, ĥ) + σ(n, δ) ≤ 2ρ∆̃(h, ĥ) + 2σ(n, δ) (23)\nTherefore,\nerr∆̃(h)− err∆̃(ĥ) ≤ 5σ(n, δ) + 3 √ σ(n, δ)ρ∆̃(h, ĥ) + ǫ̃\n2 (24)\nHence\nerr∆̃(h)− err∆̃(h̃) = (err∆̃(h)− err∆̃(ĥ)) + (err∆̃(ĥ)− err∆̃(h̃)) ≤ (4Cσ(n, δ)) κ2κ−1 + 7σ(n, δ) + 3ǫ̃+ 3 √\nσ(n, δ)ρ∆̃(h, ĥ)\n≤ (4Cσ(n, δ)) κ2κ−1 + 7σ(n, δ) + 3ǫ̃+ 3 √\nσ(n, δ)ρ∆̃(h, h̃) + 3\n√\nσ(n, δ)ρ∆̃(h̃, ĥ)\nHere the first inequality follows from Equations (21) and (24) and max(A,B,C) ≤ A + B + C, and the second inequality follows from triangle inequality and √ A+B ≤ √ A+ √ B.\nFrom Equation (22), σ(n, δ)ρ∆̃(ĥ, h̃) is at most:\n≤ Cσ(n, δ) · ((2ǫ̃)1/κ + (2σ(n, δ))1/κ + (4Cσ(n, δ))1/(2κ−1)) ≤ (4Cσ(n, δ))2κ/(2κ−1) + Cσ(n, δ)((2ǫ̃)1/κ + (2σ(n, δ))1/κ) ≤ (4Cσ(n, δ))2κ/(2κ−1) +max(4ǫ̃2, (Cσ(n, δ))2κ/(2κ−1)) + max(4σ(n, δ)2, (Cσ(n, δ))2κ/(2κ−1)),\nwhere the first step follows from Equation (22), the second step from algebra, and the third step from using the fact that A 2κ−1 κ B 1\nκ ≤ max(A2, B2). Plugging this in to the previous equation, and using max(A,B) ≤ A+B and √ A+B ≤ √ A+ √ B, we get that:\nerr∆̃(h)− err∆̃(h̃) ≤ 10(4Cσ(n, δ))κ/(2κ−1) + 9ǫ̃+ 13σ(n, δ) + 3 √ σ(n, δ)ρ∆̃(h, h̃)\nCombining this with the fact that A+B + C +D ≤ 4max(A,B,C,D), we get that this is at most:\n≤ max(40(4Cσ(n, δ))κ/(2κ−1), 36ǫ̃, 52σ(n, δ), 12 √\nσ(n, δ)ρ∆̃(h, h̃))\nCombining this with Condition (19), we get that this is at most:\nmax(40(4Cσ(n, δ))κ/(2κ−1), 36ǫ̃, 52σ(n, δ), 12 √ Cσ(n, δ)ǫ̃1/κ, 12\n√\nCσ(n, δ)(err∆̃(h)− err∆̃(h̃))1/κ)\nUsing A(2κ−1)/2κB1/2κ ≤ max(A,B), we get that √\nCσ(n, δ)ǫ̃1/κ ≤ max(ǫ̃, (Cσ(n, δ))κ/(2κ−1)). Also note err∆̃(h)− err∆̃(h̃) ≤ 12 √\nCσ(n, δ)(err∆̃(h)− err∆̃(h̃))1/κ implies err∆̃(h)− err∆̃(h̃) ≤ (144Cσ(n, δ))κ/(2κ−1). Thus we have\nerr∆̃(h)− err∆̃(h̃) ≤ max(36ǫ̃, 52σ(n, δ), (6400Cσ(n, δ)) κ 2κ−1 )\nInvoking (19) again, we have that:\nρ∆̃(h, h̃) ≤ max(C(36ǫ̃) 1 κ , C(52σ(n, δ)) 1 κ , C(6400Cσ(n, δ)) 1 2κ−1 )"
    }, {
      "heading" : "C Remaining Proofs from Section 2",
      "text" : "Proof. (Of Lemma 1) Assuming Er happens, we prove the lemma by induction. Base Case: For k = 1, clearly h∗(D) ∈ V1 = H. Inductive Case: Assume h∗(D) ∈ Vk. As we are in the realizable case, h∗(D) is consistent with the examples Sk drawn in Step 8 of Algorithm 1; thus h ∗(D) ∈ Vk+1. The lemma follows.\nProof. (Of Lemma 2) We use h̃k = argminh∈VkerrΓ̃k(h) to denote the optimal classifier in Vk with respect to the distribution Γ̃k. Assuming Ea happens, we prove the lemma by induction. Base Case: For k = 1, clearly h∗(D) ∈ V1 = H. Inductive Case: Assume h∗ ∈ Vk. In order to show the inductive case, our goal is to show that:\nPΓ̃k (h∗(D)(x) 6= y)− PΓ̃k(h̃k(x) 6= y) ≤ ǫk 16φk\n(25)\nIf (25) holds, then, by (2.1) of Lemma 4, we know that if Algorithm 2 succeeds when called in iteration k of Algorithm 1, then, it is guaranteed that h∗ ∈ Vk+1.\nWe therefore focus on showing (25). First, from Equation (12) of Lemma 9, we have:\n(errŨk(h ∗(D)) − errŨk(h̃k))− (errD(h ∗(D))− errD(h̃k)) ≤ ǫk 32\nAs errD(h ∗(D)) ≤ errD(h̃k), we get:\nerrŨk(h ∗(D)) ≤ errŨk(h̃k) + ǫk 32\n(26)\nOn the other hand, by Equation (14) of Lemma 10 and triangle inequality,\nEŨk [I(h̃k(x) 6= y)(1− γk(x))] − EŨk [I(h ∗(D)(x) 6= y)(1 − γk(x))] (27)\n≤ EŨk [I(h ∗(D)(x) 6= h̃k(x))(1 − γk(x))] ≤ ǫk 32\n(28)\nCombining Equations (26) and (27), we get:\nEŨk [I(h∗(D)(x) 6= y)γk(x)] = errŨk(h ∗(D)(x)) − EŨk [I(h ∗(D)(x) 6= y)(1− γk(x))]\n≤ errŨk(h̃k(x)) + ǫk/32− EŨk [I(h ∗(D)(x) 6= y)(1− γk(x))] ≤ EŨk [I(h̃k(x) 6= y)γk(x)] + EŨk [I(h̃(x) 6= y)(1− γk(x))] + ǫk/32 −EŨk [I(h\n∗(D)(x) 6= y)(1− γk(x))] ≤ EŨk [I(h̃k(x) 6= y)γk(x)] + ǫk/16\nDividing both sides by φk, we get:\nPΓ̃k (h∗(D)(x) 6= y)− PΓ̃k(h̃k(x) 6= y) ≤ ǫk 16φk ,\nfrom which the lemma follows.\nProof. (of Lemma 3) Assuming Er happens, we prove the lemma by induction. Base Case: For k = 1, clearly errD(h) ≤ 1 ≤ ǫ1 = ǫ2k0 , ∀h ∈ V1 = H. Inductive Case: Note that ∀h, h′ ∈ Vk+1 ⊆ Vk, by Equation (14) of Lemma 10, we have:\nEŨk [I(h(x) 6= h′(x))(1 − γk(x))] ≤ ǫk 8\nBy the proof of Lemma 1, h∗(D) ∈ Vk+1 on event Er, thus ∀h ∈ Vk+1,\nEŨk [I(h(x) 6= h∗(D)(x))(1 − γk(x))] ≤ ǫk 8\n(29)\nSince any h ∈ Vk+1, h is consistent with Sk of size mk = 768φkǫk (d ln 768φk ǫk + ln 48δk ), we have that for all h ∈ Vk+1,\nPΓ̃k (h(x) 6= h∗(D)(x)) ≤ ǫk\n8φk That is,\nEŨk [I(h(x) 6= h∗(D)(x))γk(x)] ≤ ǫk 8\nCombining this with Equation (29) above,\nPŨk (h(x) 6= h∗(D)(x)) ≤ ǫk\n4\nBy Equation (11) of Lemma 9,\nPD(h(x) 6= h∗(D)(x)) ≤ ǫk 2 = ǫk+1\nThe lemma follows.\nProof. (of Lemma 6) Assuming Ea happens, we prove the lemma by induction. Base Case: For k = 1, clearly errD(h)− errD(h∗(D)) ≤ 1 ≤ ǫ1 = ǫ2k0 , ∀h ∈ V1 = H. Inductive Case: Note that ∀h, h′ ∈ Vk+1 ⊆ Vk, by Equation (14) of Lemma 10,\nEŨk [I(h(x) 6= y)(1− γk(x))] − EŨk [I(h ′(D)(x) 6= y)(1 − γk(x))] ≤ EŨk [I(h(x) 6= h ′(D)(x))(1 − γk(x))] ≤ ǫk 8\nFrom Lemma 2, h∗(D) ∈ Vk whenever the event Ea happens. Thus ∀h ∈ Vk+1,\nEŨk I(h(x) 6= y)(1 − γk(x)) − EŨkI(h ∗(D)(x) 6= y)(1− γk(x)) ≤ ǫk 8\n(30)\nOn the other hand, if Algorithm 2 succeeds with target excess error ǫk8φk , by item(2.2) of Lemma 4, for any h ∈ Vk+1,\nPΓ̃k (h(x) 6= y)− min\nh∈Vk PΓ̃k (h(x) 6= y) ≤ ǫk 8φk\nMoreover, as h∗(D) ∈ Vk from Lemma 2,\nPΓ̃k (h(x) 6= y)− PΓ̃k(h ∗(D)(x) 6= y) ≤ ǫk 8φk\nIn other words,\nEŨk [I(h(x) 6= y)γk(x)]− EŨk [I(h ∗(D)(x) 6= y)γk(x)] ≤ ǫk 8\nCombining this with Equation (30), we get that for all h ∈ Vk+1,\nPŨk (h(x) 6= y)− PŨk(h ∗(D)(x) 6= y) ≤ ǫk 4\nFinally, combining this with Equation (12) of Lemma 9, we have that:\nPD(h(x) 6= y)− PD(h∗(D)(x) 6= y) ≤ ǫk 2 = ǫk+1\nThe lemma follows.\nProof. (of Theorem 1) In the realizable case, We observe that for example zi, ζi = P(P (zi) = −1), ξi = P(P (zi) = 1), and γi = P(P (zi) = 0). Suppose h\n∗ ∈ H is the true hypothesis which has 0 error with respect to the data distribution. By the realizability assumption, h∗ ∈ V . Moreover, PU (P (x) 6= h∗(x), P (x) 6= 0) = 1 m ( ∑ i:h∗(zi)=+1 ζi + ∑ i:h∗(zi)=−1 ξi) ≤ η by Algorithm 3. In the non-realizable case, we still have Px∼U (h ∗(x) 6= P (x), P (x) 6= 0) ≤ η, hence by triangle inequality, Px∼U (P (x) 6= x, P (x) 6= 0)− Px∼U (h∗(x) 6= y, P (x) 6= 0) ≤ η. Thus\nPx∼U(P (x) 6= y, P (x) 6= 0) ≤ Px∼U (h∗(x) 6= y) + η\nProof. (of Theorem 2) Suppose P ′ assigns probabilities {[ξ′i, ζ′i, γ′i], i = 1, . . . ,m} to the unlabelled examples zi, and suppose for the sake of contradiction that ∑m i=1 ξ ′ i + ζ ′ i > ∑m i=1 ξi + ζi. Then, {ξ′i, ζ′i, γ′i}’s cannot satisfy the LP in Algorithm 3, and thus there exists some h′ ∈ V for which constraint (2) is violated. The true hypothesis that generates the data could be any h ∈ V ; if this true hypothesis is h′, then Px∼U (P ′(x) 6= h′(x), P ′(x) 6= 0) > δ."
    }, {
      "heading" : "D Proofs from Section 3",
      "text" : "Proof. (of Theorem 4) (1) In the realizable case, suppose that event Er happens. Then from Equation (15) of Lemma 10, while running Algorithm 3, we have that:\nφk ≤ ΦD(Vk, ǫk 128 ) + ǫk 256 ≤ ΦD(BD(h∗, ǫk), ǫk 128 ) + ǫk 256 ≤ ΦD(BD(h∗, ǫk), ǫk 256 ) = φ(ǫk, ǫk 256 )\nwhere the second inequality follows from the fact that Vk ⊆ BD(h∗(D), ǫk), and third inequality follows from Lemma 18 and denseness assuption. Thus, there exists c3 > 0 such that, in round k,\nmk = (d ln 768φk ǫk + ln 48 δk ) 768φk ǫk ≤ c3(d ln φ(ǫk, ǫk/256) ǫk + ln( k0 − k + 1 δ )) φ(ǫk, ǫk/256) ǫk\nHence the total number of labels queried by Algorithm 1 is at most\n⌈log 1ǫ ⌉ ∑\nk=1\nmk ≤ c3 ⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(ǫk, ǫk/256)\nǫk + ln( k0 − k + 1 δ )) φ(ǫk, ǫk/256) ǫk\n(2) In the agnostic case, suppose the event Ea happens. First, given Ea, from Equation (15) of Lemma 10 when running Algorithm 3,\nφk ≤ ΦD(Vk, ǫk 128 ) + ǫk 256 ≤ ΦD(BD(h∗, 2ν∗(D) + ǫk), ǫk 256 ) = φ(2ν∗(D) + ǫk, ǫk 256 ) (31)\nwhere the second inequality follows from the fact that Vk ⊆ BD(h∗(D), 2ν∗(D)+ ǫk) and the third inequality follows from Lemma 18 and denseness assumption.\nSecond, recall that h̃k = argminh∈VkerrΓ̃k(h),\nerrΓ̃k(h̃k) = minh∈Vk errΓ̃k(h)\n≤ errΓ̃k(h ∗(D))\n= EŨk [I(h∗(D)(x) 6= y)γk(x)] φk\n≤ PŨk (h∗(D)(x) 6= y) φk ≤ ν ∗(D) + ǫk/64\nφk\nHere the first inequality follows from the suboptimality of h∗(D) under distribution Γ̃k, the second inequality follows from γk(x) ≤ 1, and the third inequality follows from Equation (11). Thus, conditioned on Ea, in iteration k, Algorithm 2 succeeds by Lemma 5, and there exists a constant c4 > 0 such that the number of labels queried is\nmk ≤ c1 ǫk 8φk + errΓ̃k(h̃k)\n( ǫk8φk ) 2\n(d ln 1 ǫk 8φk + ln 2 δk )\n≤ c4(d ln φ(2ν∗(D) + ǫk, ǫk/256)\nǫk + ln( k0 − k + 1 δ )) φ(2ν∗(D) + ǫk, ǫk/256) ǫk (1 + ν∗(D) ǫk )\nHere the last line follows from Equation (31). Hence the total number of examples queried is at most:\n⌈log 1ǫ ⌉ ∑\nk=1\nmk ≤ c4 ⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(2ν∗(D) + ǫk, ǫk/256)\nǫk + ln( k0 − k + 1 δ )) φ(2ν∗(D) + ǫk, ǫk/256) ǫk (1 + ν∗(D) ǫk )\nProof. (of Theorem 5) Assume Ea happens. First, from Equation (15) of Lemma 10 when running Algorithm 3,\nφk ≤ ΦD(Vk, ǫk 128 )+ ǫk 256 ≤ ΦD(BD(h∗, C0ǫ 1 κ k ), ǫk 128 )+ ǫk 256 ≤ ΦD(BD(h∗, C0ǫ 1 κ k ), ǫk 256 ) = φ(C0ǫ 1 κ k , ǫk 256 ) (32)\nwhere the second inequality follows from the fact that Vk ⊆ BD(h∗(D), C0ǫ 1 κ\nk ), and the third inequality follows from Lemma 18 and denseness assumption. Second, for all h ∈ Vk,\nφkρΓ̃k(h, h ∗(D))\n= EŨkI(h(x) 6= h ∗(D)(x))γk(x) ≤ ρŨk(h, h ∗(D)) ≤ ρD(h, h∗(D)) + ǫk/32 ≤ C0(errD(h)− errD(h∗(D))) 1 κ + ǫk/32 ≤ C0(errŨk(h)− errŨk(h ∗(D)) + ǫk/64) 1 κ + ǫk/32 = C0(EŨk [I(h(x) 6= y)γk(x)]− EŨk [I(h ∗(D)(x) 6= y)γk(x)]\n+EŨk [I(h(x) 6= y)(1− γk(x))] − EŨk [I(h ∗(D)(x) 6= y)(1− γk(x))] + ǫk/16)\n1 κ + ǫk/32\nHere the first inequality follows from γk(x) ≤ 1, the second inequality follows from Equation (13) of Lemma 9, the third inequality follows from Definition 1 and the fourth inequality follows from Equation (12) of Lemma 9. The above can be upper bounded by:\n≤ C0(EŨk [I(h(x) 6= y)γk(x)]− EŨk [I(h ∗(D)(x) 6= y)γk(x)] + ǫk/16)\n1 κ + ǫk/32\n≤ 2C0(EŨk [I(h(x) 6= y)γk(x)] − EŨk [I(h ∗(D)(x) 6= y)γk(x)])\n1 κ + 2C0(ǫk/16) 1 κ + ǫk/32\n≤ max(8C0, 4)max((EŨk [I(h(x) 6= y)γk(x)] − EŨk [I(h ∗(D)(x) 6= y)γk(x)]), ǫk 16 ) 1 κ = max(8C0, 4)(φk) 1 κ max(PΓ̃k(h(x) 6= y)− PΓ̃k(h ∗(D)(x) 6= y), ǫk\n8φk )\n1 κ\nHere the first inequality follows from Equation (14) of Lemma 10 and triangle inequality EŨk [I(h(x) 6= y)γk(x)]−EŨk [I(h ∗(D)(x) 6= y)γk(x)] ≤ EŨk [I(h(x) 6= h ∗(D)(x))γk(x)] ≤ ǫk/32, and the last two inequalities follow from simple algebra. Dividing both sides by φk, we get:\nρΓ̃k(h, h ∗(D)) ≤ C1(φk)\n1 κ−1 max(errΓ̃k(h)− errΓ̃k(h ∗(D)), ǫk 8φk ) 1 κ\nwhere C1 = max(8C0, 4). Thus in iteration k, Condition (19) in Lemma 11 holds with C := C1(φk) 1 κ−1 and h̃ := h∗(D). Thus, from Lemma 11, Algorithm 2 succeeds, and there exists a constant c5 > 0, such that the number of labels queried is\nmk ≤ c2 max((d ln(C1(φk) 1 κ−1( ǫk 8φk ) 1 κ−2) + ln 2 δk )(C1(φk) 1 κ−1( ǫk 8φk ) 1 κ−2),\n(d ln( ǫk 8φk )−1 + ln 2 δk )( ǫk 8φk )−1)\n≤ c5(d ln(φkǫ 1 κ−2 k ) + ln( k0 − k + 1\nδ ))φkǫ\n1 κ−2 k\n≤ c5(d ln(φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k ) + ln( k0 − k + 1 δ ))φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k\nWhere the last line follows from Equation (31). Hence the total number of examples queried is at most\n⌈log 1ǫ ⌉ ∑\nk=1\nmk ≤ c5 ⌈log 1ǫ ⌉ ∑\nk=1\n(d ln(φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k ) + ln( k0 − k + 1 δ ))φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k\nThe following lemma is an immediate corollary of Theorem 21, item (a) of Lemma 2 and Lemma 3 of [BL13]:\nLemma 14. Suppose D is isotropic and log-concave on Rd, and H is the set of homogeneous linear classifiers on Rd, then there exist absolute constants c6, c7 > 0 such that φ(r, η) ≤ c6r ln c7rη .\nProof. (of Lemma 14) Denote wh as the unit vector w such that h(x) = sign(w · x), and θ(w,w′) to be the angle between vectors w and w′. If h ∈ BD(h∗, r), then by Lemma 3 of [BL13], there exists some constant c11 > 0 such that θ(wh, wh∗) ≤ rc11 . Also, by Lemma 21 of [BL13], there exists some constants c12, c13 > 0, such that, if θ(w,w′) = α then\nPD(sign(w · x) 6= sign(w′ · x), |w · x| ≥ b) ≤ c12α exp(−c13 b\nα )\nWe define a special solution (ξ, ζ, γ) as follows:\nξ(x) := I(wh∗ · x ≥ r\nc11c13 ln\nc12r c11η )\nζ(x) := I(wh∗ · x ≤ − r\nc11c13 ln\nc12r c11η )\nγ(x) := I(|wh∗ · x| ≤ r\nc11c13 ln\nc12r c11η )\nThen it can be checked that for all h ∈ BD(h∗, r),\nE[I(h(x) = +1)ζ(x) + I(h(x) = −1)ξ(x)] = PD(sign(wh∗ · x) 6= sign(wh · x), |wh∗ · x| ≥ r\nc11c13 ln\nc12r c11η ) ≤ η\nAnd by item (a) of Lemma 2 of [BL13], we have\nEγ(x) = PD(|wh∗ · x| ≤ r\nc11c13 ln\nc12r c11η ) ≤ r c11c13 ln c12r c11η\nHence,\nφ(r, η) ≤ r c11c13 ln c12r c11η\nProof. (of Corollary 1) This is an immediate consequence of Lemma 14 and Theorems 4 and 5 and algebra."
    }, {
      "heading" : "E A Suboptimal Alternative to Algorithm 2",
      "text" : "Algorithm 4 An Nonadaptive Algorithm for Label Query Given Target Excess Error\n1: Inputs: Hypothesis set V of VC dimension d, Example distribution ∆, Labeling oracle O, target excess error ǫ̃, target confidence δ̃. 2: Draw n = 6144ǫ̃2 (d ln 6144 ǫ̃2 +ln 24 δ̃ ) i.i.d examples from ∆; query their labels from O to get a labelled dataset\nS. 3: Train an ERM classifier ĥ ∈ V over S. 4: Define the set V as follows:\nV1 = { h ∈ V : errS(h) ≤ errS(ĥ) + 3ǫ̃\n4\n}\n5: return V1.\nIt is immediate that we have the following lemma.\nLemma 15. Suppose we run Algorithm 4 with inputs hypothesis set V , example distribution ∆, labelling oracle O, target excess error ǫ̃ and target confidence δ̃. Then there exists an event Ẽ, P(Ẽ) ≥ 1− δ̃, such that on Ẽ, the set V1 has the following property. (1) If for h ∈ H, err∆̃(h) − err∆̃(h∗(∆̃)) ≤ ǫ̃/2, then h ∈ V1. (2) On the other hand, if h ∈ V1, then err∆̃(h)− err∆̃(h∗(∆̃)) ≤ ǫ̃.\nWhen Ẽ happens, we say that Algorithm 4 succeeds.\nProof. By Equation (9) of Lemma 8 and because n = 6144ǫ̃2 (d ln 6144 ǫ̃2 + ln 24 δ̃ ), we have for all h, h′ ∈ H,\n(err∆̃(h)− err∆̃(h′))− (errS(h)− errS(h′)) ≤ ǫ\n4\nFor the proof of (1), for any h ∈ V , err∆̃(h)− err∆̃(h∗(∆̃)) ≤ ǫ̃/2, then\nerr∆̃(h)− err∆̃(ĥ) ≤ ǫ̃/2 Thus\nerrS(h)− errS(ĥ) ≤ 3ǫ̃\n4 proving h ∈ V1. For the proof of (2), for any h ∈ V1,\nerrS(h)− errS(h′) ≤ 3ǫ̃\n4 Thus\nerrS(h)− errS(h∗(∆̃)) ≤ 3ǫ̃\n4\nCombining with the fact that (err∆̃(h)− err∆̃(h∗(∆̃)))− (errS(h)− errS(h∗(∆̃))) ≤ ǫ4 we have\nerr∆̃(h)− err∆̃(h∗(∆̃)) ≤ ǫ̃\nCorollary 2. Suppose we replace the calls to Algorithm 2 with Algorithm 4 in Algorithm 1, then run it with inputs example oracle U , labelling oracle O, hypothesis class V , confidence-rated predictor P of Algorithm 3, target excess error ǫ and target confidence δ. Then the modified algorithm has a label complexity of\nÕ(\n⌈log 1/ǫ⌉ ∑\nk=1\n(d( φ(2ν∗(D) + ǫk, ǫk/256)\nǫk )2)\nin the agnostic case and\nÕ(\n⌈log 1/ǫ⌉ ∑\nk=1\nd( φ(C0ǫ\n1 κ\nk , ǫk 256 )\nǫ 1 κ\nk\n)2ǫ 2 κ−2\nk )\nunder (C0, κ)-Tsybakov Noise Condition.\nUnder denseness assumption, by Lemma 17, we have φ(r, η) ≥ r− 2η, the label complexity bounds given by Corollary 2 is always no better than the ones given by Theorem 4 and 5.\nProof. (Sketch) Define event\nEa = {For all k = 1, 2, . . . , k0: Equations (11), (12), (13), (14), (15) hold for Ũk with confidence δk/2, and Algorithm 4 succeeds with inputs hypothesis set V = Vk, example distribution ∆ = Γk, labelling oracle O, target excess error ǫ̃ = ǫk 8φk and target confidence δ̃ = δk 2 }.\nClealy, P(Ea) ≥ 1− δ. On the event Ea, there exists an absolute constant c13 > 0, such that the number of examples queried in interation k is\nmk ≤ c13(d ln 8φk ǫk + ln 2 δ )( 8φk ǫk )2\nCombining it with Equation (15) of Lemma 10\nφk ≤ ΦD(Vk, ǫk 128 ) + ǫk 256\nwe have\nmk ≤ O((d ln ΦD(Vk,\nǫk 128 ) + ǫk 256 ǫk + ln 2 δk )( ΦD(Vk, ǫk 128 ) + ǫk 256 ǫk )2)\nThe rest of the proof follows from Lemma 18 and denseness assumption, along with algebra."
    }, {
      "heading" : "F Proofs of Concentration Lemmas",
      "text" : "Proof. (of Lemma 9) We begin by observing that:\nerrŨk(h) = 1\nnk\nnk ∑\ni=1\n[PD(Y = +1|X = xi)I(h(xi) = −1) + PD(Y = −1|X = xi)I(h(xi) = +1)]\nMoreover, max(S({I(h(x) = 1, h ∈ H)}, n),S({I(h(x) = −1, h ∈ H)}, n)) ≤ ( end )d. Combining this fact with Lemma 16, the following equations hold simultaneously with probability 1− δk/6:\n∣ ∣ ∣ 1\nnk\nnk ∑\ni=1\nPD(Y = +1|X = xi)I(h(xi) = −1)− PD(h(x) = −1, y = +1) ∣ ∣ ∣ ≤\n√\n8(d ln enkd + ln 24 δk )\nnk ≤ ǫk 128\n∣ ∣ ∣ 1\nnk\nnk ∑\ni=1\nPD(Y = −1|X = xi)I(h(xi) = +1)− PD(h(x) = +1, y = −1) ∣ ∣ ∣ ≤\n√\n8(d ln enkd + ln 24 δk )\nnk ≤ ǫk 128\nThus Equation (11) holds with probability 1 − δk/6. Moreover, we observe that Equation (11) implies Equation (12). To show Equation (13), we observe that by Lemma 8, with probability 1− δk/12,\n|ρD(h, h′)− ρŨk(h, h ′)| = |ρD(h, h′)− ρSk(h, h′)| ≤ 2\n√ σ(nk, δk/12) ≤ ǫk 64\nThus, Equation (13) holds with probability ≥ 1 − δk/12. By union bound, with probability 1 − δk/4, Equations (11), (12), and (13) hold simultaneously.\nProof. (of Lemma 10) (1) Given a confidence-rated predictor with inputs hypothesis set Vk, unlabelled data Uk, and error bound ǫk/64, the outputs {(ξk,i, ζk,i, γk,i)}nki=1 must satisfy that for all h, h′ ∈ Vk,\n1\nnk\nnk ∑\ni=1\n[I(h(xk,i) = −1)ξk,i + I(h(xk,i) = +1)ζk,i] ≤ ǫk 64\n1\nnk\nnk ∑\ni=1\n[I(h′(xk,i) = −1)ξk,i + I(h′(xk,i) = +1)ζk,i] ≤ ǫk 64\nSince I(h(x) 6= h′(x)) ≤ min(I(h(x) = −1) + I(h′(x) = −1), I(h(x) = +1) + I(h′(x) = +1)), adding up the two inequalities above, we get\n1\nnk\nnk ∑\ni=1\n[I(h(xk,i) 6= h′(xk,i))(ξk,i + ζk,i)] ≤ ǫk 32\nThat is,\n1\nnk\nnk ∑\ni=1\n[I(h(xk,i) 6= h′(xk,i))(1 − γk,i)] ≤ ǫk 32\n(2) By definition of ΦD(V, η), there exist nonnegative functions ξ, ζ, γ such that ξ(x) + ζ(x) + γ(x) ≡ 1, ED[γ(x)] = ΦD(Vk, ǫk/128) and for all h ∈ Vk,\nED[ξ(x)I(h(x) = −1) + ζ(x)I(h(x) = +1)] ≤ ǫk 128\nConsider the linear progam in Algorithm 3 with inputs hypothesis set Vk, unlabelled data Uk, and error bound ǫk/64. We consider the following special (but possibly non-optimal) solution for this LP: ξk,i = ξ(zk,i), ζk,i = ζ(zk,i), γk,i = γ(zk,i). We will now show that this solution is feasible and has coverage\nΦD(Vk, ǫk/128) plus O(ǫk) with high probability. Observe that max(S({I(h(x) = 1, h ∈ H)}, n),S({I(h(x) = −1, h ∈ H)}, n)) ≤ ( end )d. Therefore, from Lemma 16 and the union bound, with probability 1− δk/4, the following hold simultaneously for all h ∈ H:\n∣ ∣ ∣ 1\nnk\nnk ∑\ni=1\nγ(zk,i)− EDγ(x) ∣ ∣ ∣ ≤\n√\nln 2δk 2nk ≤ ǫk 256\n(33)\n∣ ∣ ∣ 1\nnk\nnk ∑\ni=1\nξ(zk,i)I(h(zk,i) = −1)− ED[ξ(x)I(h(x) = −1)] ∣ ∣ ∣ ≤\n√\n8(d ln enkd + ln 24 δk )\nnk ≤ ǫk 256 (34)\n∣ ∣ ∣ 1\nnk\nnk ∑\ni=1\nζ(zk,i)I(h(zk,i) = +1)− ED[ζ(x)I(h(x) = +1)] ∣ ∣ ∣ ≤\n√\n8(d ln enkd + ln 24 δk )\nnk ≤ ǫk 256 (35)\nAdding up Equations (34) and (35),\n∣ ∣ ∣ 1\nnk\nnk ∑\ni=1\n[ζ(xi)I(h(xi) = +1) + ξ(xi)I(h(xi) = −1)]− ED[ξ(x)I(h(x) = −1) + ζ(x)I(h(x) = +1))] ∣ ∣ ∣ ≤ ǫk 128\nThus {(ξ(zk,i), ζ(zk,i)}nki=1 is a feasible solution of the linear program of Algorithm 3. Also, by Equation (33), 1 nk ∑nk i=1 γ(zk,i) ≤ ΦD(Vk, ǫk128 ) + ǫk 64 . Thus, the outputs {(ξk,i, ζk,i, γk,i)} nk i=1 of the linear program in Algorithm 3 satisfy\nφk = 1\nnk\nnk ∑\ni=1\nγk,i ≤ 1\nnk\nnk ∑\ni=1\nγ(zk,i) ≤ ΦD(Vk, ǫk 128 ) + ǫk 256\ndue to their optimality.\nLemma 16. Pick any n ≥ 1, δ ∈ (0, 1), a family F of functions f : Z → {0, 1}, a fixed weighting function w : Z → [0, 1]. Let Sn be a set of n iid copies of Z. The following holds with probability at least 1− δ:\n∣ ∣ ∣ 1\nn\nn ∑\ni=1\nw(zi)f(zi)− E[w(z)f(z)] ∣ ∣ ∣ ≤\n√\n8(lnS(F , n) + ln 2δ ) n\nwhere S(F , n) = maxz1,...,zn∈Z |{(f(z1), . . . , f(zn)) : f ∈ F}| is the growth function of F .\nProof. The proof is fairly standard, and follows immediately from the proof of additive VC bounds. With\nprobability 1− δ,\nsup f∈F\n∣ ∣ ∣ 1\nn\nn ∑\ni=1\nw(zi)f(zi)− Ew(z)f(z) ∣ ∣ ∣\n≤ ES∼Dn sup f∈F\n∣ ∣ ∣ 1\nn\nn ∑\ni=1\nw(zi)f(zi)− Ew(z)f(z) ∣ ∣ ∣+\n√\n2 ln 1δ n\n≤ ES∼Dn,S′∼Dn sup f∈F\n∣ ∣ ∣ 1\nn\nn ∑\ni=1\n(w(zi)f(zi)− w(z′i)f(z′i)) ∣ ∣ ∣+\n√\n2 ln 1δ n\n≤ ES∼Dn,S′∼Dn,σ∼U({−1,+1}n) sup f∈F\n∣ ∣ ∣ 1\nn\nn ∑\ni=1\nσi(w(zi)f(zi)− w(z′i)f(z′i)) ∣ ∣ ∣ +\n√\n2 ln 1δ n\n≤ 2ES∼Dn,σ∼U({−1,+1}n) sup f∈F\n∣ ∣ ∣ 1\nn\nn ∑\ni=1\nσiw(zi)f(zi) ∣ ∣ ∣+\n√\n2 ln 1δ n\n≤ 2 √ 2 ln(2S(F , n)) n +\n√\n2 ln 1δ n ≤\n√\n8(lnS(F , n) + ln 2δ ) n\nWhere the first inequality is by McDiarmid’s Lemma; the second inequality follows from Jensen’s Inequality; the third inequality follows from symmetry; the fourth inequality follows from |A+B| ≤ |A|+ |B|; the fifth inequality follows from Massart’s Finite Lemma.\nLemma 17. Let 0 < 2η ≤ r ≤ 1. Given a hypothesis set V and data distribution D over X × Y, if there exist h1, h2 ∈ V such that ρD(h1, h2) ≥ r, then ΦD(V, η) ≥ r − 2η.\nProof. Let (ξ, ζ, γ) be a triple of functions from X to R3 satisfying the following conditions: ξ, ζ, γ ≥ 0, ξ + ζ + γ ≡ 1, and for all h ∈ V ,\nED[ξ(x)I(h(x) = +1) + ζ(x)I(h(x) = −1)] ≤ η\nThen, in particular, we have:\nED[ξ(x)I(h1(x) = +1) + ζ(x)I(h1(x) = −1)] ≤ η\nED[ξ(x)I(h1(x) = +1) + ζ(x)I(h2(x) = −1)] ≤ η Thus, by I(h1(x) 6= h2(x)) ≤ min(I(h1(x) = −1) + I(h1(x) = −1), I(h2(x) = +1) + I(h2(x) = +1)), adding the two inequalities up, ED[(ξ(x) + ζ(x))I(h1(x) 6= h2(x))] ≤ 2η Since ρD(h1, h2) = EDI(h1(x) 6= h2(x)) ≥ r We have ED[γ(x)I(h1(x) 6= h2(x))] = ED[(1− ξ(x) − ζ(x))I(h1(x) 6= h2(x))] ≥ r − 2η Thus, ED[γ(x)] ≥ ED[γ(x)I(h1(x) 6= h2(x))] ≥ r − 2η Hence ΦD(V, η) ≥ r − 2η.\nLemma 18. Given hypothesis set V and data distribution D over X × Y, 0 < λ < η < 1, if there exist h1, h2 ∈ V such that ρD(h1, h2) ≥ 2η − λ, then ΦD(V, η) + λ ≤ ΦD(V, η − λ).\nProof. Suppose (ξ1, ζ1, γ1) are nonnegative functions satisfying ξ1 + ζ1 + γ1 ≡ 1, and for all h ∈ V , ED[ζ1(x)I(h(x) = +1)+ξ1(x)I(h(x) = −1)] ≤ η−λ, and EDγ1(x) = ΦD(V, η−λ). Notice by Lemma 17,ΦD(V, η− λ) ≥ 2η − λ− 2(η − λ) = λ.\nThen we pick nonnegative functions (ξ2, ζ2, γ2) as follows. Let ξ2 = ξ1, γ2 = (1 − λΦD(V,η−λ) )γ1, and ζ2 = 1− ξ2 − γ2. It is immediate that (ξ2, ζ2, γ2) is a valid confidence rated predictor and ζ2 ≥ ζ1, γ2 ≤ γ1, EDγ2(x) = ΦD(V, η − λ) − λ. It can be readily checked that the confidence rated predictor (ξ2, ζ2, γ2) has error guarantee η, specifically:\nED[ζ2(x)I(h(x) = +1) + ξ2(x)I(h(x) = −1)] ≤ ED[(ζ2(x)− ζ1(x))I(h(x) = +1) + (ξ2(x)− ξ1(x))I(h(x) = −1)] + η − λ ≤ ED[(ζ2(x)− ζ1(x)) + (ξ2(x)− ξ1(x))] + η − λ ≤ λ+ η − λ = η\nThus, ΦD(V, η), which is the minimum abstention probability of a confidence-rated predictor with error guarantee η with respect to hypothesis set V and data distribution D, is at most ΦD(V, η − λ)− λ."
    }, {
      "heading" : "G Detailed Derivation of Label Complexity Bounds",
      "text" : "G.1 Agnostic\nProposition 1. In agnostic case, the label complexity of Algorithm 1 is at most\nÕ( sup k≤⌈log(1/ǫ)⌉\nφ(2ν∗(D) + ǫk, ǫk/256)\n2ν∗(D) + ǫk (d\nν∗(D)2\nǫ2 ln\n1 ǫ + d ln2 1 ǫ )),\nwhere the Õ notation hides factors logarithmic in 1/δ.\nProof. Applying Theorem 5, the total number of labels queried is at most:\nc4\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(2ν∗(D) + ǫk, ǫk/256)\nǫk + ln( ⌈log(1/ǫ)⌉ − k + 1 δ )) φ(2ν∗(D) + ǫk, ǫk/256) ǫk (1 + ν∗(D) ǫk )\nUsing the fact that φ(2ν∗(D) + ǫk, ǫk/256) ≤ 1, this is\nc4\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(2ν∗(D) + ǫk, ǫk/256)\nǫk + ln( ⌈log(1/ǫ)⌉ − k + 1 δ )) φ(2ν∗(D) + ǫk, ǫk/256) ǫk (1 + ν∗(D) ǫk )\n= Õ\n\n\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln φ(2ν∗(D) + ǫk, ǫk/256)\nǫk + ln log(1/ǫ))\nφ(2ν∗(D) + ǫk, ǫk/256)\n2ν + ǫk (1 +\nν∗(D)2\nǫ2k )\n\n\n≤ Õ\n\n sup k≤⌈log(1/ǫ)⌉\nφ(2ν∗(D) + ǫk, ǫk/256)\n2ν∗(D) + ǫk\n⌈log 1ǫ ⌉ ∑\nk=1\n(1 + ν∗(D)2\nǫ2k )(d ln\n1 ǫ + ln ln 1 ǫ )\n\n\n≤ Õ (\nsup k≤⌈log(1/ǫ)⌉\nφ(2ν∗(D) + ǫk, ǫk/256)\n2ν∗(D) + ǫk (d\nν∗(D)2\nǫ2 ln\n1 ǫ + d ln2 1 ǫ )\n)\n,\nwhere the last line follows as ǫk is geometrically decreasing.\nG.2 Tsybakov Noise Condition with κ > 1\nProposition 2. Suppose the hypothesis class H and the data distribution D satisfies (C0, κ)-Tsybakov Noise Condition with κ > 1. Then the label complexity of Algorithm 1 is at most\nÕ( sup k≤⌈log(1/ǫ)⌉\nφ(C0ǫ 1 κ k , ǫk 256 )\nǫ 1 κ\nk\nǫ 2 κ−2d ln 1\nǫ ),\nwhere the Õ notation hides factors logarithmic in 1/δ.\nProof. Applying Theorem 5, the total number of labels queried is at most:\nc5\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln(φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k ) + ln( k0 − k + 1 δ ))φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k\nUsing the fact that φ(C0ǫ 1 κ k , ǫk 256 ) ≤ 1, we get\nc5\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln(φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k ) + ln( k0 − k + 1 δ ))φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k\n≤ Õ\n\n sup k≤⌈log(1/ǫ)⌉\nφ(C0ǫ 1 κ k , ǫk 256 )\nǫ 1 κ\nk\n⌈log 1ǫ ⌉ ∑\nk=1\nǫ 2 κ−2 k d ln 1\nǫ\n\n\n≤ Õ (\nsup k≤⌈log(1/ǫ)⌉\nφ(C0ǫ 1 κ k , ǫk 256 )\nǫ 1 κ\nk\nǫ 2 κ−2d ln 1\nǫ\n)\nG.3 Fully Agnostic, Linear Classification of Log-Concave Distribution\nWe show in this subsection that in agnostic case, if H is the class of homogeneous linear classifiers in Rd, DX is isotropic log-concave in R d, then, our label complexity bound is at most\nO(ln ǫ+ ν∗(D)\nǫ (ln\n1 ǫ +\nν∗(D)2\nǫ2 )(d ln\nǫ+ ν∗(D)\nǫ + ln\n1 δ ) + ln 1 ǫ ln\nǫ+ ν∗(D)\nǫ ln ln\n1 ǫ )\nRecall by Lemma 14, we have φ(2ν∗(D) + ǫk, ǫk/256) ≤ C(ν∗(D) + ǫk) ln ν ∗(D)+ǫk\nǫk for some constant C > 0.\nApplying Theorem 4, the label complexity is\nO(\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln( 2ν∗(D) + ǫk\nǫk ln 2ν∗(D) + ǫk ǫk ) + ln( log(1/ǫ)− k + 1 δ )) ln 2ν∗(D) + ǫk ǫk (1 + ν∗(D)2 ǫ2k ))\nThis can be simplified to (treating 1 and ν ∗(D)2\nǫ2k separately)\nO(\n⌈log 1ǫ ⌉ ∑\nk=1\nln ν∗(D) + ǫk\nǫk (d ln ν∗(D) + ǫk ǫk + ln k0 − k + 1 δ )\n+\n⌈log 1ǫ ⌉ ∑\nk=1\nν∗(D)2\nǫ2k ln ν∗(D) + ǫk ǫk (d ln ν∗(D) + ǫk ǫk + ln k0 − k + 1 δ ))\n≤ O(ln 1 ǫ ln\nǫ+ ν∗(D)\nǫ (d ln\nǫ+ ν∗(D)\nǫ + ln ln\n1 ǫ + ln 1 δ ) +\nν∗(D)2\nǫ2 ln\nǫ+ ν∗(D)\nǫ (d ln\nǫ+ ν∗(D)\nǫ + ln\n1 δ ))\n≤ O(ln ǫ+ ν ∗(D)\nǫ (ln\n1 ǫ +\nν∗(D)2\nǫ2 )(d ln\nǫ+ ν∗(D)\nǫ + ln\n1 δ ) + ln 1 ǫ ln\nǫ+ ν∗(D)\nǫ ln ln\n1 ǫ )\nG.4 Tsybakov Noise Conditon with κ > 1, Log-Concave Distribution\nWe show in this subsection that under (C0, κ)-Tsybakov Noise Condition, if H is the class of homogeneous linear classifiers in Rd, and DX is isotropic log-concave in R d, our label complexity bound is at most\nO(ǫ 2 κ−2 ln 1\nǫ (d ln\n1 ǫ + ln 1 δ ))\nRecall by Lemma 14, we haveφ(C0ǫ 1 κ k , ǫk 256 ) ≤ Cǫ 1 κ k ln 1 ǫk\nfor some constant C > 0. Applying Theorem 5, the label complexity is:\nO(\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln(φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k ) + ln( k0 − k + 1 δ ))φ(C0ǫ 1 κ k , ǫk 256 )ǫ 1 κ−2 k )\nThis can be simplified to :\nO(\n⌈log 1ǫ ⌉ ∑\nk=1\n(d ln(ǫ 2 κ−2 k ln 1\nǫk ) + ln( k0 − k + 1 δ ))ǫ 2 κ−2 k ln 1 ǫk )\n≤ O(( ⌈log 1ǫ ⌉ ∑\nk=1\nǫ 2 κ−2 k ) ln 1\nǫ (d ln\n1 ǫ + ln 1 δ ))\n≤ O(ǫ 2κ−2 ln 1 ǫ (d ln 1 ǫ + ln 1 δ ))"
    } ],
    "references" : [ {
      "title" : "The power of localization for efficiently learning linear separators with noise",
      "author" : [ "P. Awasthi", "M-F. Balcan", "P.M. Long" ],
      "venue" : "In STOC,",
      "citeRegEx" : "Awasthi et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Awasthi et al\\.",
      "year" : 2014
    }, {
      "title" : "Agnostic active learning",
      "author" : [ "M.-F. Balcan", "A. Beygelzimer", "J. Langford" ],
      "venue" : "J. Comput. Syst. Sci.,",
      "citeRegEx" : "Balcan et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Balcan et al\\.",
      "year" : 2009
    }, {
      "title" : "Margin based active learning",
      "author" : [ "M.-F. Balcan", "A.Z. Broder", "T. Zhang" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Balcan et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Balcan et al\\.",
      "year" : 2007
    }, {
      "title" : "Importance weighted active learning",
      "author" : [ "A. Beygelzimer", "S. Dasgupta", "J. Langford" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Beygelzimer et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Beygelzimer et al\\.",
      "year" : 2009
    }, {
      "title" : "Agnostic active learning without constraints",
      "author" : [ "A. Beygelzimer", "D. Hsu", "J. Langford", "T. Zhang" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Beygelzimer et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Beygelzimer et al\\.",
      "year" : 2010
    }, {
      "title" : "Active and passive learning of linear separators under log-concave distributions",
      "author" : [ "M.-F. Balcan", "P.M. Long" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Balcan and Long.,? \\Q2013\\E",
      "shortCiteRegEx" : "Balcan and Long.",
      "year" : 2013
    }, {
      "title" : "Improving generalization with active learning",
      "author" : [ "D.A. Cohn", "L.E. Atlas", "R.E. Ladner" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Cohn et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Cohn et al\\.",
      "year" : 1994
    }, {
      "title" : "Analysis of a greedy active learning strategy",
      "author" : [ "S. Dasgupta" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Dasgupta.,? \\Q2004\\E",
      "shortCiteRegEx" : "Dasgupta.",
      "year" : 2004
    }, {
      "title" : "Coarse sample complexity bounds for active learning",
      "author" : [ "S. Dasgupta" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Dasgupta.,? \\Q2005\\E",
      "shortCiteRegEx" : "Dasgupta.",
      "year" : 2005
    }, {
      "title" : "Two faces of active learning",
      "author" : [ "S. Dasgupta" ],
      "venue" : "Theor. Comput. Sci.,",
      "citeRegEx" : "Dasgupta.,? \\Q2011\\E",
      "shortCiteRegEx" : "Dasgupta.",
      "year" : 2011
    }, {
      "title" : "Hierarchical sampling for active learning",
      "author" : [ "S. Dasgupta", "D. Hsu" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Dasgupta and Hsu.,? \\Q2008\\E",
      "shortCiteRegEx" : "Dasgupta and Hsu.",
      "year" : 2008
    }, {
      "title" : "A general agnostic active learning algorithm",
      "author" : [ "S. Dasgupta", "D. Hsu", "C. Monteleoni" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Dasgupta et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Dasgupta et al\\.",
      "year" : 2007
    }, {
      "title" : "On the foundations of noise-free selective classification",
      "author" : [ "R. El-Yaniv", "Y. Wiener" ],
      "venue" : null,
      "citeRegEx" : "El.Yaniv and Wiener.,? \\Q2010\\E",
      "shortCiteRegEx" : "El.Yaniv and Wiener.",
      "year" : 2010
    }, {
      "title" : "Agnostic selective classification",
      "author" : [ "R. El-Yaniv", "Y. Wiener" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "El.Yaniv and Wiener.,? \\Q2011\\E",
      "shortCiteRegEx" : "El.Yaniv and Wiener.",
      "year" : 2011
    }, {
      "title" : "Active learning via perfect selective classification",
      "author" : [ "R. El-Yaniv", "Y. Wiener" ],
      "venue" : null,
      "citeRegEx" : "El.Yaniv and Wiener.,? \\Q2012\\E",
      "shortCiteRegEx" : "El.Yaniv and Wiener.",
      "year" : 2012
    }, {
      "title" : "Generalization bounds for averaged classifiers",
      "author" : [ "Y. Freund", "Y. Mansour", "R.E. Schapire" ],
      "venue" : "The Ann. of Stat.,",
      "citeRegEx" : "Freund et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Freund et al\\.",
      "year" : 2004
    }, {
      "title" : "Selective sampling using the query by committee algorithm",
      "author" : [ "Y. Freund", "H.S. Seung", "E. Shamir", "N. Tishby" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Freund et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Freund et al\\.",
      "year" : 1997
    }, {
      "title" : "A bound on the label complexity of agnostic active learning",
      "author" : [ "S. Hanneke" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Hanneke.,? \\Q2007\\E",
      "shortCiteRegEx" : "Hanneke.",
      "year" : 2007
    }, {
      "title" : "Adaptive rates of convergence in active learning",
      "author" : [ "S. Hanneke" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Hanneke.,? \\Q2009\\E",
      "shortCiteRegEx" : "Hanneke.",
      "year" : 2009
    }, {
      "title" : "A statistical theory of active learning",
      "author" : [ "S. Hanneke" ],
      "venue" : null,
      "citeRegEx" : "Hanneke.,? \\Q2013\\E",
      "shortCiteRegEx" : "Hanneke.",
      "year" : 2013
    }, {
      "title" : "Algorithms for Active Learning",
      "author" : [ "D. Hsu" ],
      "venue" : "PhD thesis, UC San Diego,",
      "citeRegEx" : "Hsu.,? \\Q2010\\E",
      "shortCiteRegEx" : "Hsu.",
      "year" : 2010
    }, {
      "title" : "Surrogate losses in passive and active learning",
      "author" : [ "S. Hanneke", "L. Yang" ],
      "venue" : "CoRR, abs/1207.3772,",
      "citeRegEx" : "Hanneke and Yang.,? \\Q2012\\E",
      "shortCiteRegEx" : "Hanneke and Yang.",
      "year" : 2012
    }, {
      "title" : "Active learning in the non-realizable case",
      "author" : [ "M. Kääriäinen" ],
      "venue" : "In ALT,",
      "citeRegEx" : "Kääriäinen.,? \\Q2006\\E",
      "shortCiteRegEx" : "Kääriäinen.",
      "year" : 2006
    }, {
      "title" : "Rademacher complexities and bounding the excess risk in active learning",
      "author" : [ "V. Koltchinskii" ],
      "venue" : null,
      "citeRegEx" : "Koltchinskii.,? \\Q2010\\E",
      "shortCiteRegEx" : "Koltchinskii.",
      "year" : 2010
    }, {
      "title" : "Knows what it knows: a framework for self-aware learning",
      "author" : [ "L. Li", "M.L. Littman", "T.J. Walsh" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Li et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2008
    }, {
      "title" : "Noisy bayesian active learning",
      "author" : [ "M. Naghshvar", "T. Javidi", "K. Chaudhuri" ],
      "venue" : "In Allerton,",
      "citeRegEx" : "Naghshvar et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Naghshvar et al\\.",
      "year" : 2013
    }, {
      "title" : "The geometry of generalized binary search",
      "author" : [ "R.D. Nowak" ],
      "venue" : "IEEE Transactions on Information Theory,",
      "citeRegEx" : "Nowak.,? \\Q2011\\E",
      "shortCiteRegEx" : "Nowak.",
      "year" : 2011
    }, {
      "title" : "Active learning literature survey",
      "author" : [ "B. Settles" ],
      "venue" : "Technical report, University of Wisconsin-Madison,",
      "citeRegEx" : "Settles.,? \\Q2010\\E",
      "shortCiteRegEx" : "Settles.",
      "year" : 2010
    }, {
      "title" : "A tutorial on conformal prediction",
      "author" : [ "G. Shafer", "V. Vovk" ],
      "venue" : null,
      "citeRegEx" : "Shafer and Vovk.,? \\Q2008\\E",
      "shortCiteRegEx" : "Shafer and Vovk.",
      "year" : 2008
    }, {
      "title" : "Optimal aggregation of classifiers in statistical learning",
      "author" : [ "A.B. Tsybakov" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "Tsybakov.,? \\Q2004\\E",
      "shortCiteRegEx" : "Tsybakov.",
      "year" : 2004
    }, {
      "title" : "Plal: Cluster-based active learning",
      "author" : [ "R. Urner", "S. Wulff", "S. Ben-David" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Urner et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Urner et al\\.",
      "year" : 2013
    } ],
    "referenceMentions" : [ ],
    "year" : 2014,
    "abstractText" : "We study agnostic active learning, where the goal is to learn a classifier in a pre-specified hypothesis class interactively with as few label queries as possible, while making no assumptions on the true function generating the labels. The main algorithms for this problem are disagreement-based active learning, which has a high label requirement, and margin-based active learning, which only applies to fairly restricted settings. A major challenge is to find an algorithm which achieves better label complexity, is consistent in an agnostic setting, and applies to general classification problems. In this paper, we provide such an algorithm. Our solution is based on two novel contributions – a reduction from consistent active learning to confidence-rated prediction with guaranteed error, and a novel confidence-rated predictor.",
    "creator" : "LaTeX with hyperref package"
  }
}