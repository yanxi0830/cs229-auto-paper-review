{
  "name" : "1507.00407.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Fast Convergence of Regularized Learning in Games",
    "authors" : [ "Vasilis Syrgkanis", "Alekh Agarwal" ],
    "emails" : [ "vasy@microsoft.com", "alekha@microsoft.com", "haipengl@cs.princeton.edu", "schapire@microsoft.com" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "What happens when players in a game interact with one another, all of them acting independently and selfishly to maximize their own utilities? If they are smart, we intuitively expect their utilities — both individually and as a group — to grow, perhaps even to approach the best possible. We also expect the dynamics of their behavior to eventually reach some kind of equilibrium. Understanding these dynamics is central to game theory as well as its various application areas, including economics, network routing, auction design, and evolutionary biology.\nIt is natural in this setting for the players to each make use of a no-regret learning algorithm for making their decisions, an approach known as decentralized no-regret dynamics. No-regret algorithms are a strong match for playing games because their regret bounds hold even in adversarial environments. As a benefit, these bounds ensure that each player’s utility approaches optimality. When played against one another, it can also be shown that the sum of utilities approaches an approximate optimum [2, 19], and the player strategies converge to an equilibrium under appropriate conditions [7, 1, 9], at rates governed by the regret bounds. Well-known families of no-regret algorithms include multiplicative-weights [14, 8], Mirror Descent [15], and Follow the Regularized/Perturbed Leader [13]. (See [3, 21] for excellent overviews.) For all of these, the average regret vanishes at the worst-case rate of O(1/ √ T ), which is unimprovable in fully adversarial scenarios.\nHowever, the players in our setting are facing other similar, predictable no-regret learning algorithms, a chink that hints at the possibility of improved convergence rates for such dynamics. This was first observed and exploited by Daskalakis et al. [4]. For two-player zero-sum games, they developed a decentralized variant of Nesterov’s accelerated saddle point algorithm [16] and showed that each player’s average regret converges at the remarkable rate ofO(1/T ). Although the resulting\nar X\niv :1\n50 7.\n00 40\n7v 5\n[ cs\n.G T\n] 1\ndynamics are somewhat unnatural, in later work, Rakhlin and Sridharan [18] showed surprisingly that the same convergence rate holds for a simple variant of Mirror Descent with the seemingly minor modification that the last utility observation is counted twice.\nAlthough major steps forward, both these works are limited to two-player zero-sum games, the very simplest case. As such, they do not cover many practically important settings, such as auctions or routing games, which are decidedly not zero-sum, and which involve many independent actors.\nIn this paper, we vastly generalize these techniques to the practically important but far more challenging case of arbitrary multi-player normal-form games, giving natural no-regret dynamics whose convergence rates are much faster than previously possible for this general setting.\nContributions. We show that the average welfare of the game, that is, the sum of player utilities, converges to approximately optimal welfare at the rate O(1/T ), rather than the previously known rate of O(1/ √ T ). Concretely, we show a natural class of regularized no-regret algorithms with recency bias that achieve welfare at least (λ/(1 + µ))OPT − O(1/T ), where λ and µ are parameters in a smoothness condition on the game introduced by Roughgarden [19]. For the same class of algorithms, we show that each individual player’s average regret converges to zero at the rateO ( T−3/4 ) . Thus, our results entail an algorithm for computing coarse correlated equilibria in a decentralized manner with significantly faster convergence than existing methods.\nWe additionally give a black-box reduction that preserves the fast rates in favorable environments, while robustly maintaining Õ(1/ √ T ) regret against any opponent in the worst case.\nEven for two-person zero-sum games, our results for general games expose a hidden generality and modularity underlying the previous results [4, 18]. First, our analysis identifies stability and recency bias as key structural ingredients of an algorithm with fast rates. This covers the Optimistic Mirror Descent of Rakhlin and Sridharan [18] as an example, but also applies to optimistic variants of Follow the Regularized Leader (FTRL), including dependence on arbitrary weighted windows in the history as opposed to just the utility from the last round. Recency bias is a behavioral pattern commonly observed in game-theoretic environments [10]; as such, our results can be viewed as a partial theoretical justification. Second, previous approaches in [4, 18] on achieving both faster convergence against similar algorithms while at the same time Õ(1/ √ T ) regret rates against adversaries were shown via ad-hoc modifications of specific algorithms. We give a black-box modification which is not algorithm specific and works for all these optimistic algorithms.\nFinally, we simulate a 4-bidder simultaneous auction game, and compare our optimistic algorithms against Hedge [8] in terms of utilities, regrets and convergence to equilibria."
    }, {
      "heading" : "2 Repeated Game Model and Dynamics",
      "text" : "Consider a static game G among a set N of n players. Each player i has a strategy space Si and a utility function ui : S1 × . . .× Sn → [0, 1] that maps a strategy profile s = (s1, . . . , sn) to a utility ui(s). We assume that the strategy space of each player is finite and has cardinality d, i.e. |Si| = d. We denote with w = (w1, . . . ,wn) a profile of mixed strategies, where wi ∈ ∆(Si) and wi,x is the probability of strategy x ∈ Si. Finally let Ui(w) = Es∼w[ui(s)], the expected utility of player i. We consider the setting where the game G is played repeatedly for T time steps. At each time step t each player i picks a mixed strategy wti ∈ ∆(Si). At the end of the iteration each player i observes the expected utility he would have received had he played any possible strategy x ∈ Si. More formally, let uti,x = Es−i∼wt−i [ui(x, s−i)], where s−i is the set of strategies of all but the i th player, and let uti = (u t i,x)x∈Si . At the end of each iteration each player i observes u t i. Observe that the expected utility of a player at iteration t is simply the inner product 〈wti ,uti〉.\nNo-regret dynamics. We assume that the players each decide their strategy wti based on a vanishing regret algorithm. Formally, for each player i, the regret after T time steps is equal to the maximum gain he could have achieved by switching to any other fixed strategy:\nri(T ) = sup w∗i ∈∆(Si) T∑ t=1 〈 w∗i −wti ,uti 〉 .\nThe algorithm has vanishing regret if ri(T ) = o(T ).\nApproximate Efficiency of No-Regret Dynamics. We are interested in analyzing the average welfare of such vanishing regret sequences. For a given strategy profile s the social welfare is defined as the sum of the player utilities: W (s) = ∑ i∈N ui(s). We overload notation to denote W (w) = Es∼w[W (s)]. We want to lower bound how far the average welfare of the sequence is, with respect to the optimal welfare of the static game:\nOPT = max s∈S1×...×Sn W (s).\nThis is the optimal welfare achievable in the absence of player incentives and if a central coordinator could dictate each player’s strategy. We next define a class of games first identified by Roughgarden [19] on which we can approximate the optimal welfare using decoupled no-regret dynamics.\nDefinition 1 (Smooth game [19]). A game is (λ, µ)-smooth if there exists a strategy profile s∗ such that for any strategy profile s: ∑ i∈N ui(s ∗ i , s−i) ≥ λOPT − µW (s).\nIn words, any player using his optimal strategy continues to do well irrespective of other players’ strategies. This condition directly implies near-optimality of no-regret dynamics as we show below.\nProposition 2. In a (λ, µ)-smooth game, if each player i suffers regret at most ri(T ), then:\n1\nT T∑ t=1 W (wt) ≥ λ 1 + µ OPT − 1 1 + µ 1 T ∑ i∈N ri(T ) = 1 ρ OPT − 1 1 + µ 1 T ∑ i∈N ri(T ),\nwhere the factor ρ = (1 + µ)/λ is called the price of anarchy (POA).\nThis proposition is essentially a more explicit version of Roughgarden’s result [19]; we provide a proof in the appendix for completeness. The result shows that the convergence to POA is driven by the quantity 11+µ 1 T ∑ i∈N ri(T ). There are many algorithms which achieve a regret rate of\nri(T ) = O( √\nlog(d)T ), in which case the latter theorem would imply that the average welfare converges to POA at a rate of O(n √ log(d)/T ). As we will show, for some natural classes of no-regret algorithms the average welfare converges at the much faster rate of O(n2 log(d)/T )."
    }, {
      "heading" : "3 Fast Convergence to Approximate Efficiency",
      "text" : "In this section, we present our main theoretical results characterizing a class of no-regret dynamics which lead to faster convergence in smooth games. We begin by describing this class.\nDefinition 3 (RVU property). We say that a vanishing regret algorithm satisfies the Regret bounded by Variation in Utilities (RVU) property with parameters α > 0 and 0 < β ≤ γ and a pair of dual norms (‖ · ‖, ‖ · ‖∗)1 if its regret on any sequence of utilities u1,u2, . . . ,uT is bounded as\nT∑ t=1 〈 w∗ −wt,ut 〉 ≤ α+ β T∑ t=1 ‖ut − ut−1‖2∗ − γ T∑ t=1 ‖wt −wt−1‖2. (1)\nTypical online learning algorithms such as Mirror Descent and FTRL do not satisfy the RVU property in their vanilla form, as the middle term grows as ∑T t=1 ‖ut‖2∗ for these methods. However, Rakhlin and Sridharan [17] give a modification of Mirror Descent with this property, and we will present a similar variant of FTRL in the sequel.\nWe now present two sets of results when each player uses an algorithm with this property. The first discusses the convergence of social welfare, while the second governs the convergence of the individual players’ utilities at a fast rate.\n1The dual to a norm ‖ · ‖ is defined as ‖v‖∗ = sup‖u‖≤1 〈u, v〉."
    }, {
      "heading" : "3.1 Fast Convergence of Social Welfare",
      "text" : "Given Proposition 2, we only need to understand the evolution of the sum of players’ regrets∑T t=1 ri(T ) in order to obtain convergence rates of the social welfare. Our main result in this section bounds this sum when each player uses dynamics with the RVU property. Theorem 4. Suppose that the algorithm of each player i satisfies the property RVU with parameters α, β and γ such that β ≤ γ/(n− 1)2 and ‖ · ‖ = ‖ · ‖1. Then ∑ i∈N ri(T ) ≤ αn.\nProof. Since ui(s) ≤ 1, definitions imply: ‖uti−u t−1 i ‖∗ ≤ ∑ s−i ∣∣∣∏j 6=i wtj,sj −∏j 6=i wt−1j,sj ∣∣∣ . The latter is the total variation distance of two product distributions. By known properties of total variation (see e.g. [12]), this is bounded by the sum of the total variations of each marginal distribution:∑\ns−i ∣∣∣∣∣∣ ∏ j 6=i wtj,sj − ∏ j 6=i wt−1j,sj ∣∣∣∣∣∣ ≤ ∑ j 6=i ‖wtj −wt−1j ‖ (2)\nBy Jensen’s inequality, (∑\nj 6=i ‖wtj −w t−1 j ‖\n)2 ≤ (n− 1) ∑ j 6=i ‖wtj −w\nt−1 j ‖2, so that∑ i∈N ‖uti − ut−1i ‖ 2 ∗ ≤ (n− 1) ∑ i∈N ∑ j 6=i ‖wtj −wt−1j ‖ 2 = (n− 1)2 ∑ i∈N ‖wti −wt−1i ‖ 2.\nThe theorem follows by summing up the RVU property (1) for each player i and observing that the summation of the second terms is smaller than that of the third terms and thereby can be dropped.\nRemark: The rates from the theorem depend on α, which will be O(1) in the sequel. The above theorem extends to the case where ‖ · ‖ is any norm equivalent to the `1 norm. The resulting requirement on β in terms of γ can however be more stringent. Also, the theorem does not require that all players use the same no-regret algorithm unlike previous results [4, 18], as long as each player’s algorithm satisfies the RVU property with a common bound on the constants.\nWe now instantiate the result with examples that satisfy the RVU property with different constants."
    }, {
      "heading" : "3.1.1 Optimistic Mirror Descent",
      "text" : "The optimistic mirror descent (OMD) algorithm of Rakhlin and Sridharan [17] is parameterized by an adaptive predictor sequence Mti and a regularizer\n2 R which is 1-strongly convex3 with respect to a norm ‖ · ‖. Let DR denote the Bregman divergence associated with R. Then the update rule is defined as follows: let g0i = argming∈∆(Si)R(g) and\nΦ(u,g) = argmax w∈∆(Si)\nη · 〈w,u〉 −DR(w,g),\nthen: wti = Φ(M t i,g t−1 i ), and g t i = Φ(u t i,g t−1 i )\nThen the following proposition can be obtained for this method. Proposition 5. The OMD algorithm using stepsize η and Mti = u t−1 i satisfies the RVU property with constants α = R/η, β = η, γ = 1/(8η), where R = maxi supf DR(f,g 0 i ).\nThe proposition follows by further crystallizing the arguments of Rakhlin and Sridaran [18], and we provide a proof in the appendix for completeness. The above proposition, along with Theorem 4, immediately yields the following corollary, which had been proved by Rakhlin and Sridharan [18] for two-person zero-sum games, and which we here extend to general games. Corollary 6. If each player runs OMD with Mti = u t−1 i and stepsize η = 1/( √ 8(n− 1)), then we\nhave ∑ i∈N ri(T ) ≤ nR/η ≤ n(n− 1) √ 8R = O(1).\nThe corollary follows by noting that the condition β ≤ γ/(n− 1)2 is met with our choice of η. 2Here and in the sequel, we can use a different regularizer Ri for each player i, without qualitatively affecting any of the results. 3R is 1-strongly convex ifR ( u+v 2 ) ≤ R(u)+R(v) 2 − ‖u−v‖ 2 8 , ∀u, v."
    }, {
      "heading" : "3.1.2 Optimistic Follow the Regularized Leader",
      "text" : "We next consider a different class of algorithms denoted as optimistic follow the regularized leader (OFTRL). This algorithm is similar but not equivalent to OMD, and is an analogous extension of standard FTRL [13]. This algorithm takes the same parameters as for OMD and is defined as follows: Let w0i = argminw∈∆(Si)R(w) and:\nwTi = argmax w∈∆(Si)\n〈 w,\nT−1∑ t=1 uti + M T i\n〉 − R(w)\nη .\nWe consider three variants of OFTRL with different choices of the sequence Mti, incorporating the recency bias in different forms.\nOne-step recency bias: The simplest form of OFTRL uses Mti = u t−1 i and obtains the following result, where R = maxi ( supf∈∆(Si)R(f)− inff∈∆(Si)R(f) ) .\nProposition 7. The OFTRL algorithm using stepsize η and Mti = u t−1 i satisfies the RVU property with constants α = R/η, β = η and γ = 1/(4η).\nCombined with Theorem 4, this yields the following constant bound on the total regret of all players: Corollary 8. If each player runs OFTRL with Mti = u t−1 i and η = 1/(2(n − 1)), then we have∑\ni∈N ri(T ) ≤ nR/η ≤ 2n(n− 1)R = O(1).\nRakhlin and Sridharan [17] also analyze an FTRL variant, but require a self-concordant barrier for the constraint set as opposed to an arbitrary strongly convex regularizer, and their bound is missing the crucial negative terms of the RVU property which are essential for obtaining Theorem 4.\nH-step recency bias: More generally, given a window size H , one can define Mti =∑t−1 τ=t−H u τ i /H . We have the following proposition.\nProposition 9. The OFTRL algorithm using stepsize η and Mti = ∑t−1 τ=t−H u τ i /H satisfies the RVU property with constants α = R/η, β = ηH2 and γ = 1/(4η).\nSetting η = 1/(2H(n− 1)), we obtain the analogue of Corollary 8, with an extra factor of H .\nGeometrically discounted recency bias: The next proposition considers an alternative form of recency bias which includes all the previous utilities, but with a geometric discounting. Proposition 10. The OFTRL algorithm using stepsize η and Mti = 1∑t−1\nτ=0 δ −τ\n∑t−1 τ=0 δ −τuτi satisfies\nthe RVU property with constants α = R/η, β = η/(1− δ)3 and γ = 1/(8η).\nNote that these choices for Mti can also be used in OMD with qualitatively similar results."
    }, {
      "heading" : "3.2 Fast Convergence of Individual Utilities",
      "text" : "The previous section shows implications of the RVU property on the social welfare. This section complements these with a similar result for each player’s individual utility. Theorem 11. Suppose that the players use algorithms satisfying the RVU property with parameters α > 0, β > 0, γ ≥ 0. If we further have the stability property ‖wti − w t+1 i ‖ ≤ κ, then for any\nplayer ∑T t=1 〈w∗i −wti ,uti〉 ≤ α+ βκ2(n− 1)2T.\nSimilar reasoning as in Theorem 4 yields: ‖uti − u t−1 i ‖2∗ ≤ (n− 1) ∑ j 6=i ‖wtj −w t−1 j ‖2 ≤ (n− 1)2κ2, and summing the terms gives the theorem.\nNoting that OFTRL satisfies the RVU property with constants given in Proposition 7 and stability property with κ = 2η (see Lemma 20 in the appendix), we have the following corollary.\nCorollary 12. If all players use the OFTRL algorithm with Mti = u t−1 i and η = (n−1)−1/2T−1/4, then we have ∑T t=1 〈w∗i −wti ,uti〉 ≤ (R+ 4) √ n− 1 · T 1/4.\nSimilar results hold for the other forms of recency bias, as well as for OMD. Corollary 12 gives a fast convergence rate of the players’ strategies to the set of coarse correlated equilibria (CCE) of the game. This improves the previously known convergence rate √ T (e.g. [11]) to CCE using natural, decoupled no-regret dynamics defined in [4]."
    }, {
      "heading" : "4 Robustness to Adversarial Opponent",
      "text" : "So far we have shown simple dynamics with rapid convergence properties in favorable environments when each player in the game uses an algorithm with the RVU property. It is natural to wonder if this comes at the cost of worst-case guarantees when some players do not use algorithms with this property. Rakhlin and Sridharan [18] address this concern by modifying the OMD algorithm with additional smoothing and adaptive step-sizes so as to preserve the fast rates in the favorable case while still guaranteeing O(1/ √ T ) regret for each player, no matter how the opponents play. It is not so obvious how this modification might extend to other procedures, and it seems undesirable to abandon the black-box regret transformations we used to obtain Theorem 4. In this section, we present a generic way of transforming an algorithm which satisfies the RVU property so that it retains the fast convergence in favorable settings, but always guarantees a worst-case regret of Õ(1/ √ T ).\nIn order to present our modification, we need a parametric form of the RVU property which will also involve a tunable parameter of the algorithm. For most online learning algorithms, this will correspond to the step-size parameter used by the algorithm. Definition 13 (RVU(ρ) property). We say that a parametric algorithm A(ρ) satisfies the Regret bounded by Variation in Utilities(ρ) (RVU(ρ)) property with parameters α, β, γ > 0 and a pair of dual norms (‖ · ‖, ‖ · ‖∗) if its regret on any sequence of utilities u1,u2, . . . ,uT is bounded as\nT∑ t=1 〈 w∗ −wt,ut 〉 ≤ α ρ + ρβ T∑ t=1 ‖ut − ut−1‖2∗ − γ ρ T∑ t=1 ‖wt −wt−1‖2. (3)\nIn both OMD and OFTRL algorithms from Section 3, the parameter ρ is precisely the stepsize η. We now show an adaptive choice of ρ according to an epoch-based doubling schedule.\nBlack-box reduction. Given a parametric algorithm A(ρ) as a black-box we construct a wrapper A′ based on the doubling trick: The algorithm of each player proceeds in epochs. At each epoch r the player i has an upper bound ofBr on the quantity ∑T t=1 ‖uti−u t−1 i ‖2∗. We start with a parameter η∗ and B1 = 1, and for τ = 1, 2, . . . , T repeat:\n1. Play according to A(ηr) and receive uτi . 2. If ∑τ t=1 |uti − u t−1 i ‖2∗ ≥ Br:\n(a) Update r ← r + 1, Br ← 2Br, ηr = min {\nα√ Br , η∗\n} , with α as in Equation (3).\n(b) Start a new run of A with parameter ηr. Theorem 14. Algorithm A′ achieves regret at most the minimum of the following two terms:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ log(T )\n( 2 + α\nη∗ + (2 + η∗ · β) T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ ) − γ η∗ T∑ t=1 ‖wti −wt−1i ‖ 2; (4)\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ log(T ) 1 + α η∗ + (1 + α · β) · √√√√2 T∑ t=1 ‖uti − u t−1 i ‖2∗  (5) That is, the algorithm satisfies the RVU property, and also has regret that can never exceed Õ( √ T ). The theorem thus yields the following corollary, which illustrates the stated robustness of A′. Corollary 15. Algorithm A′, with η∗ = γ(2+β)(n−1)2 log(T ) , achieves regret Õ( √ T ) against any adversarial sequence, while at the same time satisfying the conditions of Theorem 4. Thereby, if all players use such an algorithm, then: ∑ i∈N ri(T ) ≤ n log(T )(α/η∗ + 2) = Õ(1).\nProof. Observe that for such η∗, we have that: (2 + η∗ · β) log(T ) ≤ (2 + β) log(T ) ≤ γη∗(n−1)2 . Therefore, algorithm A′, satisfies the sufficient conditions of Theorem 4.\nIf A(ρ) is the OFTRL algorithm, then we know by Proposition 7 that the above result applies with α = R = maxwR(w), β = 1, γ = 14 and ρ = η. Setting η∗ = γ (2+β)(n−1)2 = 1 12(n−1)2 , the resulting algorithm A′ will have regret at most: Õ(n2 √ T ) against an arbitrary adversary, while if\nall players use algorithm A′ then ∑ i∈N ri(T ) = O(n 3 log(T )).\nAn analogue of Theorem 11 can also be established for this algorithm:\nCorollary 16. If A satisfies the RVU(ρ) property, and also ‖wti − w t−1 i ‖ ≤ κρ, then A′ with η∗ = T −1/4 achieves regret Õ(T 1/4) if played against itself, and Õ( √ T ) against any opponent.\nOnce again, OFTRL satisfies the above conditions with κ = 2, implying robust convergence."
    }, {
      "heading" : "5 Experimental Evaluation",
      "text" : "We analyzed the performance of optimistic follow the regularized leader with the entropy regularizer, which corresponds to the Hedge algorithm [8] modified so that the last iteration’s utility for each strategy is double counted; we refer to it as Optimistic Hedge. More formally, the probability of player i playing strategy j at iteration T is proportional to exp ( −η · (∑T−2 t=1 u t ij + 2u T−1 ij )) , rather\nthan exp ( −η · ∑T−1 t=1 u t ij ) as is standard for Hedge.\nWe studied a simple auction where n players are bidding for m items. Each player has a value v for getting at least one item and no extra value for more items. The utility of a player is the value for the allocation he derived minus the payment he has to make. The game is defined as follows: simultaneously each player picks one of the m items and submits a bid on that item (we assume bids to be discretized). For each item, the highest bidder wins and pays his bid. We let players play this game repeatedly with each player invoking either Hedge or optimistic Hedge. This game, and generalizations of it, are known to be (1 − 1/e, 0)-smooth [22], if we also view the auctioneer as a player whose utility is the revenue. The welfare of the game is the value of the resulting allocation, hence not a constant-sum game. The welfare maximization problem corresponds to the unweighted bipartite matching problem. The POA captures how far from the optimal matching is the average allocation of the dynamics. By smoothness we know it converges to at least 1− 1/e of the optimal.\nFast convergence of individual and average regret. We run the game for n = 4 bidders and m = 4 items and valuation v = 20. The bids are discretized to be any integer in [1, 20]. We find that the sum of the regrets and the maximum individual regret of each player are remarkably lower under Optimistic Hedge as opposed to Hedge. In Figure 1 we plot the maximum individual regret as well as the sum of the regrets under the two algorithms, using η = 0.1 for both methods. Thus convergence to the set of coarse correlated equilibria is substantially faster under Optimistic Hedge,\nconfirming our results in Section 3.2. We also observe similar behavior when each player only has value on a randomly picked player-specific subset of items, or uses other step sizes.\nMore stable dynamics. We observe that the behavior under Optimistic Hedge is more stable than under Hedge. In Figure 2, we plot the expected bid of a player on one of the items and his expected utility under the two dynamics. Hedge exhibits the sawtooth behavior that was observed in generalized first price auction run by Overture (see [5, p. 21]). In stunning contrast, Optimistic Hedge leads to more stable expected bids over time. This stability property of optimistic Hedge is one of the main intuitive reasons for the fast convergence of its regret.\nWelfare. In this class of games, we did not observe any significant difference between the average welfare of the methods. The key reason is the following: the proof that no-regret dynamics are approximately efficient (Proposition 2) only relies on the fact that each player does not have regret against the strategy s∗i used in the definition of a smooth game. In this game, regret against these strategies is experimentally comparable under both algorithms, even though regret against the best fixed strategy is remarkably different. This indicates a possibility for faster rates for Hedge in terms of welfare. In Appendix H, we show fast convergence of the efficiency of Hedge for costminimization games, though with a worse POA ."
    }, {
      "heading" : "6 Discussion",
      "text" : "This work extends and generalizes a growing body of work on decentralized no-regret dynamics in many ways. We demonstrate a class of no-regret algorithms which enjoy rapid convergence when played against each other, while being robust to adversarial opponents. This has implications in computation of correlated equilibria, as well as understanding the behavior of agents in complex multi-player games. There are a number of interesting questions and directions for future research which are suggested by our results, including the following:\nConvergence rates for vanilla Hedge: The fast rates of our paper do not apply to algorithms such as Hedge without modification. Is this modification to satisfy RVU only sufficient or also necessary? If not, are there counterexamples? In the supplement, we include a sketch hinting at such a counterexample, but also showing fast rates to a worse equilibrium than our optimistic algorithms.\nConvergence of players’ strategies: The OFTRL algorithm often produces much more stable trajectories empirically, as the players converge to an equilibrium, as opposed to say Hedge. A precise quantification of this desirable behavior would be of great interest.\nBetter rates with partial information: If the players do not observe the expected utility function, but only the moves of the other players at each round, can we still obtain faster rates?"
    }, {
      "heading" : "A Proof of Proposition 2",
      "text" : "Proposition 2. In a (λ, µ)-smooth game, if each player i suffers regret at most ri(T ), then:\n1\nT T∑ t=1 W (wt) ≥ λ 1 + µ OPT − 1 1 + µ 1 T ∑ i∈N ri(T ) = 1 ρ OPT − 1 1 + µ 1 T ∑ i∈N ri(T ),\nwhere the factor ρ = (1 + µ)/λ is called the price of total anarchy (POA).\nProof. Since each player i has regret ri(T ), we have that:\nT∑ t=1 〈 wti ,u t i 〉 ≥ T∑ t=1 uti,s∗i − ri(T ) (6)\nSumming over all players and using the smoothness property:\nT∑ t=1 W (wt) = T∑ t=1 ∑ i∈N 〈 wti ,u t i 〉 ≥ T∑ t=1 ∑ i∈N uti,s∗i − ∑ i∈N ri(T )\n= T∑ t=1 Es∼wt [∑ i∈N ui(s ∗ i , s−i) ] − ∑ i∈N ri(T )\n≥ T∑ t=1 (λOPT − µEs∼wt [W (s)])− ∑ i∈N ri(T )\n= T∑ t=1 ( λOPT − µW (wt) ) − ∑ i∈N ri(T )\nBy re-arranging we get the result."
    }, {
      "heading" : "B Proof of Proposition 5",
      "text" : "Proposition 5. The OMD algorithm using stepsize η and Mti = u t−1 i satisfies the RVU property with constants α = R/η, β = η, γ = 1/(8η), where R = maxi supf DR(f,g 0 i ).\nWe will use the following theorem of [18].\nTheorem 17 (Raklin and Sridharan [18]). The regret of a player under optimistic mirror descent and with respect to any w∗i ∈ ∆(Si) is upper bounded by: T∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + T∑ t=1 ‖uti −Mti‖∗‖wti − gti‖ − 1 2η T∑ t=1 ( ‖wti − gti‖2 + ‖wti − gt−1i ‖ 2 ) (7) where R = supf DR(f, g0).\nWe show that if the players use optimistic mirror descent with Mti = u t−1 i , then the regret of each player satisfies the sufficient condition presented in the previous section. Some of the key facts (Equations (9) and (10)) that we use in the following proof appear in [18]. However, the formulation of the regret that we present in the following theorem is not immediately clear in their proof, so we present it here for clarity and completeness.\nTheorem 18. The regret of a player under optimistic mirror descent with Mti = u t−1 i and with respect to any w∗i ∈ ∆(Si) is upper bounded by: T∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − 1 8η T∑ t=1 ‖wti −wt−1i ‖ 2 (8)\nProof. By Theorem 17, instantiated for Mti = u t−1 i , we get:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + T∑ t=1 ‖uti − ut−1i ‖∗‖w t i − gti‖\n− 1 2η T∑ t=1 ( ‖wti − gti‖2 + ‖wti − gt−1i ‖ 2 )\nUsing the fact that for any ρ > 0:\n‖uti −Mti‖∗‖wti − gti‖ ≤ ρ\n2 ‖uti −Mti‖2∗ +\n1\n2ρ ‖wti − gti‖2 (9)\nWe get: T∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + ρ 2 T∑ t=1 ‖uti−ut−1i ‖ 2 ∗− ( 1 2η − 1 2ρ ) T∑ t=1 ‖wti−gti‖2− 1 2η T∑ t=1 ‖wti−gt−1i ‖ 2\nFor ρ = 2η, the latter simplifies to: T∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − 1 4η T∑ t=1 ‖wti − gti‖2 − 1 2η T∑ t=1 ‖wti − gt−1i ‖ 2\n≤ R η + η T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − 1 4η T∑ t=1 ‖wti − gti‖2 − 1 4η T∑ t=1 ‖wti − gt−1i ‖ 2\nLast we use the fact that:\n‖wti −wt−1i ‖ 2 ≤ 2‖wti − gt−1i ‖ 2 + 2‖wt−1i − g t−1 i ‖ 2 (10)\nSumming over all timesteps: T∑ t=1 ‖wti −wt−1i ‖ 2 ≤ 2 T∑ t=1 ‖wti − gt−1i ‖ 2 + 2 T∑ t=1 ‖wt−1i − g t−1 i ‖ 2\n≤ 2 T∑ t=1 ‖wti − gt−1i ‖ 2 + 2 T∑ t=1 ‖wti − gti‖2\nDividing over by 18η and applying it in the previous upper bound on the regret, we get:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − 1 8η T∑ t=1 ‖wti −wt−1i ‖ 2"
    }, {
      "heading" : "C Proof of Proposition 7",
      "text" : "Proposition 7. The OFTRL algorithm using stepsize η and Mti = u t−1 i satisfies the RVU property with constants α = R/η, β = η and γ = 1/(4η).\nWe first show that these algorithms achieve the same regret bounds as optimistic mirror descent. This result does not appear in previous work in any form.\nEven though the algorithms do not make use of a secondary sequence, we will still use in the analysis the notation:\ngTi = argmax g∈∆(Si)\n〈 g,\nT∑ t=1 uti\n〉 − R(g)\nη .\nThese secondary variables are often called be the leader sequence as they can see one step in the future.\nTheorem 19. The regret of a player under optimistic FTRL and with respect to any w∗i ∈ ∆(Si) is upper bounded by:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + T∑ t=1 ‖uti −Mti‖∗‖wti − gti‖ − 1 2η T∑ t=1 ( ‖wti − gti‖2 + ‖wti − gt−1i ‖ 2 )\n(11) where R = supf R(f)− inff R(f).\nProof. First observe that:\n〈 w∗i −wti ,uti 〉 = 〈 gti −wti ,uti −Mti 〉 + 〈 gti −wti ,Mti 〉 + 〈 w∗i − gti ,uti 〉 (12)\nWithout loss of generality we will assume that inff R(f) = 0. Since 〈gti −wti ,uti −Mti〉 ≤ ‖gti − wti‖‖uti −Mti‖∗, it suffices to show that for any w∗i ∈ ∆(Si):\nT∑ t=1 (〈 gti −wti ,Mti 〉 + 〈 w∗i − gti ,uti 〉) ≤ R(w ∗ i ) η − 1 2η T∑ t=1 ( ‖wti − gti‖2 + ‖wti − gt−1i ‖ 2 ) (13)\nFor shorthand notation let: IT = 12η ∑T t=1 ( ‖wti − gti‖2 + ‖wti − g t−1 i ‖2 ) . By induction assume that for all w∗i :\nT−1∑ t=1 (〈 gti −wti ,Mti 〉 − 〈 gti ,u t i 〉) ≤ − T−1∑ t=1 〈 w∗i ,u t i 〉 + R(w∗i ) η − IT−1\n= − 〈 w∗i , T−1∑ t=1 uti 〉 + R(w∗i ) η − IT−1\nApply the above for w∗i = g T−1 i and add 〈 gTi −wTi ,MTi 〉 − 〈 gTi ,u T i 〉 on both sides: T∑ t=1 (〈 gti −wti ,Mti 〉 − 〈 gti ,u t i 〉) ≤ − 〈 gT−1i , T−1∑ t=1 uti 〉 + R(gT−1i ) η − IT−1 + 〈 gTi −wTi ,MTi 〉 − 〈 gTi ,u T i\n〉 ≤ − 〈 wTi ,\nT−1∑ t=1 uti 〉 + R(wTi ) η − IT−1 + 〈 gTi −wTi ,MTi 〉 − 〈 gTi ,u T i 〉 − 1\n2η ‖wTi − gT−1i ‖ 2\n= − 〈 wTi , T−1∑ t=1 uti + M T i 〉 + R(wTi ) η − IT−1 + 〈 gTi ,M T i 〉 − 〈 gTi ,u T i 〉 − 1\n2η ‖wTi − gT−1i ‖ 2\n≤ − 〈 gTi , T−1∑ t=1 uti + M T i 〉 + R(gTi ) η − IT−1 + 〈 gTi ,M T i 〉 − 〈 gTi ,u T i 〉 − 1\n2η ‖wTi − gT−1i ‖ 2 − 1 2η ‖wTi − gTi ‖2\n= − 〈 gTi , T∑ t=1 uti 〉 + R(gTi ) η − IT\n≤ − 〈 q∗i , T∑ t=1 uti 〉 + R(q∗i ) η − IT\nThe inequalities follow by the optimality of the corresponding variable that was changed and by the strong convexity of R(·). The final vector q∗i is an arbitrary vector in ∆(Si). The base case of T = 0 follows trivially byR(f) ≥ 0 for all f . This concludes the inductive proof.\nThus optimistic FTRL achieves the exact same form of regret presented in Theorem 17 for optimistic mirror descent. Hence, the equivalent versions of Theorem 18 and Corollary 6 hold also for the optimistic FTRL algorithm. In fact we are able to show slightly stronger bounds for optimistic FTRL, based on the following lemmas.\nLemma 20 (Stability). For the optimistic FTRL algorithm:\n‖wti − gti‖ ≤ η · ‖Mti − uti‖∗ (14) ‖gti −wt+1i ‖ ≤ η · ‖M t+1 i ‖∗ (15)\nProof. Let FT (f) = 〈 f , ∑T−1 t=1 u t i + M T i 〉 − η−1R(f) and GT (f) = 〈 f , ∑T t=1 u t i 〉 − η−1R(f).\nObserve that: FT (f)−GT (f) = 〈 f ,MTi − uTi 〉 and FT+1(f)−GT (f) = 〈 f ,MT+1i 〉 .\nPart 1 By the optimality of wTi and gTi and the strong convexity ofR(·):\nFT (w T i ) ≥ FT (gTi ) +\n1\n2η ‖wTi − gTi ‖2\nGT (g T i ) ≥ GT (wTi ) +\n1\n2η ‖wTi − gTi ‖2\nAdding both inequalities and using the previous observations:\n1 η ‖wTi − gTi ‖2 ≤\n〈 wTi − gTi ,MTi − uTi 〉 ≤ ‖wTi − gTi ‖ · ‖MTi − uTi ‖∗\nDividing over by ‖wTi − gTi ‖ gives the first inequality of the lemma.\nPart 2 By the optimality of gTi and w T+1 i and strong convexity:\nFT+1(w T+1 i ) ≥ FT+1(g T i ) +\n1\n2η ‖wT+1i − g T i ‖2\nGT (g T i ) ≥ GT (wT+1i ) +\n1\n2η ‖wT+1i − g T i ‖2\nAdding the inequalities:\n1 η ‖wT+1i − g T i ‖2 ≤\n〈 wT+1i − g T i ,M T+1 i 〉 ≤ ‖wT+1i − g T i ‖ · ‖MT+1i ‖∗\nDividing over by ‖wT+1i − gTi ‖, yields second inequality of the lemma.\nGiven Theorem 19 and Lemma 20, the proposition immediately follows since\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η T∑ t=1 ‖uti −Mti‖2∗ − 1 2η T∑ t=1 ( ‖wti − gti‖2 + ‖wti − gt−1i ‖ 2 ) .\nReplacing Mti with u t−1 i and using Inequality (10), yields the result."
    }, {
      "heading" : "D Proof of Proposition 9",
      "text" : "Proposition 9. The OFTRL algorithm using stepsize η and Mti = ∑t−1 τ=t−H u τ i /H satisfies the RVU property with constants α = R/η, β = ηH2 and γ = 1/(4η).\nThe proposition is equivalent to the following lemma, which we will state and prove in this appendix.\nLemma 21. For the optimistic FTRL algorithm with Mti = 1 H ∑t−1 τ=t−H u τ i , the regret is upper bounded by:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + ηH2 T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − 1 4η T∑ t=1 ‖wti −wt−1i ‖ 2 (16)\nwhereR = supf R(f)−inff R(f). Thus we get ∑ i ri(T ) ≤ nR η = 2n(n−1)HR for η = 1 2H(n−1) .\nProof. Similar to Proposition 7, by Theorem 19, Lemma 20 and Inequality (10) we get:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η T∑ t=1 ‖uti −Mti‖2∗ − 1 4η T∑ t=1 ‖wti −wt−1i ‖ 2\n= R\nη + η T∑ t=1 ∥∥∥∥∥uti − 1H t−1∑ τ=t−H uτi ∥∥∥∥∥ 2\n∗\n− 1 4η T∑ t=1 ‖wti −wt−1i ‖ 2\n= R\nη + η T∑ t=1\n( 1\nH t−1∑ τ=t−H ∥∥uti − uτi ∥∥∗ )2 − 1 4η T∑ t=1 ‖wti −wt−1i ‖ 2\nBy triangle inequality:\n1\nH t−1∑ τ=t−H ∥∥uti − uτi ∥∥∗ ≤ 1H t−1∑ τ=t−H t−1∑ q=τ ∥∥∥uq+1i − uqi∥∥∥∗ =\nt−1∑ τ=t−H t− τ H ∥∥uτ+1i − uτi ∥∥∗ ≤ t−1∑ τ=t−H ∥∥uτ+1i − uτi ∥∥∗\nBy Cauchy-Schwarz:( t−1∑\nτ=t−H\n∥∥uτ+1i − uτi ∥∥∗ )2 ≤ H t−1∑ τ=t−H ∥∥uτ+1i − uτi ∥∥2∗ Thus we can derive that:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + ηH T∑ t=1 t−1∑ τ=t−H ∥∥uτ+1i − uτi ∥∥2∗ − 14η T∑ t=1 ‖wti −wt−1i ‖ 2\n≤ R η + ηH2 T∑ t=1 ∥∥uti − ut−1i ∥∥2∗ − 14η T∑ t=1 ‖wti −wt−1i ‖ 2"
    }, {
      "heading" : "E Proof of Proposition 10",
      "text" : "Proposition 10. The OFTRL algorithm using stepsize η and Mti = 1∑t−1\nτ=0 δ −τ\n∑t−1 τ=0 δ −τuτi\nsatisfies the RVU property with constants α = R/η, β = η/(1− δ)3 and γ = 1/(8η). The proposition is equivalent to the following lemma which we will prove in this appendix. Lemma 22. For the optimistic FTRL algorithm with Mti = 1∑t\nτ=0 δ −τ\n∑t−1 τ=0 δ\n−τuτi for some discount rate δ ∈ (0, 1), the regret is upper bounded by:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η (1− δ)3 T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − 1 8η T∑ t=1 ‖wti −wt−1i ‖ 2 (17)\nwhere R = supf R(f) − inff R(f). Thus we get ∑ i ri(T ) ≤ nR η = 2n(n − 1) 1 (1−δ)3/2R for η = (1−δ) 3/2\n2(n−1) .\nProof. We show the theorem for the case of optimistic FTRL. The OMD case follows analogously. Similar to Lemma 21 the regret is upper bounded by:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ R η + η T∑ t=1 ‖uti −Mti‖2∗ − 1 4η T∑ t=1 ‖wti −wt−1i ‖ 2\n= R\nη + η T∑ t=1 ∥∥∥∥∥uti − 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τuτi ∥∥∥∥∥ 2\n∗\n− 1 4η T∑ t=1 ‖wti −wt−1i ‖ 2\nWe will now show that:\nT∑ t=1 ∥∥∥∥∥uti − 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τuτi ∥∥∥∥∥ 2\n∗\n≤ 1 (1− δ)3 T∑ t=1 ‖uti − ut−1i ‖ 2 ∗\nwhich will conclude the proof.\nFirst observe by triangle inequality:\n∥∥∥∥∥uti − 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τuτi ∥∥∥∥∥ ∗ = 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τ‖uti − uτi ‖∗\n≤ 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τ t−1∑ q=τ ∥∥∥uq+1i − uqi∥∥∥∗ =\n1∑t−1 τ=0 δ −τ t−1∑ q=0 ∥∥∥uq+1i − uqi∥∥∥∗ q∑ τ=0 δ−τ\n= 1∑t−1\nτ=0 δ −τ t−1∑ q=0 ∥∥∥uq+1i − uqi∥∥∥∗ δ−q 1− δq+11− δ ≤ 1\n1− δ 1∑t−1\nτ=0 δ −τ t−1∑ q=0 δ−q ∥∥∥uq+1i − uqi∥∥∥∗\nBy Cauchy-Schwarz:\n( 1\n1− δ 1∑t−1\nτ=0 δ −τ t−1∑ q=0 δ−q ∥∥∥uq+1i − uqi∥∥∥∗ )2 =\n1 (1− δ)2 1(∑t−1 τ=0 δ −τ )2 ( t−1∑ q=0 δ−q/2 · δ−q/2 ∥∥∥uq+1i − uqi∥∥∥∗ )2\n≤ 1 (1− δ)2 1(∑t−1 τ=0 δ −τ )2 t−1∑ q=0 δ−q · t−1∑ q=0 δ−q ∥∥∥uq+1i − uqi∥∥∥2∗\n= 1 (1− δ)2 1∑t−1\nτ=0 δ −τ t−1∑ q=0 δ−q ∥∥∥uq+1i − uqi∥∥∥2∗\n= 1 (1− δ)2 1∑t−1\nτ=0 δ t−τ t−1∑ q=0 δt−q ∥∥∥uq+1i − uqi∥∥∥2∗\n≤ 1 δ(1− δ)2 t−1∑ q=0 δt−q ∥∥∥uq+1i − uqi∥∥∥2∗\nCombining we get:\n∥∥∥∥∥uti − 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τuτi ∥∥∥∥∥ 2\n∗\n≤ 1 δ(1− δ)2 t−1∑ q=0 δt−q ∥∥∥uq+1i − uqi∥∥∥2∗\nSumming over all t and re-arranging we get:\nT∑ t=1 ∥∥∥∥∥uti − 1∑t−1 τ=0 δ −τ t−1∑ τ=0 δ−τuτi ∥∥∥∥∥ 2\n∗\n≤ 1 δ(1− δ)2 T∑ t=1 t−1∑ q=0 δt−q ∥∥∥uq+1i − uqi∥∥∥2∗\n= 1 δ(1− δ)2 T−1∑ q=0 δ−q ∥∥∥uq+1i − uqi∥∥∥2∗ T∑ t=q+1 δt\n= 1 δ(1− δ)2 T−1∑ q=0 δ−q ∥∥∥uq+1i − uqi∥∥∥2∗ δ(δq − δT )1− δ\n= 1 (1− δ)3 T−1∑ q=0 ∥∥∥uq+1i − uqi∥∥∥2∗ (1− δT−q) ≤ 1\n(1− δ)3 T−1∑ q=0 ∥∥∥uq+1i − uqi∥∥∥2∗"
    }, {
      "heading" : "F Proof of Theorem 14",
      "text" : "Theorem 14. Algorithm A′ achieves regret at most the minimum of the following two terms: T∑\nt=1\n〈 w∗i −wti ,uti 〉 ≤ log(T ) ( 2 + α\nη∗ + (2 + η∗ · β) T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ ) − γ η∗ T∑ t=1 ‖wti −wt−1i ‖ 2;\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ log(T ) 1 + α η∗ + (1 + α · β) · √√√√2 T∑ t=1 ‖uti − u t−1 i ‖2∗ \nProof. We break the proof in the two corresponding parts. First part. Consider a round r and let Tr be its final iteration. Also let Ir = ∑Tr t=1 ‖uti − u t−1 i ‖2∗. First observe that by the definition of Br:\n1 2 Ir ≤ Br ≤ 2 · Ir + 1 (18)\nBy the definition of η, we know that\n1 η∗ ≤ 1 η < 1 η∗ + √ Br α . (19)\nBy the regret guarantee of algorithm A(ηr), we have that: Tr∑\nt=Tr−1+1\n〈 w∗i −wti ,uti 〉 ≤ α\nη + η · β Tr∑ t=Tr−1+1 ‖uti − ut−1i ‖ 2 ∗ − γ η Tr∑ t=Tr−1+1 ‖wti −wt−1i ‖ 2\n≤ α η∗\n+ √ Br + η∗ · β Tr∑ t=Tr−1+1 ‖uti − ut−1i ‖ 2 ∗ − γ η∗ Tr∑ t=Tr−1+1 ‖wti −wt−1i ‖ 2\n≤ α η∗\n+ √ Br + η∗ · β T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − γ η∗ Tr∑ t=Tr−1+1 ‖wti −wt−1i ‖ 2\nSince √ Br ≤ Br + 1 ≤ 2 · Ir + 2:\nTr∑ t=Tr−1+1 〈 w∗i −wti ,uti 〉 ≤ α η∗ + 2 + (2 + η∗ · β) T∑ t=1 ‖uti − ut−1i ‖ 2 ∗ − γ η∗ Tr∑ t=Tr−1+1 ‖wti −wt−1i ‖ 2\nSince at each round we are doubling the bound Br and since ∑T t=1 ‖uti − u t−1 i ‖2∗ ≤ T , there are at most log(T ) rounds. Summing up the above inequality for each of the at most log(T ) rounds, yields the claimed bound in Equation (4).\nSecond part. Again consider any round r. By Equations (18), (19), the fact that η ≤ α√ Br ≤ α √ 2√ Ir and by the regret of algorithm A(ηr):\nTr∑ t=Tr−1+1 〈 w∗i −wti ,uti 〉 ≤ α η∗ + √ Br + η · β Tr∑ t=Tr−1+1 ‖uti − ut−1i ‖ 2 ∗\n≤ α η∗\n+ √ Br + η · β · Ir\n≤ α η∗\n+ √ Br + α · β · √ 2Ir\n≤ α η∗\n+ √ 2Ir + 1 + α · β · √ 2Ir\n≤ α η∗\n+ 1 + √ 2Ir + α · β · √ 2Ir\n≤ α η∗ + 1 + (1 + α · β) √√√√2 T∑ t=1 ‖uti − u t−1 i ‖2∗\nAgain since the number of rounds is at most log(T ), by summing up the above bound for each round r, we get the second part of the theorem."
    }, {
      "heading" : "G Proof of Corollary 16",
      "text" : "Corollary 16. If A satisfies the RVU(ρ) property, and also ‖wti − w t−1 i ‖ ≤ κρ, then A′ with η∗ = T −1/4 achieves regret Õ(T 1/4) if played against itself, and Õ( √ T ) against any opponent.\nProof. Observe that at any round of A′, algorithm A is run with ηr ≤ η∗. Thus by the property of algorithm A, we have that at every iteration: ‖wti − w t−1 i ‖ ≤ κη∗ = κT−1/4. If all players use algorithm A′, then by similar reasoning as in Theorem 4 we know that:\n‖uti − ut−1i ‖ 2 ∗ ≤ (n− 1) ∑ j 6=i ‖wtj −wt−1j ‖ 2 ≤ (n− 1)2γ2η2∗ = (n− 1)2κ2T−1/2\nHence, by Equation 5, the regret of each player is bounded by:\nT∑ t=1 〈 w∗i −wti ,uti 〉 ≤ log(T )  α η∗ + (1 + α · β) · √√√√ T∑ t=1 ‖uti − u t−1 i ‖2∗  ≤ log(T ) ( αT 1/4 + (1 + α · β) · √ T · (n− 1)2κ2T−1/2\n) = log(T ) ( αT 1/4 + (1 + α · β) · (n− 1)κT 1/4 ) = Õ(T 1/4)"
    }, {
      "heading" : "H Fast convergence via a first order regret bound for cost-minimization",
      "text" : "In this section, we show how a different regret bound can also lead to a fast convergence rate for a smooth game. For some technical reasons we consider cost instead of utility throughout this section. We use ci : S1 × . . . × Sn → [0, 1] to denote the cost function, and similarly to previous sections C(s) = ∑ i∈N ci(s), C(w) = Es∼w[C(s)],OPT\n′ = mins∈S1×...×Sn C(s). A game is (λ, µ)-smooth if there exists a strategy profile s∗, such that for any strategy profile s:∑\ni∈N ci(s\n∗ i , s−i) ≤ λOPT′ + µC(s). (20)\nNow suppose each player i uses a no-regret algorithm to produce wti on each round and receives cost cti,s = Es−i∼wt−i [ci(s, s−i)] for each strategy s ∈ Si. Moreover, for any fixed strategy s, the no-regret algorithm ensures\nT∑ t=1 〈 wti , c t i 〉 − T∑ t=1 cti,s ≤ A1 √√√√log d( T∑ t=1 cti,s ) +A2 log d (21)\nfor some absolute constants A1 and A2. Note that this form of first order bound can be achieved by a variety of algorithms such as Hedge with appropriate learning rate tuning. Under this setup, we prove the following: Theorem 23. If a game is (λ, µ)-smooth and each player uses a no-regret algorithm with a regret satisfying Eq. (21), then we have\n1\nT T∑ t=1 C(wt) ≤ λ(1 + µ) µ(1− µ) OPT′ + An log d T\nwhere A = A 2 1µ\n(1−µ)2 + 2A2 1−µ .\nProof. Using the regret bound and Cauchy-Schwarz inequality, we have T∑ t=1 C(wt) = T∑ t=1 ∑ i∈N 〈 wti , c t i 〉\n≤ T∑ t=1 ∑ i∈N cti,s∗i +A1 √ log d ∑ i∈N √√√√ T∑ t=1 cti,s∗i +A2n log d ≤ T∑ t=1 ∑ i∈N cti,s∗i +A1 √ n log d √√√√ T∑ T=1 ∑ i∈N cti,s∗i +A2n log d. (22)\nBy the smoothness assumption, we have∑ i∈N cti,s∗i = Es∼wt [∑ i∈N ci(s ∗ i , s−i) ] ≤ λOPT′ + µEs∼wt [C(s)] = λOPT′ + µC(wt),\nand therefore ∑T t=1 ∑ i∈N c t i,s∗i ≤ x2 where we define x = √ λTOPT′ + µ ∑T t=1 C(w\nt). Now applying this bound in Eq. (22), we continue with\n1\nµ\n( x2 − λTOPT′ ) ≤ x2 + (A1 √ n log d)x+A2n log d.\nRearranging gives a quadratic inequality ax2 + bx+ c ≤ 0 with\na = 1− µ µ , b = −A1 √ n ln d, c = −λ µ TOPT′ −A2n log d,\nand solving for x gives\nx ≤ µ 2(1− µ)\n(−b+ √ b2 − 4ac) ≤ µ 1− µ √ b2 − 2ac.\nFinally solving for ∑T t=1 C(w t) (hidden in the definition of x) gives the bound stated in the theorem.\nNote that the price of total anarchy is larger than the one achieved by previous analysis by a multiplicative factor of 1 + 1µ , but the convergence rate is much faster (n times faster compared to optimistic mirror descent or optimistic FTRL)."
    }, {
      "heading" : "I Extension to continuous strategy space games",
      "text" : "In this section we extend our results to continuous strategy space games such as for instance ”splittable selfish routing games” (see e.g. [20]). These are games where the price of anarchy has been well studied and quite well motivated from internet routing. In these games we consider the dynamics where the players simply observe the past play of their opponents and not the expected past play. We consider dynamics where players don’t use mixed strategies, but are simply doing online convex optimization algorithms on their continuous strategy spaces. Such learning on continuous games has also been studied in more restrictive settings in [6].\nIn this setting we will consider the following setting: each player i has a strategy space Si which is a closed convex set in Rd. In this setting we will denote with wi ∈ Si a strategy of a player4. Given a profile of strategies w = (w1, . . . ,wn), each player incurs a cost ci(w) (equivalently a utility function ui(w).\nWe make the following two assumptions on the costs:\n1. (Convex in player strategy) For each player i and for each profile of opponent strategies w−i, the function ci(·,w−i) is convex in wi. 2. (Lipschitz gradient) For each player i, the function δi(w) = ∇ici(w),5 is L-Lipschitz continuous with respect to the ‖ · ‖1 norm and if w−i ∈ R(n−1)d is viewed as a vector in the (n− 1) · d dimensional space, i.e.:\n‖δi(w)− δi(y)‖∗ ≤ L · ∑ j ‖wj − yj‖ (23)\nObserve that a sufficient condition for Property (2) is that the function δi(w) is coordinate-wise L-lipschitz with respect to the ‖ · ‖ norm. Lemma 24. If for any j:\n‖δi(w)− δi(yj ,w−j)‖∗ ≤ L‖wj − yj‖ (24) then δi(·) satisfies Property (2).\nProof. For any two vectors w and y, think of switching from the one to the other by switching sequentially each player from his strategy wi to yi, keeping the remaining players fixed and in some pre-fixed player order. The difference ‖δi(w) − δi(y)‖∗ is upper bounded by the sum of the differences of these sequential switches. The difference of each such unilateral switch for each player j is turn upper bounded by ‖wj − yj‖, by the property assumed in the Lemma. The lemma then follows.\nExample. (Connection to discrete game). We can view the discrete action games as a special case of the latter setting, by re-naming mixed strategies in the discrete game to pure strategies in the continuous space game. Under this mapping, the continuous strategy space is the simplex in Rd, where d is the number of pure strategies of the discrete game. Moreover the costs ci(w) (equiv. utilities) are multi-linear, i.e. ci(w) = ∑ s Ci(s) ∏ j wj,s. Obviously, these multi-linear costs satisfy assumption 1, i.e. they are convex (in fact linear) in a players strategy.\nThe second assumption is also satisfied, albeit with a slightly more involved proof, which appears in the proof of Theorem 4. Basically, observe that\nδi,si(w) = ∑ s−i Ci(si, s−i) ∏ j 6=i wj,sj (25)\n4We will use wi instead of si for a pure strategy, since pure strategies of the continuous game will be sort of treated equivalently to mixed strategies in the discrete game we described in Section 2\n5With ∇ici(w) we denote the gradient of the function with respect the strategy of player i and fixing the strategy of other players. Equivalently for each fixed w−i it is the gradient of the function ci(·,w−i).\nAssuming Ci(s) ≤ 1:\n|δi,si(w)− δi,si(y)| ≤ ∑ s−i ∣∣∣∣∣∣ ∏ j 6=i wj,sj − ∏ j 6=i yj,sj ∣∣∣∣∣∣ ≤ ∑ j 6=i ‖wj − yj‖1 (26)\nWhere the last inequality holds by the properties of total variation distance.\nExample. (Splittable congestion games). In this game each player i has an amount of flow fi ≤ B he wants to route from a source si to a sink ti in an undirected graphG = (V,E). Each edge e ∈ E is associated with a latency function `e(fe) which maps an amount of flow fe passing through the edge to a latency. We will assume that latency functions are convex, increasing and twice differentiable. We will also assume that both `e(·) and `′e(·) are K-lipschitz functions of the flow. We will denote with Pi the set of (si, ti) paths in the graph. Then the set of feasible strategies for each player is all possible ways of splitting his flow fi onto these pats Pi. Denote with wp the amount of flow a player routes on path p ∈ Pi, then the strategy space is:\nSi = wi ∈ R|Pi|+ : ∑ p∈Pi wi,p = fp  (27) The latter is obviously a closed convex set in R|Pi|.\nFor an edge e, let fi,e(wi) = ∑ p∈Pi:e∈p wi,p to be the flow on edge e caused by player i and with\nfe(w) = ∑ i fi,e(wi) to be the total flow on the edge e. Then the cost of a player is:\nci(w) = ∑ e fi,e(wi) · `(fe(w)) (28)\nFirst observe that the functions ci(·) are convex with respect to a player’s strategy wi. This follows since the cost is linear across edges, thus we need to show convexity locally at each edge. The latency function on an edge is a convex function of the total flow, hence also x`e(x + b) is also a convex function of x. Now observe that the cost from each edge is of the form fi,e(wi)`e(fi,e(wi) + b) which is convex with respect to fi,e(wi). In turn, fi,e(·) is a linear function of wi. Thus whole cost function is convex in wi.\nLast we need to show that the second condition on the cost functions is satisfied for some lipschitzness factor L. This will be a consequence of the K-lipschitzness of the latency functions. Denote with `ie(w) = `e(fe(w)) + fi,e(wi) · `′e(fe(w)). Then, observe that:\nδi,p(w) = ∑ e∈p (`e(fe(w)) + fi,e(wi) · `′e(fe(w))) = ∑ e∈p `ie(w) (29)\nSince both `e(·) and `′e(·) are K-lipschitz and fi,e(wi) ≤ B, we have that: |δi,p(w)− δi,p(y)| ≤ ∑ e∈p |`ie(w)− `ie(y)|\n≤ ∑ e∈p |`e(fe(w))− `e(fe(y))|+B ∑ e∈p |`′e(fe(w))− `′e(fe(y))|\n≤ K(1 +B) ∑ e∈p |fe(w)− fe(y)| ≤ K(1 +B) ∑ e∈p ∑ j∈[n] |fj,e(wj)− fj,e(yj)|\n≤ K(1 +B) ∑ e∈p ∑ j∈[n] ∑ q∈Pj :e∈q |wj,q − yj,q|\n= K(1 +B) ∑ j∈[n] ∑ q∈Pj ∑ e∈p∩q |wj,q − yj,q| ≤ K(1 +B)m ∑ j∈[n] ∑ q∈Pj |wj,q − yj,q|\n≤ K(1 +B)m ∑ j∈[n] ‖wj − yj‖1\nThus we get that the second condition is satisfied with L = 2Km.\nFor these games we will assume that the players are performing some form of regularized learning using the gradients of their utilities as proxies. For fast convergence we would require that the algorithms they use satisfy the following property, which is a generalization of Theorem 4. Theorem 25. Consider a repeated continuous strategy space game where the cost functions satisfy properties 1, 2. Suppose that the algorithm of each player i satisfies the property that for any w∗i ∈ Si\nT∑ t=1 ci(w t)− ci(w∗i ,wt−i) ≤ α+ β T∑ t=1 ‖δi(wt)− δi(wt−1)‖2∗ − γ T∑ t=1 ‖wti −wt−1i ‖ 2 (30)\nfor some α > 0 and 0 < β ≤ γL2·n2 and with ‖ · ‖ we denote the ‖ · ‖1 norm. Then:∑ i∈N ri(T ) ≤ n · α = O(1) (31)\nProof. By property 2, we have that:\nT∑ t=1 ‖δi(wt)− δi(wt−1)‖2∗ ≤ L2 T∑ t=1 ∑ j∈[n] ‖wtj −wt−1j ‖ 2 ≤ L2n T∑ t=1 ∑ j∈[n] ‖wtj −wt−1j ‖ 2\nBy summing up the regret inequality for each player and using the above bound we get:∑ i∈N ri(T ) ≤ n · α+ βL2n2 T∑ t=1 ∑ j∈[n] ‖wtj −wt−1j ‖ 2 − γ T∑ t=1 ∑ i∈[n] ‖wti −wt−1i ‖ 2 (32)\nIf βL2n2 ≤ γ, the theorem follows.\nAll the algorithms that we described in the previous sections can be adapted to satisfy the bound required by Theorem 25, by simply using the gradient of the cost as a proxy of the cost instead of the actual cost. This follows by standard arguments. Hence if players follow for instance the following adaptation of the regularized leader algorithm:\nwTi = argmax w∈Si\n〈 w,\nT−1∑ t=1 δi(w t) + δi(w T−1)\n〉 − R(w)\nη (33)\nthen by Proposition 7 we get that their regret satisfies the conditions of Theorem 25 for a = Rη , β = η and γ = 14η , where R = argmaxwi∈Si R(wi). We need that ηL\n2n2 ≤ 14η or equivalently η ≤ 12Ln . Thus for η = 1 2Ln , if all players are using the latter algorithm we get regret of at most n · Rη = 2Ln 2R\nExample. (Splittable congestion games). Consider the case of congestion games with splittable flow, where all the latencies and their derivatives are K-Lipschitz and the flow of each player is at most B. In that setting, suppose that we use the entropic regularizer. Then for each player i, R ≤ B · log(|Pi|). The number of possible (s, t) paths is at most 2m, which yields R ≤ B · m. Hence, by using the linearized follow the regularized leader, we get that the total regret is at most 2Ln2R ≤ 2K(B + 1)Bm2n2.\nJ Ω( √ T ) Lower Bounds on Regret for other Dynamics\nWe consider a two-player zero-sum game which can be described by a utility matrix A. Assume the row player uses MWU with a fixed learning rate η, and the column player plays the best response, that is, a pure strategy that minimizes the row player’s expected utility for the current round. Then the following theorem states that no matter how η is set, there is always a game A such that the regret of the row player is at least Ω( √ T ).\nTheorem 26. In the setting described above, let r(T ) and r′(T ) be the regret of the row player for the game A = (\n1 0 0 1\n) and A′ = ( 1 0 ) respectively after T rounds. Then max{r(T ), r′(T )} ≥\nΩ( √ T ).\nProof. For game A, according to the setup, one can verify that the row player will play a uniform distribution and receive utility 12 on round twhere t is odd, and for the next round t+1, the row player will put slightly more weights on one row and the column player will pick the column that has 0 utility for that row. Specifically, the expected utility of the row player is e η(t−1)/2\neη(t−1)/2+eη(t+1)/2 = 11+eη .\nTherefore, the regret is (assuming T is even for simplicity)\nr(T ) = T 2 − T 2\n( 1\n2 +\n1\n1 + eη\n) = T\n2 · e η − 1 eη + 1 .\nFor game A′, the expected utility of the row player on round t is e η(t−1)\neη(t−1)+1 , and thus the regret is\nr′(T ) = T − T∑ t=1 eη(t−1) eη(t−1) + 1 = T∑ t=1\n1\neη(t−1) + 1 ≥ T∑ t=1\n1\n2eη(t−1) =\n1− e−Tη\n2(1− e−η) .\nNow if η ≥ 1, then r(T ) ≥ T2 · e−1 e+1 = Ω(T ). If η ≤ 1 T , then r ′(T ) ≥ 1−e −1 2(1−e− 1 T ) ≥ T (1−e −1) 2 = Ω(T ). Finally when 1T ≤ η ≤ 1, we have\nr(T )+r′(T ) ≥ T 2 · e η − 1 e+ 1 + 1− e−1 2(1− e−η) ≥ T 2 · e η − 1 e+ 1 + 1− e−1 2(eη − 1) ≥ √ T · 1− e −1 e+ 1 = Ω( √ T ). To sum up, we have max{r(T ), r′(T )} ≥ Ω( √ T )."
    } ],
    "references" : [ {
      "title" : "Learning, regret minimization, and equilibria",
      "author" : [ "A. Blum", "Y. Mansour" ],
      "venue" : "Algorithmic Game Theory,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2007
    }, {
      "title" : "Regret minimization and the price of total anarchy",
      "author" : [ "Avrim Blum", "MohammadTaghi Hajiaghayi", "Katrina Ligett", "Aaron Roth" ],
      "venue" : "In Proceedings of the Fortieth Annual ACM Symposium on Theory of Computing,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2008
    }, {
      "title" : "Prediction, Learning, and Games",
      "author" : [ "Nicolo Cesa-Bianchi", "Gabor Lugosi" ],
      "venue" : null,
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2006
    }, {
      "title" : "Near-optimal no-regret algorithms for zero-sum games",
      "author" : [ "Constantinos Daskalakis", "Alan Deckelbaum", "Anthony Kim" ],
      "venue" : "Games and Economic Behavior,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2015
    }, {
      "title" : "Internet advertising and the generalized second price auction: Selling billions of dollars worth of keywords",
      "author" : [ "Benjamin Edelman", "Michael Ostrovsky", "Michael Schwarz" ],
      "venue" : "Working Paper 11765,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2005
    }, {
      "title" : "On the convergence of regret minimization dynamics in concave games",
      "author" : [ "Eyal Even-dar", "Yishay Mansour", "Uri Nadav" ],
      "venue" : "In Proceedings of the Forty-first Annual ACM Symposium on Theory of Computing,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2009
    }, {
      "title" : "Calibrated learning and correlated equilibrium",
      "author" : [ "Dean P. Foster", "Rakesh V. Vohra" ],
      "venue" : "Games and Economic Behavior,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 1997
    }, {
      "title" : "A decision-theoretic generalization of on-line learning and an application to boosting",
      "author" : [ "Yoav Freund", "Robert E Schapire" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 1997
    }, {
      "title" : "Adaptive game playing using multiplicative weights",
      "author" : [ "Yoav Freund", "Robert E Schapire" ],
      "venue" : "Games and Economic Behavior,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 1999
    }, {
      "title" : "Recency, records and recaps: Learning and nonequilibrium behavior in a simple decision problem",
      "author" : [ "Drew Fudenberg", "Alexander Peysakhovich" ],
      "venue" : "In Proceedings of the Fifteenth ACM Conference on Economics and Computation, EC",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2014
    }, {
      "title" : "A simple adaptive procedure leading to correlated",
      "author" : [ "Sergiu Hart", "Andreu Mas-Colell" ],
      "venue" : "equilibrium. Econometrica,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2000
    }, {
      "title" : "Efficient algorithms for online decision problems",
      "author" : [ "Adam Kalai", "Santosh Vempala" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2005
    }, {
      "title" : "The weighted majority algorithm",
      "author" : [ "Nick Littlestone", "Manfred K Warmuth" ],
      "venue" : "Information and computation,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 1994
    }, {
      "title" : "Problem complexity and method efficiency in optimization",
      "author" : [ "AS Nemirovsky", "DB Yudin" ],
      "venue" : null,
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 1983
    }, {
      "title" : "Smooth minimization of non-smooth functions",
      "author" : [ "Yu. Nesterov" ],
      "venue" : "Mathematical Programming,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2005
    }, {
      "title" : "Online learning with predictable sequences",
      "author" : [ "Alexander Rakhlin", "Karthik Sridharan" ],
      "venue" : "COLT",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2013
    }, {
      "title" : "Optimization, learning, and games with predictable sequences",
      "author" : [ "Alexander Rakhlin", "Karthik Sridharan" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2013
    }, {
      "title" : "Intrinsic robustness of the price of anarchy",
      "author" : [ "T. Roughgarden" ],
      "venue" : "In Proceedings of the 41st annual ACM symposium on Theory of computing,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2009
    }, {
      "title" : "Local smoothness and the price of anarchy in atomic splittable congestion games",
      "author" : [ "Tim Roughgarden", "Florian Schoppmann" ],
      "venue" : "In Proceedings of the Twenty-Second Annual ACM-SIAM Symposium on Discrete Algorithms,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2011
    }, {
      "title" : "Online learning and online convex optimization",
      "author" : [ "Shai Shalev-Shwartz" ],
      "venue" : "Found. Trends Mach. Learn.,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2012
    } ],
    "referenceMentions" : [ {
      "referenceID" : 16,
      "context" : "Our results extend those of Rakhlin and Shridharan [18] and Daskalakis et al.",
      "startOffset" : 51,
      "endOffset" : 55
    }, {
      "referenceID" : 3,
      "context" : "[4], who only analyzed two-player zero-sum games for specific algorithms.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 1,
      "context" : "When played against one another, it can also be shown that the sum of utilities approaches an approximate optimum [2, 19], and the player strategies converge to an equilibrium under appropriate conditions [7, 1, 9], at rates governed by the regret bounds.",
      "startOffset" : 114,
      "endOffset" : 121
    }, {
      "referenceID" : 17,
      "context" : "When played against one another, it can also be shown that the sum of utilities approaches an approximate optimum [2, 19], and the player strategies converge to an equilibrium under appropriate conditions [7, 1, 9], at rates governed by the regret bounds.",
      "startOffset" : 114,
      "endOffset" : 121
    }, {
      "referenceID" : 6,
      "context" : "When played against one another, it can also be shown that the sum of utilities approaches an approximate optimum [2, 19], and the player strategies converge to an equilibrium under appropriate conditions [7, 1, 9], at rates governed by the regret bounds.",
      "startOffset" : 205,
      "endOffset" : 214
    }, {
      "referenceID" : 0,
      "context" : "When played against one another, it can also be shown that the sum of utilities approaches an approximate optimum [2, 19], and the player strategies converge to an equilibrium under appropriate conditions [7, 1, 9], at rates governed by the regret bounds.",
      "startOffset" : 205,
      "endOffset" : 214
    }, {
      "referenceID" : 8,
      "context" : "When played against one another, it can also be shown that the sum of utilities approaches an approximate optimum [2, 19], and the player strategies converge to an equilibrium under appropriate conditions [7, 1, 9], at rates governed by the regret bounds.",
      "startOffset" : 205,
      "endOffset" : 214
    }, {
      "referenceID" : 12,
      "context" : "Well-known families of no-regret algorithms include multiplicative-weights [14, 8], Mirror Descent [15], and Follow the Regularized/Perturbed Leader [13].",
      "startOffset" : 75,
      "endOffset" : 82
    }, {
      "referenceID" : 7,
      "context" : "Well-known families of no-regret algorithms include multiplicative-weights [14, 8], Mirror Descent [15], and Follow the Regularized/Perturbed Leader [13].",
      "startOffset" : 75,
      "endOffset" : 82
    }, {
      "referenceID" : 13,
      "context" : "Well-known families of no-regret algorithms include multiplicative-weights [14, 8], Mirror Descent [15], and Follow the Regularized/Perturbed Leader [13].",
      "startOffset" : 99,
      "endOffset" : 103
    }, {
      "referenceID" : 11,
      "context" : "Well-known families of no-regret algorithms include multiplicative-weights [14, 8], Mirror Descent [15], and Follow the Regularized/Perturbed Leader [13].",
      "startOffset" : 149,
      "endOffset" : 153
    }, {
      "referenceID" : 2,
      "context" : "(See [3, 21] for excellent overviews.",
      "startOffset" : 5,
      "endOffset" : 12
    }, {
      "referenceID" : 19,
      "context" : "(See [3, 21] for excellent overviews.",
      "startOffset" : 5,
      "endOffset" : 12
    }, {
      "referenceID" : 3,
      "context" : "[4].",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 14,
      "context" : "For two-player zero-sum games, they developed a decentralized variant of Nesterov’s accelerated saddle point algorithm [16] and showed that each player’s average regret converges at the remarkable rate ofO(1/T ).",
      "startOffset" : 119,
      "endOffset" : 123
    }, {
      "referenceID" : 16,
      "context" : "dynamics are somewhat unnatural, in later work, Rakhlin and Sridharan [18] showed surprisingly that the same convergence rate holds for a simple variant of Mirror Descent with the seemingly minor modification that the last utility observation is counted twice.",
      "startOffset" : 70,
      "endOffset" : 74
    }, {
      "referenceID" : 17,
      "context" : "Concretely, we show a natural class of regularized no-regret algorithms with recency bias that achieve welfare at least (λ/(1 + μ))OPT − O(1/T ), where λ and μ are parameters in a smoothness condition on the game introduced by Roughgarden [19].",
      "startOffset" : 239,
      "endOffset" : 243
    }, {
      "referenceID" : 3,
      "context" : "Even for two-person zero-sum games, our results for general games expose a hidden generality and modularity underlying the previous results [4, 18].",
      "startOffset" : 140,
      "endOffset" : 147
    }, {
      "referenceID" : 16,
      "context" : "Even for two-person zero-sum games, our results for general games expose a hidden generality and modularity underlying the previous results [4, 18].",
      "startOffset" : 140,
      "endOffset" : 147
    }, {
      "referenceID" : 16,
      "context" : "This covers the Optimistic Mirror Descent of Rakhlin and Sridharan [18] as an example, but also applies to optimistic variants of Follow the Regularized Leader (FTRL), including dependence on arbitrary weighted windows in the history as opposed to just the utility from the last round.",
      "startOffset" : 67,
      "endOffset" : 71
    }, {
      "referenceID" : 9,
      "context" : "Recency bias is a behavioral pattern commonly observed in game-theoretic environments [10]; as such, our results can be viewed as a partial theoretical justification.",
      "startOffset" : 86,
      "endOffset" : 90
    }, {
      "referenceID" : 3,
      "context" : "Second, previous approaches in [4, 18] on achieving both faster convergence against similar algorithms while at the same time Õ(1/ √ T ) regret rates against adversaries were shown via ad-hoc modifications of specific algorithms.",
      "startOffset" : 31,
      "endOffset" : 38
    }, {
      "referenceID" : 16,
      "context" : "Second, previous approaches in [4, 18] on achieving both faster convergence against similar algorithms while at the same time Õ(1/ √ T ) regret rates against adversaries were shown via ad-hoc modifications of specific algorithms.",
      "startOffset" : 31,
      "endOffset" : 38
    }, {
      "referenceID" : 7,
      "context" : "Finally, we simulate a 4-bidder simultaneous auction game, and compare our optimistic algorithms against Hedge [8] in terms of utilities, regrets and convergence to equilibria.",
      "startOffset" : 111,
      "endOffset" : 114
    }, {
      "referenceID" : 0,
      "context" : "× Sn → [0, 1] that maps a strategy profile s = (s1, .",
      "startOffset" : 7,
      "endOffset" : 13
    }, {
      "referenceID" : 17,
      "context" : "We next define a class of games first identified by Roughgarden [19] on which we can approximate the optimal welfare using decoupled no-regret dynamics.",
      "startOffset" : 64,
      "endOffset" : 68
    }, {
      "referenceID" : 17,
      "context" : "Definition 1 (Smooth game [19]).",
      "startOffset" : 26,
      "endOffset" : 30
    }, {
      "referenceID" : 17,
      "context" : "This proposition is essentially a more explicit version of Roughgarden’s result [19]; we provide a proof in the appendix for completeness.",
      "startOffset" : 80,
      "endOffset" : 84
    }, {
      "referenceID" : 15,
      "context" : "However, Rakhlin and Sridharan [17] give a modification of Mirror Descent with this property, and we will present a similar variant of FTRL in the sequel.",
      "startOffset" : 31,
      "endOffset" : 35
    }, {
      "referenceID" : 3,
      "context" : "Also, the theorem does not require that all players use the same no-regret algorithm unlike previous results [4, 18], as long as each player’s algorithm satisfies the RVU property with a common bound on the constants.",
      "startOffset" : 109,
      "endOffset" : 116
    }, {
      "referenceID" : 16,
      "context" : "Also, the theorem does not require that all players use the same no-regret algorithm unlike previous results [4, 18], as long as each player’s algorithm satisfies the RVU property with a common bound on the constants.",
      "startOffset" : 109,
      "endOffset" : 116
    }, {
      "referenceID" : 15,
      "context" : "1 Optimistic Mirror Descent The optimistic mirror descent (OMD) algorithm of Rakhlin and Sridharan [17] is parameterized by an adaptive predictor sequence Mi and a regularizer 2 R which is 1-strongly convex3 with respect to a norm ‖ · ‖.",
      "startOffset" : 99,
      "endOffset" : 103
    }, {
      "referenceID" : 16,
      "context" : "The proposition follows by further crystallizing the arguments of Rakhlin and Sridaran [18], and we provide a proof in the appendix for completeness.",
      "startOffset" : 87,
      "endOffset" : 91
    }, {
      "referenceID" : 16,
      "context" : "The above proposition, along with Theorem 4, immediately yields the following corollary, which had been proved by Rakhlin and Sridharan [18] for two-person zero-sum games, and which we here extend to general games.",
      "startOffset" : 136,
      "endOffset" : 140
    }, {
      "referenceID" : 11,
      "context" : "This algorithm is similar but not equivalent to OMD, and is an analogous extension of standard FTRL [13].",
      "startOffset" : 100,
      "endOffset" : 104
    }, {
      "referenceID" : 15,
      "context" : "Rakhlin and Sridharan [17] also analyze an FTRL variant, but require a self-concordant barrier for the constraint set as opposed to an arbitrary strongly convex regularizer, and their bound is missing the crucial negative terms of the RVU property which are essential for obtaining Theorem 4.",
      "startOffset" : 22,
      "endOffset" : 26
    }, {
      "referenceID" : 10,
      "context" : "[11]) to CCE using natural, decoupled no-regret dynamics defined in [4].",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 3,
      "context" : "[11]) to CCE using natural, decoupled no-regret dynamics defined in [4].",
      "startOffset" : 68,
      "endOffset" : 71
    }, {
      "referenceID" : 16,
      "context" : "Rakhlin and Sridharan [18] address this concern by modifying the OMD algorithm with additional smoothing and adaptive step-sizes so as to preserve the fast rates in the favorable case while still guaranteeing O(1/ √ T ) regret for each player, no matter how the opponents play.",
      "startOffset" : 22,
      "endOffset" : 26
    }, {
      "referenceID" : 7,
      "context" : "5 Experimental Evaluation We analyzed the performance of optimistic follow the regularized leader with the entropy regularizer, which corresponds to the Hedge algorithm [8] modified so that the last iteration’s utility for each strategy is double counted; we refer to it as Optimistic Hedge.",
      "startOffset" : 169,
      "endOffset" : 172
    }, {
      "referenceID" : 0,
      "context" : "The bids are discretized to be any integer in [1, 20].",
      "startOffset" : 46,
      "endOffset" : 53
    }, {
      "referenceID" : 18,
      "context" : "The bids are discretized to be any integer in [1, 20].",
      "startOffset" : 46,
      "endOffset" : 53
    }, {
      "referenceID" : 0,
      "context" : "References [1] A.",
      "startOffset" : 11,
      "endOffset" : 14
    }, {
      "referenceID" : 1,
      "context" : "[2] Avrim Blum, MohammadTaghi Hajiaghayi, Katrina Ligett, and Aaron Roth.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 2,
      "context" : "[3] Nicolo Cesa-Bianchi and Gabor Lugosi.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "[4] Constantinos Daskalakis, Alan Deckelbaum, and Anthony Kim.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 4,
      "context" : "[5] Benjamin Edelman, Michael Ostrovsky, and Michael Schwarz.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 5,
      "context" : "[6] Eyal Even-dar, Yishay Mansour, and Uri Nadav.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 6,
      "context" : "[7] Dean P.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 7,
      "context" : "[8] Yoav Freund and Robert E Schapire.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 8,
      "context" : "[9] Yoav Freund and Robert E Schapire.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 9,
      "context" : "[10] Drew Fudenberg and Alexander Peysakhovich.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 10,
      "context" : "[11] Sergiu Hart and Andreu Mas-Colell.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 11,
      "context" : "[13] Adam Kalai and Santosh Vempala.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 12,
      "context" : "[14] Nick Littlestone and Manfred K Warmuth.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 13,
      "context" : "[15] AS Nemirovsky and DB Yudin.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 14,
      "context" : "[16] Yu.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 15,
      "context" : "[17] Alexander Rakhlin and Karthik Sridharan.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 16,
      "context" : "[18] Alexander Rakhlin and Karthik Sridharan.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 17,
      "context" : "[19] T.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 18,
      "context" : "[20] Tim Roughgarden and Florian Schoppmann.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 19,
      "context" : "[21] Shai Shalev-Shwartz.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 16,
      "context" : "We will use the following theorem of [18].",
      "startOffset" : 37,
      "endOffset" : 41
    }, {
      "referenceID" : 16,
      "context" : "Theorem 17 (Raklin and Sridharan [18]).",
      "startOffset" : 33,
      "endOffset" : 37
    }, {
      "referenceID" : 16,
      "context" : "Some of the key facts (Equations (9) and (10)) that we use in the following proof appear in [18].",
      "startOffset" : 92,
      "endOffset" : 96
    }, {
      "referenceID" : 0,
      "context" : "× Sn → [0, 1] to denote the cost function, and similarly to previous sections C(s) = ∑ i∈N ci(s), C(w) = Es∼w[C(s)],OPT ′ = mins∈S1×.",
      "startOffset" : 7,
      "endOffset" : 13
    }, {
      "referenceID" : 18,
      "context" : "[20]).",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 5,
      "context" : "Such learning on continuous games has also been studied in more restrictive settings in [6].",
      "startOffset" : 88,
      "endOffset" : 91
    } ],
    "year" : 2015,
    "abstractText" : "We show that natural classes of regularized learning algorithms with a form of recency bias achieve faster convergence rates to approximate efficiency and to coarse correlated equilibria in multiplayer normal form games. When each player in a game uses an algorithm from our class, their individual regret decays at O(T−3/4), while the sum of utilities converges to an approximate optimum at O(T−1)–an improvement upon the worst case O(T−1/2) rates. We show a blackbox reduction for any algorithm in the class to achieve Õ(T−1/2) rates against an adversary, while maintaining the faster rates against algorithms in the class. Our results extend those of Rakhlin and Shridharan [18] and Daskalakis et al. [4], who only analyzed two-player zero-sum games for specific algorithms.",
    "creator" : "LaTeX with hyperref package"
  }
}