{
  "name" : "1405.3843.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Logistic Regression: Tight Bounds for Stochastic and Online Optimization∗",
    "authors" : [ "Elad Hazan", "Tomer Koren", "Kfir Y. Levy" ],
    "emails" : [ "ehazan@ie.technion.ac.il,", "tomerk@technion.ac.il,", "kfiryl@tx.technion.ac.il." ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 5.\n38 43\nv1 [\ncs .L\nG ]\n1 5"
    }, {
      "heading" : "1 Introduction",
      "text" : "In many applications, such as estimation of click-through-rate in web advertising, and predicting whether a patient has a certain disease, the logistic loss is often the loss of choice. It appeals as a convex surrogate of the 0-1 loss, and as a tool that not only yields categorical prediction but also able to estimate the underlying probabilities of the categories. Moreover, Friedman et al. (2000) and Collins et al. (2002) have shown that logistic regression is strongly connected to boosting.\nA long standing debate in the machine learning community has been the optimal choice of surrogate loss function for binary prediction problems (see Langford (2009), Bulatov (2007)). Amongst the arguments in support of the logistic loss are its smoothness and strictconvexity properties, which unlike other loss functions (such as the hinge loss), permit the\n∗The research leading to these results has received funding from the European Union’s Seventh Framework Programme (FP7/2007-2013) under grant agreement n◦ 336078 – ERC-SUBLRN.\n†Technion—Israel Institute of Technology, Haifa 32000, Israel. Emails: ehazan@ie.technion.ac.il, tomerk@technion.ac.il, kfiryl@tx.technion.ac.il.\nuse of more efficient optimization methods. In particular, the logistic loss is exp-concave, and thus second-order methods are applicable and give rise to theoretically superior convergence and/or regret bounds.\nMore technically, under standard assumptions on the training data, the logistic loss is 1- Lipschitz and e−D-exp-concave over the set of linear n-dimensional classifiers whose L2-norm is at most D. Thus, the Online Newton Step algorithm (Hazan et al., 2007) can be applied to the logistic regression problem and gives a convergence rate of Õ(eDn/T ) over T iterations. On the other hand, first order methods can be used to attain a rate of O(D/ √ T ), which is attainable in general for any Lipschitz convex loss function. The exponential dependence on D of the first bound suggests that second order methods might present poor performance in practical logistic regression problems, even when compared to the slow 1/ √ T rate of firstorder methods. The gap between the two rates raises the question: is a fast convergence rate of the form Õ(poly(D)/T ) achievable for logistic regression?\nThis question has received much attention lately. Bach (2013), relying on a property called “generalized self-concordance”, gave an algorithm with convergence rate ofO(D4/µ∗T ), where µ∗ is the smallest eigenvalue of the Hessian at the optimal point. This translates to a O(poly(D)/T ) rate whenever the expected loss function is “locally strongly convex” at the optimum. More recently, Bach and Moulines (2013) extended this result and presented an elegant algorithm that attains a rate of the form O(ρ3D4n/T ), without assuming strong convexity (neither global or local) — but rather depending on a certain data-dependent constant ρ.\nIn this paper, we resolve the above question and give tight characterization of the achievable convergence rates for logistic regression. We show that as long as the target accuracy ǫ is not exponentially small in D, a rate of the form Õ(poly(D)/T ) is not attainable. Specifically, we prove a lower bound of Ω( √ D/T ) on the convergence rate, that can also be achieved (up to a √ D factor) by stochastic gradient descent algorithms. In particular, this shows that in the worst case, the magnitude of data-dependent parameters used in previous works are exponentially large in the diameter D. The latter lower bound only applies for multidimensional regression (i.e., when n ≥ 2); surprisingly, in one-dimensional logistic regression we find a rate of Θ(T−2/3) to be tight. As far as we know, this is the first natural setting demonstrating such a phase transition in the optimal convergence rates, with respect to the dimensionality of the problem.\nWe also consider the closely-related online optimization setting, where on each round t = 1, 2, . . . , T an adversary chooses a certain logistic function and our goal is to minimize the T -round regret, with respect to the best fixed decision chosen with the benefit of hindsight. In this setting, McMahan and Streeter (2012) investigated the one-dimensional case and showed that if the adversary is restricted to pick binary (i.e. ±1) labels, a simple followthe-leader algorithm attains a regret bound of O( √ D + log T ). This discovery led them to conjecture that bounds of the form O(poly(D) log T ) should be achievable in the general multi-dimensional case with continuous labels set.\nOur results extend to the online optimization setup and resolve the COLT 2012 open problem of McMahan and Streeter (2012) on the negative side. Namely, we show that as long as\nthe number of rounds T is not exponentially large in D, an upper bound of O(poly(D) logT ) cannot be attained in general. We obtain lower bounds on the regret of Ω( √ DT ) in the multi-dimensional case and Ω(D2/3T 1/3) in the one-dimensional case, when allowing the adversary to use a continuous label set. We are not aware of any other natural problem that exhibits such a dichotomy between the minimax regret rates in the one-dimensional and multi-dimensional cases.\nIt is interesting to note that our bounds apply to a finite interval of time, namely when T = O(eD), which is arguably the regime of interest for reasonable values of D. This is the reason our lower bounds do not contradict the logarithmic known regret bounds.\nWe prove the tightness of our one-dimensional lower bounds, in both the stochastic and online settings, by devising an online optimization algorithm specialized for one-dimensional online logistic regression that attains a regret of O(D3 T 1/3). This algorithm maintains approximations of the observed logistic loss functions, and use these approximate losses to form the next prediction by a follow-the-regularized-leader (FTRL) procedure. As opposed to previous works that utilize approximate losses based on local structure (Zinkevich, 2003; Hazan et al., 2007), we find it necessary to employ approximations that rely on the global structure of the logistic loss.\nThe rest of the paper is organized as follows. In Section 2 we describe the settings we consider and give the necessary background. We present our lowers bounds in Section 3, and in Section 4 we prove our upper bound for one dimensional logistic regression. In Section 5 we give complete proofs of our results. We conclude in Section 6."
    }, {
      "heading" : "2 Setting and Background",
      "text" : "In this section we formalize the settings of stochastic logistic regression and online logistic regression and give the necessary background on both problems."
    }, {
      "heading" : "2.1 Stochastic Logistic Regression",
      "text" : "In the problem of stochastic logistic regression, there is an unknown distribution D over instances x ∈ Rn. For simplicity, we assume that ‖x‖ ≤ 1. The goal of an optimization algorithm is to minimize the expected loss of a linear predictor w ∈ Rn,\nL(w) = Ex∼D[ ℓ(w, x) ] , (1)\nwhere ℓ is the logistic loss function1,\nℓ(w, x) = log ( 1 + exp(x · w) )\nthat expresses the negative log-likelihood of the instance x under the logit model. While we may try to optimize L(w) over the entire Euclidean space, for generalization purposes we usually restrict the optimization domain to some bounded set. In this paper, we focus on optimizing the expected loss over the set W = {w ∈ Rn : ‖w‖ ≤ D}, the Euclidean ball of radius D. We define the excess loss of a linear predictor w ∈ W as the difference L(w) − minw∗∈W L(w∗) between the expected loss of w and the expected loss of the best predictor in the class W.\nAn algorithm for the stochastic optimization problem, given a sample budget T as a parameter, may use a sample x1, . . . , xT of T instances sampled independently from the distribution D, and produce an approximate solution wT . The rate of convergence of the algorithm is then defined as the expected excess loss of the predictor wT , given by\nE[L(wT )] − min w∗∈W L(w∗) ,\nwhere the expectation is taken with respect to both the random choice of the training set and the internal randomization of the algorithm (which is allowed to be randomized)."
    }, {
      "heading" : "2.2 Online Logistic Regression",
      "text" : "Another optimization framework we consider is that of online logistic optimization, which we formalize as the following game between a player and an adversary. On each round t = 1, 2, . . . , T of the game, the adversary first picks an instance xt ∈ Rn, the player then chooses a linear predictor wt ∈ W = {w ∈ Rn : ‖w‖ ≤ D}, observes xt and incurs loss\nℓ(wt, xt) = log ( 1 + exp(xt · wt) ) .\nFor simplicity we again assume that ‖xt‖ ≤ 1 for all t. The goal of the player is to minimize his regret with respect to a fixed prediction from the set W, which is defined as\nRegretT = T∑\nt=1\nℓ(wt, xt) − min w∗∈W\nT∑\nt=1\nℓ(w∗, xt) .\n1The logistic loss is commonly defined as ℓ(w;x, y) = log ( 1 + exp(−yx · w) ) for instances (x, y) ∈ R n × [−1, 1]. For ease of notation and without loss of generality, we ignore the variable y in the instance (x, y) by absorbing it into x."
    }, {
      "heading" : "2.3 Information-theoretic Tools",
      "text" : "As a part of our lower bound proofs, we utilize two impossibility theorems that assert the minimal number of samples needed in order to distinguish between two distributions. We prove the following lower bound on the performance of any algorithm for this task.\nTheorem 1. Assume a coin with bias either p or p + ǫ, where p ∈ (0, 1 2 ], is given. Any algorithm that correctly identifies the coin’s bias with probability at least 3/4, needs no less than p/16ǫ2 tosses.\nThe theorem applies to both deterministic and randomized algorithms; in case of random algorithms the probability is with respect to both the underlying distribution of the samples, and the randomization of the algorithm. The proof of Theorem 1 is given, for completeness, in Appendix A."
    }, {
      "heading" : "3 Lower Bounds for Logistic Regression",
      "text" : "In this section we derive lower bounds for the convergence rate of stochastic logistic regression. For clarity, we lower bound the number of observations T required in order to attain excess loss of at most ǫ, which we directly translate to a bound for the convergence rate. The stochastic optimization lower bounds are then used to obtain corresponding bounds for the online setting.\nIn Section 3.1 we prove a lower bound for the one dimensional case, in Section 3.2 we prove another lower bound for the multidimensional case, and in Section 3.3 we present our lower bounds for the online setting."
    }, {
      "heading" : "3.1 One-dimensional Lower Bound for Stochastic Optimization",
      "text" : "We now show that any algorithm for one-dimensional stochastic optimization with logistic loss, must observe at least Ω(D/ǫ1.5) instances before it provides an instance with ǫ expected excess loss. This directly translates to a convergence rate of Ω(D2/3/T 2/3). Formally, the main theorem of this section is the following.\nTheorem 2. Consider the one dimensional stochastic logistic regression setting with a fixed sample budget T = O(eD). For any algorithm A there exists a distribution D for which the expected excess loss of A’s output is at least Ω(D2/3/T 2/3).\nThe proof of Theorem 2 is given at the end of this section; here we give an informal proof sketch. Consider distributions D over the two-element set {1− θ\n2 ,−θ}. For w ∈ [D/2, D] and\nθ ≪ 1, the losses of these instances are approximately linear/quadratic with opposed slopes (see Fig. 1(a)). Consequently, we can build a distribution with an expected loss which is quadratic in w; upon perturbing the latter distribution by ±ǫ we get two distributions D+,D− with expected losses L+, L− that are approximately linear in w with slopes ±ǫ (see Fig. 1(b)). An algorithm that attains a low expected excess loss on both these distributions can be\nused to distinguish between them, we then utilize an information theoretic impossibility theorem to bound the number of observations needed in order to distinguish between two distributions.\nIn Fig. 2 we present two distributions, which we denote by D+ and D−. We denote by L+, L− the expected logistic loss of a predictor w ∈ W with respect to D+,D−, i.e.,\nLχ(w) = EDχ[ℓ(w, x)]\n=\n( θ\n2 + χ\nǫ\nD\n) ℓ ( w, 1− θ\n2\n) + ( 1− θ\n2 − χ ǫ D\n) ℓ (w,−θ) , χ ∈ {−1, 1} .\nThe following lemma states that it is impossible attain a low expected excess loss on both D+ and D− simultaneously. Here we only give a sketch of the proof; the complete proof is deferred to Section 5.1.\nLemma 3. Given D ≥ 1 and Ω(e−D) ≤ ǫ ≤ 1/25, consider the distributions D+,D− defined in Fig. 2. Then the following holds:\nL+(w)− min w∗∈W L+(w ∗) ≥ ǫ/20 , ∀ w ∈ [3 4 D,D] , L−(w)− min w∗∈W L−(w ∗) ≥ ǫ/20 , ∀ w ∈ [−D, 3 4 D] .\nProof (sketch). First we show that for w ∈ [1 2 D,D], the losses of the instances 1− θ 2 ,−θ are approximately linear/quadratic, i.e.,\n∣∣ℓ(w, 1− θ 2 )− (1− θ 2 )w ∣∣ ≤ ǫ 40 , ∀ w ∈ [1 2 D,D] ,\n∣∣ℓ(w,−θ)− ( log 2− θ\n2 w + 1 8 (θw)2 )∣∣ ≤ ǫ 40 , ∀ w ∈ [1 2 D,D] .\nUsing the above approximations and θ = √ ǫ/D, we show that L+(w) ≈ ǫw/D + ǫw2/8D2 and L−(w) ≈ −ǫw/D + ǫw2/8D2 for w ∈ [12D,D], where “≈” denotes equality up to an additive term of ǫ/40. Thus,\nL+(w)− min w∗∈W L+(w ∗) ≥ L+(w)− L+(D/2) ≥ ǫ/20 , ∀ w ∈ [34D,D] , L−(w)− min w∗∈W L−(w ∗) ≥ L−(w)− L−(D) ≥ ǫ/20 , ∀ w ∈ [12D, 34D] .\nShowing that L− is monotonically decreasing in [−D, 12D], extends the latter inequality to [−D, 3\n4 D].\nWe are now ready to prove Theorem 2.\nProof of Theorem 2. Consider some algorithm A; we will show that if A observes T samples from a distribution D which is either D+ or D−, then the expected excess loss ǫ̃ that A can guarantee is lower bounded by Ω(D2/3T−2/3).\nThe excess loss is non negative; therefore, if A guarantees an expected excess loss smaller than ǫ̃ := ǫ/80, then by Markov’s inequality it achieves an excess loss smaller than ǫ/20, w.p. ≥ 3/4. Denoting by wT the predictor that A outputs after T samples, then according to Theorem 3, attaining an excess loss smaller than ǫ/20 on the distribution D+ (respectively D−) implies wT ≤ 34D (respectively wT > 34D).\nSince A achieves an excess loss smaller than ǫ/20 w.p. ≥ 3/4 for any distribution D we can use its output to identify the right distribution w.p. ≥ 3/4. This can be done as follows:\nIf wT ≤ 34D, Return: “D+” ; If wT > 3 4 D, Return: “D−” .\nAccording to Theorem 1 distinguishing between these two distributions (“coins”) w.p. ≥ 3/4 requires that the number of observations T to be lower bounded as follows:\nT ≥ θ/2− ǫ/D 16(2ǫ/D)2 ≥ 1 256 D ǫ1.5 ,\nWe used θ/2 − ǫ/D as a lower bound on the bias of D−; since θ = √ ǫ/D and ǫ ≤ 1/25 it\nfollows that θ/2 − ǫ/D ≥ √ǫ/4D. We also used 2ǫ/D as the bias between the “coins” D+, D−. Using the above inequality together with ǫ̃ = ǫ/80 yields a lower bound of 14000D2/3T−2/3 on the expected excess loss."
    }, {
      "heading" : "3.2 Multidimensional Lower Bound for Stochastic Optimization",
      "text" : "We now construct two distribution over instance vectors from the unit ball of R2, and prove that any algorithm that attains an expected excess loss at most ǫ on both distributions requires Ω(D/ǫ2) samples in the worst case. This directly translates to a convergence rate of Ω( √ D/T ). For n > 2 dimensions, we can embed the same construction in the unit ball of Rn, thus our bound holds in any dimension greater than one. The main theorem of this section is the following.\nTheorem 4. Consider the multidimensional stochastic logistic regression setting with D ≥ 2 and a fixed sample budget T = O(eD). For any algorithm A there exists a distribution D such that the expected excess loss of A’s output is at least Ω( √ D/T ).\nTheorem 4 is proved at the end of this section. We bring here an informal description of the proof:\nConsider distributions that choose instances among the set {x0, xl, xr} depicted in Fig. 3. The shaded areas in Fig. 3 depict regions in the domain W where either ℓ(·, xl) or ℓ(·, xr) is approximately linear. The dark area represents the region in which both loss functions are approximately linear. By setting the probability of x0 much larger than the others we can construct a distribution over the instances {x0, xl, xr} such that the minima of the induced expected loss function lies in the black area. Perturbing this distribution by ±ǫ over the odds of choosing xl, xr we attain two distributions D+,D− whose induced expected losses L+, L− are almost linear over in the dark area, with opposed ±ǫ slopes. An algorithm that attains a low expected excess loss on both distributions can be used to distinguish between them. This allows us to use information theoretic arguments to lower bound the number of samples needed for the optimization algorithm. In Fig. 4 we present the distributions D+,D−. We\ndenote by L+ and L− the expected loss functions induced by D+ and D− respectively, that are given by\nLχ(w) = p · ℓ(w, x0) + 1 + χǫ\n2 (1− p) · ℓ(w, xl) + 1− χǫ 2 (1− p) · ℓ(w, xr), χ ∈ {−1, 1}\nIn the following lemma we state that it is impossible attain a low expected excess loss on both D+ and D− simultaneously.\nLemma 5. Given D ≥ 2 and Ω(e−D) ≤ ǫ ≤ 1/10D, consider D+,D− as defined in Fig. 4. Then the following holds:\nL+(w)− min w∗∈W L+(w ∗) ≥ ǫ/20 , ∀ w : w[1] ≤ 0 , and L−(w)− min w∗∈W L−(w ∗) ≥ ǫ/20 , ∀ w : w[1] ≥ 0 .\nHere we only give a sketch of the proof; for the complete proof, refer to Section 5.2.\nProof (sketch). Let L0 be the unperturbed (ǫ = 0) version of L+, L−, i.e.,\nL0(w) = pℓ(w, x0) + 1− p 2 ℓ(w, xl) + 1− p 2 ℓ(w, xr) .\nNote that L0 is constructed such that its minima is attained at w0 = (0, 0.9D), which belongs to the shaded area in Fig. 3. Thus, in the neighborhood of this minima both ℓ(w, xl), ℓ(w, xr) are approximately linear. Using linear approximations of ℓ(w, xl), ℓ(w, xr) around w0, we\nshow that the value of L+ at wa = (0.3D, 0.9D) is smaller by ǫ/20 than the minimal value of L0, hence\nmin w∗∈W\nL+(w ∗) ≤ L+(wa) ≤ L0(w0)− ǫ/20 . (2)\nMoreover, L+ is shown to be the sum of L0 and a function which is positive whenever w[1] ≤ 0, thus\nL+(w) ≥ L0(w) , ∀ w : w[1] ≤ 0 . (3)\nCombining Eqs. (2) and (3) we get\nL+(w)− min w∗∈W L+(w ∗) ≥ L0(w)−\n( L0(w0)− ǫ/20 ) ≥ ǫ/20 , ∀ w : w[1] ≤ 0 ,\nwhere the last inequality follows from w0 being the minimizer of L0(w). A similar argument shows that for predictors w such that w[1] ≥ 0, it holds that L−(w) − minw∗∈W L−(w∗) ≥ ǫ/20.\nFor the proof of Theorem 4 we require a lemma that lower-bounds the minimal number of samples needed in order to distinguish between the distributions D+,D− defined in Fig. 4. To this end, we use the following modified version of Theorem 1.\nLemma 6. Let p ∈ (0, 1/2]. Consider a distribution supported on three atoms with probabilities {q0, (1 − q0)(p + χǫ), (1 − q0)(1 − p − χǫ)}, with χ being either 0 or 1. Any algorithm that identifies the distribution correctly with probability at least 3/4, needs no less than p/16(1− q0)ǫ2 samples.\nTheorem 6 can be proved similarly to Theorem 1 (see Appendix A). We are now ready to prove Theorem 4.\nProof of Theorem 4. Consider some algorithm A; we will show that if A observes T samples from a distribution D which is either D+ or D−, then the expected excess loss ǫ̃ that A can guarantee is lower bounded by Ω( √ D/T ).\nThe excess loss is non negative; therefore if A guarantees an expected excess loss smaller than ǫ̃ = ǫ/80, then by Markov’s inequality it achieves an excess loss smaller than ǫ/20, w.p. ≥ 3/4. Denoting by wT the predictor that A outputs after T samples, then according to Theorem 5, attaining an excess loss smaller than ǫ/20 on distribution D+(respectively D−) implies wT [1] > 0 (respectively wT [1] < 0).\nSince A achieves an excess loss smaller than ǫ/20 w.p. ≥ 3/4 for any D among D+,D− we can use its output to identify the right distribution w.p. ≥ 3/4. This can be done as follows:\nif wT [1] ≥ 0, return “D+” ; if wT [1] < 0, return “D−” .\nAccording to Theorem 6, distinguishing between these two distributions w.p.≥ 3/4 requires that the number of observations T to be upper bounded as follows:\nT ≥ 0.5(1− ǫ) 16(1− p)(2ǫ)2 ≥ D 256 1 ǫ2 ,\nWe used 0.5(1 − ǫ) as a lower bound on the bias of distribution D− conditioned that the instance x0 was not chosen; since ǫ ≤ 1/10D, D ≥ 2 it follows that 0.5(1 − ǫ) ≥ 0.25. We also used 2ǫ as the bias between the distributions D+ and D− conditioned that the label x0 was not chosen. Finally we used 1− p ≤ 1/D. The above inequality together with ǫ̃ = ǫ/80 yields a lower bound of 1\n1300\n√ D/T on the expected excess loss."
    }, {
      "heading" : "3.3 Lower Bounds for Online Optimization",
      "text" : "In Section 3 we proved two lower bounds for the convergence rate of stochastic logistic regression. Standard online-to-batch conversion (Cesa-Bianchi et al., 2004) shows that any online algorithm attaining a regret of R(T ) can be used to attain a convergence rate of R(T )/T for stochastic optimization. Hence, the lower bounds stated in Theorems 2 and 4 imply the following:\nCorollary 7. Consider the one dimensional online logistic regression setting with T = O(eD). For any algorithm A there exists a sequence of loss functions such that A suffers a regret of at least Ω(D2/3T 1/3).\nCorollary 8. Consider the multidimensional online logistic regression setting with T = O(eD), D ≥ 2. For any algorithm A there exists a sequence of loss functions such that A suffers a regret of at least Ω( √ DT )."
    }, {
      "heading" : "4 Upper Bound for One-dimensional Regression",
      "text" : "In this section we consider online logistic regression in one dimension; here an adversary chooses instances xt ∈ [−1, 1], then a learner chooses predictors wt ∈ W = {w ∈ R : |w| ≤ D}, and suffers a logistic loss ℓ(wt, xt) = log(1 + extwt). We provide an upper bound of O(T 1/3) for logistic online regression in one dimension, thus showing that the lower bound found in Theorem 2 is tight. Formally, we prove:\nTheorem 9. Consider the one dimensional online regression with logistic loss. Then a player that chooses predictors wt ∈ W according to Algorithm 1 with η = T−1/3 and D ≥ 2, achieves the following guarantee:\nRegretT =\nT∑\nt=1\nlog(1 + extwt)− min w∈W\nT∑\nt=1\nlog(1 + extw) = O(D3 T 1/3) .\nUsing standard online-to-batch conversion techniques Cesa-Bianchi et al. (2004), we can translate the upper bound given in the above lemma to an upper bound for stochastic optimization.\nCorollary 10. Consider the one dimensional stochastic logistic regression setting with D ≥ 2 and a budget of T samples. Then for any distribution D over instances, an algorithm that chooses predictors w1, . . . , wt ∈ W according to Algorithm 1 with η = T−1/3 and outputs wT = 1 T ∑T τ=1wτ , achieves the following guarantee:\nE[L(wT )] − min w∗∈[−D,D] L(w∗) = O(D3/T 2/3) .\nFollowing Zinkevich (2003) and Hazan et al. (2007), we approximate the losses received by the adversary, and use the approximate losses in a follow-the-regularized-leader (FTRL) procedure in order to choose the predictors.\nFirst note the following lemma due to Zinkevich (2003) (proof is found in Hazan et al. (2007)):\nLemma 11. Let ℓ1, . . . , ℓT be an arbitrary sequence of loss functions, and let w1, . . . , wT ∈ K. Let, ℓ̃1, . . . , ℓ̃T be a sequence of loss function that satisfy ℓ̃t(wt) = ℓt(wt), and ℓ̃t(w) ≤ ℓt(w) for all w ∈ K. Then\nT∑\nt=1\nℓt(wt)−min w∈K\nT∑\nt=1\nℓt(w) ≤ T∑\nt=1\nℓ̃t(wt)−min w∈K\nT∑\nt=1\nℓ̃t(w) .\nThus, the regret on the original losses is bounded by the regret of the approximate losses. For the logistic losses, ℓ(w, xt) = log(1 + e\nxtw), we define approximate losses ℓ̃t that satisfy the conditions of the last lemma. Depending on xt, wt, we divide into 3 cases:\nℓ̃t(w) =\n \n\na0 + ytw + β 2 y2tw 21 w≤0 if wt ≥ 0 and xt ≥ 1D ; a0 + ytw + β 2 y2tw\n21 w≥0 if wt ≤ 0 and xt ≤ − 1D ; a0 + ytw + β 2 y2t (w − wt)2 if |xt| ≤ 1D or xtwt ≤ 0 ,\n(4)\nwhere,\nyt = ∂ℓ(w, xt)\n∂w\n∣∣∣∣ wt = gtxt , gt = extwt 1 + extwt , β = 1/8D , a0 = log(1 + e xtwt)− gtxtwt .\nThus, if |xt| ≤ 1/D or xtwt ≤ 0, then we use a quadratic approximation, else we use a loss that changes from linear to quadratic on w = 0. Note that if the approximation loss ℓ̃t is partially linear, then the magnitude of its slope |yt| is greater than 1/2D.\nThe approximations are depicted in Fig. 5. In Fig. 5(a) the approximate loss changes from linear to quadratic in w = 0 , where in Fig. 5(b) the approximate loss is quadratic everywhere. The following technical lemma states that the losses {ℓ̃t} satisfy the conditions of Theorem 11.\nLemma 12. Assume that D ≥ 2. Let ℓ(·, x1), . . . , ℓ(·, xT ) be a sequence of logistic loss functions and let w1, . . . , wT ∈ W. The approximate losses ℓ̃1, . . . , ℓ̃T defined above satisfy ℓ̃t(wt) = ℓ(wt, xt) and ℓ̃t(w) ≤ ℓ(w, xt) for all w ∈ W.\nTheorem 12 is proved in Section 5.4. We are now ready to describe our algorithm that obtains a regret of O(D3T 1/3) for one-dimensional online regression, given in Algorithm 1.\nAlgorithm 1 FTRL for logistic losses\nInput: Learning rate η > 0, diameter D let R(w) = 1\n16D w2\nfor t = 1, 2 . . . T do set wt = argminw∈[−D,D] {∑t−1 τ=1 ℓ̃τ (w) + 1 η R(w) }\nobserve xt ∈ [−1, 1] and suffer loss ℓ(wt, xt) = log(1 + extwt) compute ℓ̃t according to Eq. (4)\nend for\nWe conclude with a proof sketch of Theorem 9; the complete proof is deferred to Section 5.3.\nProof of Theorem 9 (sketch). First we show that the regret of Algorithm 1 is upper bounded by the sum of differences ∑T t=1 ℓ̃ ′ t(wt)(wt−wt+1), and then divide the analysis into two cases. In the first case we show that the accumulated regret in rounds where ℓ̃t is quadratic around wt is upper bounded by O(D log T ). The second case analyses rounds in which ℓ̃t is linear around wt; due to the regularization, in the first such T\n2/3 rounds our regret is bounded by O(T 1/3) and if the number of such rounds is greater than T 2/3 we show that the quadratic part of the accumulated losses is large enough so the above sum of differences is smaller than O(D3T 1/3). Since the approximations ℓ̃t may change from linear to quadratic in w = 0, our analysis splits into two cases: the case where consecutive predictors wt, wt+1 have the same sign, and the case where they have opposite signs."
    }, {
      "heading" : "5 Proofs",
      "text" : ""
    }, {
      "heading" : "5.1 Proof of Theorem 3",
      "text" : "Proof. We assume that the following holds:\nΩ(e−D) = 40e−0.45D ≤ ǫ ≤ 1 25 .\nIn the proof we use the following:\nθD ≤ 0.2; 1− θ 2 ≥ 0.9 ,\nthe first follows since: θD = √ ǫ ≤ √ 1 25\n= 0.2, combing the latter with D ≥ 1 we get 1− θ\n2 ≥ 0.9. Next we prove the lemma in three steps:\nStep 1: Linear/quadratic approximation in [D/2, D]. We show that for w ∈ [D/2, D], the logistic losses of the instances (1 − θ\n2 ),−θ are linear/quadratic, up to an additive term\nof ∆ ≤ ǫ/40: ∣∣∣∣ℓ(w, 1− θ 2 )− (1− θ 2 )w ∣∣∣∣ = log(1 + e −(1− θ 2 )w) ≤ e−(1− θ2 )w ≤ e−0.45D ≤ ∆, ∀w ∈ [D/2, D]\n(5)∣∣∣∣ℓ(w,−θ)− ( log 2− θ\n2 w +\n(θw)2\n8 )∣∣∣∣ ≤ maxw̄∈[−D,D] (θw̄)4 192 ≤ (θD) 4 192 ≤ ∆, ∀w ∈ [−D,D]\n(6)\nrecalling ℓ(w, x) = log(1 + exw), in the first equality of Eq. (5) we used, log(1 + ez) = z + log(1 + e−z), next we used log(1 + z) ≤ z , finally we used w ≥ D/2 and (1− θ\n2 ) ≥ 0.9.\nIn Eq. (6) we used the second order taylor approximation of the loss around 0, and the RHS of the second inequality is an upper bound to the error of this approximation. We define ∆ = max{e−0.45D, (θD)4 192 }; using θ = √ ǫ D , 40e−0.45D ≤ ǫ ≤ 1 25 and D ≥ 1 we can bound:\n∆ ≤ ǫ/40 .\nStep 2: proving the lemma for w ∈ [D/2, D]. Recall the notation L+(w), L−(w) for the expected losses according to D+,D−; using Eqs. (5) and (6), we can write:\nL+(w) =\n( θ\n2 +\nǫ\nD\n)( 1− θ\n2\n) w + ( 1− θ\n2 − ǫ D\n)( log 2− θ\n2 w +\n(θw)2\n8\n) ±∆\n= ǫ\nD w +\n( 1− θ\n2 − ǫ D\n) log 2 + ( 1− θ\n2 − ǫ D\n) (θw)2\n8 ±∆, ∀w ∈ [D/2, D] .\nUsing the latter expression for L+ we can bound the excess loss for w ∈ [D/2, D] as follows:\nL+(w)− min w∗∈W L+(w ∗) ≥ L+(w)− L+(D/2)\n≥ ǫ D\n( w − D\n2\n) + θ2\n8\n( 1− θ\n2 − ǫ D\n)( w2 − D 2\n4\n) − 2∆\n≥ ǫ D\n( w − D\n2\n) + θ2\n10\n( w2 − D 2\n4\n) − 2∆ ,\nwhere in the last inequality we used θ/2 ≤ 0.1 and ǫ/D ≤ 1/25. Hence, for w ≥ 3D/4, we have\nL+(w)−min w∗\nL+(w ∗) ≥ ǫ\n4 +\nθ2\n10\n5D2\n16 − 2∆ ≥ ǫ 20 ,\nwhere we used ∆ ≤ ǫ/40. Similarly to L+ we can show that\nL−(w) = − ǫ\nD w +\n( 1− θ\n2 +\nǫ\nD\n) log 2 + ( 1− θ\n2 +\nǫ\nD\n) (θw)2\n8 ±∆ , ∀w ∈ [D/2, D] .\nUsing the latter expression for L− we can bound the excess loss for w ∈ [D/2, D] as follows: L−(w)− min\nw∗∈W L−(w\n∗) ≥ L−(w)− L−(D)\n≥ − ǫ D (w −D) + θ\n2\n8\n( 1− θ\n2 − ǫ D\n) (w2 −D2)− 2∆\n≥ − ǫ D (w −D) + θ\n2\n8\n( D2\n4 −D2\n) − 2∆ .\nHence, for w ∈ [D 2 , 3D 4 ], we have:\nL−(w)−min w∗\nL−(w ∗) ≥ ǫ 4 − θ\n2\n8\n3D2\n4 − 2∆ ≥ ǫ 20 . (7)\nStep 3: Extending the lemma to w ∈ [−D,D]. We are left to prove:\nL−(w)−min w∗\nL−(w ∗) ≥ ǫ\n20 , ∀w ∈ [−D,D/2] .\nAccording to Eq. (7), it suffices to prove L−(w) ≥ L−(D/2), ∀w ∈ [−D,D/2]. Since L− is convex, showing that the derivative of L− at D/2 is negative implies that L−(w) ≥ L−(D/2), ∀w ≤ D/2. Deriving L−(w) at D/2 we get:\nd\ndw L−(w) ∣∣∣∣ D/2 = ( θ 2 − ǫ D )( 1− θ 2 ) 1 1 + e−(1− θ 2) D 2 − θ ( 1− θ 2 + ǫ D ) 1 1 + e θD 2\n≤ ( θ\n2 − ǫ D\n)( 1− θ\n2\n) − θ ( 1− θ\n2 +\nǫ\nD\n)( 1\n2 − θD 8\n)\n≤ − ǫ D + θ2D 8 = − ǫ D + ǫ 8D ≤ 0 ,\nwhere in the first inequality we used (1+ ex)−1 ≤ 1, ∀x, and (1+ ex)−1 ≥ 1 2 − x 4 , ∀x ≥ 0, this is since (1 + ex)−1 is convex for x ≥ 0 and 1 2 − x 4 is its tangent at x = 0. In the last line we\nused θ = √ ǫ/D."
    }, {
      "heading" : "5.2 Proof of Theorem 5",
      "text" : "Proof. We assume that the following holds:\nΩ(e−D) = 100e−0.6D/ √ 2 ≤ ǫ ≤ 1\n10D = O(1/D) .\nIn the proof we will need to use: 1 6D ≤ 1−p 2 ≤ 1 2D\n, this can be shown by simple algebra using the definition of p in Fig. 4 and using D ≥ 2. Next we prove the lemma in three steps:\nStep 1: Define L0(w) and find its minima. Define:\nL0(w) = pℓ(w, x0) + 1− p 2 ℓ(w, xl) + 1− p 2 ℓ(w, xr) ,\nwhere p is defined in Fig. 4. Note that L0 is the unperturbed version (ǫ = 0) of L+, L−. We want to show that w0 = (0, 0.9D) is the global minimizer of L0; since L0(w) is convex it is sufficient to show that ∇L0(w0) = 0. Deriving L0 we get\n∇L0(w) = p\nD\n1 1 + ew[2]/D (0,−1)+1− p 2 √ 2\n( 1\n1 + e(w[1]−w[2])/ √ 2 (−1, 1) + 1 1 + e−(w[1]+w[2])/ √ 2 (1, 1)\n) .\nsubstituting p so that p 1−p = D√ 2\n1+e0.9\n1+e−0.9D/ √ 2 , and w0 = (0, 0.9D) confirms that the gradient is\nindeed zero at w0.\nStep 2: Bounding the minimal loss of L+(w). We would like to upper bound the minimal value of L+(w) as follows:\nmin w∗∈W\nL+(w ∗) ≤ L0(w0)− ǫ/20 .\nWe do so by showing that for wa = (0.3D, 0.9D) it holds that L+(wa) ≤ L0(w0)− ǫ/20. First, notice that we can write wa = w0 + ua, where ua = (0.3D, 0). Recalling ℓ(w, x) = log(1 + ex·w), we use x0 · wa = x0 · w0 = −0.9 to get:\nℓ(wa, x0) = ℓ(w0, x0) . (8)\nMoreover:\nℓ(wa, xl) = xl · wa + log(1 + e−xl·wa) = xl · w0 + xl · ua + log(1 + e− 0.6D√ 2 ) (9)\n≤ ℓ(w0, xl)− 0.3D√\n2 + e\n− 0.6D√ 2 ,\nrecalling ℓ(w, x) = log(1+ ex·w), in the equalities we used log(1+ ez) = z+ log(1+ e−z), and xl · wa = 0.6D√2 ; In the inequality we used xl · ua = − 0.3D√ 2 , next we used z ≤ log(1 + ez), and also log(1 + z) ≤ z. Similarly to Eq. (9), we can show:\nℓ(wa, xr) ≤ ℓ(w0, xr) + 0.3D√\n2 + e\n− 1.2D√ 2 . (10)\nNow, plugging Eqs. (8) to (10) into the definition of L+(wa), we get:\nL+(wa) ≤ pℓ(w0, x0) + 1− p 2 (1 + ǫ)\n( ℓ(w0, xl)−\n0.3D√ 2 + e − 0.6D√ 2\n)\n+ 1− p 2\n(1− ǫ) ( ℓ(w0, xr) +\n0.3D√ 2 + e − 1.2D√ 2\n)\n≤ L0(w0)− 1− p 2 (0.3 √ 2D)ǫ+ e − 0.6D√ 2\n≤ L0(w0)− √ 2\n20 ǫ+ e\n− 0.6D√ 2\n< L0(w0)− ǫ/20 , (11)\nwe used ℓ(w0, xl) = ℓ(w0, xr), and 1−p 2 ≥ 1 6D\n, we also used ǫ ≥ 100e−0.6D/ √ 2. So we showed\nthat L+(wa) is upper bounded by L0(w0) − ǫ/20, thus upper bounding the minimum of L+(w).\nStep 3: Bound the excess loss of predictors w : w[1] ≤ 0. In order to so, it is sufficient to show that the value of such predictors is greater by ǫ/20 than the upper bound we found for minw∗∈W L+(w ∗). Let us write L+(w) as a sum of L0(w) and a perturbation:\nL+(w) = L0(w) + (1− p)ǫ\n2\n( log(1 + exl·w)− log(1 + exr ·w) )\n= L0(w) + (1− p)ǫ\n2\n( log ( 1 + e 1√ 2 (w[2]−w[1]))− log ( 1 + e 1√ 2 (w[2]+w[1])))\n≥ L0(w) , ∀w[1] ≤ 0 .\nThe inequality follows since w[1] ≤ 0 and log(1+ez) is monotonically increasing, therefore the perturbation summand is positive. Combining the above inequality with the upper bound found in step 2 above we get:\nL+(w)− min w∗∈W L+(w ∗) ≥ L0(w)−\n( L0(w0)− ǫ/20 ) ≥ ǫ/20 , ∀w : w[1] ≤ 0 ,\nand the last inequality follows from w0 being the minimizer of L0(w). We can similarly show that for predictors w such that w[1] ≥ 0, then L−(w)−minw∗∈W L−(w∗) ≥ ǫ/20 applies."
    }, {
      "heading" : "5.3 Proof of Theorem 9",
      "text" : "Since the approximate losses ℓ̃t defined in Eq. (4) satisfy the conditions of Theorem 11 then it suffices to prove the lower bound for the regret of the ℓ̃t’s.\nDenoting, Ft(w) = ∑t−1\nτ=1 ℓ̃τ (w)+R(w), then Algorithm 1 chooses wt = argminw∈W Ft(w). Letting ut be the global minimizer of Ft, the following is equivalent to Algorithm 1:\nAlgorithm 2 Equivalent form-FTRL\nCalculate: ut = argminw∈R ∑t−1 τ=1 ℓ̃τ (w) + η −1R(w) Choose: wt = argminw∈W |w − ut|\nAlgorithm 2 first finds ut, the global minima of Ft, and then projects ut onto W. The expression for ut in Algorithm 2 is useful since it enables us to calculate the differences |ut−1− ut|, which upper bound the differences between predictors: |wt−1 −wt|; these differences are useful in bounding the regret of FTRL as seen in the next lemma due to Kalai and Vempala (2005) (proof can be found in Hazan (2011) or in Shalev-Shwartz (2011)):\nLemma 13. Let a regularizer function R, and ft, for t = 1, . . . , T , be a sequence of cost functions and let wt = argminw∈K ∑t−1 τ=1 fτ (w) + η −1R(w), Then:\nT∑\nt=1\nft(wt)− T∑\nt=1\nft(v) ≤ T∑\nt=1\n∇ft(wt) · (wt − wt+1) + η−1(R(v)−R(w1)), ∀v ∈ K\nNote that in our one-dimensional case the gradient ∇ℓ̃t(w) is simply the derivative ℓ̃′t(w). Also note that we can bound the FTL-BTL differences: ℓ̃′t(wt)(wt − wt+1) as follows:\nℓ̃′t(wt)(wt − wt+1) ≤ |ℓ̃′t(wt)(wt − wt+1)| ≤ |yt||wt − wt+1| ≤ |yt||ut − ut+1| , (12)\nwhere we used ℓ̃′t(wt) = yt (see Eq. (4)), we also used |wt+1 −wt| ≤ |ut+1 − ut| which follows from wt being the projection of ut onto W = [−D,D].\nCombining Theorem 13 with Eq. (12), the regret of Algorithm 1 is bounded as follows:\nRegretT ≤ T∑\nt=1\n|yt(wt − wt+1)|+ η−1 D\n16 ≤\nT∑\nt=1\n|yt(ut − ut+1)|+ D\n16 T 1/3 , (13)\nwhere we used R(w) = 1 16D w2 ≤ D 16 , ∀w ∈ W, and η = T−1/3. In Sections 5.3.1 and 5.3.2, we analyze the differences |yt(wt − wt+1)|, we divide the analysis into two cases:\n1. rounds in which utut+1 ≥ 0: Section 5.3.1.\n2. rounds in which utut+1 < 0: Section 5.3.2.\n5.3.1 Rounds in which utut+1 ≥ 0 Assume without loss of generality that ut, ut+1, are both positive. Hence, ui = argminw≥0 Fi(w), i ∈ {t, t+ 1}. For w ≥ 0, the losses are either linear with a positive slope ≥ 1/2D, or quadratic losses, this can be seen easily from Eq. (4). Lets introduce some notation:\nyqt = yt1{|xt| ≤ 1/D or xtwt ≤ 0 } + yt1{wt ≤ 0, xt ≤ −1/D }; y l t = yt1{ wt ≥ 0, xt ≥ 1/D};\nThe notation“q”, stands for quadratic losses on w ≥ 0, the “l” notation is for losses that are linear on w ≥ 0. We will also use the following notation ŵt:\nŵt =\n   0; if wt ≤ 0, xt ≤ − 1\nD wt; otherwise\n(14)\nUsing these new notations, and the expression for the ℓ̃t’s in Eq. (4), then ∀w ≥ 0:\nFt(w) =\nt−1∑\nτ=1\nℓ̃τ (w) + η −1β\n2 w2 =\nt−1∑\nτ=1\nyτw + β\n2\nt−1∑\nτ=1\n(yqτ) 2(w − ŵτ )2 + η−1\nβ 2 w2 ,\nwhere we used R(w) = 1 16D w2 = β 2 w2. From the last expression we can derive an analytic expression for ut:\nut = argmin w≥0\nFt(w) = − 1\nβ\n∑t−1 τ=1 yτ − β ∑t−1 τ (y q τ )\n2ŵτ∑t−1 τ (y q τ )2 + η−1 . (15)\nNext we analyze the sum of differences ∑t\nτ=1 yτ (wτ − wτ+1), the analysis divides into two sub-cases, first we analyze rounds in which ℓ̃t is quadratic, and then we analyze rounds where ℓ̃t is linear:\nRounds when ℓ̃t is quadratic for w ≥ 0: In that case yt = yqt and we have:\nℓ̃t(w) = y q tw +\nβ 2 (yqt ) 2(w − wt)2, ∀w ≥ 0 ,\nfor such a quadratic loss ℓ̃t, then Eq. (15) provides an analytic expression for ut+1, subtracting ut is can be shown that:\nut − ut+1 = 1\nβ\nyqt + β(y q t ) 2(ut − wt)∑t−1 τ=1(y q τ )2 + η−1 , (16)\nIf both ut, ut+1 ≥ D, it means that wt = wt+1 = D, and therefore:\nyqt (wt − wt+1) = 0 . (17)\nIf either ut < D or ut+1 < D, we have:\n|yqt (wt − wt+1)| ≤ |yqt (ut − ut+1)| = 1\nβ\n(yqt ) 2\n∑t τ=1(y q τ )2 + η−1 |1 + βyqt (ut − wt)|\n≤ 2 β\n(yqt ) 2\n∑t τ=1(y q τ )2 + η−1 , (18)\nwhere we used the inequality |ut − ut+1| ≤ 4D (can be derived from the expressions for ut, ut+1 ), and thus if either ut, ut+1 is smaller than D it follows |ut| ≤ 5D, we then use |wt| ≤ D, |ut| ≤ 5D, β = 18D , and |y q t | ≤ 1 to show that |1 + βyqt (ut − wt)| ≤ 2.\nThus, for rounds in which utut+1 ≥ 0 and ℓ̃t is quadratic, we can bound the regret by:\n2\nβ\nT∑\nt=1\n(yqt ) 2\n∑t τ=1(y q τ )2 + η−1 ≤ 16D log(T + 1) , (19)\nwhere we used β = 1/8D together with the following lemma, taken from Hazan et al. (2007):\nLemma 14. Let vt ∈ R, for t = 1, . . . , T , be a sequence of scalars such that for some r, |vt| ≤ r. Then:\nT∑\nt=1\nv2t∑t τ=1 v 2 τ + ǫ ≤ log(r2T/ǫ+ 1) .\nRounds when ℓ̃t is linear for w ≥ 0: In that case xt ≥ 1D , yt = ylt and we have:\nℓ̃t(w) = y l tw, ∀w ≥ 0 ,\nfor such a linear loss ℓ̃t, then Eq. (15) provides an analytic expression for ut+1, subtracting ut is can be shown that:\nut − ut+1 = 1\nβ ylt∑t−1 τ=1(y q τ )2 + η−1 . (20)\nWe are left to bound the sum of differences yt(wt −wt+1) at times in which ℓ̃t is linear (and therefore yt = y l t, and xt ≥ 1D ); according to Eq. (20) each such difference is bounded by:\nylt(wt − wt+1) = 1\nβ\n(ylt) 2\n∑t−1 τ=1(y q τ )2 + η−1 . (21)\nDefine n+(t), to be the number of positive linear losses received at the first t rounds:\nn+(t) = t∑\nτ=1\n1{xτ≥ 1D ,wt≥0} .\nSuppose that n+(T ) ≤ T 2/3, and recall η = T 1/3 and |ylt| ≤ 1, then: T∑\nt=1\nylt(wt − wt+1)1{xt≥ 1D ,wt≥0} = 1\nβ\nT∑\nt=1\n(ylt) 2\n∑t−1 τ=1(y q τ )2 + η−1\n1{xt≥ 1D ,wt≥0} ≤ 1 β ηn+(T )\n≤ 1 β T−1/3T 2/3 = 8DT 1/3 . (22)\nSuppose on the contrary that n+(T ) ≥ T 2/3, so till time t0 for which n+(t0) = T 2/3, we accumulate a regret bounded by 8DT 1/3. Next, we analyze the FTL-BTL differences at rounds in which xt ≥ 1D , wt ≥ 0, and t ≥ t0. From Eq. (15) for ut, it can be seen that ut ≥ 0 implies:\nt−1∑\nτ=1\nyτ − β t−1∑\nτ=1\n(yqτ ) 2ŵτ ≤ 0 .\nthe latter equation can be written as follows:\nt−1∑\nτ=1\n(−yτ )1{yτ<0} + β t−1∑\nτ=1\n(yqτ ) 2ŵτ ≥\nt−1∑\nτ=1\nyτ1{yτ≥0} . (23)\nThe RHS of the last equation can be lower bounded as follows:\nt−1∑\nτ=1\nyτ1{yτ≥0} ≥ t−1∑\nτ=1\nylτ ≥ 1\n2D n+(t− 1) , (24)\nwhere we used the definition of n+(t), and y l τ ≥ 1/2D. The LHS of Eq. (23) is upper bounded as follows:\nt−1∑\nτ=1\n(−yτ )1{yτ<0} + β t−1∑\nτ=1\n(yqτ ) 2ŵτ ≤\nt−1∑\nτ=1\n|yqτ |+ 1\n8\nt−1∑\nτ=1\n|yqτ | ≤ 9\n8\n√√√√(t− 1) t−1∑\nτ=1\n(yqτ )2 , (25)\nin the first inequality we used ∑t−1 τ=1(−yτ )1{yτ<0} ≤ ∑t−1\nτ=1 |yqτ |, also |ŵτ | ≤ D, β = 1/8D, and finally (yqτ ) 2 ≤ |yqτ | (since |yqτ | ≤ 1); in the second inequality we used ||z||1 ≤ √\nN ||z||22, ∀z ∈ R N . Combining Eqs. (23) to (25) we get:\nt−1∑\nτ=1\n(yqτ) 2 ≥ 1 10D2 n2+(t− 1) t− 1 ≥ 1 10D2 n2+(t− 1) T . (26)\nUsing the inequality in Eq. (26) inside Eq. (21), then the sum of differences yt(wt − wt+1) for the rounds with a linear loss (hence yt = y l t) and t > t0, we can upper bound:\nT∑\nt=t0+1\nylt(wt − wt+1) ≤ 1\nβ\nT∑\nt=t0+1\n(ylt) 2\n∑t−1 τ=1(y q τ )2 + η−1\n≤ 80D3T T∑\nt=t0+1\n1\nn2+(t− 1) 1{xt≥ 1D ,wt≥0}\n≤ 80D3T n+(T )∑\ni=T 2/3\n1 i2 ≤ 80D3T 2 T 2/3 = 160D3T 1/3 , (27)\nwhere we assumed n+(t0) = T 2/3 ≤ n+(T ), and used β = 1/8D, (ylt)2 ≤ 1, finally we applied:\nn2∑\ni=n1\n1 i2 ≤ 1 n21 +\n∫ ∞\ny=n1\n1\ny2 dy =\n1\nn21 +\n1 n1 ≤ 2 n1 .\nHence during rounds where utut+1 ≥ 0, then Eqs. (19), (22) and (27) upper bound the regret of Algorithm 1 by:\n16D log(T + 1) + 8DT 1/3 + 160D3T 1/3 .\n5.3.2 Rounds in which utut+1 < 0\nAssume without loss of generality that, ut ≥ 0, and ut+1 < 0, thus, ut = argminw≥0 Ft(w) and ut+1 = argminw≤0 Ft+1(w). Since ut ≥ 0, then according to Eq. (15) we have:\nt−1∑\nτ=1\nyτ − β t−1∑\nτ\n(yqτ ) 2ŵτ ≤ 0 .\nSince ut+1 ≤ 0, we must have: t−1∑\nτ=1\nyτ − β t−1∑\nτ=1\n(yqτ ) 2ŵτ + yt − β(yqt )2ŵt ≥ 0 ,\nor else the global minima would be positive. The last two inequalities imply that:\n| t−1∑\nτ=1\nyτ − β t−1∑\nτ=1\n(yqτ ) 2ŵτ | ≤ yt − β(yqt )2ŵt ≤ yt . (28)\nCombining the last equation with Eq. (15), we get:\nut ≤ 1\nβ yt∑t−1 τ (y q τ)2 + η−1 ,\nand therefore:\nytut ≤ 1\nβ y2t∑t−1 τ (y q τ )2 + η−1 .\nSimilar to the analysis made in Section 5.3.1 we can show that:\nT∑\nt=1\nytut1{utut+1<0} ≤ 16D log(T + 1) + 8DT 1/3 + 160D3T 1/3 .\nsymmetrically, we can show:\nT∑\nt=1\nytut+11{utut+1<0} ≥ −16D log(T + 1)− 8DT 1/3 − 160D3T 1/3 .\nFrom the last two inequalities, it follows:\nT∑\nt=1\nyt(ut − ut+1)1{utut+1<0} ≤ 32D log(T + 1) + 16DT 1/3 + 320D3T 1/3 ."
    }, {
      "heading" : "5.3.3 Concluding the proof",
      "text" : "According to Sections 5.3.1 and 5.3.2, the regret of Algorithm 1 is upper bounded by:\nRegretT ≤ 48D log(T + 1) + 24DT 1/3 + 480D3T 1/3 + D\n16 T 1/3 ,\nwhere the last term is due to the regularization."
    }, {
      "heading" : "5.4 Proof of Theorem 12",
      "text" : "Proof. For ease of notation we use the following shorthand for the logistic loss:\nℓt(w) := ℓ(w, xt) = log(1 + e xtw)\nThe proof is divided into 4 cases:\nCase 0. Denote by ℓ̃ (0) t , an approximate loss of the logistic around w = 0, thus:\nℓ̃ (0) t (w) = ℓt(0) + ℓ ′ t(0)w +\nβ 2 x2tw 2 = log(2) + xt 2 w + β 2 x2tw 2 (29)\nwhere we used ℓt(w) = log(1 + e xtw). Next, we show that ℓ̃ (0) t (w) ≤ ℓt(w), ∀w ∈ [−D,D]. Lets write ℓt(w)− ℓ̃(0)t (w), explicitly:\nℓt(w)− ℓ̃(0)t (w) = log(1 + extw)− log(2)− xtw 2 − β 2 (xtw) 2 = log(1 + ez)− log(2)− z 2 − β 2 z2\n= log( e−z/2 + ez/2\n2 )− β 2 z2\nand we denoted z = xtw. Thus, it is sufficient to show that log( e−z/2+ez/2 2 )− β 2 z2 ≥ 0, ∀z ∈ [−D,D]. Assume z ∈ [−10, 10], then from the taylor expansion of log( e−z/2+ez/2 2\n) around zero, there exists z̄ : |z̄| ≤ 10 such that:\nlog( e−z/2 + ez/2\n2 )− β 2 z2 =\nz2\n8 − z̄\n4\n192 − β 2 z2 ≥ (1 8 − 1 16D )z2 − z\n4\n192\n≥ z 2 16 − z 4 192 ≥ 0, ∀z ∈ [−10, 10]\nwhere we used β = 1 8D , D ≥ 2, and |z̄| ≤ |z| ≤ 10. Assuming 10 ≤ |z| ≤ D:\nlog( e−z/2 + ez/2\n2 )− β 2 z2 ≥ log(e|z|/2)− β 2 z2 − log(2) = |z| 2 − 1 16D z2 − log(2)\n≥ |z| 2 − |z| 8 − log(2) ≥ 0, ∀10 ≤ |z| ≤ D\nwe used β = 1 8D , in the second inequality we used |z| ≤ D, and in the last inequality we used |z| ≥ 10. So we have shown:\nℓ̃ (0) t (w) ≤ ℓt(w), ∀w ∈ [−D,D] (30)\nCase 1: wt ≥ 0, xt ≥ 1D . For that case, the approximate loss ℓ̃t of Eq. (4) can be written as follows:\nℓ̃t(w) =    ℓt(wt) + ℓ ′ t(wt)(w − wt); if w ∈ [0, D]\nℓt(wt) + ℓ ′ t(wt)(w − wt) +\nβ 2 y2tw 2; if w ∈ [−D, 0] (31)\nwhere ℓt(w) = log(1 + e xtw), yt = ℓ ′ t(wt) = xtextwt 1+extwt . It is easily noticed that ℓ̃t(wt) = ℓt(wt). Also note that for positive instances ℓ̃t(w) is the tangent of ℓt(w) at wt, since ℓt(w) is convex it follows that: ℓ̃t(w) ≤ ℓt(w), ∀w ∈ [0, D] We are left to prove the latter inequality holds for negative instances. Recalling ℓ̃\n(0) t from\nEq. (29), we will show that:\nℓ̃t(w) ≤ ℓ̃(0)t (w) ≤ ℓt(w) ∀w ∈ [−D, 0] (32) Thus, concluding the proof. The lefthand inequality of Eq. (32) can be derived as follows:\nℓ̃t(w) = ℓt(wt) + ℓ ′ t(wt)(w − wt) +\nβ 2 y2tw 2 = ℓ̃t(0) + ℓ ′ t(wt)w + β 2 y2tw 2 (33)\n≤ ℓt(0) + ℓ′t(0)w + β\n2 x2tw 2 = ℓ̃ (0) t (w), ∀w ≤ 0, wt ∈ [0, D]\nwhere we used ℓ̃t(0) ≤ ℓt(0), 0 ≤ ℓ′t(0) ≤ ℓ′t(wt), and w ≤ 0, moreover we used |yt| = | xtextwt 1+extwt\n| ≤ |xt|. The righthand inequality of Eq. (32), is proved in the former case, see Eq. (30).\nThe proof for the case wt ≤ 0, xt ≤ − 1D is similar.\nCase 2: |xt| ≤ 1D . For that case, the approximate loss ℓ̃t of Eq. (4) can be written as follows:\nℓ̃t(w) = ℓt(wt) + ℓ ′ t(wt)(w − wt) +\nβ\n2\n( ℓ′t(wt) )2 (w − wt)2 (34)\nwhere we used, yt = ℓ ′ t(wt). Noticeably ℓ̃t(wt) = ℓt(wt). To prove ℓ̃t(w) ≤ ℓt(w), we require the following lemma from Hazan et al. (2007):\nLemma 15. For a function f : K → R, where K has diameter D, such that ∀w ∈ K, ||∇f(w)|| ≤ G, and e−αf(w) is concave, the following holds for γ = 1\n2 min{ 1 4GD , α}:\nf(w) ≥ f(w0) +∇f(w0)T (w − w0) + γ\n2 (∇f(w0)T (w − w0))2, ∀w,w0 ∈ K\nIn Hazan et al. (2007) it is also shown that for one dimensional functions, if α ≤ minw∈K f ′′(w)(\nf ′(w) )2 ,\nthen e−αf(w) is concave in K. In the case of logistic loss ℓt(w) = log(1 + extw), the norm of its derivative is bounded by 1, moreover:\nℓ′′t (w)( ℓ′t(w) )2 = e −xtw (35)\nSince |xt| ≤ 1D , and |w| ≤ D, then α0 := e−1 ≤ minw∈[−D,D] ℓ′′t (w)( ℓ′t(w) )2 , implying γ = 1 2 min{ 1 4D , e−1} = 1 8D . Applying Theorem 15 to the logistic loss ℓt(w), and w0 = wt, we get:\nℓt(w) ≥ ℓt(wt) + ℓ′t(wt)(w − wt) + 1\n2\n1\n8D (ℓ′t(wt)(w − wt))2 := ℓ̃t(w), ∀w ∈ [−D,D]\nwhich proved the lemma for that case.\nCase 3: xtwt ≤ 0. Assume, without loss of generality, that wt > 0 and xt < 0. For that case, the approximate loss ℓ̃t has the same form as in Eq. (34). It is easily noticed that ℓ̃t(wt) = ℓt(wt). Notice that in [0, D] we have:\ne−xtw = e|xt|w ≥ 1 2\nwhere we used xt < 0, and w ∈ [0, D]. According to Eq. (35) it implies that e−0.5ℓt(w) is concave in [0, D]; applying Theorem 15, we get:\nℓt(w) ≥ ℓt(wt) + ℓ′t(wt)(w − wt) + 1\n2\n1\n8D (ℓ′t(wt)(w − wt))2 := ℓ̃t(w), ∀w ∈ [0, D]\nand we used 1 8D = 1 2 min{ 1 4D , 1 2 }. Next we show that ℓ̃t(w) ≤ ℓ̃(0)t (w), ∀w ∈ [−D, 0], where ℓ̃ (0) t is defined in Eq. (29). Writing ℓ̃t(w) we get:\nℓ̃t(w) = ℓt(wt) + ℓ ′ t(wt)(w − wt) +\nβ 2 (ℓ′t(wt)(w − wt))2\n= ℓ̃t(0) + ( extwt 1 + extwt (1− βxtwte xtwt 1 + extwt ) ) xtw + ( extwt 1 + extwt )2 β 2 x2tw 2\nwhere we used ℓ′t(w) = xt extwt 1+extwt . Let’s denote z = xtwt < 0, and note that for z ≤ 0, the following holds:\nez\n1 + ez ≤ 1 2 ,\nez\n1 + ez (1− ze\nz\n1 + ez ) ≤ 1, ∀z ≤ 0\nUsing the latter expression for ℓ̃t, and the two inequalities above:\nℓ̃t(w) ≤ ℓ̃t(0) + 1\n2 xtw +\nβ 2 x2tw 2 ≤ ℓt(0) + 1 2 xtw + β 2 x2tw 2 := ℓ̃ (0) t (w), ∀w ∈ [−D, 0]\nwhere we used z = xtwt ≤ 0, and ℓ̃t(0) ≤ ℓt(0). Combining the latter inequality with Eq. (30), proves:\nℓ̃t(w) ≤ ℓ̃(0)t (w) ≤ ℓt(w), ∀w ∈ [−D, 0]\nwhich concludes the proof."
    }, {
      "heading" : "6 Summary and Open Questions",
      "text" : "We have given tight bounds for stochastic and online logistic regression that preclude the existence of fast rates for logistic regression without exponential factors. As a consequence, we have also resolved the COLT 2012 open problem of McMahan and Streeter (2012). Our lower bounds can be extended to the multidimensional setting in which the instances are normalized and the labels are binary.\nOur results suggest that second-order methods might present poor performance in practical logistic regression problems. Indeed, in the derivation of our lower bounds we have constructed a distribution over instances such that the induced expected loss function is approximately linear around its optimum.\nAn interesting feature of our results is that our regret/convergence bounds apply to a finite range of T , and are different than the known asymptotic bounds. Arguably, the range of T for which our results apply is the important one in practice (sub-exponential in the size of the hypothesis class). Are there other natural settings in which regret bounds for bounded number of iterations differ from the asymptotic bound?"
    }, {
      "heading" : "A Proof of Theorem 1",
      "text" : "Suppose a randomize algorithm A that given m tosses decides upon one of the coins, and denote by DA the conditional distribution of the algorithm over his decision given the m coin tosses. We also let Dp, Dp+ǫ denote the respective Bernoulli distributions corresponding to a single toss; let Dmp , Dmp+ǫ be the product distributions of a sequence of m independent tosses, and let Dmp,A, Dmp+ǫ,A be the joint distributions over the sequence of m independent tosses and the decision of the randomized algorithm. For the proof we need the following standard lemma.\nLemma 16. For all events B in the space of m independent tosses and the decision of the algorithm:\n∣∣Dmp,A(B)−Dmp+ǫ,A(B) ∣∣ ≤\n√ mǫ2\np .\nProof. We first bound the KL-divergence between Dp and Dp+ǫ. Using the fact log z ≤ z−1 for z > 0, we obtain\nKL(Dp+ǫ || Dp) = (p+ ǫ) log p + ǫ p + (1− p− ǫ) log 1− p− ǫ 1− p\n≤ (p + ǫ) ( p+ ǫ\np − 1\n) + (1− p− ǫ) ( 1− p− ǫ 1− p − 1 )\n= ǫ2\np(1− p) .\nSince the decision of the algorithm only depends on the m tosses that A observes, we may write:\nDmp,A = Dmp DA, Dmp+ǫ,A = Dmp+ǫDA (36)\nThus, we can write:\nKL(Dmp+ǫ,A || Dmp,A) = KL(Dmp+ǫ || Dmp ) = mKL(Dp+ǫ || Dp) ≤ mǫ2\np(1− p)\nthe first equality follows from Eq. (36) combined with the definition of the KL-divergence, the second equality holds since the KL-divergence is additive over distribution products. Finally, recalling Pinsker’s inequality we conclude that for all events B in the joint space of tosses and algorithm’s decision:\n∣∣Dmp,A(B)−Dmp+ǫ,A(B) ∣∣ ≤ √ 1 2 KL(Dmp+ǫ,A || Dmp,A) ≤\n√ mǫ2 2p(1− p) ≤ √ mǫ2 p .\nwhere in the last inequality we used p ∈ (0, 1 2 ]. We can now prove Theorem 1.\nProof. Having an algorithm A that discovers the correct coin w.p≥ 3/4, let B be the event that the algorithm decides that nature uses the first coin after m tosses, then clearly:\n∣∣Dmp,A(B)−Dmp+ǫ,A(B) ∣∣ ≥ 1/4\ncombining the latter with Theorem 16 proves Theorem 1."
    } ],
    "references" : [ {
      "title" : "Adaptivity of averaged stochastic gradient descent to local strong convexity for logistic regression",
      "author" : [ "F. Bach" ],
      "venue" : "arXiv preprint arXiv:1303.6149,",
      "citeRegEx" : "Bach.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bach.",
      "year" : 2013
    }, {
      "title" : "Non-strongly-convex smooth stochastic approximation with convergence rate O(1/n)",
      "author" : [ "F. Bach", "E. Moulines" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Bach and Moulines.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bach and Moulines.",
      "year" : 2013
    }, {
      "title" : "Log loss or hinge loss? http://yaroslavvb.blogspot.co.il/2007/06/log-loss-or-hinge-l",
      "author" : [ "Y. Bulatov" ],
      "venue" : null,
      "citeRegEx" : "Bulatov.,? \\Q2007\\E",
      "shortCiteRegEx" : "Bulatov.",
      "year" : 2007
    }, {
      "title" : "On the generalization ability of on-line learning algorithms",
      "author" : [ "N. Cesa-Bianchi", "A. Conconi", "C. Gentile" ],
      "venue" : "IEEE Transactions on Information Theory,",
      "citeRegEx" : "Cesa.Bianchi et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Cesa.Bianchi et al\\.",
      "year" : 2004
    }, {
      "title" : "Logistic regression, adaboost and bregman distances",
      "author" : [ "M. Collins", "R.E. Schapire", "Y. Singer" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Collins et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Collins et al\\.",
      "year" : 2002
    }, {
      "title" : "Additive logistic regression: a statistical view of boosting",
      "author" : [ "J. Friedman", "T. Hastie", "R. Tibshirani" ],
      "venue" : "The annals of statistics,",
      "citeRegEx" : "Friedman et al\\.,? \\Q2000\\E",
      "shortCiteRegEx" : "Friedman et al\\.",
      "year" : 2000
    }, {
      "title" : "A survey: The convex optimization approach to regret minimization",
      "author" : [ "E. Hazan" ],
      "venue" : "Optimization for Machine Learning,",
      "citeRegEx" : "Hazan.,? \\Q2011\\E",
      "shortCiteRegEx" : "Hazan.",
      "year" : 2011
    }, {
      "title" : "Logarithmic regret algorithms for online convex optimization",
      "author" : [ "E. Hazan", "A. Agarwal", "S. Kale" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Hazan et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Hazan et al\\.",
      "year" : 2007
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : "Moreover, Friedman et al. (2000) and Collins et al.",
      "startOffset" : 10,
      "endOffset" : 33
    }, {
      "referenceID" : 3,
      "context" : "(2000) and Collins et al. (2002) have shown that logistic regression is strongly connected to boosting.",
      "startOffset" : 11,
      "endOffset" : 33
    }, {
      "referenceID" : 3,
      "context" : "(2000) and Collins et al. (2002) have shown that logistic regression is strongly connected to boosting. A long standing debate in the machine learning community has been the optimal choice of surrogate loss function for binary prediction problems (see Langford (2009), Bulatov (2007)).",
      "startOffset" : 11,
      "endOffset" : 268
    }, {
      "referenceID" : 2,
      "context" : "A long standing debate in the machine learning community has been the optimal choice of surrogate loss function for binary prediction problems (see Langford (2009), Bulatov (2007)).",
      "startOffset" : 165,
      "endOffset" : 180
    }, {
      "referenceID" : 7,
      "context" : "Thus, the Online Newton Step algorithm (Hazan et al., 2007) can be applied to the logistic regression problem and gives a convergence rate of Õ(en/T ) over T iterations.",
      "startOffset" : 39,
      "endOffset" : 59
    }, {
      "referenceID" : 0,
      "context" : "Bach (2013), relying on a property called “generalized self-concordance”, gave an algorithm with convergence rate ofO(D4/μ∗T ), where μ∗ is the smallest eigenvalue of the Hessian at the optimal point.",
      "startOffset" : 0,
      "endOffset" : 12
    }, {
      "referenceID" : 0,
      "context" : "Bach (2013), relying on a property called “generalized self-concordance”, gave an algorithm with convergence rate ofO(D4/μ∗T ), where μ∗ is the smallest eigenvalue of the Hessian at the optimal point. This translates to a O(poly(D)/T ) rate whenever the expected loss function is “locally strongly convex” at the optimum. More recently, Bach and Moulines (2013) extended this result and presented an elegant algorithm that attains a rate of the form O(ρDn/T ), without assuming strong convexity (neither global or local) — but rather depending on a certain data-dependent constant ρ.",
      "startOffset" : 0,
      "endOffset" : 362
    }, {
      "referenceID" : 0,
      "context" : "Bach (2013), relying on a property called “generalized self-concordance”, gave an algorithm with convergence rate ofO(D4/μ∗T ), where μ∗ is the smallest eigenvalue of the Hessian at the optimal point. This translates to a O(poly(D)/T ) rate whenever the expected loss function is “locally strongly convex” at the optimum. More recently, Bach and Moulines (2013) extended this result and presented an elegant algorithm that attains a rate of the form O(ρDn/T ), without assuming strong convexity (neither global or local) — but rather depending on a certain data-dependent constant ρ. In this paper, we resolve the above question and give tight characterization of the achievable convergence rates for logistic regression. We show that as long as the target accuracy ǫ is not exponentially small in D, a rate of the form Õ(poly(D)/T ) is not attainable. Specifically, we prove a lower bound of Ω( √ D/T ) on the convergence rate, that can also be achieved (up to a √ D factor) by stochastic gradient descent algorithms. In particular, this shows that in the worst case, the magnitude of data-dependent parameters used in previous works are exponentially large in the diameter D. The latter lower bound only applies for multidimensional regression (i.e., when n ≥ 2); surprisingly, in one-dimensional logistic regression we find a rate of Θ(T−2/3) to be tight. As far as we know, this is the first natural setting demonstrating such a phase transition in the optimal convergence rates, with respect to the dimensionality of the problem. We also consider the closely-related online optimization setting, where on each round t = 1, 2, . . . , T an adversary chooses a certain logistic function and our goal is to minimize the T -round regret, with respect to the best fixed decision chosen with the benefit of hindsight. In this setting, McMahan and Streeter (2012) investigated the one-dimensional case and showed that if the adversary is restricted to pick binary (i.",
      "startOffset" : 0,
      "endOffset" : 1862
    }, {
      "referenceID" : 0,
      "context" : "Bach (2013), relying on a property called “generalized self-concordance”, gave an algorithm with convergence rate ofO(D4/μ∗T ), where μ∗ is the smallest eigenvalue of the Hessian at the optimal point. This translates to a O(poly(D)/T ) rate whenever the expected loss function is “locally strongly convex” at the optimum. More recently, Bach and Moulines (2013) extended this result and presented an elegant algorithm that attains a rate of the form O(ρDn/T ), without assuming strong convexity (neither global or local) — but rather depending on a certain data-dependent constant ρ. In this paper, we resolve the above question and give tight characterization of the achievable convergence rates for logistic regression. We show that as long as the target accuracy ǫ is not exponentially small in D, a rate of the form Õ(poly(D)/T ) is not attainable. Specifically, we prove a lower bound of Ω( √ D/T ) on the convergence rate, that can also be achieved (up to a √ D factor) by stochastic gradient descent algorithms. In particular, this shows that in the worst case, the magnitude of data-dependent parameters used in previous works are exponentially large in the diameter D. The latter lower bound only applies for multidimensional regression (i.e., when n ≥ 2); surprisingly, in one-dimensional logistic regression we find a rate of Θ(T−2/3) to be tight. As far as we know, this is the first natural setting demonstrating such a phase transition in the optimal convergence rates, with respect to the dimensionality of the problem. We also consider the closely-related online optimization setting, where on each round t = 1, 2, . . . , T an adversary chooses a certain logistic function and our goal is to minimize the T -round regret, with respect to the best fixed decision chosen with the benefit of hindsight. In this setting, McMahan and Streeter (2012) investigated the one-dimensional case and showed that if the adversary is restricted to pick binary (i.e. ±1) labels, a simple followthe-leader algorithm attains a regret bound of O( √ D + log T ). This discovery led them to conjecture that bounds of the form O(poly(D) log T ) should be achievable in the general multi-dimensional case with continuous labels set. Our results extend to the online optimization setup and resolve the COLT 2012 open problem of McMahan and Streeter (2012) on the negative side.",
      "startOffset" : 0,
      "endOffset" : 2349
    }, {
      "referenceID" : 7,
      "context" : "As opposed to previous works that utilize approximate losses based on local structure (Zinkevich, 2003; Hazan et al., 2007), we find it necessary to employ approximations that rely on the global structure of the logistic loss.",
      "startOffset" : 86,
      "endOffset" : 123
    }, {
      "referenceID" : 3,
      "context" : "Standard online-to-batch conversion (Cesa-Bianchi et al., 2004) shows that any online algorithm attaining a regret of R(T ) can be used to attain a convergence rate of R(T )/T for stochastic optimization.",
      "startOffset" : 36,
      "endOffset" : 63
    }, {
      "referenceID" : 3,
      "context" : "Using standard online-to-batch conversion techniques Cesa-Bianchi et al. (2004), we can translate the upper bound given in the above lemma to an upper bound for stochastic optimization.",
      "startOffset" : 53,
      "endOffset" : 80
    }, {
      "referenceID" : 6,
      "context" : "Following Zinkevich (2003) and Hazan et al. (2007), we approximate the losses received by the adversary, and use the approximate losses in a follow-the-regularized-leader (FTRL) procedure in order to choose the predictors.",
      "startOffset" : 31,
      "endOffset" : 51
    }, {
      "referenceID" : 6,
      "context" : "First note the following lemma due to Zinkevich (2003) (proof is found in Hazan et al. (2007)): Lemma 11.",
      "startOffset" : 74,
      "endOffset" : 94
    }, {
      "referenceID" : 6,
      "context" : "The expression for ut in Algorithm 2 is useful since it enables us to calculate the differences |ut−1− ut|, which upper bound the differences between predictors: |wt−1 −wt|; these differences are useful in bounding the regret of FTRL as seen in the next lemma due to Kalai and Vempala (2005) (proof can be found in Hazan (2011) or in Shalev-Shwartz (2011)):",
      "startOffset" : 315,
      "endOffset" : 328
    }, {
      "referenceID" : 6,
      "context" : "The expression for ut in Algorithm 2 is useful since it enables us to calculate the differences |ut−1− ut|, which upper bound the differences between predictors: |wt−1 −wt|; these differences are useful in bounding the regret of FTRL as seen in the next lemma due to Kalai and Vempala (2005) (proof can be found in Hazan (2011) or in Shalev-Shwartz (2011)):",
      "startOffset" : 315,
      "endOffset" : 356
    }, {
      "referenceID" : 6,
      "context" : "where we used β = 1/8D together with the following lemma, taken from Hazan et al. (2007): Lemma 14.",
      "startOffset" : 69,
      "endOffset" : 89
    }, {
      "referenceID" : 6,
      "context" : "To prove l̃t(w) ≤ lt(w), we require the following lemma from Hazan et al. (2007): Lemma 15.",
      "startOffset" : 61,
      "endOffset" : 81
    }, {
      "referenceID" : 6,
      "context" : "To prove l̃t(w) ≤ lt(w), we require the following lemma from Hazan et al. (2007): Lemma 15. For a function f : K → R, where K has diameter D, such that ∀w ∈ K, ||∇f(w)|| ≤ G, and e−αf(w) is concave, the following holds for γ = 1 2 min{ 1 4GD , α}: f(w) ≥ f(w0) +∇f(w0) (w − w0) + γ 2 (∇f(w0) (w − w0)), ∀w,w0 ∈ K In Hazan et al. (2007) it is also shown that for one dimensional functions, if α ≤ minw∈K f ′′(w) ( f ′(w) )2 , then e−αf(w) is concave in K.",
      "startOffset" : 61,
      "endOffset" : 336
    } ],
    "year" : 2014,
    "abstractText" : "The logistic loss function is often advocated in machine learning and statistics as a smooth and strictly convex surrogate for the 0-1 loss. In this paper we investigate the question of whether these smoothness and convexity properties make the logistic loss preferable to other widely considered options such as the hinge loss. We show that in contrast to known asymptotic bounds, as long as the number of prediction/optimization iterations is sub exponential, the logistic loss provides no improvement over a generic non-smooth loss function such as the hinge loss. In particular we show that the convergence rate of stochastic logistic optimization is bounded from below by a polynomial in the diameter of the decision set and the number of prediction iterations, and provide a matching tight upper bound. This resolves the COLT open problem of McMahan and Streeter (2012).",
    "creator" : "LaTeX with hyperref package"
  }
}