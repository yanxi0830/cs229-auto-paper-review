{
  "name" : "1605.05223.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "On the boosting ability of top-down decision tree learning algorithm for multiclass classification",
    "authors" : [ "Anna Choromanska", "Krzysztof Choromanski", "Mariusz Bojarski" ],
    "emails" : [ "achoroma@cims.nyu.edu", "kchoro@google.com", "mbojarski@nvidia.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Keywords: multiclass classification, decision trees, boosting, online learning"
    }, {
      "heading" : "1. Introduction",
      "text" : "This paper focuses on the multiclass classification problem with very large number of classes which becomes of increasing importance with the recent widespread development of dataacquisition web services and devices. Straightforward extensions of the binary approaches to the multiclass setting, such as one-against-all approach Rifkin and Klautau (2004), do not often work in the presence of strict computational constraints. In this case, hierarchical approaches seem particularly favorable since, due to their structure, they potentially can significantly reduce the computational costs. This paper is motivated by very recent advances in the area of multiclass classification, and considers a hierarchical approach for learning a multiclass decision tree structure in a top-down fashion, where splitting the data in every node of the tree is based on the value of a very particular objective function. This objective function controls the balancedness of the splits (thus the depth of the tree) and the statistical error they induce (thus the statistical error of the tree), and was initially in-\n∗. Equal contribution.\nar X\niv :1\n60 5.\n05 22\n3v 1\n[ cs\n.L G\n] 1\ntroduced in Choromanska and Langford (2014) along with the algorithm optimizing it in an online fashion called LOMtree. The algorithm was empirically shown to obtain high-quality trees in logarithmic (in the label complexity) train and test running times, simultaneously outperforming state-of-the-art comparators, yet the objective underlying it is still not-well understood. The main contribution of this work is an extensive theoretical analysis of the properties of this objective, and the algorithm1 optimizing it. And in particular, the analysis includes exploring, via the boosting framework, a relation of this objective to some more standard entropy-based decision tree objectives, i.e. Shannon entropy2, Gini-entropy and its modified version, for which online optimization schemes in the context of multiclass classification were not yet developed.\nThe multiclass classification problem was relatively recently explored in the literature, and there exist only few works addressing the problem. In this work we focus on decision tree-based approaches. Filter tree Beygelzimer et al. (2009b) considers simplified instance of the problem where the tree structure over the labels is assumed given. It is provably consistent and achieves regret bound which depends logarithmically on the number of classes. The conditional probability tree Beygelzimer et al. (2009a) instead learns the tree structure and uses the node splitting criterion which compromises between obtaining balanced split in a tree node and violating the recommendation for the split from the node regressor. The authors also provide regret bounds which scales with the tree depth. Other works, which come with no guarantees, consider splitting the data in every tree node by optimizing efficiency with accuracy constraints allowing fine-grained control of the efficiency-accuracy tradeoff Deng et al. (2011), or by performing clustering Bengio et al. (2010); Madzarov et al. (2009). The splitting criterion (objective function) analyzed in this paper differs from the criteria considered in previous works and comes with much stronger theoretical justification given in Section 2.\nThe main theoretical analysis of this paper is kept in the boosting framework Schapire and Freund (2012) and relies on the assumption of the existence of weak learners in the tree nodes, where the top-down algorithm we study will amplify this weak advantage to build a tree achieving any desired level of accuracy wrt. entropy-based criteria. We add new theoretical results to the theory of boosting for the multiclass classification problem (the multiclass boosting is largely ununderstood, we refer the reader to Mukherjee and Schapire (2013) for comprehensive review), and we show that LOMtree is a boosting algorithm reducing standard entropy-based criteria, where the obtained bounds depend on the strong concativity properties of these criteria. Our work extends two previous works: it significantly adds to the theoretical analysis of Choromanska and Langford (2014), where only Shannon entropy is considered, in which case we also slightly improve their bound, and it extends beyond the boosting analysis of the binary case of Kearns and Mansour (1999). The main theoretical results are presented in Section 3. Numerical experiments (Section 4) and brief discussion (Section 5) conclude the paper.\n1. We do not discuss the algorithm here, we refer the reader to the original paper. 2. Throughout the paper we refer to Shannon entropy as simply entropy."
    }, {
      "heading" : "2. Objective function and its theoretical properties",
      "text" : "In this section we describe the objective function that is of central interest to this paper, and we provide its theoretical properties."
    }, {
      "heading" : "2.1 Objective function",
      "text" : "We receive examples x ∈ X ⊆ Rd, with labels y ∈ {1, 2, . . . , k}. We assume access to a hypothesis class H where each h ∈ H is a binary classifier, h : X 7→ {−1, 1}, and each node in the tree consists of a classifier from H. The classifiers are trained in such a way that hn(x) = 1 (hn denotes the classifier in node n of the tree; for fixed node n we will refer to hn simply as h) means that the example x is sent to the right subtree of node n, while hn(x) = −1 sends x to the left subtree. When we reach a leaf node, we predict according to the label with the highest frequency amongst the examples reaching that leaf.\nNotice that from the perspective of reducing the computational complexity, we want to encourage the number of examples going to the left and right to be balanced. Furthermore, for maintaining good statistical accuracy, we want to send examples of class i almost exclusively to either the left or the right subtree. A measure of whether the examples of each class reaching the node are then mostly sent to its one child node (pure split) or otherwise to both children (impure split) is referred to as the purity of a tree node. These two criteria, purity and balancedness, were discussed in Choromanska and Langford (2014). This work also proposes an objective (convex) expressing both criteria, and thus measuring the quality of a hypothesis h ∈ H in creating partitions at a fixed node n in the tree. The objective is given as follows\nJ(h) = 2 k∑ i=1 πi |P (h(x) > 0)− P (h(x) > 0|i)| , (1)\nwhere πi denotes the proportion of label i amongst the examples reaching this node, P (h(x) > 0) and P (h(x) > 0|i) denote the fraction of examples reaching n for which h(x) > 0, marginally and conditional on class i respectively. It was shown that this objective can be effectively maximized over hypotheses h ∈ H, giving high-quality partitions, in an online fashion (recall that it remains unclear how to online optimize some of the more standard decision tree objectives such as entropy-based objectives). Despite that, this objective and its properties (including the relation to the more standard entropy-based objectives) remain not fully understood. Its exhaustive analysis is instead provided in this paper."
    }, {
      "heading" : "2.2 Theoretical properties of the objective function",
      "text" : "We first define the concept of balancedness and purity of the split which are crucial for providing the theoretical properties of the objective function under consideration in this paper.\nDefinition 1 (Purity and balancedness, Choromanska and Langford (2014)) The hypothesis h ∈ H induces a pure split if\nα := k∑ i=1 πi min(P (h(x) > 0|i), P (h(x) < 0|i)) ≤ δ,\nwhere δ ∈ [0, 0.5), and α is called the purity factor. The hypothesis h ∈ H induces a balanced split if\nc ≤ P (h(x) > 0)︸ ︷︷ ︸ =β ≤ 1− c,\nwhere c ∈ (0, 0.5], and β is called the balancing factor.\nA partition is called maximally pure if α = 0 (each class is sent exclusively to the left or to the right). A partition is called maximally balanced if β = 0.5 (equal number of examples are sent to the left and to the right).\nNext we show the first theoretical property of the objective function J(h). Lemma 2 contains a stronger statement than the one in the original paper Choromanska and Langford (2014) (Lemma 2).\nLemma 2 For any hypothesis h : X 7→ {−1, 1}, the objective J(h) satisfies J(h) ∈ [0, 1]. Furthermore, h induces a maximally pure and balanced partition iff J(h) = 1.\nLemma 2 characterizes the behavior of the objective J(h) at the optimum where J(h) = 1. In practice however we do not expect to have hypotheses producing maximally pure and balanced splits, thus it is of importance to be able to show that larger values of the objective correspond simultaneously to more pure and more balanced splits. This statement would fully justify why it is desired to maximize J(h). We next focus on showing this property. We start by showing that increasing the value of the objective leads to more balanced splits.\nLemma 3 For any hypothesis h, and any distribution over examples (x, y) the balancing factor β satisfies β ∈ [ 0.5(1− √ 1− J(h)), 0.5(1 + √ 1− J(h)) ] .\nThus the larger (closer to 1) the value of J(h) is, the narrower the interval from Lemma 3 is, leading to more balanced splits (β closer to 0.5).\nThe next lemma, which we borrow from the literature, relates the balancing and purity factor, and it will be used to show that increasing the value of the objective function corresponds not only to more balanced splits, but also to more pure splits.\nLemma 4 (Choromanska and Langford (2014)) For any hypothesis h, and any distribution over examples (x, y), the purity factor α and the balancing factor β satisfy α ≤ min {(2− J(h))/4β − β, 0.5}.\nRecall that Lemma 3 shows that increasing the value of J(h) leads to a more balanced split (β closer to 0.5). From this fact and Lemma 4 it follows that increasing the value of\nJ(h) leads to the upper-bound on α being closer to 0 which also corresponds to a more pure split. Thus maximizing the objective recovers more balanced and more pure splits. Proof [Lemma 2] The proof that J(h) ∈ [0, 1] and that if h induces a maximally pure and balanced partition then J(h) = 1 was done in Choromanska and Langford (2014) (Lemma 2). We therefore prove here the remaining statement in Lemma 2 that if J(h) = 1 then h induces a maximally pure and balanced partition.\nWithout loss of generality assume each πi ∈ (0, 1). Recall that β = P (h(x) > 0), and let Pi = P (h(x) > 0|i). Also recall that β = ∑k i=1 πiPi. Thus J(h) = 2 ∑k i=1 πi ∣∣∣∑kj=1 πjPj − Pi∣∣∣. The objective is certainly maximized in the extremes of the interval [0, 1], where each Pi is either 0 or 1 (also note that at maximum, where J(h) = 1, it cannot be that all Pi’s are 0 or all Pi’s are 1). The function J(h) is differentiable in these extremes (J(h) is nondifferentiable only when ∑k j=1 πjPj = Pi, but at considered extremes the left-hand side of this equality is in (0, 1) whereas the right-hand side is either 0 or 1). We then write\nJ(h) = 2 ∑ i∈P πi  k∑ j=1 πjPj − Pi + 2∑ i∈N πi Pi − k∑ j=1 πjPj  , where P = {i : ∑k j=1 πjPj ≥ Pi} and N = {i :\n∑k j=1 πjPj < Pi}. Also let P+ = {i :∑k\nj=1 πjPj > Pi} (clearly ∑ i∈P+ πi 6= 1 and ∑\ni∈N πi 6= 1 in the extremes of the interval [0, 1] where J(h) is maximized). We then can compute the derivatives of J(h) with respect\nto Pr, where r = {1, 2, . . . , k}, everywhere where the function is differentiable as follows\n∂J\n∂Pr =\n{ 2πr( ∑ i∈P+ πi − 1) if r ∈ P+\n2πr(1− ∑ i∈N πi) if r ∈ N ,\nand note that in the extremes of the interval [0, 1] where J(h) is maximized ∂J∂Pr 6= 0, since∑ i∈P+ πi 6= 1, ∑ i∈N πi 6= 1, and each πi ∈ (0, 1). Since J(h) is convex, and by the fact that in particular the derivative of J(h) with respect to any Pr cannot be 0 in the extremes of the interval [0, 1] where J(h) is maximized, it follows that the J(h) can only be maximized (J(h) = 1) at the extremes of the [0, 1] interval. Thus we already proved that if J(h) = 1 then h induces a maximally pure partition. We are left with showing that if J(h) = 1 then h induces also a maximally balanced partition. We prove it by contradiction. Assume β 6= 0.5. Denote as before I0 = {i : P (h(x) > 0|i) = 0} and I1 = {i : P (h(x) > 0|i) = 1}. Recall β = ∑k i=1 πiPi = ∑ i∈I0 πi · 0 + ∑ i∈I1 πi · 1 = ∑ i∈I1 πi. Thus\nJ(h) = 1 = 2 ∑ i∈I0 πi |β|+ 2 ∑ i∈I1 πi |β − 1| = 2β ∑ i∈I0 πi + 2(1− β) ∑ i∈I1 πi\n= 2β(1− ∑ i∈I1 πi) + 2(1−β) ∑ i∈I1 πi = 2β(1−β) + 2(1−β)β = −4β2 + 4β < 1,\nwhere the last inequality comes from the fact that the quadratic form −4β2 +4β is equal to 1 only when β = 0.5, and otherwise it is smaller than 1. Thus we obtain the contradiction which ends the proof.\nProof [Lemma 3] As before we use the following notation: β = P (h(x) > 0), and Pi = P (h(x) > 0|i). Also let P = {i : β ≥ Pi} and N = {i : β < Pi}. Recall that β =∑ i∈{P∪N} πiPi, and ∑ i∈{P∪N} πi = 1. We split the proof into two cases.\n• Let ∑\ni∈P πi ≤ 1− β. Then\nJ(h) = 2 k∑ i=1 πi |β − Pi| = 2 ∑ i∈P πi(β − Pi) + 2 ∑ i∈N πi(Pi − β)\n= 2 ∑ i∈P πiβ − 2 ∑ i∈P πiPi + 2(β − ∑ i∈P πiPi)− 2β(1− ∑ i∈P πi)\n= 4β ∑ i∈P πi − 4 ∑ i∈P πiPi ≤ 4β ∑ i∈P πi ≤ 4β(1− β)\nThus −4β2 + 4β − J(h) ≥ 0 which, when solved, yields the lemma. • Let ∑ i∈P πi ≥ 1− β (thus ∑ i∈N πi ≤ β). Note that J(h) can be written as\nJ(h) = 2 k∑ i=1 πi |P (h(x) ≤ 0)− P (h(x) ≤ 0|i)| ,\nsince P (h(x) ≤ 0) = 1 − P (h(x) > 0) and P (h(x) ≤ 0|i) = 1 − P (h(x) > 0|i). Let β\n′ = P (h(x) ≤ 0) = 1 − β, and P ′i = P (h(x) ≤ 0|i) = 1 − Pi. Note that\nP = {i : β ≥ Pi} = {i : β ′ < P ′ i } and N = {i : β < Pi} = {i : β ′ ≥ P ′i }. Also note that β ′ = ∑\ni∈{P∪N} πiP ′ i . Thus\nJ(h) = 2 k∑ i=1 πi ∣∣∣β′ − P ′i ∣∣∣ = 2∑ i∈P πi(P ′ i − β ′ ) + 2 ∑ i∈N πi(β ′ − P ′i )\n= 2(β ′ − ∑ i∈N πiP ′ i )− 2β ′ (1− ∑ i∈N πi) + 2 ∑ i∈N πiβ ′ − 2 ∑ i∈N πiP ′ i\n= 4β ′∑ i∈N πi − 4 ∑ i∈N πiP ′ i ≤ 4β ′∑ i∈N πi = 4(1− β) ∑ i∈N πi ≤ 4β(1− β)\nThus as before we obtain −4β2+4β−J(h) ≥ 0 which, when solved, yields the lemma.\nWe next consider the quality of the entire tree as we add more nodes. We aim to maximize the objective function in each node we split. In the next section we show that optimizing the objective J(h) leads to the reduction of the more standard decision tree entropy-based objectives. We consider three different objectives in this paper. We focus on the boosting framework, where the analysis depends on the weak learning assumption. Three different entropy-based criteria lead to three different theoretical statements, where we bound the number of splits required to reduce the value of the criterion below given level. The bounds we obtain, and their dependence on k, critically depend on the strong concativity properties of the considered entropy-based criteria. In our analysis we use elements of the proof techniques from Kearns and Mansour (1999) (the proof of Theorem 10) and Choromanska and Langford (2014) (the proof of Theorem 1). We show all the steps for completeness as we make modifications compared to these works."
    }, {
      "heading" : "3. Main theoretical results",
      "text" : "We begin from explaining the notation. Let T denote the tree under consideration. πl,i’s denote the probabilities that a randomly chosen data point x drawn from P, where P is a fixed target distribution over X , has label i given that x reaches node l (note that∑k\ni=1 πl,i = 1), L denotes the set of all tree leaves, t denotes the number of internal tree nodes, and wl is the weight of leaf l defined as the probability a randomly chosen x drawn from P reaches leaf l (note that ∑ l∈Lwl = 1). We study a tree construction algorithm where we recursively find the leaf node with the highest weight, and choose to split it into two children. Consider the tree constructed over t steps where in each step we take one leaf node and split it into two (t = 1 corresponds to splitting the root, thus the tree consists of one node (root) and its two children (leaves) in this step). Let n be the heaviest node at time t and its weight wn be denoted by w for brevity. We measure the quality of the tree at any given time t using three different entropy-based criteria:\n• The entropy function Get : Get = ∑ l∈Lwl ∑k i=1 πl,i ln ( 1 πl,i ) • The Gini-entropy function Ggt : G g t = ∑ l∈Lwl ∑k i=1 πl,i(1− πl,i)\n• The modified Gini-entropy Gmt : Gmt = ∑ l∈Lwl ∑k i=1 √ πl,i(C − πl,i),\nwhere C is a constant such that C > 2.\nThese criteria are natural extensions of the criteria used in Kearns and Mansour (1999) in the context of binary classification, to the multiclass classification setting3. We will next present the main results of this paper which will be followed by their proofs. We begin with introducing the weak hypothesis assumption.\nOur theoretical analysis is held in the boosting framework and critically depends on the weak hypothesis assumption, which ensures that the hypothesis class H is rich enough to guarantee ’weakly’ pure and ’weakly’ balanced split in any given node.\nDefinition 5 (Weak Hypothesis Assumption, Choromanska and Langford (2014)) Let m denotes any node of the tree T , and let βm = P (hm(x) > 0) and Pm,i = P (hm(x) > 0|i). Furthermore, let γ ∈ R+ be such that for all m, γ ∈ (0,min(βm, 1 − βm)]. We say that the weak hypothesis assumption is satisfied when for any distribution P over X at each node m of the tree T there exists a hypothesis hm ∈ H such that J(hm)/2 =∑k\ni=1 πm,i|Pm,i − βm| ≥ γ.\nWe next state the three main theoretical results of this paper captured in Theorem 6, 7, and 8. They guarantee that the top-down decision tree algorithm which optimizes J(h), such as the one in Choromanska and Langford (2014), will amplify the weak advantage, captured in the weak learning assumption, to build a tree achieving any desired level of accuracy wrt. entropy-based criteria.\nTheorem 6 Under the Weak Hypothesis Assumption, for any α ∈ [0, 2 ln k], to obtain Get ≤ α it suffices to make\nt ≥ ( 2 ln k\nα\n) 4(1−γ)2 γ2 log2 e ln k\nsplits.4\nTheorem 7 Under the Weak Hypothesis Assumption, for any α ∈ [0, 2 ( 1− 1k ) ], to obtain Ggt ≤ α it suffices to make\nt ≥\n( 2 ( 1− 1k ) α ) 2(1−γ)2 γ2 log2 e (k−1)\nsplits.\n3. Note that there is more than one way of extending the entropy-based criteria from Kearns and Mansour (1999) to the multiclass classification setting, e.g. the modified Gini-entropy could as well be defined as Gmt = ∑ l∈L wl ∑k i=1 √ πl,i(C − πl,i) where C ∈ [1, 2]. This and other extensions will be investigated in\nfuture works. 4. This guarantee is slightly tighter compared to Theorem 1 in Choromanska and Langford (2014).\nTheorem 8 Under the Weak Hypothesis Assumption, for any α ∈ [ √ C − 1, 2 √ kC − 1], to obtain Gmt ≤ α it suffices to make\nt ≥ (\n2 √ kC − 1 α\n) 2(1−γ)2C3 γ2(C−2)2 log2 e k √ kC−1\nsplits.\nClearly, different criteria lead to bounds with different dependence on the number of classes k, where the most advantageous dependence (only logarithmic in k) is obtained for the entropy criterion. This is a consequence of the strong concativity properties of the entropy-based criteria considered in this paper. We next discuss in details the mathematical properties of the entropy-based criteria, which are important to prove the above theorems."
    }, {
      "heading" : "3.1 Properties of the entropy-based criteria",
      "text" : "Each of the presented entropy-based criteria has a number of useful properties that we give next with their proofs.\nBounds on the entropy-based criteria We first give bounds on the values of the entropy-based functions.\nLemma 9 The entropy function Get at time t is bounded as\n0 ≤ Get ≤ (t+ 1)w ln k.\nProof The lower-bound follows from the fact that the entropy of each leaf ∑k i=1 πl,i ln ( 1 πl,i ) is non-negative. We next prove the upper-bound. Note that\nGet = ∑ l∈L wl k∑ i=1 πl,i ln ( 1 πl,i ) ≤ ∑ l∈L wl ln k ≤ w ln k ∑ l∈L 1 = (t+ 1)w ln k,\nwhere the first inequality comes from the fact that uniform distribution maximizes the entropy, and the last equality comes from the fact that a tree with t internal nodes has t+1 leaves (also recall that w is the weight of the heaviest node in the tree at time t which is what we will also use in the next lemmas).\nBefore proceeding to the Gini-entropy criterion we first introduce the helpful result captured in Lemma 10 and Corollary 11.\nLemma 10 (The inequality between Euclidean and arithmetic mean) Let x1, x2, . . . , xk be a set of non-negative numbers. Then Euclidean mean upper-bounds the arithmetic mean\nas follows\n√∑k i=1 x 2 i\nk ≥ ∑k i=1 xi k .\nCorollary 11 Let {x1, x2, . . . , xk} be a set of non-negative numbers. Then ∑k i=1 x 2 i ≥ 1 k (∑k i=1 xi )2 .\nProof By Lemma 10 we have\n√∑k i=1 x 2 i\nk ≥ ∑k i=1 xi k ⇔ ∑k i=1 x 2 i ≥ 1k (∑k i=1 xi )2 .\nWe next proceed to the Gini-entropy.\nLemma 12 The Gini-entropy function Ggt at time t is bounded as\n0 ≤ Ggt ≤ (t+ 1)w (\n1− 1 k\n) .\nProof The lower-bound is straightforward since all πl,i’s are non-negative. The upperbound can be shown as follows (the last inequality results from Corollary 11):\nGgt = ∑ l∈L wl k∑ i=1 πl,i(1− πl,i) ≤ w ∑ l∈L k∑ i=1 (πl,i − π2l,i) = w ∑ l∈L\n( 1−\nk∑ i=1 π2l,i\n)\n≤ w ∑ l∈L 1− 1 k ( k∑ i=1 πl,i )2 = w∑ l∈L ( 1− 1 k ) = (t+ 1)w ( 1− 1 k ) ,\nLemma 13 The modified Gini-entropy function Gmt at time t is bounded as\n√ C − 1 ≤ Gmt ≤ (t+ 1)w √ kC − 1.\nProof The lower-bound can be shown as follows. Recall that the function∑k i=1 √ πl,i(C − πl,i) is concave and therefore it is certainly minimized on the extremes of the [0, 1] interval, meaning where each πl,i is either 0 or 1. Let I0 = {i : πl,i = 0} and let I1 = {i : πl,i = 1}. Thus ∑k i=1 √ πl,i(C − πl,i) = ∑ i∈I1 √ C − 1 ≥ √ C − 1. Combining\nthis result with the fact that ∑\nl∈Lwl = 1 gives the lower-bound. We next prove the upper-bound. Recall that from Lemma 10 it follows that\n∑k i=1 √ πl,i(C − πl,i) k ≤ √∑k i=1 πl,i(C − πl,i) k , thus\nGmt = ∑ l∈L wl k∑ i=1 √ πl,i(C − πl,i) ≤ ∑ l∈L wl √√√√k k∑ i=1 πl,i(C − πl,i)\n= ∑ l∈L wl √√√√k(C − k∑ i=1 π2l,i ) = ∑ l∈L wl √√√√kC − k2 k∑ i=1 1 k π2l,i\nBy Jensen’s inequlity ∑k\ni=1 1 kπ 2 l,i ≥ ( ∑k i=1 1 kπl,i) 2 = 1 k2 . Thus\nGmt ≤ ∑ l∈L wl √ kC − 1 ≤ (t+ 1)w √ kC − 1\nSo far we have been focusing on the time step t, where n was the heaviest node and it had weight w. Consider splitting this leaf to two children n0 and n1. For the ease of notation let w0 = wn0 and w1 = wn1 , β = P (hn(x) > 0) and Pi = P (hn(x) > 0|i), and furthermore let πi and h be the shorthands for πn,i and hn respectively. Recall that\nβ = ∑k i=1 πiPi and ∑k\ni=1 πi = 1. Notice that w0 = w(1 − β) and w1 = wβ. Let π be the k-element vector with ith entry equal to πi. Finally, let G̃ e(π) = ∑k i=1 πi ln ( 1 πi ) ,\nG̃g(π) = ∑k i=1 πi(1−πi), and G̃m(π) = ∑k i=1 √ πi(1− πi). Before the split the contribution of node n to resp. Get , G g t , and G m t was resp. wG̃ e(π), wG̃g(π), and wG̃m(π). Note that πn0,i = πi(1−Pi) 1−β and πn1,i = πiPi β are the probabilities that a randomly chosen x drawn from P has label i given that x reaches nodes n0 and n1 respectively. For brevity, let πn0,i and πn1,i be denoted respectively as π0,i and π1,i. Let π0 be the k-element vector with i th entry equal to π0,i and let π1 be the k-element vector with i th entry equal to π1,i. Notice that π = (1 − β)π0 + βπ1. After the split the contribution of the same, now internal, node n changes to resp. w((1 − β)G̃e(π0) + βG̃e(π1)), w((1 − β)G̃g(π0) + βG̃g(π1)), and w((1− β)G̃m(π0) + βG̃m(π1)). We denote the difference between the contribution of node n to the value of the entropy-based objectives in times t and t+ 1 as\n∆et := G e t −Get+1 = w [ G̃e(π)− (1− β)G̃e(π0)− βG̃e(π1) ] . (2)\n∆gt := G g t −G g t+1 = w [ G̃g(π)− (1− β)G̃g(π0)− βG̃g(π1) ] . (3)\n∆mt := G m t −Gmt+1 = w [ G̃m(π)− (1− β)G̃m(π0)− βG̃m(π1) ] . (4)\nStrong concativity properties of the entropy-based criteria The next three lemmas, Lemma 14, 16, and 18, describe the strong concativity properties of the entropy, Gini-entropy and modified Gini-entropy which can be used to lower-bound ∆et , ∆ g t , and ∆mt (Equations 2, 3, and 4 corresponds to a gap in the Jensen’s inequality applied to the strongly concave function).\nLemma 14 The entropy function G̃e is strongly concave with respect to l1-norm with modulus 1, and thus the following holds\nG̃e(π)− (1− β)G̃e(π0)− βG̃e(π1) ≥ 1\n2 β(1− β)‖π0 − π1‖21.\nProof Lemma 14 is proven in Shalev-Shwartz (2012) (Example 2.5).\nWe introduce one more lemma and then proceed with Gini-entropy.\nLemma 15 (Shalev-Shwartz (2007)(Lemma 14)) If the function Φ(π) is twice differentiable, then the sufficient condition for strong concativity of Φ is that for all π, x,〈 ∇2Φ(π)x,x 〉 ≤ −σ‖x‖2, where ∇2Φ(π) is the Hessian matrix of Φ at π, and σ > 0 is the strong concativity modulus.\nLemma 16 The Gini-entropy function G̃g is strongly concave with respect to l2-norm with modulus 2, and thus the following holds\nG̃g(π)− (1− β)G̃g(π0)− βG̃g(π1) ≥ β(1− β)‖π0 − π1‖22.\nProof Note that 〈 ∇2G̃g(π)x,x 〉 ≤ −2‖x‖22, and apply Lemma 15.\nBefore showing the strong concativity guarantee for the modified Gini-entropy, we first show the statement that will be useful to prove the lemma.\nLemma 17 (Zhukovskiy (2003), Remark 2.2.4.) The sum of strongly concave functions on Rn with modulus σ is strongly concave with the same modulus.\nLemma 18 The modified Gini-entropy function G̃m is strongly concave with respect to l2norm with modulus 2(C−2) 2\nC3 , and thus the following holds\nG̃m(π)− (1− β)G̃m(π0)− βG̃m(π1) ≥ (C − 2)2\nC3 β(1− β)‖π0 − π1‖22.\nProof Consider functions g(πi) = √ f(πi), where f(πi) = πi(C−πi), C ≥ 2, and πi ∈ [0, 1]. Also let h(x) = √ x, where x ∈ [0, C24 ]. It is easy to see, using Lemma 15, that function f is strongly concave with respect to l2-norm with modulus 2, thus\nf(θπ ′ i + (1− θ)π ′′ i ) ≥ θf(π ′ i) + (1− θ)f(π ′′ i ) + θ(1− θ)‖π ′ i − π ′′ i ‖22, (5)\nwhere π ′ i, π ′′ i ∈ [0, 1] and θ ∈ [0, 1]. Also note that h is strongly concave with modulus 2C3 in its domain [0, C 2\n4 ] (the second derivative of h is h ′′ (x) = − 1 4 √ x3 ≤ − 2C3 ). The strong\nconcativity of h implies that√ θx1 + (1− θ)x2 ≥ θ √ x1 + (1− θ) √ x2 + 1\nC3 θ(1− θ)‖x1 − x2‖22,\nwhere x1, x2 ∈ [0, C 2 4 ]. Let x1 = f(π ′ i) and x2 = f(π ′′ i ). Then we obtain√\nθf(π ′ i) + (1− θ)f(π ′′ i ) ≥ θ\n√ f(π\n′ i) + (1− θ)\n√ f(π\n′′ i ) +\n1\nC3 θ(1− θ)‖f(π′i)− f(π ′′ i )‖22. (6)\nNote that√ f(θπ\n′ i + (1− θ)π ′′ i ) ≥\n√ f(θπ\n′ i + (1− θ)π ′′ i )− θ(1− θ)‖π ′ i − π ′′ i ‖22 ≥ √ θf(π\n′ i) + (1− θ)f(π ′′ i ) ≥ θ √ f(π\n′ i) + (1− θ)\n√ f(π\n′′ i ) +\n1\nC3 θ(1− θ)‖f(π′i)− f(π ′′ i )‖22,\n2 ∗ C − 1−√\nC − 1) = (\n√\nπ1(C − π1) +\n√\n(1− π1)(C − 1 + π1) −\n√\nC − 1)/(\n√\n2 ∗ C − 1 −√\nC − 1) (functions G̃e(π1), G̃g(π1), and G̃m(π1) were re-scaled to have values in [0, 1]) as a function of π1 (pi1). Figure is recommended to be read in color.\nwhere the second inequality results from Equation 5 and the last (third) inequality results from Equation 6. Finally note that the first derivative of f is f ′ (πi) = C − 2πi ∈ [C − 2, C] thus |f(π′i)− f(π ′′ i )|\n|π′i − π ′′ i |\n≥ C − 2⇔ ‖f(π′i)− f(π ′′ i )‖2 ≥ (C − 2)2‖π ′ i − π ′′ i ‖2,\nand combining this result with previous statement yields√ f(θπ\n′ i + (1− θ)π ′′ i ) ≥ θ\n√ f(π\n′ i) + (1− θ)\n√ f(π\n′′ i ) +\n(C − 2)2\nC3 θ(1− θ)‖π′i − π ′′ i ‖2,\nthus g(πi) is strongly concave with modulus 2(C−2)2 C3 . By Lemma 17, G̃\nm(π) is also strongly concave with the same modulus."
    }, {
      "heading" : "3.2 Proof of the main theorems",
      "text" : "We finally proceed to proving all three theorems. We first introduce some mathematical tools that will be used in the following proofs. The next two lemma are fundamental. The first one relates l1-norm and l2-norm and the second one is a simple property of the exponential function. Lemma 19 Let x ∈ Rk then ‖x‖1 ≤ √ k‖x‖2.\nLemma 20 For x ≥ 1 the following holds ( 1− 1x )x ≤ 1e .\nWe next proceed to proving Theorem 6, 7, and 8. Proof For the entropy it follows from Equation 2 and Lemma 14 that\n∆et ≥ 1\n2 wβ(1− β)‖π0 − π1‖21 =\n1\n2\nw\nβ(1− β) ( k∑ i=1 |πi(Pi − β)| )2 = wJ(h)2 8β(1− β)\n≥ J(h) 2Get 8β(1− β)(t+ 1) ln k ≥ γ 2Get 2(1− γ)2(t+ 1) ln k , (7)\nwhere the last inequality comes from the fact that 1− γ ≥ β ≥ γ (see the definition of γ in the weak hypothesis assumption) and J(h) ≥ 2γ (see weak hypothesis assumption). For the Gini-entropy criterion notice that from Equation 3, Lemma 16 and Lemma 19, it follows that\n∆gt ≥ wβ(1−β)‖π0−π1‖22 ≥ 1\nk wβ(1−β)‖π0−π1‖21 ≥ γ2Ggt (1−γ)2(t+1)(k−1) , (8)\nwhere the last inequality is obtained similarly as the last inequality in Equation 7. And finally for the modified Gini-entropy it follows from Equation 4, Lemma 18 and Lemma 19 that\n∆mt ≥ w (C − 2)2\nC3 β(1− β)‖π0 − π1‖22 ≥\n1 k w\n(C − 2)2\nC3 β(1− β)‖π0 − π1‖21\n≥ γ 2Gmt\nC3 (C−2)2 (1− γ)2(t+ 1)k\n√ kC − 1 , (9)\nwhere the last inequality is obtained as before. Clearly the larger the objective J(h) is at time t, the larger the entropy reduction ends up being, which confirms the plausibility of the approach in Choromanska and Langford (2014) where the goal is to maximize J(h). Let\nηe = 2 √ 2γ\n(1− γ) √ ln k , ηg =\n4γ\n(1− γ) √ k − 1\n, ηm = 4γ (1− γ) √\nC3 (C−2)2k\n√ kC − 1 . (10)\nFor simplicity of notation assume ∆t corresponds to either ∆ e t , or ∆ g t , or ∆ m t , and Gt stands for Get , or G g t , or G m t . Thus ∆t > η2Gt 16(t+1) , and we obtain the recurrence inequality\nGt+1 ≤ Gt −∆t < Gt − η2Gt\n16(t+ 1) = Gt\n( 1− η 2\n16(t+ 1) ) One can now compute the minimum number of splits required to reduce Gt below α, where α ∈ [0, 1]. Assume log2(t+ 1) ∈ Z+.\nGt+1 ≤ Gt ( 1− η 2\n16(t+ 1)\n) = G1 ( 1− η 2\n16 · 2\n)( 1− η 2\n16 · 3\n) . . . ( 1− η 2\n16 · (t+ 1)\n)\n= G1\n( 1− η 2\n16 · 2 ) 4∏ t′=3 ( 1− η 2 16 · t′ ) . . . 2r∏ t′=(2r/2)+1 ( 1− η 2 16 · t′ ) . . . 2log2(t+1)∏ t′=(2log2(t+1)/2)+1 ( 1− η 2 16 · t′ ) ,\nwhere r = {2, 3, . . . , log2(t+ 1)}. Recall that\n2r∏ t′=(2r/2)+1 ( 1− η 2 16 · t′ ) ≤ 2r∏ t′=(2r/2)+1 ( 1− η 2 16 · 2r ) = ( 1− η 2 16 · 2r )2r/2 ≤ e−η2/32,\nwhere the last step follows from Lemma 20. Also note that by the same lemma ( 1− η 2\n16·2\n) ≤\ne−η 2/32. Thus\nGt+1 ≤ G1e−η 2 log2(t+1)/32. (11)\nTherefore to reduce Gt+1 ≤ α (where α’s are defined in Theorems 6, 7, and 8) it suffices to make t+1 splits such that log2(t+1) ≥ ln ( G1 α ) 32 η2 splits. Since log2(t+1) = ln(t+1)·log2(e), where e = exp(1). Thus\nln(t+ 1) ≥ ln ( G1 α ) 32 η2 log2(e) ⇔ t+ 1 ≥ ( G1 α ) 32 η2 log2(e) . (12)\nRecall that by resp. Lemma 9, 12, and 13 we have resp. Ge1 ≤ 2 ln k, G g 1 ≤ 2(1 − 1k ),\nGg1 ≤ 2 √ kC − 1. We consider the worst case setting (giving the largest possible number of split) thus we assume Ge1 = 2 ln k, G g 1 = 2(1 − 1k ), and G g 1 ≤ 2 √ kC − 1. Combining that with Equation 10 and Equation 12 yields statements of the main theorems."
    }, {
      "heading" : "4. Numerical experiments",
      "text" : "We run LOMtree algorithm, which is implemented in the open source learning system Vowpal Wabbit Langford et al. (2007), on four benchmark multiclass datasets: Mnist (10 classes, downloaded from http://yann.lecun.com/exdb/mnist/), Isolet (26 classes, downloaded from http://www.cs.huji.ac.il/~shais/datasets/ClassificationDatasets.html), Sector (105 classes, downloaded from http://www.csie.ntu.edu.tw/~cjlin/libsvmtools/ datasets/multiclass.html), and Aloi (1000 classes, downloaded from http://www.csie. ntu.edu.tw/~cjlin/libsvmtools/datasets/multiclass.html). The datasets were divided into training (90%) and testing (10%), where 10% of the training dataset was used as a validation set. The regressors in the tree nodes are linear and were trained by SGD Bottou (1998) with 20 epochs and the learning rate chosen from the set {0.25, 0.5, 0.75, 1, 2, 4, 8}. We investigated different swap resistances5 chosen from the set {4, 8, 16, 32, 64, 128, 256}. We selected the learning rate and the swap resistance as the one minimizing the validation error, where the number of splits in all experiments were set to 10k.\nFigure 3 shows the entropy, Gini-entropy, modified Gini-entropy, and the error, all normalized to the interval [0, 1], as the function of the number of splits. The behavior of the entropy and Gini-entropy match the theoretical findings. However, the modified Ginientropy instead drops the fastest with the number of splits, which in particular suggests that in this case perhaps tighter bounds could possibly be proved (for the binary case tighter analysis was shown in Kearns and Mansour (1999), but it is highly non-trivial to generalize\n5. see Choromanska and Langford (2014) for details\nthis analysis to the multiclass classification setting). Furthermore, it can be observed that the behavior of the error closely mimics the behavior of the Gini-entropy."
    }, {
      "heading" : "5. Conclusions",
      "text" : "This paper focuses on the properties of the recently proposed LOMtree algorithm. We provide an exhaustive theoretical analysis of the objective function underlying the algorithm. We show a unified framework for analyzing the boosting ability of the algorithm by exploring the connection of its objective to entropy-based criteria, such as entropy, Gini-entropy and its modified version. We show that the strong concativity properties of these criteria have critical impact on the character of the obtained bounds. The experiments suggest that perhaps tighter bound is possible in particular for the modified version of the Gini-entropy."
    } ],
    "references" : [ {
      "title" : "Label embedding trees for large multi-class tasks",
      "author" : [ "S. Bengio", "J. Weston", "D. Grangier" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Bengio et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Bengio et al\\.",
      "year" : 2010
    }, {
      "title" : "Conditional probability tree estimation analysis and algorithms",
      "author" : [ "A. Beygelzimer", "J. Langford", "Y. Lifshits", "G.B. Sorkin", "A.L. Strehl" ],
      "venue" : "In UAI,",
      "citeRegEx" : "Beygelzimer et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Beygelzimer et al\\.",
      "year" : 2009
    }, {
      "title" : "Error-correcting tournaments",
      "author" : [ "A. Beygelzimer", "J. Langford", "P.D. Ravikumar" ],
      "venue" : "In ALT,",
      "citeRegEx" : "Beygelzimer et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Beygelzimer et al\\.",
      "year" : 2009
    }, {
      "title" : "Online algorithms and stochastic approximations. In Online Learning and Neural Networks",
      "author" : [ "L. Bottou" ],
      "venue" : null,
      "citeRegEx" : "Bottou.,? \\Q1998\\E",
      "shortCiteRegEx" : "Bottou.",
      "year" : 1998
    }, {
      "title" : "Logarithmic time online multiclass prediction",
      "author" : [ "Anna Choromanska", "John Langford" ],
      "venue" : "CoRR, abs/1406.1822,",
      "citeRegEx" : "Choromanska and Langford.,? \\Q2014\\E",
      "shortCiteRegEx" : "Choromanska and Langford.",
      "year" : 2014
    }, {
      "title" : "Fast and balanced: Efficient label tree learning for large scale object recognition",
      "author" : [ "J. Deng", "S. Satheesh", "A.C. Berg", "L. Fei-Fei" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Deng et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Deng et al\\.",
      "year" : 2011
    }, {
      "title" : "On the boosting ability of top-down decision tree learning algorithms",
      "author" : [ "M. Kearns", "Y. Mansour" ],
      "venue" : "Journal of Computer and Systems Sciences,",
      "citeRegEx" : "Kearns and Mansour.,? \\Q1996\\E",
      "shortCiteRegEx" : "Kearns and Mansour.",
      "year" : 1996
    }, {
      "title" : "A multi-class svm classifier utilizing binary decision",
      "author" : [ "G. Madzarov", "D. Gjorgjevikj", "I. Chorbev" ],
      "venue" : "tree. Informatica,",
      "citeRegEx" : "Madzarov et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Madzarov et al\\.",
      "year" : 2009
    }, {
      "title" : "A theory of multiclass boosting",
      "author" : [ "I. Mukherjee", "R.E. Schapire" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Mukherjee and Schapire.,? \\Q2013\\E",
      "shortCiteRegEx" : "Mukherjee and Schapire.",
      "year" : 2013
    }, {
      "title" : "In defense of one-vs-all classification",
      "author" : [ "R. Rifkin", "A. Klautau" ],
      "venue" : "J. Mach. Learn. Res.,",
      "citeRegEx" : "Rifkin and Klautau.,? \\Q2004\\E",
      "shortCiteRegEx" : "Rifkin and Klautau.",
      "year" : 2004
    }, {
      "title" : "Boosting: Foundations and Algorithms",
      "author" : [ "R.E. Schapire", "Y. Freund" ],
      "venue" : null,
      "citeRegEx" : "Schapire and Freund.,? \\Q2012\\E",
      "shortCiteRegEx" : "Schapire and Freund.",
      "year" : 2012
    }, {
      "title" : "Online Learning: Theory, Algorithms, and Applications",
      "author" : [ "S. Shalev-Shwartz" ],
      "venue" : "PhD thesis, The Hebrew University of Jerusalem,",
      "citeRegEx" : "Shalev.Shwartz.,? \\Q2007\\E",
      "shortCiteRegEx" : "Shalev.Shwartz.",
      "year" : 2007
    }, {
      "title" : "Online learning and online convex optimization",
      "author" : [ "S. Shalev-Shwartz" ],
      "venue" : "Found. Trends Mach. Learn.,",
      "citeRegEx" : "Shalev.Shwartz.,? \\Q2012\\E",
      "shortCiteRegEx" : "Shalev.Shwartz.",
      "year" : 2012
    }, {
      "title" : "Lyapunov Functions in Differential Games. Stability and Control: Theory, Methods and Applications",
      "author" : [ "V.I. Zhukovskiy" ],
      "venue" : "Taylor & Francis,",
      "citeRegEx" : "Zhukovskiy.,? \\Q2003\\E",
      "shortCiteRegEx" : "Zhukovskiy.",
      "year" : 2003
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "Abstract We analyze the performance of the top-down multiclass classification algorithm for decision tree learning called LOMtree, recently proposed in the literature Choromanska and Langford (2014) for solving efficiently classification problems with very large number of classes.",
      "startOffset" : 167,
      "endOffset" : 199
    }, {
      "referenceID" : 9,
      "context" : "Straightforward extensions of the binary approaches to the multiclass setting, such as one-against-all approach Rifkin and Klautau (2004), do not often work in the presence of strict computational constraints.",
      "startOffset" : 112,
      "endOffset" : 138
    }, {
      "referenceID" : 4,
      "context" : "troduced in Choromanska and Langford (2014) along with the algorithm optimizing it in an online fashion called LOMtree.",
      "startOffset" : 12,
      "endOffset" : 44
    }, {
      "referenceID" : 0,
      "context" : "Filter tree Beygelzimer et al. (2009b) considers simplified instance of the problem where the tree structure over the labels is assumed given.",
      "startOffset" : 12,
      "endOffset" : 39
    }, {
      "referenceID" : 0,
      "context" : "Filter tree Beygelzimer et al. (2009b) considers simplified instance of the problem where the tree structure over the labels is assumed given. It is provably consistent and achieves regret bound which depends logarithmically on the number of classes. The conditional probability tree Beygelzimer et al. (2009a) instead learns the tree structure and uses the node splitting criterion which compromises between obtaining balanced split in a tree node and violating the recommendation for the split from the node regressor.",
      "startOffset" : 12,
      "endOffset" : 311
    }, {
      "referenceID" : 0,
      "context" : "Filter tree Beygelzimer et al. (2009b) considers simplified instance of the problem where the tree structure over the labels is assumed given. It is provably consistent and achieves regret bound which depends logarithmically on the number of classes. The conditional probability tree Beygelzimer et al. (2009a) instead learns the tree structure and uses the node splitting criterion which compromises between obtaining balanced split in a tree node and violating the recommendation for the split from the node regressor. The authors also provide regret bounds which scales with the tree depth. Other works, which come with no guarantees, consider splitting the data in every tree node by optimizing efficiency with accuracy constraints allowing fine-grained control of the efficiency-accuracy tradeoff Deng et al. (2011), or by performing clustering Bengio et al.",
      "startOffset" : 12,
      "endOffset" : 821
    }, {
      "referenceID" : 0,
      "context" : "(2011), or by performing clustering Bengio et al. (2010); Madzarov et al.",
      "startOffset" : 36,
      "endOffset" : 57
    }, {
      "referenceID" : 0,
      "context" : "(2011), or by performing clustering Bengio et al. (2010); Madzarov et al. (2009). The splitting criterion (objective function) analyzed in this paper differs from the criteria considered in previous works and comes with much stronger theoretical justification given in Section 2.",
      "startOffset" : 36,
      "endOffset" : 81
    }, {
      "referenceID" : 7,
      "context" : "The main theoretical analysis of this paper is kept in the boosting framework Schapire and Freund (2012) and relies on the assumption of the existence of weak learners in the tree nodes, where the top-down algorithm we study will amplify this weak advantage to build a tree achieving any desired level of accuracy wrt.",
      "startOffset" : 78,
      "endOffset" : 105
    }, {
      "referenceID" : 6,
      "context" : "We add new theoretical results to the theory of boosting for the multiclass classification problem (the multiclass boosting is largely ununderstood, we refer the reader to Mukherjee and Schapire (2013) for comprehensive review), and we show that LOMtree is a boosting algorithm reducing standard entropy-based criteria, where the obtained bounds depend on the strong concativity properties of these criteria.",
      "startOffset" : 172,
      "endOffset" : 202
    }, {
      "referenceID" : 4,
      "context" : "Our work extends two previous works: it significantly adds to the theoretical analysis of Choromanska and Langford (2014), where only Shannon entropy is considered, in which case we also slightly improve their bound, and it extends beyond the boosting analysis of the binary case of Kearns and Mansour (1999).",
      "startOffset" : 90,
      "endOffset" : 122
    }, {
      "referenceID" : 4,
      "context" : "Our work extends two previous works: it significantly adds to the theoretical analysis of Choromanska and Langford (2014), where only Shannon entropy is considered, in which case we also slightly improve their bound, and it extends beyond the boosting analysis of the binary case of Kearns and Mansour (1999). The main theoretical results are presented in Section 3.",
      "startOffset" : 90,
      "endOffset" : 309
    }, {
      "referenceID" : 4,
      "context" : "These two criteria, purity and balancedness, were discussed in Choromanska and Langford (2014). This work also proposes an objective (convex) expressing both criteria, and thus measuring the quality of a hypothesis h ∈ H in creating partitions at a fixed node n in the tree.",
      "startOffset" : 63,
      "endOffset" : 95
    }, {
      "referenceID" : 4,
      "context" : "Definition 1 (Purity and balancedness, Choromanska and Langford (2014)) The hypothesis h ∈ H induces a pure split if",
      "startOffset" : 39,
      "endOffset" : 71
    }, {
      "referenceID" : 4,
      "context" : "Lemma 2 contains a stronger statement than the one in the original paper Choromanska and Langford (2014) (Lemma 2).",
      "startOffset" : 73,
      "endOffset" : 105
    }, {
      "referenceID" : 4,
      "context" : "Lemma 4 (Choromanska and Langford (2014)) For any hypothesis h, and any distribution over examples (x, y), the purity factor α and the balancing factor β satisfy α ≤ min {(2− J(h))/4β − β, 0.",
      "startOffset" : 9,
      "endOffset" : 41
    }, {
      "referenceID" : 4,
      "context" : "Proof [Lemma 2] The proof that J(h) ∈ [0, 1] and that if h induces a maximally pure and balanced partition then J(h) = 1 was done in Choromanska and Langford (2014) (Lemma 2).",
      "startOffset" : 133,
      "endOffset" : 165
    }, {
      "referenceID" : 5,
      "context" : "In our analysis we use elements of the proof techniques from Kearns and Mansour (1999) (the proof of Theorem 10) and Choromanska and Langford (2014) (the proof of Theorem 1).",
      "startOffset" : 61,
      "endOffset" : 87
    }, {
      "referenceID" : 4,
      "context" : "In our analysis we use elements of the proof techniques from Kearns and Mansour (1999) (the proof of Theorem 10) and Choromanska and Langford (2014) (the proof of Theorem 1).",
      "startOffset" : 117,
      "endOffset" : 149
    }, {
      "referenceID" : 6,
      "context" : "These criteria are natural extensions of the criteria used in Kearns and Mansour (1999) in the context of binary classification, to the multiclass classification setting3.",
      "startOffset" : 62,
      "endOffset" : 88
    }, {
      "referenceID" : 4,
      "context" : "Definition 5 (Weak Hypothesis Assumption, Choromanska and Langford (2014)) Let m denotes any node of the tree T , and let βm = P (hm(x) > 0) and Pm,i = P (hm(x) > 0|i).",
      "startOffset" : 42,
      "endOffset" : 74
    }, {
      "referenceID" : 4,
      "context" : "They guarantee that the top-down decision tree algorithm which optimizes J(h), such as the one in Choromanska and Langford (2014), will amplify the weak advantage, captured in the weak learning assumption, to build a tree achieving any desired level of accuracy wrt.",
      "startOffset" : 98,
      "endOffset" : 130
    }, {
      "referenceID" : 5,
      "context" : "Note that there is more than one way of extending the entropy-based criteria from Kearns and Mansour (1999) to the multiclass classification setting, e.",
      "startOffset" : 82,
      "endOffset" : 108
    }, {
      "referenceID" : 4,
      "context" : "This guarantee is slightly tighter compared to Theorem 1 in Choromanska and Langford (2014).",
      "startOffset" : 60,
      "endOffset" : 92
    }, {
      "referenceID" : 11,
      "context" : "Proof Lemma 14 is proven in Shalev-Shwartz (2012) (Example 2.",
      "startOffset" : 28,
      "endOffset" : 50
    }, {
      "referenceID" : 11,
      "context" : "Lemma 15 (Shalev-Shwartz (2007)(Lemma 14)) If the function Φ(π) is twice differentiable, then the sufficient condition for strong concativity of Φ is that for all π, x, 〈 ∇2Φ(π)x,x 〉 ≤ −σ‖x‖2, where ∇2Φ(π) is the Hessian matrix of Φ at π, and σ > 0 is the strong concativity modulus.",
      "startOffset" : 10,
      "endOffset" : 32
    }, {
      "referenceID" : 13,
      "context" : "Lemma 17 (Zhukovskiy (2003), Remark 2.",
      "startOffset" : 10,
      "endOffset" : 28
    }, {
      "referenceID" : 4,
      "context" : "Clearly the larger the objective J(h) is at time t, the larger the entropy reduction ends up being, which confirms the plausibility of the approach in Choromanska and Langford (2014) where the goal is to maximize J(h).",
      "startOffset" : 151,
      "endOffset" : 183
    }, {
      "referenceID" : 3,
      "context" : "The regressors in the tree nodes are linear and were trained by SGD Bottou (1998) with 20 epochs and the learning rate chosen from the set {0.",
      "startOffset" : 68,
      "endOffset" : 82
    }, {
      "referenceID" : 3,
      "context" : "The regressors in the tree nodes are linear and were trained by SGD Bottou (1998) with 20 epochs and the learning rate chosen from the set {0.25, 0.5, 0.75, 1, 2, 4, 8}. We investigated different swap resistances5 chosen from the set {4, 8, 16, 32, 64, 128, 256}. We selected the learning rate and the swap resistance as the one minimizing the validation error, where the number of splits in all experiments were set to 10k. Figure 3 shows the entropy, Gini-entropy, modified Gini-entropy, and the error, all normalized to the interval [0, 1], as the function of the number of splits. The behavior of the entropy and Gini-entropy match the theoretical findings. However, the modified Ginientropy instead drops the fastest with the number of splits, which in particular suggests that in this case perhaps tighter bounds could possibly be proved (for the binary case tighter analysis was shown in Kearns and Mansour (1999), but it is highly non-trivial to generalize",
      "startOffset" : 68,
      "endOffset" : 921
    }, {
      "referenceID" : 4,
      "context" : "see Choromanska and Langford (2014) for details",
      "startOffset" : 4,
      "endOffset" : 36
    } ],
    "year" : 2016,
    "abstractText" : "We analyze the performance of the top-down multiclass classification algorithm for decision tree learning called LOMtree, recently proposed in the literature Choromanska and Langford (2014) for solving efficiently classification problems with very large number of classes. The algorithm online optimizes the objective function which simultaneously controls the depth of the tree and its statistical accuracy. We prove important properties of this objective and explore its connection to three well-known entropy-based decision tree objectives, i.e. Shannon entropy, Gini-entropy and its modified version, for which instead online optimization schemes were not yet developed. We show, via boosting-type guarantees, that maximizing the considered objective leads also to the reduction of all of these entropy-based objectives. The bounds we obtain critically depend on the strong-concavity properties of the entropy-based criteria, where the mildest dependence on the number of classes (only logarithmic) corresponds to the Shannon entropy.",
    "creator" : "LaTeX with hyperref package"
  }
}