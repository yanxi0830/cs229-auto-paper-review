{
  "name" : "1506.09039.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Scalable Discrete Sampling as a Multi-Armed Bandit Problem",
    "authors" : [ "Yutian Chen", "Zoubin Ghahramani" ],
    "emails" : [ "YUTIAN.CHEN@ENG.CAM.AC.UK", "ZOUBIN@ENG.CAM.AC.UK" ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "Sampling a random variable from a discrete (conditional) distribution is one of the core operations in Monte Carlo methods. It is an ubiquitous and often necessary component for inference algorithms such as Gibbs sampling and particle filtering. Applying discrete sampling for largescale problems has been a challenging task like other Monte Carlo algorithms due to the high computational burden. Various approaches have been proposed to address different dimensions of “large scales”. For example, distributed algorithms have been used to sample a model with a large number of discrete variables (Newman et al., 2009; Bratires et al., 2010; Wu et al., 2011), smart transition kernels were described for Markov chain Monte Carlo (MCMC) algorithms to sample efficiently a single variable\nProceedings of the 33 rd International Conference on Machine Learning, New York, NY, USA, 2016. JMLR: W&CP volume 48. Copyright 2016 by the author(s).\nwith a large or even infinite state space (Li et al., 2014; Kalli et al., 2011). This paper is focused on another dimension of the “large-scales” where the variable to sample has a large degree of statistical dependency.\nConsider a random variable with a finite domain X ∈ X and a distribution in the following form p(X = x) ∝ p̃(X = x), with p̃(X = x) = f0(x) N∏ n=1 fn(x),\n(1)\nwhere fn can be any function of x. Such distribution occurs frequently in machine learning problems. For example, in Bayesian inference for a model with parameter X and N i.i.d. observations D = {yn}Nn=1, the posterior distribution of X depends on all the observations when sufficient statistics is not available. The unnormalized posterior distribution can be written as p̃(X|D) = p(X) ∏N i=1 p(yi|X). In undirected graphical model inference problems where a node Xi appears in N potential functions, the distribution of Xi depends on the value of all of the N functions. The unnormalized conditional distribution is p̃(Xi|x−i) =∏N n=1 φn(Xi,x−i), where x−i denotes the value of all the other nodes in the graph and φn denotes a potential function that includes Xi in the scope. In this paper we study how to sample a discrete random variable X in a manner that is scalable in N .\nA common approach to address the big data problem is divide-and-conquer that uses parallel or distributed computing resources to process data in parallel and then synchronize the results periodically or merely once in the end (Scott et al., 2013; Medlar et al., 2013; Xu et al., 2014).\nAn orthogonal approach has been studied for the Metropolis-Hastings (MH) algorithm in a general state space by running a sampler with subsampled data. This approach can be combined easily with the distributed computing idea for even better scalability (e.g. Ahn et al., 2015).\nMaclaurin & Adams (2015) introduced an MH algorithm\nar X\niv :1\n50 6.\n09 03\n9v 3\n[ st\nat .M\nL ]\n2 7\nA pr\n2 01\nin an augmented state space that could achieve higher efficiency than the standard MH by processing only a subset of active data every iteration while still preserving the correct stationary distribution. But the introduction of auxiliary variables might also slow down the overall mixing rate in the augmented space.\nApproximate MH algorithms have been proposed in the subsampling approach with high scalability. The stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011) and its extensions (Ahn et al., 2012; Chen et al., 2014; Ding et al., 2014) introduced efficient proposal distributions based on subsampled data. Approximate algorithms induce bias in the stationary distribution of the Markov chain. But given a fixed amount of runtime they could reduce the expected error in the Monte Carlo estimate via a proper trade-off between variance and bias by mixing faster w.r.t. the runtime. This is particularly important for large-scale learning problems when the runtime is one of the limiting factors for generalization performance (Bottou & Bousquet, 2008). However, the stochastic gradient MCMC approach usually skips the rejection step in order to obtain sublinear time complexity and the induced bias is very hard to estimate or control.\nAnother line of research on approximate subsampled MH algorithms does not ignore the rejection step but controls the error with an approximate rejection step based on a subset of data (Korattikara et al., 2014; Bardenet et al., 2014). The bias can thus be better controlled (Mitrophanov, 2005; Pillai & Smith, 2014). That idea has also been extended to slice sampling (DuBois et al., 2014) and Gibbs for binary variables (Korattikara et al., 2014).\nIn this paper we follow the last line of research and propose a novel approximate sampling algorithm to improve the scalability of sampling discrete distributions. We first reformulate the problem in Eq. 1 as a Multi-Armed Bandit (MAB) problem with a finite reward population via the Gumbel-Max trick (Papandreou & Yuille, 2011), and then propose three algorithms with theoretical guarantees on the approximation error and an upper bound of N |X | on the sample size. This is to our knowledge the first attempt to address discrete sampling problem with a large number of dependencies and our work will likely contribute to a more complete library of scalable MCMC algorithms. Moreover, the racing algorithm in Sec. 3.3 provides a unified framework for subsampling-based discrete sampling, MH (Korattikara et al., 2014; Bardenet et al., 2014) and slice sampling (DuBois et al., 2014) algorithms as discussed in Sec. 4. We also show in the experiments that our algorithm can be combined straightforwardly with stochastic gradient MCMC to achieve both high efficiency and controlled bias. Lastly, the proposed algorithms also deserve their own interest for MAB problems under this particular setting.\nWe first review an alternative way of drawing discrete variables and build a connection with MABs in Sec. 2, then propose three algorithms in Sec. 3. We discuss related work in Sec. 4 and evaluate the proposed algorithms on both synthetic data and real-world problems of Bayesian inference and graphical model inference in Sec. 5. Particularly, we show how our proposed sampler can be combined conveniently as a building component with other subsampling sampler for a hierarchical Bayesian model. Sec. 6 concludes the paper with a discussion."
    }, {
      "heading" : "2. Approximate Discrete Sampling",
      "text" : ""
    }, {
      "heading" : "2.1. Discrete Sampling as an Optimization Problem",
      "text" : "The common procedure to sample X from a discrete domain X = {1, 2, . . . , D} is to first normalize p̃(X) and compute the CDF F (X = x) = ∑x i=1 p(X = i). Then draw a uniform random variable u ∼ Uniform(0, 1], and find x that satisfies F (x − 1) < u ≤ F (x). This procedure requires computing the sum of all the unnormalized probabilities. For p̃ in the form of Eq. 1 this is O(ND).\nAn alternative procedure is to first draw D i.i.d. samples from the standard Gumbel distribution1 εi ∼ Gumbel(0, 1), and then solve the following optimization problem:\nx = argmax i∈X log p̃(i) + εi. (2)\nIt is shown in Kuzmin & Warmuth (2005) that x follows the distribution p(X). With this method after drawing random variables that do not depend on p̃, we turn a random sampling problem to an optimization problem. While the computational complexity is the same to draw an exact sample, an approximate algorithm may potentially save computations by avoiding computing accurate values of p̃(X = x) when x is considered unlikely to be the maximum as discussed next."
    }, {
      "heading" : "2.2. Approximate Discrete Sampling as a Multi-Armed Bandits Problem",
      "text" : "In a Multi-Armed Bandit (MAB) problem, the i’th bandit is a slot machine with an arm, which when pulled generates an i.i.d. reward li from a distribution associated with that arm with an unknown mean µi. The optimal arm identification problem for MABs (Bechhofer, 1958; Paulson, 1964) in the fixed confidence setting is to find the arm with the highest mean reward with a confidence 1 − δ using as few pulls as possible.\nUnder the assumption of Eq. 1, the solution in Eq. 2 can be\n1The Gumbel distribution is used to model the maximum extreme value distribution. If a random variable Z ∼ Exp(1), then − log(Z) ∼ Gumbel(0, 1). ε can be easily drawn as − log(− log(u)) with u ∼ U[0, 1].\nexpressed as\nx = argmax i∈X N∑ n=1 log fn(i) + log f0(i) + εi\n= argmax i∈X N∑ n=1 ( log fn(i) + 1 N (log f0(i) + εi) ) ︸ ︷︷ ︸\ndef =li,n\n= argmax i∈X\n1\nN N∑ n=1 li,n = argmax i∈X Eli∼Uniform(Li)[li]\ndef = argmax\ni∈X µi (3)\nwhereLi def = {li,1, li,2, . . . , li,N}. After drawingD Gumbel variables εi, we turn the discrete sampling problem into the optimal arm identification problem in MABs where the reward li is uniformly sampled from a finite population Li. An approximate algorithm that solves the problem with a fixed confidence may avoid drawing all the rewards from an obviously sub-optimal arm and save computations. We show the induced bias in the sample distribution as follows with the proof in Appx. A.1.\nProposition 1. If an algorithm solves (2) exactly with a probability at least 1− δ for any value of ε, the total variation between the sample distribution p̂ and the true distribution is bounded by\n‖p̂(X)− p(X)‖TV ≤ δ (4)\nWhen applied in the MCMC framework as a transition kernel, we can apply immediately the theories in Mitrophanov (2005); Pillai & Smith (2014) to show that the approximate Markov chain satisfies uniform ergodicity under regular conditions and the analysis of convergence rate are readily available under various assumptions. So the discrete sampling problem of this paper reduces to finding a good MAB algorithm for Eq. 2 in our problem setting."
    }, {
      "heading" : "3. Algorithms for MABs with a Finite Population and Fixed Confidence",
      "text" : "The key difference of our problem from the regular MABs is that our rewards are generated from a finite population while regular MABs assume i.i.d. rewards. Because one can obtain the exact mean by sampling all the N values li,n for arm i without replacement, a good algorithm should pull no more than N times for each arm regardless of the mean gap between arms. We introduce three algorithms in this section whose sample complexity is upper bounded by O(ND) in the worst case and can be very efficient when the mean gap is large."
    }, {
      "heading" : "3.1. Notations",
      "text" : "The iteration of an algorithm is indexed by t. We denote the entire index set with [N ] = {1, 2, . . . , N}, the sampled set of reward indices up to t’th iteration from arm i with N (t)i ⊆ [N ], and the corresponding number of sampled rewards with T (t)i . We define the estimated mean for i’th arm with µ̂(t)i def = 1 |N (t)i | ∑ n∈N (t)i li,n, the natural variance (biased) estimate with (σ̂(t)i ) 2 def= 1\n|N (t)i | ∑ n∈N (t)i (li,n −\nµ̂ (t) i ) 2, the variance estimate of the mean gap between two arm with (σ̂(t)i,j ) 2 def= 1\n|N (t)i | ∑ n∈N (t)i ((li,n− lj,n)− (µ̂(t)i −\nµ̂ (t) j )) 2 (defined only whenN (t)i = N (t) j ), the bound of the reward value Ci def = maxn,n′{li,n − li,n′}. The subscripts and superscripts may be dropped for notational simplicity when the meaning is clear from the context."
    }, {
      "heading" : "3.2. Adapted lil’UCB",
      "text" : "We first study one of the state-of-the-art algorithms for fixed-confidence optimal arm identification problem and adjust it for the finite population setting. The lil’UCB algorithm (Jamieson et al., 2014) maintains an upper confidence bound (UCB) of µi that is inspired by the law of the iterated logarithm (LIL) for every arm. At each iteration, it draws a single sample from the arm with the highest bound and updates it. The algorithm terminates when some arm is sampled much more often than all the other arms. We refer readers to Fig. 1 of Jamieson et al. (2014) for details. The time complexity for t iterations is O(log(D)t). It was shown in Jamieson et al. (2014) that lil’UCB achieved the optimal sample complexity up to constants.\nHowever, lil’UCB requires i.i.d. rewards for each arm i, that is, sampled with replacement from Li. Therefore, the total number of samples t is unbounded and could be ND when the means are close to each other. We adapt lil’UCB for our problem with the following modifications:\n1. Samples li,n without replacement for each arm but keep different arms independent.\n2. When T (t)i = N for some arm i, the estimate µ̂ (t) i\nbecomes exact. So set its UCB to µ̂(t)i .\n3. The algorithm terminates either with the original stopping criterion or when the arm with the highest upper bound has an exact mean estimate, whichever comes first.\nThe adapted algorithm satisfies all the theoretical guarantees in Thm. 2 of Jamieson et al. (2014) with additional properties as shown in the following proposition with proof in Appx. A.2.\nProposition 2. Theorem 2 of Jamieson et al. (2014) holds for the adapted lil’UCB algorithm. Moreover T (t)i ≤ N, ∀i, t. Therefore, when the algorithm terminates, t =∑ i∈X T (t) i ≤ ND.\nNotice that Thm. 2 of Jamieson et al. (2014) shows that t scales roughly asO(1/∆2) with ∆ being the mean gap and therefore t ND when the gap is large."
    }, {
      "heading" : "3.3. Racing Algorithm for a Finite Population",
      "text" : "When rewards are sampled without replacement, the negative correlation between rewards would generally improve the convergence of µ̂i. Unfortunately, the bound in lil’UCB ignores the negative correlation when T (t)i < N even with the adaptations. We introduce a new family of racing algorithms (Maron & Moore, 1994) that takes advantage of the finite population setting as shown in Alg. 1. The choice of the uncertainty bound function G differentiates specific algorithms and two examples will be discussed in the following sections.\nAlg. 1 maintains a set of candidate setD initialized with all arms. At iteration t, a shared mini-batch ofm(t) indices are drawn w/o replacement for all survived arms in D. Then the uncertainty bound G is used to eliminate sub-optimal arms with a given confidence. The algorithm stops when only one arm remains. We require for m(t) that the total number of sampled indices T (t ∗) = ∑t∗ t=1m\n(t) equalsN at the last iteration t∗. Particularly, we take a doubling schedule T (t) = 2T (t−1) (so t∗ = dlog2 Nm(1) e + 1) and leave m(1) as a free parameter. We also require G(·, T, ·, ·) = 0 whenever T = N so that Alg. 1 always stops within t∗ iterations. The computational complexity for t iterations is O(DT (t)) with the marginal estimate σ̂i and O(D2T (t)) with the pairwise estimate σ̂i,j . The former version is more efficient than the latter when D is large at the price of a looser bound. Proposition 3. If G satisfies\nE def= P (∃t < t∗, µ̂(t) − µ > G(δ, T (t), σ̂(t), C)) ≤ δ, (5)\nfor any δ ∈ (0, 1) with a probability at least 1 − δ, Alg. 1 returns the optimal arm with at most ND samples.\nThe proof is provided in Appx. A.3. Unlike adapted lil’UCB, Racing draws a shared set of sample indices among all the arms and could provide a tighter bound with pairwise variance estimates σ̂i,j when there is positive correlation, a typical case in Bayesian inference problems."
    }, {
      "heading" : "3.3.1. RACING WITH SERFLING CONCENTRATION BOUNDS FOR G",
      "text" : "Serfling (1974) studied the concentration inequalities of sampling without replacement and obtained an improved\nAlgorithm 1 Racing Algorithm with a Finite Reward Population input Number of arms D, population size N , mini-batch\nsizes {m(t)}t∗t=1, confidence level 1 − δ, uncertainty bound function G(δ, T, σ̂, C), range of samples Ci (optional). t← 0, T ← 0, D ← {1, 2, . . . , D}, N ← ∅ while |D| > 1 do t← t+ 1 Sample w/o replacement m(t) indicesM ⊆ [N ]\\N , and set N ← N ∪M, T ← T +m(t) Compute li,n,∀i ∈ D, n ∈ M, and update µ̂i and σ̂i (or σ̂i,j), ∀i ∈ D. Find the best arm x← argmaxi∈D µ̂i Eliminate sub-optimal arms when the estimated gap is large D ← D\\{i : µ̂x − µ̂i > G( δD , T, σ̂x, Cx) + G( δD , T, σ̂i, Ci)} (or D ← D\\{i : µ̂x − µ̂i > G( δD−1 , T, σ̂x,i), Cx + Ci})\nend while output D\nHoeffding bound. Bardenet & Maillard (2013) extended the work and provided an empirical Bernstein-Serfling bound that was later used for the subsampling-based MH algorithm (Bardenet et al., 2014): for any δ ∈ (0, 1] and any n ≤ N , with probability 1− δ, it holds that\nµ̂n − µ ≤ σ̂n\n√ 2ρn log(5/δ)\nn + κC log(5/δ)\nn def = BEBS(δ, n, σ̂n, C) (6)\nwhere κ = 73 + 3√ 2 , and ρn ={ 1− πn−1 if n ≤ N/2 (1− πn)(1 + 1n ) if n > N/2 , with πn def = n N . The extra term ρn that is missing in regular empirical Bernstein bounds reduces the bound significantly when n is close to N . We set m(1) = 2 in Alg. 1 to provide a valid σ̂(t) for any t and set the uncertain bound G with the empirical Bernstein-Serfling (EBS) bounds as\nGEBS(δ, T, σ̂, C) = BEBS\n( δ\nt∗ − 1 , T, σ̂, C\n) (7)\nIt is trivial to prove thatGEBS satisfies the condition in Eq. 5 using a union bound over t < t∗."
    }, {
      "heading" : "3.3.2. RACING WITH A NORMAL ASSUMPTION FOR G",
      "text" : "The concentration bounds often give a conservative strategy as they assume an arbitrary bounded reward distribution. When the number of drawn samples is large, the central limit theorem suggests that µ̂(t) follows approximately a Gaussian distribution. Korattikara et al. (2014) made such\nan assumption and obtained a tighter bound. We first provide an immediate corollary of Prop. 2 in Appx. A of Korattikara et al. (2014).\nCorollary 4. Let µ̂(t)unit, t = 1, 2, . . . , t∗ be the estimated means using sampling without replacement from any finite population with mean µ and unit variance. The joint normal random variables µ̃(t) that match the mean and covariance matrix with µ̂(t)unit follow a Gaussian random walk process as\npµ(µ̃ (t)|µ̃(1), . . . , µ̃(t−1)) = N (mt(µ̃(t−1)), St) (8)\nwhere mt = µ+At(µ̃t−1 − µ), St = BtT (t) ( 1− T (t)−1 N−1 ) , At = πt−1(1−πt) πt(1−πt−1) , Bt = πt−πt−1 πt(1−πt−1) with πt short for πT (t) . Remark 5. The marginal distribution p(µ̃(t)) = N ( µ, 1\nT (t)\n( 1− T\n(t)−1 N−1\n)) where the variance approaches\n0 when T (t) → N . Assumption 6. When T (t) 1,∀t, we assume σ̂(t) ≈ σ and the central limit theorem suggests that the joint distribution of µ̂(t)/σ̂(t) can be approximated by the joint distribution of µ̃(t).\nWith the normal assumption, we choose the uncertainty bound G in the following form\nGNormal(δ, T, σ̂) = σ̂√ T\n( 1− T − 1\nN − 1\n)1/2 BNormal (9)\nIntuitively we use a constant confidence level, Φ(BNormal), for all marginal distributions of µ̂(t) over t where Φ(·) is the CDF of the standard normal. To choose the constant BNormal, we plugGNormal into the condition for G in Eq. 5 and apply the normal distribution (8) to solve the univariate equation E(B) = δ. This way of computing G gives a tighter bound than applying the union bound across t as in the previous section because it takes into account the correlation of mean estimates across iterations. Appx. B provides a lookup table and a plot of BNormal(δ) = E−1(δ). Notice that BNormal only needs to be computed once and we can obtain it for any δ by either interpolating the table or computing numerically with code to be shared (runtime < 1 second). For the parameter of the first mini-batch size m(1), a value of 50 performs robustly in all experiments.\nWe provide the sample complexity below with the proof in Appx. A.4. Particularly, T ∗(∆) → DN as ∆ → 0, and T ∗(∆) = Dm(1) when ∆ ≥ 2BNormal(δ/D′)√\n(N/m(1) − 1)/(N − 1). Proposition 7. Let x∗ be the best arm and ∆ be the minimal normalized gap of means from other arms, defined as mini6=x∗\nµx∗−µi σx∗+σi\nwhen using marginal variance estimate σ̂i and mini6=x∗\nµx∗−µi σx∗,i\nwhen using pairwise variance estimate σ̂x,i. If Assump. 6 holds, with a probability at least"
    }, {
      "heading" : "1− δ Racing-Normal draws no more rewards than",
      "text" : "T ∗(∆) = D  N(N − 1) ∆24B2Normal(δ/D′) + 1  m(1) (10)\nwhere dnem def = m2dlog2 n/me ∧N ≥ n, ∀n ≤ N . D′ def= D if using σ̂i and is D − 1 if using σ̂x,i."
    }, {
      "heading" : "3.4. Variance Reduction for Random Rewards with",
      "text" : "Control Variates\nThe difficulty of MABs depends heavily on the ratio of the mean gap to the reward noise, ∆. To improve the signal noise ratio, we exploit the control variates technique (Wilson, 1984) to reduce the reward variance. Consider a variable hi,n whose expectation En∼[N ][hi,n] can be computed efficiently. The residue reward li,n−hi,n +En[hi,n] has the same mean as li,n and the variance is reduced if hi,n ≈ li,n. In the Bayesian inference experiment where the factor fn(X = i) = p(yn|X = i), we adopt a similar approach as Wang et al. (2013) and take the Taylor expansion of li,n around a reference point ŷ as\nli,n ≈ li(ŷ)+gTi (yn−ŷ)+ 1\n2 (yn−ŷ)THi(yn−ŷ) def = hi,n\n(11) where gi and Hi are the gradient and Hessian matrix of log p(y|i) respectively evaluated at ŷ. E[hi,n] can computed analytically with the first two moments of yn. A typical choice of ŷ is E[y].\nThe control variate method is mostly useful for RacingNormal. For algorithms depending on a reward bound C in order to get a tight bound for li,n − hi,n it requires a more restrictive condition for C as in Bardenet et al. (2015) and we might end up with an even more conservative strategy in general cases."
    }, {
      "heading" : "4. Related Work",
      "text" : "The Gumbel-Max trick has been exploited in Kuzmin & Warmuth (2005); Papandreou & Yuille (2011); Maddison et al. (2014) for different problems. The closest work is Maddison et al. (2014) where this trick is extended to draw continuous random variables with a Gumbel process, reminiscent to adaptive rejection sampling.\nOur work is closely related to the optimal arm identification problem for MABs with a fixed confidence. This is, to our knowledge, the first work to consider MABs with a finite population. The proposed algorithms tailored under this setting could be of interest beyond the discrete sampling problem. The normal assumption in Sec. 3.3.2 is similar to UCB-Normal in Auer et al. (2002) but the latter assumes a normal distribution for individual rewards and will perform poorly when it does not hold.\nThe bounds in Sec. 3.3 are based on subsampling-based MH algorithms in Bardenet et al. (2014); Korattikara et al. (2014). The proposed algorithm extends those ideas from MH to discrete sampling. In fact, let x and x′ be the current and proposed value in an MH iteration, Racing-EBS and Racing-Normal reduce to the algorithms in Bardenet et al. (2014) and Korattikara et al. (2014) respectively if we set\nX = {x, x′}, f0(1) = u p(x)q(x′|x), f0(2) = p(x ′)q(x|x′), fn(x) = p(yn|x) (12)\nwhere p(x) is the prior distribution, u ∼ Uniform[0, 1] and q(·|·) is the proposal distribution. The difference with Bardenet et al. (2014) is that we distribute the error δ evenly across t in Eq. 7 while Bardenet et al. (2014) set δt = (p − 1)/(p(T (t))p)δ with p a free parameter. The differences with Korattikara et al. (2014) are that we take a doubling schedule for m(t) and replace the t-test with the normal assumption. We find that our algorithms are more efficient and robust than both original algorithms in practice. Moreover, the binary Gibbs sampling in Appx. F of Korattikara et al. (2014) is also a special case of RacingNormal with D = 2. Therefore, Alg. 1 provides a unifying approach to a family of subsampling-based samplers.\nThe variance reduction technique is similar to the proxies in Bardenet et al. (2015), but the control variate here is a function in the data space while the proxy in the latter is a function in the parameter space. We do not assume the posterior distribution is approximate Gaussian and our algorithm works with multi-modal distributions.\nIt is important not the confuse the focus of our algorithm for the big N problem in Eq. 1 with other algorithms that address sampling for a large state space (big D) or similarly a high-dimensional vector of discrete variables (exponentially large D). The combination of these two approaches for problems with both big N and big D is possible but beyond the scope of this paper."
    }, {
      "heading" : "5. Experiments",
      "text" : "Since this is the first work to discuss efficient discrete sampling for problem (1), we compare the adapted lil’UCB, Racing-EBS, Racing-Normal with the exact sampler only. We report the result of Racing-Normal in real data experiments only as the speed gains of the other two are marginal."
    }, {
      "heading" : "5.1. Synthetic Data",
      "text" : "We construct a distribution with D = 10 by sampling N = 105 rewards of li,n for each state from one of the three distributions N (0, 1), Uniform[0, 1], LogNormal(0, 2). We normalized li,n to have a fixed distribution p(X) in Fig. 1(a) and a reward variance σ2 that controls the difficulty. The normal distribution is the ideal setting for\nRacing-Normal, and the uniform distribution is desirable for adapted lil’UCB and Racing-EBS as the reward bound is close to σ. The LogNormal distribution, whose ex. kurtosis ≈ 4000, is difficult for all due to the heavy tail. We use a tight bound C = max{li,n − li,n′} for Racing-EBS. We set the scale parameter of adapted lil’UCB with C/2 and other parameters with the heuristic setting in Jamieson et al. (2014). Racing uses the pairwise variance estimate.\nFig. 1(b)-(d) show the empirical error of best arm identification by drawing 104 samples of X for each setting and vary the target error bound δ ∈ [10−3, 0.1]. The bound appears very loose for lil’UCB and Racing-EBS but is sharp for Racing-Normal when the noise is large (1(b)) and δ 1. This is consistent with the direct comparison of uncertainty bounds in Fig. 1(e). Consequently, given the same error tolerance δ Racing-Normal requires much fewer rewards than the other conservative strategies in all the settings except when σ = 10−5 and li,n ∼ Uniform[0, 1], as shown in Fig. 1(f)-(h). We verify the observations with more experiments in Appx. C.1 with D ∈ {2, 100} and marginal estimate σ̂i.\nSurprisingly, Racing-Normal performs robustly regardless of reward distributions with the first mini-batch size m(1) = 50 while it was shown in Bardenet et al. (2014) that the algorithm with the same normal assumption in Korattikara et al. (2014) failed with LogNormal even when m(1) = 500. The dramatic improvement in robustness is mainly due to our doubling scheme where central limit theorem applies quickly with m(t) increasing exponentially. We do not claim that the single trick will solve the problem completely because there still exist cases in theory with extremely heavy-tailed reward distributions where our normal assumption does not hold and the algorithm will fail to meet the confidence level. In practice, we do not observe that pathological case in any of the experiments."
    }, {
      "heading" : "5.2. Bayesian ARCH Model Selection",
      "text" : "We evaluate Racing-Normal in a Bayesian model selection problem for the auto-regressive conditional heteroskedasticity (ARCH) models. The discrete sampler is integrated in the Markov chain as a building component to sample the hierarchical model. Specifically, we consider a mixture of ARCHs for the return rt of stock price series with student-t innovations, each component with a different order q:\nrt = σtzt, zt iid∼ tν(0, 1), σ2t = α0 + q∑ i=1 αir 2 t−i,\nq ∼ Discrete(π), αi, ν iid∼ Gamma(1, 1)\nwhere π = {πq : q ∈ Q} is the prior distribution of a candidate model in the set Q. The random variables to infer include the discrete model choice q and continuous param-\neters {αi}qi=0, ν. We adopt the augmented MCMC algorithm in Carlin & Chib (1995) to avoid transdimensional moves. We apply subsampling-based scalable algorithms to sample all variables with subsampled observations {rt}: Racing-Normal Gibbs for q, stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011) corrected with Racing-Normal MH (Sec. 4) for αi and ν. We use adjusted priors π̃q as suggested by Carlin & Chib (1995) for sufficient mixing between all models and tune them with adaptive MCMC. The adjusted posterior p̃(q|r) ∝ π̃qp(r|q) is then close to uniform and the value πq/π̃q provides an estimate to the real unnormalized posterior p(q|r). Control variates are also applied to reduce variance. Details of the sampling algorithm are provided in Appx. C.2.\nWe apply the model on the 5-minute Shanghai stock exchange composite index of one year consisting of about 13,000 data points (Fig. 2(a)). Q = {5, 10, 15, 20, 25, 30}. We set m(1) = 50 and δ = 0.05. The control variate method reduces the reward variance by 2∼3 orders of magnitude. Fig. 2(b) shows the estimated log-posterior of q by normalizing πq/π̃q in the adaptive MCMC as a function of the number of likelihood evaluations (proportional to runtime). The subsampling-based sampler (Sub) converges about three times faster. We then fix π̃q for a fixed stationary distribution and run MCMC for 105 iterations to compare Sub with the exact sampler. The empirical error rates for Racing-Normal Gibbs and MH are about 4× 10−4 and 2 × 10−3 respectively. Fig. 2(c) shows estimated adjusted posterior with 5 runs, and (d) compares the auto-correlation of sample q. Sub obtains over twice the effective sample\nsize without noticeable bias after the burn-in period."
    }, {
      "heading" : "5.3. Author Coreference",
      "text" : "We then study the performance in a large-scale graphical model inference problem. The author coreference problem for a database of scientific paper citations is to cluster the mentions of authors into real persons. Singh et al. (2012) addressed this problem with a conditional random field model with pairwise factors. The joint and conditional distributions are respectively\npθ(y|x) ∝ exp  ∑ yi=yj ,i6=j,∀i,j fθ(xi, xj)  , pθ(Yi = yi|y−i,x) ∝ exp\n ∑ yj∈Cy={j:yj=y,j 6=i} fθ(xi, xj)  where x = {xi}Ni=1 is the set of observed author mentions and yi ∈ N+ is the cluster index for i’th mention. The factor fθ(xi, xj) measures the similarity between two mentions based on author names, coauthors, paper title, etc, parameterized by θ. In the conditional distribution, yi can take a value of any non-empty cluster or another empty cluster index. When a cluster Cy contains a lot of mentions, a typical case for common author names, the number of factors to be evaluated Ny = |Cy| will be large. We consider the MAP inference problem with fixed θ using annealed Gibbs sampling (Finkel et al., 2005). We apply Racing-Normal to sample Yi by subsampling Cy for each\n0 2 4 6 8 10\nx 10 10\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\nNumber of factors evaluated\nB 3 F\n− 1 S\nc o re\nExact Gibbs\nSub Gibbs\n(a) B3 F-1 vs #factor evaluations\n0 5 10 15 20\nx 10 5\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\nNumber of iterations\nB 3 F\n− 1 S\nc o re\n0.2\n0.4\n0.6\n0.8\n1\nR e la\nti v e #\no f e v a lu\na te\nd f a c to\nrs\nExact Gibbs\nSub Gibbs\nExact overlaps with Sub\n(b) B3 F-1 vs iteration\nFigure 3. Author Coreference. Bigger B3 F-1 score is better.\ncandidate value y. An important difference of this problem from Eq. 1 is that Ny 6= Ny′ ,∀y 6= y′ and Ny has a heavy tail distribution. We let the mini-batch size depend on Ny with details provided in Appx. C.3.\nWe run the experiment on the union of an unlabeled DBLP dataset of BibTex entries with about 5M authors and a Rexa corpus of about 11K author mentions with 3160 entries labeled. We monitor the clustering performance on the labeled subset with the B3 F-1 score (Bagga & Baldwin, 1998). We use δ = 0.05 and the empirical error rate is about 0.046. The number of candidate values D varies in 2 ∼ 215 and Ny varies in 1 ∼ 1829 upon convergence. Fig. 3(a) shows the F-1 score as a function of the number of factor evaluations with 7 random runs for each algorithm. Sub Gibbs converges about three times faster than exact Gibbs. Fig. 3(b) shows F-1 as a function of iterations that renders almost identical behavior for both algorithms, which suggests negligible bias in Sub Gibbs. The relative number of the evaluated factors of sub to exact Gibbs indicates about a 5-time speed up near convergence. The initial speed up is small because every cluster is initialized with a single mention, i.e. Ny = 1."
    }, {
      "heading" : "6. Discussion",
      "text" : "We consider the discrete sampling problem with a high degree of dependency and proposed three approximate al-\ngorithms under the framework of MABs with theoretical guarantees. The Racing algorithm provides a unifying approaches to various subsampling-based Monte Carlo algorithms and also improves the robustness of the original MH algorithm in Korattikara et al. (2014). This is also the first work to discuss MABs under the setting of a finite reward population.\nEmpirical evaluations show that Racing-Normal achieves a robust and the highest speed-up among all competitors. Whilst adaptive lil’UCB shows inferior empirical performance to Racing-Normal, it has a better sample complexity w.r.t. the number of arms D. It will be a future direction to combine the bound of Racing-Normal with other MAB algorithms including lil’UCB for a better scalability in D. Another important problem is on how to relax the assumptions for Racing-Normal without sacrificing the performance.\nIt would also be an interesting direction to extend our work to draw continuous random variables efficiently with the Gumbel process (Maddison et al., 2014). In continuous state space, there are infinitely many “arms” and a naive application of our algorithm will lead to infinitely large error bound. This problem can be alleviated with algorithms for contextual MAB problems."
    }, {
      "heading" : "Acknowledgements",
      "text" : "We thank Matt Hoffman for helpful discussions on the connection of our work to the MAB problems. We also thank all the reviewers for their constructive comments. We acknowledge funding from the Alan Turing Institute, Google, Microsoft Research and EPSRC Grant EP/I036575/1."
    }, {
      "heading" : "A. Proofs",
      "text" : "A.1. Proof of Prop. 1\nProof. For a discrete state space, the total variation is equivalent to half of L1 distance between two probability vectors. Denote by p̂(X = i|ε) the distribution of the output of the approximate algorithm conditioned on the vector of Gumbel variables ε, and x(ε) the solution of Eq. 2 as a function of ε. According to the premise of Prop. 1, p̂(X = x(ε)|ε) ≥ 1− δ, ∀ε. We can bound the L1 error of the conditional probability as∑ i∈X\n∣∣p̂(X = i|ε)− δi,x(ε)∣∣ = |p̂(X = x(ε)|ε)− 1|+\n∑ i 6=x(ε) |p̂(X = i|ε)| ≤ 2δ, ∀ε\n(13)\nwhere δi,j is the Kronecker delta function. Then we can show\n‖p̂(X)− p(X)‖TV\n= 1\n2 ∑ i∈X |p̃(X = i)− p(X = i)|\n= 1\n2 ∑ i∈X ∣∣∣∣∫ ε ( p̂(X = i|ε)− δi,x(ε) ) dP (ε) ∣∣∣∣ ≤ 1\n2 ∑ i∈X ∫ ε ∣∣p̂(X = i|ε)− δi,x(ε)∣∣dP (ε) = 1\n2 ∫ ε (∑ i∈X ∣∣p̂(X = i|ε)− δi,x(ε)∣∣ ) dP (ε)\n≤ δ (14)\nA.2. Sketch of the proof of Prop. 2\nProof. As the proof of this proposition is almost identical to the proof of Jamieson et al. (2014), we only outlines the difference due to the adaptation. In the proof of Thm. 2 in Jamieson et al. (2014), the i.i.d. assumption for rewards from each arm was used only in Lemma 3 to provide Chernoff’s bound and Hoeffding’s bound. As noted in Sec. 6 of Hoeffding (1963) those bounds would still hold when rewards are sampled from a finite population without replacement. Therefore, when T (t) < N all the bounds hold for adapted lil’UCB.\nWhen T (t)i = N , the second modification sets the upper bound of the mean estimate to µ̂(t). That is a valid upper bound of µi, in fact much tighter than the bound in the original algorithm because µ̂(t)i = µi exactly when the entire population is observed.\nTherefore, as long as T (t)i ≤ N, ∀i, Theorem 2 in Jamieson et al. (2014) applies to adapted lil’UCB with modification 1 and 2 only.\nWith the third modification, T (t) could never be bigger than N at the stopping time, which proves the second part of Prop 2. The proof can then be concluded if we can show modification 3 does not change the output of adapted lil’UCB with the first two modifications only. This is true because if we do not stop when the selected arm i satisfies T\n(t) i = N , we do not need to update the upper bound of i because the estimated mean is already exact. Since no upper bound is changed, the arm i will always be chosen for now on and eventually the original stopping criterion of T\n(t) i ≥ 1 +λ ∑ j 6=i Tj(t) is met and the same arm i will be\nreturned.\nA.3. Proof of Prop. 3\nProof. Denote by x(t) the arm with the highest estimated mean at iteration t and x∗ the optimal arm with the highest true mean, µx∗ > µi,∀i 6= x∗. If Alg. 1 does not stop in the first t∗ − 1 iterations, the estimated means of all the survived arms become exact at the last iteration t∗, µ̂(t ∗) i = µi because we require T (t ∗) = N . Then x(t\n∗) = x∗. As we require G(δ, T = N, σ̂, C) = 0,∀δ, σ̂, C, all the suboptimal arms will be eliminated by the last iteration and the algorithm always returns the correct best arm. This proves the upper bound of the sample size of ND.\nNow to prove the confidence level, all we need to show is that with at least a probability 1− δ arm x∗ survived all the iterations t < t∗.\nLet us first consider the case when Alg. 1 uses the marginal variance estimate σ̂(t)i . Let the events\nEi = { ∃t < t∗, µ̂(t)i − µi > G ( δ\nD , T (t), σ̂ (t) i , Ci\n)} ,∀i 6= x∗\nEx∗ = { ∃t < t∗,−µ̂(t)x∗ − (−µx∗) > G ( δ\nD , T (t), σ̂ (t) i , Ci )} (15)\nApplying condition Eq. 5 and the union bound, we get P (∪i∈XEi) ≤ ∑ i∈X Ei = δ. So with a probability at least 1 − δ, none of those events will happen. In that case for any iteration t < t∗,\nµ̂x − µ̂x∗ = (µ̂x − µx)− (µ̂x∗ − µx∗) + (µx − µx∗)\n< G\n( δ\nD , T (t), σ̂(t)x , Cx\n) +G ( δ\nD , T (t), σ̂ (t) x∗ , Cx∗ ) (16)\nSo arm x∗ won’t be eliminated at iteration t.\nSimilarly, for the case when Alg. 1 uses the pairwise vari-\nance estimate σ̂(t)x,i, let the events\nEi,x = { ∃t < t∗, (µ̂(t)i − µ̂ (t) x∗ )− (µi − µx∗)\n> G\n( δ\nD − 1 , T (t), σ̂ (t) i , Ci + Cx∗\n)} ,∀i 6= x∗\n(17)\nApplying condition Eq. 5 and the union bound, we get P (∪i∈X\\{x∗}Ei,x) ≤ ∑ i∈X\\{x∗}Ei,x = δ. So with a probability at least 1− δ for any iteration t < t∗,\nµ̂x − µ̂x∗ = (µ̂x − µ̂x∗)− (µx − µx∗) + (µx − µx∗)\n< G\n( δ\nD − 1 , T (t), σ̂ (t) x,x∗ , Cx + Cx∗\n) (18)\nTherefore arm x∗ won’t be eliminated at iteration t.\nA.4. Proof of Prop. 7\nProof. Denote by x(t) the arm with the highest estimated mean at iteration t. First consider the case when Alg. 1 uses the marginal variance estimate σ̂(t)i . With the condition in Eq. 5, it follows that P (∪i∈XEi) ≤ ∑ i∈X P (Ei) ≤ δ where Ei is defined in Eq. 15. So with a probability at least 1− δ,\nµ̂ (t) x∗ − µ̂ (t) i >µx∗ − µi −G\n( δ\nD , T (t), σ̂ (t) x∗ , Cx∗ ) −G ( δ\nD , T (t), σ̂ (t) i , Ci\n) ,∀i 6= x∗ (19)\nAlg. 1 will stop by iteration t if the RHS of the equation above satisfies the stopping criterion for all i 6= x∗, that is,\nµx∗ − µi > 2 ( G ( δ\nD , T (t), σ̂ (t) x∗ , Cx∗\n)\n+G\n( δ\nD , T (t), σ̂ (t) i , Ci\n)) ,∀i 6= x∗\n(20)\nPlugging in the definition ofGNormal in Eq. 9 and applying the assumption σ̂(t)i = σi, we will get\nµx∗ − µi (σx∗ + σi) > 2√ T (t)\n( 1− T\n(t) − 1 N − 1\n)1/2 BNormal,∀i 6= x∗\n(21) Solve the above inequality for T (t) and use the definition of the gap ∆ we get\nT (t) > N\n(N − 1) ∆2 4B2Normal(δ/D) + 1\ndef = T̃ (22)\nSince we use a doubling schedule T (t) = 2T (t−1) with T (1) = m(1) and T (t\n∗) = N , Alg. 1 stops at an iteration no later than t = dlog2(T̃ /m(0))e+ 1 (23) And the total number of samples drawn by t is upper bounded by D(m(0)2t−1 ∧N) = T ∗(∆).\nNow consider the case when Alg. 1 uses the pairwise variance estimate σ̂(t)x,i. With the condition in Eq. 5, it follows with the union bound that P (∪i∈X\\{x∗}Ei) ≤∑ i∈X\\{x∗} P (Ei) ≤ δ where Ei is defined in Eq. 17. So with a probability at least 1− δ,\nµ̂ (t) x∗ − µ̂ (t) i > µx∗ − µi −G ( δ\nD − 1 , T (t), σ̂ (t) x∗,i, Cx∗ + Ci\n) ,∀i 6= x∗\n(24)\nNow we can follow a similar argument as in the case with marginal variance estimate and prove the proposition.\nB. Table and Figure of BNormal(δ, πT (1)) Table 1 shows BNormal(δ, πT (1)) with δ varying in [10−6, 0.49], and the proportion of the first mini-batch πT (1) = m\n(1)/N ∈ {5× 10−5, 10−4, 5× 10−4, 10−3, 5× 10−3, 10−2}. Φ(B) can be interpreted as the marginal confidence level for one iteration. The function is also shown in Fig. 4 for visualization. We will release the code to generate the table and to compute BNormal(δ, πT (1)) numerically."
    }, {
      "heading" : "C. Experiment Detailed Setting and Extra Results",
      "text" : "C.1. More Results of the Synthetic Data Experiment\nThe results with the marginal variance estimate σ̂i for Racing are shown in Fig. 5. The Racing algorithms (both EBS and Normal) performs more conservatively compared to the plots when using pairwise variance estimate σ̂i,j in Fig. 1, but the relative performance of all the algorithms are very similar to Fig. 1.\nWe also provide the results with D = 2 and D = 100 when Racing algorithms use pairwise variance estimate in Fig. 6 and 7 respectively. Racing-Normal performs the best in all situations and the empirical error never exceeds the provided bound δ with a statistical significance of 0.05.\nNotice that the error of adaptive lil’UCB exceeds the error tolerance in the experiment with D = 100 and li,n ∼ Uniform[0, 1]. This is because we use the recommended heuristic setting of parameters in Jamieson et al. (2014) that unfortunately does not satisfy the theoretical guarantee of Thm. 2 in Jamieson et al. (2014). lil’UCB (heuristic)\nperformed significantly better than the setting with guarantees in Jamieson et al. (2014). So we expect that adaptive lil’UCB with parameters satisfying Thm. 2 of Jamieson et al. (2014) will perform significantly worse than adaptive lil’UCB (heuristic) and Racing-Normal in terms of the reward sample complexity.\nC.2. Details of the Bayesian ARCH Model Selection Experiment\nAn ARCH model is commonly used to model the stochastic volatility of financial times series. Let rt def = log(pt/pt−1) be the logarithm return of some asset price pt at time t. We assume a constant mean process for the return and remove the estimated mean in a pre-process step. An important problem in applying ARCH for financial data is to choose the complexity, the order q of the auto-regressive model. We treat the model selection problem as a Bayesian inference problem for the random variable q. We use a uniform prior distribution, π(q) = 1/|Q|.\nAn MCMC algorithm was introduced in Carlin & Chib (1995) to infer the posterior model distribution by augmenting the parameter space to a complete parameter set for all models ((α(j)i ) j i=0, ν\n(j)), j ∈ Q, then assigning the regular prior for the selected model j = q and pseudopriors for those models that are not selected j 6= q. Then regular MCMC algorithms can be applied to sample all the random variables q, ((α(j)i )i, ν (j))j without the problem of transdi-\nmensional moves as in reversible jump MCMC.\nThe mixing rate of Carlin & Chib (1995) depends on a proper choice of the pseudoprior for (α(j)i , ν\n(j)). Ideally it should be similar to the parameter posterior when the model is chosen p(α(j)i , ν\n(j))|q = j, r). We first reparameterize (α(j)i , ν\n(j)) with a softplus function x = log(1 + exp(x′)) to allow a full support along the real axis and then take the Laplace approximation at the MAP of transformed parameters as the pseudoprior for each model separately.\nIn order to avoid accessing the entire dataset each iteration, we use subsampling-based algorithms to sample all the conditionals except the pseudoprior as follows\nq|(α(j), ν(j))j ∼ π(q) ∏ t p(rt|α(q), rt−q:t−1, ν(q)),\n(α(q), ν(q))|q ∼ p(α(q))p(ν(q)) ∏ t p(rt|α(q), rt−q:t−1, ν(q)),\n(α(j), ν(j))|q iid∼ ppseudoprior(α(j), ν(j)),∀j 6= q, (25)\nwhere we sample q with Racing-Normal Gibbs and sample α(q), ν(q) using MH with a proposal from SGLD and a rejection step provided by Racing-Normal MH. The rejection step controls the error introduced in SGLD when the step size is large.\nAs the marginal likelihood for each model could be differed by a few orders of magnitudes, to make sure every model is sampled sufficiently often, we first adjust the prior distribu-\ntion π̃ with the Wang-Landau algorithm with an annealing adaptation on log π̃, 1/(1 + t/100), so that the posterior distribution p̃(q|r) is approximately uniform. We then fix π̃ and compare the exact and approximate MCMC algorithms. The real posterior distribution can be computed as p(q|r) ∝ p̃(q|r)/π̃(q).\nWe choose the step size separately for the exact and stochastic gradient Langevin dynamics (Welling & Teh, 2011) so that the acceptance rate is about 36%.\nWe apply the control variates by first segmenting the 2-D space of zj,t def = (rt, α (j) 0 + (α (j) 1:j) T rt−j:t−1), where α(j) takes the MAP value, equally into 100 bins according to marginal quantiles and then taking the reference points at the mean of each bin. We also notice that some data points have large residual reward li,n − hi,n when zj,t is far from the reference point. We take 20% of the points with the largest distance in z as outliers, always compute them every iteration and apply the subsampling algorithm for the rest data.\nC.3. Details of the Author Coreference Experiment\nThe main differences of this sampling problem from Eq. 1 are that\n1. |Cy| 6= |Cy′ | and the distribution of the cluster size follows approximately a power law with the value varying from as small as 1 to thousands. If we set m(1) = 50 as usual, we already draw about 33% of all the rewards in the first mini-batch. So we slightly abuse the Normal assumption and use a small size for m(1) = 3 and use doubling scheme for the rest with m (2) y = (|Cy| − 3)/10 ∧ 1. The experiment shows an\nempirical error 0.045 of mis-identification of the best arm with the provided bound δ = 0.05.\n2. The distribution of {fθ(xi, xj) : j ∈ Cy} is independent from different clusters/arms. We exploit the independence of rewards and choose the bound\nGNormal(δ, Ti, Tj , σ̂i, σ̂j)\n= ( σ̂i Ti ( 1− Ti − 1 Ni − 1 ) + σ̂j Tj ( 1− Tj − 1 Nj − 1 ))−1/2 BNormal.\n(26)\nThis modification has the same performance as with the pairwise variance estimate and has the same computational complexity as with the marginal variance estimate O(DN). We compute BNormal with a sub-\noptimal but simpler choice as BNormal(δ) = Φ −1 (\n1− δ t∗ − 1\n) . (27)\nIt is easy to show that Eq. 5 still holds in this case using a union bound across t. The bound in Eq. 27 is strictly looser than BNormal = E−1(δ) but the difference is small when δ 1 and diminishes to 0 as δ → 0.\nWe obtained the dataset from the authors of Singh et al. (2012) but it is different from what is used in Singh et al. (2012) with more difficult citations. The best B3 F-1 score reported in this paper is a reasonable value for this data set according to personal communications with the authors of Singh et al. (2012)."
    } ],
    "references" : [ {
      "title" : "Bayesian posterior sampling via stochastic gradient fisher scoring",
      "author" : [ "Ahn", "Sungjin", "Korattikara", "Anoop", "Welling", "Max" ],
      "venue" : "In Proceedings of the 29th International Conference on Machine Learning",
      "citeRegEx" : "Ahn et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Ahn et al\\.",
      "year" : 2012
    }, {
      "title" : "Finite-time analysis of the multiarmed bandit problem",
      "author" : [ "Auer", "Peter", "Cesa-Bianchi", "Nicolo", "Fischer", "Paul" ],
      "venue" : "Machine learning,",
      "citeRegEx" : "Auer et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Auer et al\\.",
      "year" : 2002
    }, {
      "title" : "Algorithms for scoring coreference chains",
      "author" : [ "Bagga", "Amit", "Baldwin", "Breck" ],
      "venue" : "In LREC workshop on linguistics coreference,",
      "citeRegEx" : "Bagga et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Bagga et al\\.",
      "year" : 1998
    }, {
      "title" : "Concentration inequalities for sampling without replacement",
      "author" : [ "Bardenet", "Rémi", "Maillard", "Odalric-Ambrym" ],
      "venue" : "arXiv preprint arXiv:1309.4029,",
      "citeRegEx" : "Bardenet et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bardenet et al\\.",
      "year" : 2013
    }, {
      "title" : "Towards scaling up Markov chain Monte Carlo: an adaptive subsampling approach",
      "author" : [ "Bardenet", "Rémi", "Doucet", "Arnaud", "Holmes", "Chris" ],
      "venue" : "In Proceedings of The 31st International Conference on Machine Learning,",
      "citeRegEx" : "Bardenet et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Bardenet et al\\.",
      "year" : 2014
    }, {
      "title" : "On markov chain monte carlo methods for tall data",
      "author" : [ "Bardenet", "Rémi", "Doucet", "Arnaud", "Holmes", "Chris" ],
      "venue" : "arXiv preprint arXiv:1505.02827,",
      "citeRegEx" : "Bardenet et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Bardenet et al\\.",
      "year" : 2015
    }, {
      "title" : "A sequential multiple-decision procedure for selecting the best one of several normal populations with a common unknown variance, and its use with various experimental designs",
      "author" : [ "Bechhofer", "Robert E" ],
      "venue" : null,
      "citeRegEx" : "Bechhofer and E.,? \\Q1958\\E",
      "shortCiteRegEx" : "Bechhofer and E.",
      "year" : 1958
    }, {
      "title" : "The tradeoffs of large scale learning",
      "author" : [ "L. Bottou", "O. Bousquet" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Bottou and Bousquet,? \\Q2008\\E",
      "shortCiteRegEx" : "Bottou and Bousquet",
      "year" : 2008
    }, {
      "title" : "Scaling the iHMM: Parallelization versus hadoop",
      "author" : [ "S. Bratires", "J. van Gael", "A. Vlachos", "Z. Ghahramani" ],
      "venue" : "In Computer and Information Technology (CIT),",
      "citeRegEx" : "Bratires et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Bratires et al\\.",
      "year" : 2010
    }, {
      "title" : "Bayesian model choice via Markov chain Monte Carlo",
      "author" : [ "B.P. Carlin", "S. Chib" ],
      "venue" : "Journal of the Royal Statistical Society, Series B,",
      "citeRegEx" : "Carlin and Chib,? \\Q1995\\E",
      "shortCiteRegEx" : "Carlin and Chib",
      "year" : 1995
    }, {
      "title" : "Stochastic gradient hamiltonian monte carlo",
      "author" : [ "Chen", "Tianqi", "Fox", "Emily", "Guestrin", "Carlos" ],
      "venue" : "In Proceedings of the 31st International Conference on Machine Learning",
      "citeRegEx" : "Chen et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2014
    }, {
      "title" : "Bayesian sampling using stochastic gradient thermostats",
      "author" : [ "Ding", "Nan", "Fang", "Youhan", "Babbush", "Ryan", "Chen", "Changyou", "Skeel", "Robert D", "Neven", "Hartmut" ],
      "venue" : "In Advances in neural information processing systems,",
      "citeRegEx" : "Ding et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Ding et al\\.",
      "year" : 2014
    }, {
      "title" : "Approximate slice sampling for Bayesian posterior inference",
      "author" : [ "DuBois", "Christopher", "Korattikara", "Anoop", "Welling", "Max", "Smyth", "Padhraic" ],
      "venue" : "In Proceedings of AISTATS,",
      "citeRegEx" : "DuBois et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "DuBois et al\\.",
      "year" : 2014
    }, {
      "title" : "Incorporating non-local information into information extraction systems by gibbs sampling",
      "author" : [ "Finkel", "Jenny Rose", "Grenager", "Trond", "Manning", "Christopher" ],
      "venue" : "In Proceedings of the 43rd ACL,",
      "citeRegEx" : "Finkel et al\\.,? \\Q2005\\E",
      "shortCiteRegEx" : "Finkel et al\\.",
      "year" : 2005
    }, {
      "title" : "Probability inequalities for sums of bounded random variables",
      "author" : [ "Hoeffding", "Wassily" ],
      "venue" : "Journal of the American statistical association,",
      "citeRegEx" : "Hoeffding and Wassily.,? \\Q1963\\E",
      "shortCiteRegEx" : "Hoeffding and Wassily.",
      "year" : 1963
    }, {
      "title" : "lil’UCB: An optimal exploration algorithm for multi-armed bandits",
      "author" : [ "Jamieson", "Kevin", "Malloy", "Matthew", "Nowak", "Robert", "Bubeck", "Sébastien" ],
      "venue" : "In Proceedings of The 27th COLT, pp",
      "citeRegEx" : "Jamieson et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Jamieson et al\\.",
      "year" : 2014
    }, {
      "title" : "Slice sampling mixture models",
      "author" : [ "Kalli", "Maria", "Griffin", "Jim E", "Walker", "Stephen G" ],
      "venue" : "Statistics and computing,",
      "citeRegEx" : "Kalli et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Kalli et al\\.",
      "year" : 2011
    }, {
      "title" : "Austerity in MCMC land: Cutting the Metropolis-Hastings budget",
      "author" : [ "Korattikara", "Anoop", "Chen", "Yutian", "Welling", "Max" ],
      "venue" : "In Proceedings of the 31th International Conference on Machine Learning,",
      "citeRegEx" : "Korattikara et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Korattikara et al\\.",
      "year" : 2014
    }, {
      "title" : "Optimum follow the leader algorithm",
      "author" : [ "Kuzmin", "Dima", "Warmuth", "Manfred K" ],
      "venue" : "In Proceedings of the 18th annual conference on Learning Theory,",
      "citeRegEx" : "Kuzmin et al\\.,? \\Q2005\\E",
      "shortCiteRegEx" : "Kuzmin et al\\.",
      "year" : 2005
    }, {
      "title" : "Reducing the sampling complexity of topic models",
      "author" : [ "Li", "Aaron", "Ahmed", "Amr", "Ravi", "Sujith", "Smola", "Alex" ],
      "venue" : "In Proceedings of the ACM Conference on Knowledge Discovery and Data Mining (KDD),",
      "citeRegEx" : "Li et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2014
    }, {
      "title" : "Firefly monte carlo: Exact mcmc with subsets of data",
      "author" : [ "Maclaurin", "Dougal", "Adams", "Ryan Prescott" ],
      "venue" : "In Twenty-Fourth International Joint Conference on Artificial Intelligence,",
      "citeRegEx" : "Maclaurin et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Maclaurin et al\\.",
      "year" : 2015
    }, {
      "title" : "Hoeffding races: Accelerating model selection search for classification and function approximation",
      "author" : [ "Maron", "Oded", "Moore", "Andrew W" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Maron et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Maron et al\\.",
      "year" : 1994
    }, {
      "title" : "Swiftlink: parallel mcmc linkage analysis using multicore cpu and gpu",
      "author" : [ "Medlar", "Alan", "Głowacka", "Dorota", "Stanescu", "Horia", "Bryson", "Kevin", "Kleta", "Robert" ],
      "venue" : null,
      "citeRegEx" : "Medlar et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Medlar et al\\.",
      "year" : 2013
    }, {
      "title" : "Sensitivity and convergence of uniformly ergodic markov chains",
      "author" : [ "Mitrophanov", "A Yu" ],
      "venue" : "Journal of Applied Probability,",
      "citeRegEx" : "Mitrophanov and Yu.,? \\Q2005\\E",
      "shortCiteRegEx" : "Mitrophanov and Yu.",
      "year" : 2005
    }, {
      "title" : "Distributed algorithms for topic models",
      "author" : [ "Newman", "David", "Asuncion", "Arthur", "Smyth", "Padhraic", "Welling", "Max" ],
      "venue" : "The Journal of Machine Learning Research,",
      "citeRegEx" : "Newman et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Newman et al\\.",
      "year" : 2009
    }, {
      "title" : "Perturb-and-MAP random fields: Using discrete optimization to learn and sample from energy models",
      "author" : [ "G. Papandreou", "A. Yuille" ],
      "venue" : "In Proceedings of ICCV,",
      "citeRegEx" : "Papandreou and Yuille,? \\Q2011\\E",
      "shortCiteRegEx" : "Papandreou and Yuille",
      "year" : 2011
    }, {
      "title" : "A sequential procedure for selecting the population with the largest mean from k normal populations",
      "author" : [ "Paulson", "Edward" ],
      "venue" : "The Annals of Mathematical Statistics,",
      "citeRegEx" : "Paulson and Edward.,? \\Q1964\\E",
      "shortCiteRegEx" : "Paulson and Edward.",
      "year" : 1964
    }, {
      "title" : "Ergodicity of approximate MCMC chains with applications to large data sets",
      "author" : [ "Pillai", "Natesh S", "Smith", "Aaron" ],
      "venue" : "arXiv preprint arXiv:1405.0182,",
      "citeRegEx" : "Pillai et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Pillai et al\\.",
      "year" : 2014
    }, {
      "title" : "Bayes and big data: The consensus monte carlo algorithm",
      "author" : [ "Scott", "Steven L", "Blocker", "Alexander W", "Bonassi", "Fernando V", "H Chipman", "E George", "R. McCulloch" ],
      "venue" : "EFaBBayes 250 conference,",
      "citeRegEx" : "Scott et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Scott et al\\.",
      "year" : 2013
    }, {
      "title" : "Probability inequalities for the sum in sampling without replacement",
      "author" : [ "R.J. Serfling" ],
      "venue" : "Ann. Statist., 2(1):39–48,",
      "citeRegEx" : "Serfling,? \\Q1974\\E",
      "shortCiteRegEx" : "Serfling",
      "year" : 1974
    }, {
      "title" : "Monte Carlo MCMC: efficient inference by approximate sampling",
      "author" : [ "Singh", "Sameer", "Wick", "Michael", "McCallum", "Andrew" ],
      "venue" : "In Proceedings of EMNLP-CoNLL",
      "citeRegEx" : "Singh et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Singh et al\\.",
      "year" : 2012
    }, {
      "title" : "Variance reduction for stochastic gradient optimization",
      "author" : [ "Wang", "Chong", "Chen", "Xi", "Smola", "Alex J", "Xing", "Eric P" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Wang et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2013
    }, {
      "title" : "Bayesian learning via stochastic gradient Langevin dynamics",
      "author" : [ "Welling", "Max", "Teh", "Yee W" ],
      "venue" : "In Proceedings of ICML",
      "citeRegEx" : "Welling et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Welling et al\\.",
      "year" : 2011
    }, {
      "title" : "Variance reduction techniques for digital simulation",
      "author" : [ "Wilson", "James R" ],
      "venue" : "American Journal of Mathematical and Management Sciences,",
      "citeRegEx" : "Wilson and R.,? \\Q1984\\E",
      "shortCiteRegEx" : "Wilson and R.",
      "year" : 1984
    }, {
      "title" : "Efficient multicore collaborative filtering",
      "author" : [ "Wu", "Yao", "Yan", "Qiang", "Bickson", "Danny", "Low", "Yucheng", "Yang", "Qing" ],
      "venue" : "In ACM KDD CUP workshop,",
      "citeRegEx" : "Wu et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Wu et al\\.",
      "year" : 2011
    }, {
      "title" : "Distributed context-aware bayesian posterior sampling via expectation propagation",
      "author" : [ "M. Xu", "Y.W. Teh", "J. Zhu", "B. Zhang" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Xu et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Xu et al\\.",
      "year" : 2014
    }, {
      "title" : "i.i.d. assumption for rewards from each arm was used only in Lemma 3 to provide Chernoff’s bound and Hoeffding’s bound",
      "author" : [ "Jamieson" ],
      "venue" : "As noted in Sec. 6 of Hoeffding",
      "citeRegEx" : "Jamieson,? \\Q1963\\E",
      "shortCiteRegEx" : "Jamieson",
      "year" : 1963
    }, {
      "title" : "∀i, Theorem 2 in Jamieson et al. (2014) applies to adapted lil’UCB with modification 1 and 2 only",
      "author" : [ "N i" ],
      "venue" : null,
      "citeRegEx" : "≤,? \\Q2014\\E",
      "shortCiteRegEx" : "≤",
      "year" : 2014
    } ],
    "referenceMentions" : [ {
      "referenceID" : 24,
      "context" : "For example, distributed algorithms have been used to sample a model with a large number of discrete variables (Newman et al., 2009; Bratires et al., 2010; Wu et al., 2011), smart transition kernels were described for Markov chain Monte Carlo (MCMC) algorithms to sample efficiently a single variable",
      "startOffset" : 111,
      "endOffset" : 172
    }, {
      "referenceID" : 8,
      "context" : "For example, distributed algorithms have been used to sample a model with a large number of discrete variables (Newman et al., 2009; Bratires et al., 2010; Wu et al., 2011), smart transition kernels were described for Markov chain Monte Carlo (MCMC) algorithms to sample efficiently a single variable",
      "startOffset" : 111,
      "endOffset" : 172
    }, {
      "referenceID" : 34,
      "context" : "For example, distributed algorithms have been used to sample a model with a large number of discrete variables (Newman et al., 2009; Bratires et al., 2010; Wu et al., 2011), smart transition kernels were described for Markov chain Monte Carlo (MCMC) algorithms to sample efficiently a single variable",
      "startOffset" : 111,
      "endOffset" : 172
    }, {
      "referenceID" : 19,
      "context" : "with a large or even infinite state space (Li et al., 2014; Kalli et al., 2011).",
      "startOffset" : 42,
      "endOffset" : 79
    }, {
      "referenceID" : 16,
      "context" : "with a large or even infinite state space (Li et al., 2014; Kalli et al., 2011).",
      "startOffset" : 42,
      "endOffset" : 79
    }, {
      "referenceID" : 28,
      "context" : "A common approach to address the big data problem is divide-and-conquer that uses parallel or distributed computing resources to process data in parallel and then synchronize the results periodically or merely once in the end (Scott et al., 2013; Medlar et al., 2013; Xu et al., 2014).",
      "startOffset" : 226,
      "endOffset" : 284
    }, {
      "referenceID" : 22,
      "context" : "A common approach to address the big data problem is divide-and-conquer that uses parallel or distributed computing resources to process data in parallel and then synchronize the results periodically or merely once in the end (Scott et al., 2013; Medlar et al., 2013; Xu et al., 2014).",
      "startOffset" : 226,
      "endOffset" : 284
    }, {
      "referenceID" : 35,
      "context" : "A common approach to address the big data problem is divide-and-conquer that uses parallel or distributed computing resources to process data in parallel and then synchronize the results periodically or merely once in the end (Scott et al., 2013; Medlar et al., 2013; Xu et al., 2014).",
      "startOffset" : 226,
      "endOffset" : 284
    }, {
      "referenceID" : 0,
      "context" : "The stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011) and its extensions (Ahn et al., 2012; Chen et al., 2014; Ding et al., 2014) introduced efficient proposal distributions based on subsampled data.",
      "startOffset" : 90,
      "endOffset" : 146
    }, {
      "referenceID" : 10,
      "context" : "The stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011) and its extensions (Ahn et al., 2012; Chen et al., 2014; Ding et al., 2014) introduced efficient proposal distributions based on subsampled data.",
      "startOffset" : 90,
      "endOffset" : 146
    }, {
      "referenceID" : 11,
      "context" : "The stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011) and its extensions (Ahn et al., 2012; Chen et al., 2014; Ding et al., 2014) introduced efficient proposal distributions based on subsampled data.",
      "startOffset" : 90,
      "endOffset" : 146
    }, {
      "referenceID" : 17,
      "context" : "Another line of research on approximate subsampled MH algorithms does not ignore the rejection step but controls the error with an approximate rejection step based on a subset of data (Korattikara et al., 2014; Bardenet et al., 2014).",
      "startOffset" : 184,
      "endOffset" : 233
    }, {
      "referenceID" : 4,
      "context" : "Another line of research on approximate subsampled MH algorithms does not ignore the rejection step but controls the error with an approximate rejection step based on a subset of data (Korattikara et al., 2014; Bardenet et al., 2014).",
      "startOffset" : 184,
      "endOffset" : 233
    }, {
      "referenceID" : 12,
      "context" : "That idea has also been extended to slice sampling (DuBois et al., 2014) and Gibbs for binary variables (Korattikara et al.",
      "startOffset" : 51,
      "endOffset" : 72
    }, {
      "referenceID" : 17,
      "context" : ", 2014) and Gibbs for binary variables (Korattikara et al., 2014).",
      "startOffset" : 39,
      "endOffset" : 65
    }, {
      "referenceID" : 17,
      "context" : "3 provides a unified framework for subsampling-based discrete sampling, MH (Korattikara et al., 2014; Bardenet et al., 2014) and slice sampling (DuBois et al.",
      "startOffset" : 75,
      "endOffset" : 124
    }, {
      "referenceID" : 4,
      "context" : "3 provides a unified framework for subsampling-based discrete sampling, MH (Korattikara et al., 2014; Bardenet et al., 2014) and slice sampling (DuBois et al.",
      "startOffset" : 75,
      "endOffset" : 124
    }, {
      "referenceID" : 12,
      "context" : ", 2014) and slice sampling (DuBois et al., 2014) algorithms as discussed in Sec.",
      "startOffset" : 27,
      "endOffset" : 48
    }, {
      "referenceID" : 15,
      "context" : "The lil’UCB algorithm (Jamieson et al., 2014) maintains an upper confidence bound (UCB) of μi that is inspired by the law of the iterated logarithm (LIL) for every arm.",
      "startOffset" : 22,
      "endOffset" : 45
    }, {
      "referenceID" : 15,
      "context" : "The lil’UCB algorithm (Jamieson et al., 2014) maintains an upper confidence bound (UCB) of μi that is inspired by the law of the iterated logarithm (LIL) for every arm. At each iteration, it draws a single sample from the arm with the highest bound and updates it. The algorithm terminates when some arm is sampled much more often than all the other arms. We refer readers to Fig. 1 of Jamieson et al. (2014) for details.",
      "startOffset" : 23,
      "endOffset" : 409
    }, {
      "referenceID" : 15,
      "context" : "The lil’UCB algorithm (Jamieson et al., 2014) maintains an upper confidence bound (UCB) of μi that is inspired by the law of the iterated logarithm (LIL) for every arm. At each iteration, it draws a single sample from the arm with the highest bound and updates it. The algorithm terminates when some arm is sampled much more often than all the other arms. We refer readers to Fig. 1 of Jamieson et al. (2014) for details. The time complexity for t iterations is O(log(D)t). It was shown in Jamieson et al. (2014) that lil’UCB achieved the optimal sample complexity up to constants.",
      "startOffset" : 23,
      "endOffset" : 513
    }, {
      "referenceID" : 15,
      "context" : "2 of Jamieson et al. (2014) with additional properties as shown in the following proposition with proof in Appx.",
      "startOffset" : 5,
      "endOffset" : 28
    }, {
      "referenceID" : 15,
      "context" : "Theorem 2 of Jamieson et al. (2014) holds for the adapted lil’UCB algorithm.",
      "startOffset" : 13,
      "endOffset" : 36
    }, {
      "referenceID" : 15,
      "context" : "Theorem 2 of Jamieson et al. (2014) holds for the adapted lil’UCB algorithm. Moreover T (t) i ≤ N, ∀i, t. Therefore, when the algorithm terminates, t = ∑ i∈X T (t) i ≤ ND. Notice that Thm. 2 of Jamieson et al. (2014) shows that t scales roughly asO(1/∆) with ∆ being the mean gap and therefore t ND when the gap is large.",
      "startOffset" : 13,
      "endOffset" : 217
    }, {
      "referenceID" : 4,
      "context" : "Bardenet & Maillard (2013) extended the work and provided an empirical Bernstein-Serfling bound that was later used for the subsampling-based MH algorithm (Bardenet et al., 2014): for any δ ∈ (0, 1] and any n ≤ N , with probability 1− δ, it holds that",
      "startOffset" : 155,
      "endOffset" : 178
    }, {
      "referenceID" : 17,
      "context" : "Korattikara et al. (2014) made such",
      "startOffset" : 0,
      "endOffset" : 26
    }, {
      "referenceID" : 17,
      "context" : "A of Korattikara et al. (2014). Corollary 4.",
      "startOffset" : 5,
      "endOffset" : 31
    }, {
      "referenceID" : 31,
      "context" : "In the Bayesian inference experiment where the factor fn(X = i) = p(yn|X = i), we adopt a similar approach as Wang et al. (2013) and take the Taylor expansion of li,n around a reference point ŷ as",
      "startOffset" : 110,
      "endOffset" : 129
    }, {
      "referenceID" : 3,
      "context" : "For algorithms depending on a reward bound C in order to get a tight bound for li,n − hi,n it requires a more restrictive condition for C as in Bardenet et al. (2015) and we might end up with an even more conservative strategy in general cases.",
      "startOffset" : 144,
      "endOffset" : 167
    }, {
      "referenceID" : 1,
      "context" : "2 is similar to UCB-Normal in Auer et al. (2002) but the latter assumes a normal distribution for individual rewards and will perform poorly when it does not hold.",
      "startOffset" : 30,
      "endOffset" : 49
    }, {
      "referenceID" : 3,
      "context" : "3 are based on subsampling-based MH algorithms in Bardenet et al. (2014); Korattikara et al.",
      "startOffset" : 50,
      "endOffset" : 73
    }, {
      "referenceID" : 3,
      "context" : "3 are based on subsampling-based MH algorithms in Bardenet et al. (2014); Korattikara et al. (2014). The proposed algorithm extends those ideas from MH to discrete sampling.",
      "startOffset" : 50,
      "endOffset" : 100
    }, {
      "referenceID" : 3,
      "context" : "3 are based on subsampling-based MH algorithms in Bardenet et al. (2014); Korattikara et al. (2014). The proposed algorithm extends those ideas from MH to discrete sampling. In fact, let x and x′ be the current and proposed value in an MH iteration, Racing-EBS and Racing-Normal reduce to the algorithms in Bardenet et al. (2014) and Korattikara et al.",
      "startOffset" : 50,
      "endOffset" : 330
    }, {
      "referenceID" : 3,
      "context" : "3 are based on subsampling-based MH algorithms in Bardenet et al. (2014); Korattikara et al. (2014). The proposed algorithm extends those ideas from MH to discrete sampling. In fact, let x and x′ be the current and proposed value in an MH iteration, Racing-EBS and Racing-Normal reduce to the algorithms in Bardenet et al. (2014) and Korattikara et al. (2014) respectively if we set",
      "startOffset" : 50,
      "endOffset" : 360
    }, {
      "referenceID" : 3,
      "context" : "The difference with Bardenet et al. (2014) is that we distribute the error δ evenly across t in Eq.",
      "startOffset" : 20,
      "endOffset" : 43
    }, {
      "referenceID" : 3,
      "context" : "The difference with Bardenet et al. (2014) is that we distribute the error δ evenly across t in Eq. 7 while Bardenet et al. (2014) set δt = (p − 1)/(p(T ))δ with p a free parameter.",
      "startOffset" : 20,
      "endOffset" : 131
    }, {
      "referenceID" : 3,
      "context" : "The difference with Bardenet et al. (2014) is that we distribute the error δ evenly across t in Eq. 7 while Bardenet et al. (2014) set δt = (p − 1)/(p(T ))δ with p a free parameter. The differences with Korattikara et al. (2014) are that we take a doubling schedule for m and replace the t-test with the normal assumption.",
      "startOffset" : 20,
      "endOffset" : 229
    }, {
      "referenceID" : 3,
      "context" : "The difference with Bardenet et al. (2014) is that we distribute the error δ evenly across t in Eq. 7 while Bardenet et al. (2014) set δt = (p − 1)/(p(T ))δ with p a free parameter. The differences with Korattikara et al. (2014) are that we take a doubling schedule for m and replace the t-test with the normal assumption. We find that our algorithms are more efficient and robust than both original algorithms in practice. Moreover, the binary Gibbs sampling in Appx. F of Korattikara et al. (2014) is also a special case of RacingNormal with D = 2.",
      "startOffset" : 20,
      "endOffset" : 500
    }, {
      "referenceID" : 3,
      "context" : "The difference with Bardenet et al. (2014) is that we distribute the error δ evenly across t in Eq. 7 while Bardenet et al. (2014) set δt = (p − 1)/(p(T ))δ with p a free parameter. The differences with Korattikara et al. (2014) are that we take a doubling schedule for m and replace the t-test with the normal assumption. We find that our algorithms are more efficient and robust than both original algorithms in practice. Moreover, the binary Gibbs sampling in Appx. F of Korattikara et al. (2014) is also a special case of RacingNormal with D = 2. Therefore, Alg. 1 provides a unifying approach to a family of subsampling-based samplers. The variance reduction technique is similar to the proxies in Bardenet et al. (2015), but the control variate here is a function in the data space while the proxy in the latter is a function in the parameter space.",
      "startOffset" : 20,
      "endOffset" : 726
    }, {
      "referenceID" : 12,
      "context" : "We set the scale parameter of adapted lil’UCB with C/2 and other parameters with the heuristic setting in Jamieson et al. (2014). Racing uses the pairwise variance estimate.",
      "startOffset" : 106,
      "endOffset" : 129
    }, {
      "referenceID" : 3,
      "context" : "Surprisingly, Racing-Normal performs robustly regardless of reward distributions with the first mini-batch size m = 50 while it was shown in Bardenet et al. (2014) that the algorithm with the same normal assumption in Korattikara et al.",
      "startOffset" : 141,
      "endOffset" : 164
    }, {
      "referenceID" : 3,
      "context" : "Surprisingly, Racing-Normal performs robustly regardless of reward distributions with the first mini-batch size m = 50 while it was shown in Bardenet et al. (2014) that the algorithm with the same normal assumption in Korattikara et al. (2014) failed with LogNormal even when m = 500.",
      "startOffset" : 141,
      "endOffset" : 244
    }, {
      "referenceID" : 30,
      "context" : "Singh et al. (2012) addressed this problem with a conditional random field model with pairwise factors.",
      "startOffset" : 0,
      "endOffset" : 20
    }, {
      "referenceID" : 13,
      "context" : "We consider the MAP inference problem with fixed θ using annealed Gibbs sampling (Finkel et al., 2005).",
      "startOffset" : 81,
      "endOffset" : 102
    }, {
      "referenceID" : 17,
      "context" : "The Racing algorithm provides a unifying approaches to various subsampling-based Monte Carlo algorithms and also improves the robustness of the original MH algorithm in Korattikara et al. (2014). This is also the first work to discuss MABs under the setting of a finite reward population.",
      "startOffset" : 169,
      "endOffset" : 195
    } ],
    "year" : 2016,
    "abstractText" : "Drawing a sample from a discrete distribution is one of the building components for Monte Carlo methods. Like other sampling algorithms, discrete sampling suffers from the high computational burden in large-scale inference problems. We study the problem of sampling a discrete random variable with a high degree of dependency that is typical in large-scale Bayesian inference and graphical models, and propose an efficient approximate solution with a subsampling approach. We make a novel connection between the discrete sampling and Multi-Armed Bandits problems with a finite reward population and provide three algorithms with theoretical guarantees. Empirical evaluations show the robustness and efficiency of the approximate algorithms in both synthetic and real-world large-scale problems.",
    "creator" : "LaTeX with hyperref package"
  }
}