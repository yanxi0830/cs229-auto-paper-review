{
  "name" : "1411.4102.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Anisotropic Agglomerative Adaptive Mean-Shift",
    "authors" : [ "Rahul Sawhney", "Henrik I. Christensen", "Gary R. Bradski" ],
    "emails" : [ "rahul.sawhney@gatech.edu", "hic@gatech.edu", "gbradski@magicleap.com" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "‘Mean Shift’ ([15, 7], MS) is a powerful nonparametric technique for unsupervised pattern clustering and mode seeking. References [11, 3] established it’s utility in low-level perception tasks such as feature clustering, filtering and in tracking. It has been in popular use since, as a very useful tool for pattern clustering of sensor data ([28, 14] for example). It has also found niche as a preprocessor (a priori segmentation, smoothing) before higher level image & video analysis tasks such as scene parsing, object recognition, detection ([22, 35, 20]). Image segmentation approaches such as Markov Random Fields, Spectral clustering, Hierarchical clustering use it as an a priori segmenter with improved results ([22, 26, 21, 31, 30]).\nMean Shift methodologies though, employ some assumptions and have some limitations, which may not be desirable. Its popular standard form, [11], utilizes fixed, scalar bandwidth assuming homoscedasticity and isotropicity. Being homoscedastic, it also requires proper bandwidth choice on a per instance basis. The adaptive Mean Shift variants, [12, 16], ascertain variable bandwidths, but they still assume isotropicity. They also make use of heuristics which are not flexible, and lack clustering control. Offline bandwidth selection methods for Mean Shift ([6, 17, 10]), typically estimate a single, global bandwidth, and/or are data specific/non-automatic. As indicated in Fig.1 - isotropic/scalar bandwidths tend to smooth anisotropic patterns and affect partition boundaries, while global/homoscedastic bandwidths are inappropriate when clusters (or modes) at different scales need to be identified.\nc© 2014. The copyright of this document resides with its authors. It may be distributed unchanged freely in print or electronic forms.\nar X\niv :1\n41 1.\n41 02\nv1 [\ncs .C\n(a) 3D Clustering result (23 clusters) over image data (left, L*a*b* space) by the proposed approach. 1-sigma final trajectory bandwidths have been overlaid over the converged modes. The segment image is shown on right.\n(b) Comparitive results with standard MS (left) and variable-bandwidth isotropic MS ([16], right), at similar clustering levels, 25 & 27 respectively, are shown. Final mode locations have been indicated over the cluster plots. MS with correctly chosen bandwidth detected more coherent modes than [16], but looses partition saliency (bushes, water, sky in background). [16] better adapts to scales but oversegments at places, and smooths over others (face). Both smoothed over details, failed to detect some modes at lower scales (trouser edges, maroon on shirt & shoes). In general, conventional MS had a typical tendency to over-segment heavily or compromise partition boundaries.\nFigure 1: Exemplar illustrative result of our approach, AAAMS (a), is shown along with conventional MS results (b), at comparable clustering levels. As is indicated by the plots and segment images, AAAMS effectively adapts to local scale and preserves anisotropic details, affecting more salient partitions.\nWe present a Mean Shift methodology which is anisotropic and locally adaptive. It is able to leverage guided agglomeration for unsupervised bandwidth selection (Fig.1, 5). This results in robust mode detection, with increased partition saliency. Also as a consequence, a low valued parameter set performs nicely over a wider range of data instances (Sec. 2.1).\nClusters arise on the fly in the proposed approach, as a consequence of agglomeration of extant clusters. Local bandwidths (Secs. 1.1, 2) which evolve anisotropically every iteration, are associated with each cluster; by design, all members of a cluster converge to the same local mode. By evolving as function of a cluster’s aggregated trajectory points, these bandwidths are able to adapt to the underlying mode structure (shape, scale, orientation) - and in turn, guide future cluster trajectory and agglomeration. The supplementary also presents a useful result - a convergence proof when full bandwidths vary between Mean Shift iterations, as is the case here. We refer to our approach as online because it’s an on the fly unsupervised procedure; with simple bookkeeping doing away with re-calculations."
    }, {
      "heading" : "1.1 Motivation and Background",
      "text" : "We utilize the exposition style of [5]. Let {xi}ni=1 ⊂ Rd , be a set of d-dimensional data points with their sample point kernel density estimate (KDE) being p(x) = ∑ni=1 p(xi)p(x|xi) = ∑ni=1 pi 1 ci K(‖x−xi‖Σi ). Stationary points of the KDE can be estimated by evaluating the density gradient and setting it to zero. This gives rise to the Mean-Shift fixed point iteration : xτ+1 = f (xτ ) (1a)\nf (xτ ) = ( n\n∑ i=1 pi 1 ci K ′ (‖xτ − xi‖Σi )Σ −1 i\n)−1 × ( n\n∑ i=1 pi 1 ci K ′ (‖xτ − xi‖Σi )Σ −1 i xi\n) (1b)\nK(t), t ≥ 0, is a d-variate kernel with compact support satisfying some regularity constraints, mild in practice ([11, 5] for details). ‖x− xi‖Σi ≡ ((x− xi)T Σ −1 i (x− xi))\n1/2, is the Mahanalobis metric. The point prior pi ≡ p(xi) is usually taken as 1/n. ci is a normalizing constant depending only on the covariance matrix, Σi (kernel bandwidth), associated with each data point. The bandwidth, Σi, is roughly an inverse measure of local curvature around xi. It linearly captures\nthe scale and correlations of the underlying data. τ indicates the iteration count. In practice, since K(t) is taken with truncated support, the summations are only over n′ neighbors of xτ , with n′ n. The vector m(xτ ) = f (xτ )− xτ , is referred to as the Mean Shift. It’s a bandwidth scaled version of ∇p(x), is free from a step size parameter, is large in regions with low p(x) and small near the modes. Starting at a data point, xτ=0i ≡ xi, the fixed point update is run multiple times till convergence. The resulting points, xτ≥1i is referred to as the trajectory of xi, tracing a path to the local mode. The technique thus, is able to locate modes and partition feature space, without a priori knowledge of partition count or structure.\nThe above hinges on selecting reasonable bandwidth matrices Σi. Good bandwidths capture the underlying local distribution effectively. In our approach, data points (pertaining to a cluster) converging to a common local mode share a common bandwidth - one which reflects this mode’s structure, and to an extent, its basin of attraction ([11]). We refer to it as the local bandwidth ([10] utilizes local bandwidths in a related sense).\nIn online unsupervised usage, almost all Mean Shift variants for clustering, for example [11, 30, 37, 27], work under the restrictive assumptions of homoscedasticity and isotropicity (Σi = σ2I, standard fixed bandwidth Mean Shift). The scale parameter σ has to be set carefully based on the dataset instance. [36] utilizes set covering based iterative agglomeration for improved efficiency. Coverage is ensured through overlaps of small fixed homoscedastic bandwidths. Some applications only assume isotropicity (Σi = σ2i I, adaptive / variablebandwidth Mean Shift). σi is estimated using a variation of the following two heuristics ([12, 16]) - 1) kth nearest neighbor, xki , distance heuristic → σi ∝ ‖xi− xki ‖, or 2) Abramson’s heuristic → σi ∝ σo(π(xi))−1/2, where π(x) is the pilot density estimate obtained by first running mean shift with analysis bandwidth, σo. They have found more use in smoothing type applications as reported in [25, 19]. Variants have also been used in tracking scenarios, where the bandwidths are adapted in a task specific fashion (see [18, 9], for example). [23, 33] adapt isotropic bandwidths to object scales, to unimodally track, search for them. The topological, blurring, evolving variants for clustering (like [27, 30, 37, 4, 29]) use isotropic bandwidths. They are primarily aimed at increased efficiency, with results on par with standard mean shift. [32] presents improvements over the somewhat related Mediod Shift. They propose usage of their algorithm as initialization for Mean Shift, for increased efficiency.\nIn offline settings, [10] presents a supervised methodology. Training data is processed with analysis bandwidths to select local bandwidths based on neighboring partition stability. The estimated bandwidths are then used to partition similarly distributed test image data. Only recently were automatic full bandwidth selectors for density gradient estimation proposed in [17, 6], for offline settings. These focus on obtaining good data density gradients (as opposed to clustering) and optimize based on the mean square integrated error (MISE). A single global bandwidth is estimated for the given data, and as the authors themselves note, the involved computations are not straighforward.\nA very useful variant is Joint Domain Mean Shift, [11], which is used to create partitions jointly respecting the dataset’s multiple feature domains which are mutually independent; For example, 〈color,space〉 in color based segmentation & smoothing, and 〈color, f low〉 in motion segmentation. When x = [xrT xsT ] with (xr⊥xs) |x, and utilizing two separate kernels, Kr, Ks, we’ll have p(x) = ∑ni=1 p(xi)p(xr |xi)p(xs|xi). Eq.1b analogue would then come out to be f (xτ ) =\n( ∑ni=1 pi 1c′i J(‖xτ,r− xir‖Σri ,‖x τ,s− xis‖Σsi )Σ −1 i )−1 × ( ∑ni=1 pi 1c′i J(‖xτ,r− xir‖Σri ,‖x τ,s− xis‖Σsi )Σ −1 i xi ) , where c′i\nis the normalization constant, J(t1, t2) ≡ K′r (t1)Ks(t2) = Kr(t1)K ′ s (t1),∀t1, t2 ≥ 0, and Σi = [ Σri 0 0 Σsi ] . Typically, but not necessarily, xs may lie on a spatial manifold - imposing structure to data which is utilized. Instances in literature use fixed global scale parameters σ r and σ s, which have\nthe aforementioned limitations. As noted in [31] on color segmentation, σ r and σ s need to be selected carefully. Good choices are not always possible, with segments being too coarse or too fine at times (Figs. 3, 5). Reference [34] utlizes an anisotropic Σsi for visual data segmentations. Every data point’s associated bandwidth, Σi, is modulated multiple times in each iteration, until convergence is achieved. Modulation heuristics have been provided, to be deployed as per task. The spatial bandwidth Σsi is parameterized as function of eigenvectors of neighborhood data covariance. Σri is taken to be an isotropic scalar dependent on Σsi ."
    }, {
      "heading" : "2 Methodology",
      "text" : "A data point, xi, is alternatively represented as xi,u - the first index value being its unique identifier as before and the second index indicating its current, exclusive membership to a cluster, u∈ {1, . . .n} 1. A cluster u’s constituent data points is denoted by the set , Cu = {xi,u | ∃ i∈ {1, . . .n}}. By algorithm design, clusters are merged only when they are tending towards the same mode - thus all member points of a cluster, u, will eventually converge to a common local mode, say µu. They hence, are also taken to share a common local bandwidth, Σu. This bandwidth develops every iteration when the cluster u’s trajectory points set, Tu , gets additional elements. The set of clusters surviving at iteration, τ, would be Uτ = {u |Cu 6= /0}. |Uτ | would indicate its cardinality. At beginning, at τ = 0, each point trivially forms a separate cluster→U0 = {1, . . .n} , Cu = {xi=u,u}, ∀u∈U0. Given the initialization, each extant cluster u∈Uτ will always contain the initial point, xu,u - which we refer to as its principle member.\nAt any iteration τ, for each extant cluster u, mean shift updates happen for only the principle member, xu,u; with the first iteration running over trivial clusters. The resulting trajectory is specified as xτ≥1u,u or simply uτ . A cluster’s trajectory might end when it gets merged or converged. In general, each data point, xi, started out as a trivial cluster, and had or still has a trajectory - it’s trajectory set being {xτ=1:endi }. ′end′ being the iteration at which the trajectory ended; else the current iteration. Note that the data point xi itself is not included in this set. For any surviving cluster u, then, the complete set of all agglomerated trajectory points associated with it, would be Tu = {∪{xτ=1:endi } | xi ∈Cu} - basically a union of all the members’ trajectory sets. uτ is indicative of the cluster u’s location. At convergence, uτ would be the location of a local mode. u’s members would then be comprising of data points pertaining to that mode and its basin (Fig. 1(a)). The data density in the immediate vicinity of uτ ’s current position is indicated as ρ(uτ ), or simply, ρu. We use operator Π to retrieve the cluster identifier of an arbitrary data point; so Π(xi,u) = u. The n′ data points in uτ ’s neighborhood are denoted as Nex(uτ ), and the clusters containing them as G = {∪Π(y) | y ∈ Nex(uτ )}.2\nThe methodology for anisotropic, agglomerative, adaptive Mean Shift (AAAMS) is presented as a pseudo code in Alg. 1. At every iteration, the following steps are run for each surviving cluster that has not converged → 1) Mean shift update is computed and the cluster’s location is updated. No merges happen before the first update. 2) Nearest neighbors about the current location are ascertained - they are utilized for cluster merges, and for the mean shift\nupdate in subsequent iteration. 3) When merge criteria are met, either some clusters (owners of the neighborhood points which lie within epsilon) get\nmerged into this cluster, or this cluster gets merged into one of them. 4) If the incumbent cluster survived after the merge, its bandwidth is updated. 5) Optionally, if the cluster has converged, its location could be perturbed a bit. It is, then, not taken out of consideration\nin subsequent iteration.\n1The second index is left out when the membership is apparent or inconsequential. We similarly ease out the notations whenever pertinent, to simplify exposition without loss of intuition.\n2Since a cluster corresponds one-to-one with its principle member, principle member’s trajectory is at times referred to as cluster trajectory. Similarly, convergence of trajectory is at times referred to as cluster converging. τ , apart from indicating iteration, also differentiates between a trajectory point and a data point. The cluster trajectory, uτ ≡ xτ≥1u,u , is the trajectory resulting from data point xu,u . The cluster u’s current location refers to current position of the principle member, indicated by uτ .\nAlgorithm 1 : AAAMS - Anisotropic Agglomerative Adaptive Mean Shift\nFunction : AAAMS 〈{xi}ni=1〉 with xi ∈ Rd Returns : 〈U∗,C∗, {µu}u∈U∗ , {Σ∗u}u∈U∗ 〉 ## ConvergenceCriteria → ‖mu‖ ≤ δ Uo = {1, . . .n} ; Cu = {xu} , xou = xu, Σu = σ2baseId , ∀u ∈U0 τ = 0 ; λ = 5 ; δ =Convergence epsilon mu = Large ∈ Rd , Tu = φ , ∀u ∈U0\nWhile ∃u ∈Uτ s.t. ‖mu‖> δ ForEach u ∈ Uτ s.t. ‖mu‖> δ\nuτ+1 =  Eq.4 Eq.2b\nEq.3\nESS(u) < λ\nESS(g) ≥ λ , ∀g ∈ G\notherwise\nmu = uτ+1−uτ ; Tu = Tu ∪uτ+1 Get Nex(uτ+1) ForEach y ∈ Nex(uτ+1) or till Cu 6= /0 I f Π(y) = u or CΠ(y) = φ T hen Continue I f ∥∥uτ+1− y∥∥> ε T hen Continue\nI f !MergeCheck 〈 uτ+1,y,mu,yτ=1− y,u,Π(y) 〉 T hen Continue\nI f ρu > ρΠ(y) T hen\nCu =Cu ∪CΠ(y) ; CΠ(y) = /0 Tu = Tu ∪TΠ(y) ; TΠ(y) = /0\nElse\nCΠ(y) =Cu ∪CΠ(y) ; Cu = /0 TΠ(y) = Tu ∪TΠ(y) ; Tu = /0\nEndForEach I f Cu = φ T hen Continue\nΣu =  Eq.6Σu ESS(u) ≥ λ otherwise\n## Optionally Perturb 〈 uτ+1 , mu 〉 i f ‖mu‖ ≤ δ EndForEach Uτ+1 = {u | u ∈ Uτ ,Cu 6= /0} τ = τ +1\nEndWhile U∗ =Uτ ; C∗ =Cu , ∀u ∈Uτ ; Σ∗u = Σu , ∀u ∈Uτ\nEndFunction\nFor feature spaces that can be decomposed into independent subspaces, the above can be extended to multiple domains. The update equations would then utlize multiple kernels. Basically, for each domain, a 〈σbase , ε〉 pair needs to be set. For example, for joint domain Mean Shift (Sec:1.1), we’ll have 〈 σrbase , ε r 〉 & 〈 σsbase , ε s 〉 for the two domains. We’ll have then Σbase = [ σr 2 baseIr 0\n0 σs 2\nbaseIs\n] & Σu = [ Σru 0 0 Σsu ] . Σru & Σsu would be evaluated from Eq.6. Eq.2b analogue would be f (uτ ) =\n( ∑ ∀g∈G 1 cg Σ −1 g ∑ ∀i|xi,g∈Nex(uτ ) J(‖uτ,r − xir‖Σru , ‖uτ,s − xis‖Σsu ) )−1 × ( ∑ ∀g∈G 1 cg Σ −1 g ∑ ∀i|xi,g∈Nex(uτ ) J(‖uτ,r − xir‖Σru , ‖uτ,s − xis‖Σsu )xi ) ; likewise for others."
    }, {
      "heading" : "2.1 Update Equations",
      "text" : "Taking pi = 1/n and limiting summations to the neighboring points, Nex(uτ ), the fixed point iteration, Eq. 1a-1b, over a cluster u (rather xu,u) can be reformulated/reorganized as a local bandwidth based decomposition :\nuτ+1 = f (uτ ), whereuτ=0 ≡ xu,u (2a)\nf (uτ ) = (\n∑ ∀g∈G 1 cg Σ−1g ∑ ∀i|xi,g∈Nex(uτ ) K ′ (‖uτ − xi‖Σg )\n)−1 × (\n∑ ∀g∈G 1 cg Σ−1g ∑ ∀i|xi,g∈Nex(uτ ) K ′ (‖uτ − xi‖Σg )xi ) (2b)\nEq. 2b would be exactly the same as Eq. 1b at τ = 0, when all points form trivial clusters. When local homoscedasticity in neighborhood of uτ is assumed with the cluster’s own bandwidth Σu taken as bandwidth estimate for neighborhood Nex(uτ ), Eq. 2b simplifies 3 to :\nf (uτ ) = ∑∀i|xi∈Nex(uτ ) K\n′ (‖uτ − xi‖Σu )xi\n∑∀i|xi∈Nex(uτ ) K ′ (‖uτ − xi‖Σu )\n(3)\nIf global homoscedasticity and isotropicity is assumed, Eq. 2b takes the form of standard mean shift update, where the bandwidth is specified through a fixed scalar σbase :\nf (uτ ) = ∑∀i|xi∈Nex(uτ ) K\n′ (‖(uτ−xi)T (uτ−xi)/σ 2base‖)xi\n∑∀i|xi∈Nex(uτ ) K ′ (‖(uτ−xi)T (uτ−xi)/σ 2base‖)\n(4)\n3Eq.3 gets us a particularly insightful interpretation. Note that ‖uτ − xi‖Σu could be thought of as a partial likelihood measure of the data point xi belonging to the cluster u. Consider the conditional → p(xi/uτ ;u) = K ′ (‖uτ−xi‖Σu )/∑... K ′ (‖uτ−xi‖Σu ) , with the summation in denominator normalizing the distribution. The fixed point update from Eq.3 would then come out to be uτ+1 = ∑... p(xi/uτ ;u)xi. So the updated cluster trajectory uτ+1 is just the neighborhood data expectation, conditioned only under the cluster’s own distribution. In effect, this serves to guide/update a cluster’s trajectory based only on the properties (bandwidth) it has itself ascertained (till τ).\nEach trivial cluster utilizes fixed base bandwidth to begin with, employing Eq. 4 for mean shift updates. Benign clusters form and start moving up on some modes. As soon as a cluster accumulates enough trajectory points for full bandwidth estimates (Sec.2.2) to be significant (u has moved up to denser regions by then), it switches to anisotropic updates, given by Eqs. 3 & 2b. A reasonable test of significance for Σu estimates, is to check if the kernel weighted point count or Effective Sample Size (ESS, [13]) is above some value, λ .\nESS(u) = ∑∀v∈Tu K\n′ ( ∥∥Tu− v∥∥Σestimateu )\n∑∀v∈Tu K ′ (‖0‖Σestimateu )\n(5)\nTu indicates the mean of the trajectory set. The anisotropic update Eq. 3 is used when the cluster has an ESS(u)≥ λ , and the more confident update Eq. 2b is used, when ESS(g)≥ λ , ∀g ∈ G - when all the neighboring clusters too have confident enough bandwidth estimates 4. As a binomial rule of thumb ([13]), λ = 5 is chosen as the minimum ESS, which is analogous to choosing 5 as the minimum individual expected cell counts in a χ2 test of independence.\nSo starting with the initial base scalar, σbase, the bandwidth matrices evolve by themselves. The nice part is that just a low base value suffices for reasonably dense data, with the bandwidths scaling data driven thereon and adapting to the local structure’s scale, shape and orientation. σbase thus becomes indicative of the minimum desired detail in the data space. This is opposed to traditional Mean Shift - where the bandwidth scalar is indicative of the scale at which the data space has to be partitioned."
    }, {
      "heading" : "2.2 Bandwidth Estimation",
      "text" : "Bandwidth estimates based on a cluster’s member data point locations are not reliable ([10] notes this too). A subset of point locations in isolation cannot be considered as representative of underlying distribution. The underlying local distribution is actually a localized subset of the joint non-parametric density represented by the entire dataset - it has significant contributions from neighboring structures as well. The local structure could also be asymmetric and/or without tail(s). A solution lies in considering points which arise from mean shift ascents over the mode the cluster is converging to - the cluster trajectory set, Tu. We use the variance of Tu with respect to the underlying density as an estimate, Σu. As Tu builds up each iteration, so does Σu.\nΣu = ∑∀v∈Tu ρ(v)vv\nτ\n∑∀v∈Tu ρ(v) −ηuηTu + ξ I, whereηu = ∑∀v∈Tu ρ(v)v ∑∀v∈Tu ρ(v)\n(6)\nρ(v) is the data density in the immediate vicinity of a point v ∈ Tu. This is evaluated using σbase for consistency across clusters. ηu &Σu are then basically the expectation and variance of the localized distribution. In practice, a small regularizer, ξ , has to be added to the diagonals of Σu to prevent degenerate fitting in sparse regions, and for numerical stability.While computing anisotropic updates, eigenvalue decomposition is employed and any eigenvalues of Σu which fall below ξ , are clamped to it. Note that Σu always remains positive definite. Also note that all summations are computed on the fly.\nEq. 6 could also be thought of as density weighted trajectory set variance. As a cluster approaches a mode, mean shift trajectory points get more concentrated and are weighted more, leading to a conservative but more localized and robust estimate – more immune to long tails. Figs. 1, 5 plot the bandwidths and modes at convergence, for color and point data.\n4We note empirically for dense data, as in images, a simple cluster size sufficiency check works well. For joint domains, a cluster could switch to anisotropic updates when it has atleast max(dim(xr), dim(xs))2 members.\n(a) Effects of varying the detail and vicinity parameters on a brush painting with smudged colors.\nAcrylic & Oil 〈 4,9, .5,16 〉 〈 9,16, .75,25 〉 〈 16,25,1,36 〉 〈 25,36,2,81 〉 〈 36,49,1.5,64 〉 〈 49,64,1.5,100 〉 〈 64,81,1,121 〉 (b) Parameter sensitivity plots. Each of 〈σrbase2 ,σsbase2 , ε2r , ε2s 〉 was varied while keeping others constant. Their effects on number of clusters, their average size, and iterations for convergence are plotted. Results were averaged over 33 images. As with conventional MS, color domain parameters are understandably more sensitive. δ = .01 was used.\nFigure 2: For joint domain AAAMS over images, we show the qualitative and quantitative effects of varying the detail and vicinity parameters, 〈σrbase2 ,σsbase2 , ε2r , ε2s 〉. Post processing was disabled, except for enforcing cluster contiguity. As can be seen, if the need be, a good control over smoothing and segmentation levels can be exercised."
    }, {
      "heading" : "2.3 Cluster Merging",
      "text" : "For any given data points, if their mean shift trajectories intersect, they will converge to a common local mode. Thus in the vicinity of a data point’s trajectory (which is moving up some mode) - any data points in sufficient proximity, having their shift vectors deemed to be intersecting with this trajectory, could be clustered together. They will eventually end up converging on the same local mode. So we basically consider the data points in the vicinity of a cluster trajectory, uτ - with an epsilon ε, delineating the vicinity. If a data point, y, in vicinity is ascertained (in MergeCheck) to be heading to the same mode as uτ , then by transitivity - all the members of its parent cluster, Π(y), are heading to that mode too - the clusters u and Π(y) , can then be merged. The cluster which is higher up the mode (higher density) assimilates the other cluster into itself, thus accelerating convergence to the mode. This also helps in avoiding spurious merges.\nMergeCheck - This is intentionally specified as a generic function returning a true/false value. It could be implemented to suit different feature spaces and clustering criteria. The more holistic this check is, the larger the operating range of ε can be (assuming the distance norm holds up), without impacting clustering stability. In our experiments, we used a very lightweight generic implementation that worked well over considered data spaces - basically verifying through inner product checks that 1) relative distance between uτ+1 and y is decreasing and 2) Mean shift bearings 5 at uτ+1 and y are in the same direction. We note though that divergence measures like Bhattacharya (Sec. 2.4), kernel induced feature space metrics ([26]), information-theoretic ones like Renyi’s entropy ([14]) seem viable, interesting possibilities for MergeCheck. We are yet to experiment with them."
    }, {
      "heading" : "2.4 Post Processing",
      "text" : "Once data has been partitioned, a post processing step merges clusters with proximate modes, and ensures a minimum cluster size (in conventional Mean Shift, clusters are delineated only during the post process). Additionally for structured data, cluster contiguity could be enforced. We use graph operations. For structured data as in images, adjacency connections between clusters can be added naturally using a spatial grid structure. For unstructured data, connections between a cluster and all clusters within a reasonably large distance threshold (mode to mode distances) were added, to ensure a connected graph. Bhattacharya diver-\n5The bearing at uτ+1 is mu. The bearing at y, given by yτ=1−y , is the mean shift vector resulting from the first iteration over the trivial cluster containing y; it’s stored up for consequent use.\nAlgorithm 2 : Post Processing\n• (For structured data only) For each cluster, use spatial adjacency to ascertain the disconnected components (highest density/mode locations for these small disconnected point sets need to be recomputed). Each disconnected component forms an additional separate cluster thereon. • Build the adjacency graph. • Merge all clusters which fall below minimum desired size, to\nthe closest adjacent cluster until no such remain. • For each remaining cluster, using its constituent points, com-\npute the density weighted variances, similar to Eq.6 - this is representative of the cluster’s stand-alone distribution and alleviates tail influences. • For each pair of remaining clusters {a, b}, connected by an adjacency edge, evaluate →\ndB = 1 8 ( µa −µb )T ( Σa+Σb 2 )−1 ( µa −µb ) + 12 ln  det ( Σa+Σb 2 ) √ det(Σa).det ( Σb ) . If it falls below a certain threshold, merge the two.\nMethods / Score PRI GCE VoI BDE AAAMS .8230 .1589 2.1785 12.60 JMS∗ .7870 .1608 2.2484 13.34 Prior Art [21] FullSpectralOverMS [21] 0.8146 0.1809 1.8545 12.21 JMS [8] 0.7958 0.1888 1.9725 14.41 NCut [21] - Ref. [27] 0.7330 0.2662 2.6137 17.19 MNCUT [21] - Ref. [6] 0.7632 0.2234 2.2789 13.17 GBIS [21] - Ref. [9] 0.7139 0.1746 3.3949 16.67 Saliency [21] - Ref. [8] 0.7758 0.1768 1.8165 16.24 JSEG [21] - Ref. [7] 0.7756 0.1989 2.3217 14.40\nTable 1: Results on BSD300 [24]. We used a single parameter set 〈20,36,1,64〉 for AAAMS. For better results, dB was set from {.25, .5,1,1.25,1.5,2}. JMS∗ parameters were selected per image to maintain similar segmentation levels, with an eye on preserving details, segment saliency. For perspective, we also reproduce results from [21] of unsupervised image segmentation methods. [21] selects segment levels per image. Top three values for each index are colored as rgb. AAAMS performs best overall - it’s clearly ahead in PRI & GCE, and is a close second in BDE. Note that [21], which has the next best values, operates over a priori Mean Shift segmentations.\ngence ([2], dB) was used as the merging criteria. It takes into account not just the variance normalized mode proximity, but also the disparity in variances themselves (Mahanalobis measure is its special case). 0≤ dB ≤ 4 was a good range, with dB = 1 (somewhat analogous to 1− sigma2 disparity) performing well generally 6. Alg. 2 specifies the steps."
    }, {
      "heading" : "3 Results",
      "text" : "The base scalar parameter σbase, in effect, regulates the minimum desired detail in the feature space, the smoothing level. The vicinity parameter, ε, regulates cluster merge chances and hence cluster sizes. For images, with AAAMS operating over joint domains of 〈color, space〉, the detail and vicinity parameters would be 〈σ rbase, σ sbase〉 and 〈εr , εs〉 respectively (indicated in Alg. 1). Fig. 2, shows quantitative and qualitative effects of their variation. Although a good degree of control is possible to achieve a desired result, our experiments showed that any low valued set gave nice results over a good range of images.\nDue to agglomeration, the number of clusters decrease monotonically every iteration. Only a fraction of clusters remain after the first couple of iterations; with the cluster count falling rapidly in all early iterations. The scheme thus results in a drastic reduction in net mean shift computes - as compared to the hitherto style of clustering only after convergence, where computations happen for every data point, in each iteration. (for dense image data, typically less than 5% of the clusters remain by the 11th or 12th iteration). This serves to offset the additional computational workload arising from the use of full bandwidth matrices. Our straight up joint domain implementation was achieving similar timings on average to standard Mean Shift, which uses scalar bandwidths. Improvements in efficency based on fast nearest neighbor search such as exploiting grid structure of spatial domain, locally sensitive hashing ([16]) are applicable in our methodology too. Using Gaussian kernels, with a convergence delta, δ , set adequately to .01, merges would cease before 90th iteration, with convergence around the 100th. When just pre-partitioning is the end objective, the merging scheme thus allows us to fine tune stopping criteria. Along with the first iteration shift vectors, globally normalized local density values at each data point were stored for consequent use too. In each iteration, ρ(uτ ) was then approximated by the density value at uτ ’s nearest data point. We found perturbations to be generally useful, lending to mode detection robustness and more salient partitioning. A cluster at convergence can be perturbed a fixed number of times consecutively, with progressively damped magnitudes. u then, would not be brought\n6For images, since color similarity alone is of consequence, dB was evaluated only over the L∗a∗b∗ space\nSAWHNEY, CHRISTENSEN, BRADSKI: ANISOTROPIC ADAPTIVE MEAN SHIFT 9 Image JMS AAAMS JMS Labels AAAMS Labels\nLady JMS - 523 Labels, AAAMS - 490 Labels\nSoldier JMS - 617 Labels, AAAMS - 601 Labels\nBench JMS - 180 Labels, AAAMS - 165 Labels\nMandrill JMS - 752 Labels, AAAMS - 721 Labels\nFigure 3: AAAMS preserves more details and affects more perceptually salient segmentations, at similar clustering levels. We used a single parameter set, 〈σrbase2 ,σsbase2 , ε2r , ε2s 〉 = 〈15,16,1,81〉 with dB = 1, to show its adaptivity on varied images. JMS segments were kept around the same, with eye on preserving detail; it still smooths over at places. Its parameter values varied significantly from image to image - σr2 ∈ [49, 81] , σs2 ∈ [100, 289]. Minimum cluster size was 10.\nout of contention in the next iteration - although the immediate trajectory point resulting from the perturbation will not be included in Tu. The results presented in this paper though, are with perturbations disabled.\nFor image data, comparisons (Figs. 3, 4, Table. 1 7) are shown with joint domain Mean Shift implementation (JMS) from EDISON ([8]), over Berkely Segmentation Dataset ([24], BSD300). BSD300 is meant for supervised algorithms - we simply clubbed the training and test images together. For sake of completeness, prior art on unsupervised image segmentation is also shown in Table. 1. All indicated parameter values for AAAMS and JMS are squared. We did not search for the best performing parameter set for AAAMS, opting for a single low valued set instead. AAAMS performed significantly better than JMS, with results superior to other unsupervised image segmentation methods as well.\nOur experiments indicated that low base bandwidths, 〈σ rbase, σ sbase〉, performed generally 7Probabilistic Rand Index (PRI), Variation of Information (VoI), Global Consistency Error (GCE), Boundary Displacement Error (BDE). The first three are clustering purity measures. PRI is a measure of the fraction of pairs of points whose labels are consistent with a given labeling. VoI and BDE are relative distance metrics between two given segmentations, based on average conditional entropy and boundary pixel difference, respectively. GCE measures the extent to which one labeling can be viewed as a refinement of the other. Higher is better for PRI while lower is better for the other three. For BSD300, the values indicate how well a segmentation corresponds to ones by human subjects. We noticed that coarser segmentatios tended to give better values. This, we suppose, was because humans tend to utilize much more comprehensive cues, and incorporate object or more holistic level semantics in their segmentations. It was noticed that PRI corresponded better to low level segment saliency than others."
    }, {
      "heading" : "10 SAWHNEY, CHRISTENSEN, BRADSKI: ANISOTROPIC ADAPTIVE MEAN SHIFT",
      "text" : "Image JMS AAAMS JMS Labels AAAMS Labels\nAeroplane JMS - 14 Labels, AAAMS - 11 Labels\nColorWheel JMS - 51 Labels, AAAMS - 48 Labels\nWasp JMS - 150 Labels, AAAMS - 111 Labels\nFigure 4: More parsimonious segmentations were quite often not achievable with JMS - some varied examples are shown above (Images such as Lady in Fig.3 are a typical case too). Both methods were configured for reduced label usage. Minimum cluster size was 10. JMS, at its limit, is breaking boundaries and under segmenting. AAAMS with lesser labels, does not break boundaries, still maintains segment saliency.\nFigure 5: Single domain clustering examples over color data (top row, 11 clusters) and simulated gaussian mixtures (second row) in 2D & 3D respectively. 1− sigma final trajectory-set bandwidths have been overlaid at converged mode positions.\nData 〈#Dims,#Classes〉 PRI GCE VoI Seeds 〈7D,3〉 .89 / .86 / .87 .17 / .20 / .19 0.85 / 0.98 / 0.93 Yeast 〈8D,10〉 .69 / .61 / .67 .44 / .39 / .47 3.03 / 3.10 / 3.22 Letters 〈16D,26〉 .87 / .86 / .83 .67 / .70 / .62 4.96 / 5.16 / 4.72\nTable 2: Results on higher dimension real world datasets from [1], with a single kernel. Indicated values are of AAAMS / MS / VariableMS ([16]) respectively, with best values in red.\nwell on a good range of images (Fig. 3). This was due to the presented approach being locally adaptive and anisotropic. At similar clustering levels, AAAMS preserved more details and affected more salient segmentations.\nSingle kernel AAAMS was tested on images and 2D, 3D gaussian mixtures at varied scales - with nice results. AAAMS results in Figs. 1(a), 5 are with postprocessing disabled. As indicated in Figs. 1(a), 5, reasonable local bandwidths arise, robustly identifying modes and salient clusters, by adapting according to local structure.\nExperiments were conducted with some higher dimension datasets from [1] as well. Table. 2 shows initial results, along with comparisons with single domain standard Mean Shift (MS), and [16]’s isotropic variable bandwidth implementation. Cluster count was kept the same as class count. AAAMS post-processing was disabled. [16] first determines isotropic point bandwidths using the kth nearest neighbor distance heuristic, and subsequently utlizes them in single kernel mean shift iterations. Our experiments with it indicated a lack of clustering control. The datasets were meant for supervised classification, with attributes/feature components at different scales, and having uncorrelated and/or uninformative dimensions. Without any pre-processing (normalizations, component analysis) decent results were attained with a single kernel AAAMS. Note that [16] internally normalizes the data, while AAAMS & MS results are without any normalizations.\nPromising results, both qualitative and quantitative, are indicative of the efficacy of the presented approach. We intend to experiment further, especially with different merging schemes and on varied data spaces."
    }, {
      "heading" : "4 Conclusion",
      "text" : "A generalized methodology for feature space partitioning and mode seeking was presented - leveraging synergism of adaptive, anisotropic Mean Shift and guided agglomeration. Unsupervised adaptation of full anisotropic bandwidths is useful and further enables Mean Shift clustering. We are excited about its prospects on point-normal clouds and video streams.\nOur experiments did indicate sparse data to be an issue. This is understandable, as it encumbers cluster growth and bandwidth development, with AAAMS behaving like conventional Mean Shift then. Future work would also focus on alleviating this issue."
    } ],
    "references" : [ {
      "title" : "On a measure of divergence between two multinomial populations",
      "author" : [ "Anil Bhattacharyya" ],
      "venue" : "Sankhyā: The Indian Journal of Statistics,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 1946
    }, {
      "title" : "Real time face and object tracking as a component of a perceptual user interface",
      "author" : [ "Gary R Bradski" ],
      "venue" : "In Applications of Computer Vision,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 1998
    }, {
      "title" : "Carreira-Perpiñán. Fast nonparametric clustering with gaussian blurring mean-shift",
      "author" : [ "Á. Miguel" ],
      "venue" : "In Proceedings of the 23rd International Conference on Machine Learning,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2006
    }, {
      "title" : "Gaussian Mean-Shift is an EM algorithm",
      "author" : [ "Miguel Á. Carreira-Perpiñán" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2007
    }, {
      "title" : "Data-driven density derivative estimation, with applications to nonparametric clustering and bump hunting",
      "author" : [ "José E Chacón", "Tarn Duong" ],
      "venue" : "Electronic Journal of Statistics,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2013
    }, {
      "title" : "Mean shift, mode seeking, and clustering",
      "author" : [ "Yizong Cheng" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 1995
    }, {
      "title" : "Synergism in low level vision",
      "author" : [ "Christopher M Christoudias", "Bogdan Georgescu", "Peter Meer" ],
      "venue" : "In Pattern Recognition,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2002
    }, {
      "title" : "Kernel-based object tracking",
      "author" : [ "D. Comaniciu", "V. Ramesh", "P. Meer" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2003
    }, {
      "title" : "An algorithm for data-driven bandwidth selection",
      "author" : [ "Dorin Comaniciu" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2003
    }, {
      "title" : "Mean shift: A robust approach toward feature space analysis",
      "author" : [ "Dorin Comaniciu", "Peter Meer" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2002
    }, {
      "title" : "The variable bandwidth mean shift and data-driven scale selection",
      "author" : [ "Dorin Comaniciu", "Visvanathan Ramesh", "Peter Meer" ],
      "venue" : "In Computer Vision,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2001
    }, {
      "title" : "Feature significance for multivariate kernel density estimation",
      "author" : [ "Tarn Duong", "Arianna Cowling", "Inge Koch", "MP Wand" ],
      "venue" : "Computational Statistics & Data Analysis,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2008
    }, {
      "title" : "Information theoretic feature selection and projection. In Speech, Audio, Image and Biomedical Signal Processing using Neural Networks, pages 1–22",
      "author" : [ "Deniz Erdogmus", "Umut Ozertem", "Tian Lan" ],
      "venue" : null,
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2008
    }, {
      "title" : "The estimation of the gradient of a density function, with applications in pattern recognition",
      "author" : [ "Keinosuke Fukunaga", "Larry Hostetler" ],
      "venue" : "Information Theory, IEEE Transactions on,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 1975
    }, {
      "title" : "Mean shift based clustering in high dimensions: A texture classification example",
      "author" : [ "Bogdan Georgescu", "Ilan Shimshoni", "Peter Meer" ],
      "venue" : "In Computer Vision,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2003
    }, {
      "title" : "Vopatová. Full bandwidth matrix selectors for gradient kernel density estimate",
      "author" : [ "Ivana Horová", "Jan Koláček", "Kamila" ],
      "venue" : "Computational Statistics & Data Analysis,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2013
    }, {
      "title" : "Adaptive mean-shift tracking with novel color model",
      "author" : [ "Mun-Ho Jeong", "Bum-Jae You", "Yonghwan Oh", "Sang-Rok Oh", "Sang-Hwi Han" ],
      "venue" : "In Mechatronics and Automation,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2005
    }, {
      "title" : "Segmenting brain mri using adaptive mean shift",
      "author" : [ "R.J. Jimenez-Alaniz", "M. Pohi-Alfaro", "V. Medina-Bafluelos", "O. Yaflez-Suarez" ],
      "venue" : "In Engineering in Medicine and Biology Society,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2006
    }, {
      "title" : "Event detection in crowded videos",
      "author" : [ "Yan Ke", "Rahul Sukthankar", "Martial Hebert" ],
      "venue" : "In Computer Vision,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2007
    }, {
      "title" : "Learning full pairwise affinities for spectral segmentation",
      "author" : [ "Tae Hoon Kim", "Kyoung Mu Lee", "Sang Uk Lee" ],
      "venue" : "In Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2010
    }, {
      "title" : "Robust higher order potentials for enforcing label consistency",
      "author" : [ "Pushmeet Kohli", "Philip HS Torr" ],
      "venue" : "International Journal of Computer Vision,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2009
    }, {
      "title" : "Scale-invariant object categorization using a scaleadaptive mean-shift search",
      "author" : [ "Bastian Leibe", "Bernt Schiele" ],
      "venue" : "In Pattern Recognition,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2004
    }, {
      "title" : "A database of human segmented natural images and its application to evaluating segmentation algorithms and measuring ecological statistics",
      "author" : [ "David Martin", "Charless Fowlkes", "Doron Tal", "Jitendra Malik" ],
      "venue" : "In Computer Vision,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2001
    }, {
      "title" : "An adaptive mean-shift framework for mri brain segmentation",
      "author" : [ "Arnaldo Mayer", "Hayit Greenspan" ],
      "venue" : "Medical Imaging, IEEE Transactions on,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2009
    }, {
      "title" : "Mean shift spectral clustering",
      "author" : [ "Umut Ozertem", "Deniz Erdogmus", "Robert Jenssen" ],
      "venue" : "Pattern Recognition,",
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2008
    }, {
      "title" : "A topological approach to hierarchical segmentation using mean shift",
      "author" : [ "Sylvain Paris", "Frédo Durand" ],
      "venue" : "In Computer Vision and Pattern Recognition,",
      "citeRegEx" : "27",
      "shortCiteRegEx" : "27",
      "year" : 2007
    }, {
      "title" : "Real-time human pose recognition in parts from single depth images",
      "author" : [ "Jamie Shotton", "Toby Sharp", "Alex Kipman", "Andrew Fitzgibbon", "Mark Finocchio", "Andrew Blake", "Mat Cook", "Richard Moore" ],
      "venue" : "Communications of the ACM,",
      "citeRegEx" : "28",
      "shortCiteRegEx" : "28",
      "year" : 2013
    }, {
      "title" : "Hierarchical evolving mean-shift",
      "author" : [ "M. Surkala", "K. Mozdren", "R. Fusek", "E. Sojka" ],
      "venue" : "In Image Processing (ICIP),",
      "citeRegEx" : "29",
      "shortCiteRegEx" : "29",
      "year" : 2012
    }, {
      "title" : "Hierarchical blurring mean-shift",
      "author" : [ "Milan Šurkala", "Karel Mozdřeň", "Radovan Fusek", "Eduard Sojka" ],
      "venue" : "In Advances Concepts for Intelligent Vision Systems,",
      "citeRegEx" : "30",
      "shortCiteRegEx" : "30",
      "year" : 2011
    }, {
      "title" : "Toward objective evaluation of image segmentation algorithms",
      "author" : [ "Ranjith Unnikrishnan", "Caroline Pantofaru", "Martial Hebert" ],
      "venue" : "Pattern Analysis and Machine Intelligence, IEEE Transactions on,",
      "citeRegEx" : "31",
      "shortCiteRegEx" : "31",
      "year" : 2007
    }, {
      "title" : "Quick shift and kernel methods for mode seeking",
      "author" : [ "Andrea Vedaldi", "Stefano Soatto" ],
      "venue" : "In Computer Vision–ECCV",
      "citeRegEx" : "32",
      "shortCiteRegEx" : "32",
      "year" : 2008
    }, {
      "title" : "Robust scale-adaptive mean-shift for tracking",
      "author" : [ "Tomas Vojir", "Jana Noskova", "Jiri Matas" ],
      "venue" : "In Image Analysis,",
      "citeRegEx" : "33",
      "shortCiteRegEx" : "33",
      "year" : 2013
    }, {
      "title" : "Image and video segmentation by anisotropic kernel mean shift",
      "author" : [ "Jue Wang", "Bo Thiesson", "Yingqing Xu", "Michael Cohen" ],
      "venue" : "Vision-ECCV",
      "citeRegEx" : "34",
      "shortCiteRegEx" : "34",
      "year" : 2004
    }, {
      "title" : "Multiple class segmentation using a unified framework over mean-shift patches",
      "author" : [ "Lin Yang", "Peter Meer", "David J Foran" ],
      "venue" : "In Computer Vision and Pattern Recognition,",
      "citeRegEx" : "35",
      "shortCiteRegEx" : "35",
      "year" : 2007
    }, {
      "title" : "Agglomerative mean-shift clustering",
      "author" : [ "Xiao-Tong Yuan", "Bao-Gang Hu", "Ran He" ],
      "venue" : "Knowledge and Data Engineering, IEEE Transactions on,",
      "citeRegEx" : "36",
      "shortCiteRegEx" : "36",
      "year" : 2012
    }, {
      "title" : "Accelerated convergence using dynamic mean shift",
      "author" : [ "Kai Zhang", "Jamesk T Kwok", "Ming Tang" ],
      "venue" : "In Computer Vision–ECCV",
      "citeRegEx" : "37",
      "shortCiteRegEx" : "37",
      "year" : 2006
    } ],
    "referenceMentions" : [ {
      "referenceID" : 13,
      "context" : "‘Mean Shift’ ([15, 7], MS) is a powerful nonparametric technique for unsupervised pattern clustering and mode seeking.",
      "startOffset" : 14,
      "endOffset" : 21
    }, {
      "referenceID" : 5,
      "context" : "‘Mean Shift’ ([15, 7], MS) is a powerful nonparametric technique for unsupervised pattern clustering and mode seeking.",
      "startOffset" : 14,
      "endOffset" : 21
    }, {
      "referenceID" : 9,
      "context" : "References [11, 3] established it’s utility in low-level perception tasks such as feature clustering, filtering and in tracking.",
      "startOffset" : 11,
      "endOffset" : 18
    }, {
      "referenceID" : 1,
      "context" : "References [11, 3] established it’s utility in low-level perception tasks such as feature clustering, filtering and in tracking.",
      "startOffset" : 11,
      "endOffset" : 18
    }, {
      "referenceID" : 26,
      "context" : "It has been in popular use since, as a very useful tool for pattern clustering of sensor data ([28, 14] for example).",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 12,
      "context" : "It has been in popular use since, as a very useful tool for pattern clustering of sensor data ([28, 14] for example).",
      "startOffset" : 95,
      "endOffset" : 103
    }, {
      "referenceID" : 20,
      "context" : "It has also found niche as a preprocessor (a priori segmentation, smoothing) before higher level image & video analysis tasks such as scene parsing, object recognition, detection ([22, 35, 20]).",
      "startOffset" : 180,
      "endOffset" : 192
    }, {
      "referenceID" : 33,
      "context" : "It has also found niche as a preprocessor (a priori segmentation, smoothing) before higher level image & video analysis tasks such as scene parsing, object recognition, detection ([22, 35, 20]).",
      "startOffset" : 180,
      "endOffset" : 192
    }, {
      "referenceID" : 18,
      "context" : "It has also found niche as a preprocessor (a priori segmentation, smoothing) before higher level image & video analysis tasks such as scene parsing, object recognition, detection ([22, 35, 20]).",
      "startOffset" : 180,
      "endOffset" : 192
    }, {
      "referenceID" : 20,
      "context" : "Image segmentation approaches such as Markov Random Fields, Spectral clustering, Hierarchical clustering use it as an a priori segmenter with improved results ([22, 26, 21, 31, 30]).",
      "startOffset" : 160,
      "endOffset" : 180
    }, {
      "referenceID" : 24,
      "context" : "Image segmentation approaches such as Markov Random Fields, Spectral clustering, Hierarchical clustering use it as an a priori segmenter with improved results ([22, 26, 21, 31, 30]).",
      "startOffset" : 160,
      "endOffset" : 180
    }, {
      "referenceID" : 19,
      "context" : "Image segmentation approaches such as Markov Random Fields, Spectral clustering, Hierarchical clustering use it as an a priori segmenter with improved results ([22, 26, 21, 31, 30]).",
      "startOffset" : 160,
      "endOffset" : 180
    }, {
      "referenceID" : 29,
      "context" : "Image segmentation approaches such as Markov Random Fields, Spectral clustering, Hierarchical clustering use it as an a priori segmenter with improved results ([22, 26, 21, 31, 30]).",
      "startOffset" : 160,
      "endOffset" : 180
    }, {
      "referenceID" : 28,
      "context" : "Image segmentation approaches such as Markov Random Fields, Spectral clustering, Hierarchical clustering use it as an a priori segmenter with improved results ([22, 26, 21, 31, 30]).",
      "startOffset" : 160,
      "endOffset" : 180
    }, {
      "referenceID" : 9,
      "context" : "Its popular standard form, [11], utilizes fixed, scalar bandwidth assuming homoscedasticity and isotropicity.",
      "startOffset" : 27,
      "endOffset" : 31
    }, {
      "referenceID" : 10,
      "context" : "The adaptive Mean Shift variants, [12, 16], ascertain variable bandwidths, but they still assume isotropicity.",
      "startOffset" : 34,
      "endOffset" : 42
    }, {
      "referenceID" : 14,
      "context" : "The adaptive Mean Shift variants, [12, 16], ascertain variable bandwidths, but they still assume isotropicity.",
      "startOffset" : 34,
      "endOffset" : 42
    }, {
      "referenceID" : 4,
      "context" : "Offline bandwidth selection methods for Mean Shift ([6, 17, 10]), typically estimate a single, global bandwidth, and/or are data specific/non-automatic.",
      "startOffset" : 52,
      "endOffset" : 63
    }, {
      "referenceID" : 15,
      "context" : "Offline bandwidth selection methods for Mean Shift ([6, 17, 10]), typically estimate a single, global bandwidth, and/or are data specific/non-automatic.",
      "startOffset" : 52,
      "endOffset" : 63
    }, {
      "referenceID" : 8,
      "context" : "Offline bandwidth selection methods for Mean Shift ([6, 17, 10]), typically estimate a single, global bandwidth, and/or are data specific/non-automatic.",
      "startOffset" : 52,
      "endOffset" : 63
    }, {
      "referenceID" : 14,
      "context" : "(b) Comparitive results with standard MS (left) and variable-bandwidth isotropic MS ([16], right), at similar clustering levels, 25 & 27 respectively, are shown.",
      "startOffset" : 85,
      "endOffset" : 89
    }, {
      "referenceID" : 14,
      "context" : "MS with correctly chosen bandwidth detected more coherent modes than [16], but looses partition saliency (bushes, water, sky in background).",
      "startOffset" : 69,
      "endOffset" : 73
    }, {
      "referenceID" : 14,
      "context" : "[16] better adapts to scales but oversegments at places, and smooths over others (face).",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 3,
      "context" : "We utilize the exposition style of [5].",
      "startOffset" : 35,
      "endOffset" : 38
    }, {
      "referenceID" : 9,
      "context" : "K(t), t ≥ 0, is a d-variate kernel with compact support satisfying some regularity constraints, mild in practice ([11, 5] for details).",
      "startOffset" : 114,
      "endOffset" : 121
    }, {
      "referenceID" : 3,
      "context" : "K(t), t ≥ 0, is a d-variate kernel with compact support satisfying some regularity constraints, mild in practice ([11, 5] for details).",
      "startOffset" : 114,
      "endOffset" : 121
    }, {
      "referenceID" : 9,
      "context" : "In our approach, data points (pertaining to a cluster) converging to a common local mode share a common bandwidth - one which reflects this mode’s structure, and to an extent, its basin of attraction ([11]).",
      "startOffset" : 201,
      "endOffset" : 205
    }, {
      "referenceID" : 8,
      "context" : "We refer to it as the local bandwidth ([10] utilizes local bandwidths in a related sense).",
      "startOffset" : 39,
      "endOffset" : 43
    }, {
      "referenceID" : 9,
      "context" : "In online unsupervised usage, almost all Mean Shift variants for clustering, for example [11, 30, 37, 27], work under the restrictive assumptions of homoscedasticity and isotropicity (Σi = σ2I, standard fixed bandwidth Mean Shift).",
      "startOffset" : 89,
      "endOffset" : 105
    }, {
      "referenceID" : 28,
      "context" : "In online unsupervised usage, almost all Mean Shift variants for clustering, for example [11, 30, 37, 27], work under the restrictive assumptions of homoscedasticity and isotropicity (Σi = σ2I, standard fixed bandwidth Mean Shift).",
      "startOffset" : 89,
      "endOffset" : 105
    }, {
      "referenceID" : 35,
      "context" : "In online unsupervised usage, almost all Mean Shift variants for clustering, for example [11, 30, 37, 27], work under the restrictive assumptions of homoscedasticity and isotropicity (Σi = σ2I, standard fixed bandwidth Mean Shift).",
      "startOffset" : 89,
      "endOffset" : 105
    }, {
      "referenceID" : 25,
      "context" : "In online unsupervised usage, almost all Mean Shift variants for clustering, for example [11, 30, 37, 27], work under the restrictive assumptions of homoscedasticity and isotropicity (Σi = σ2I, standard fixed bandwidth Mean Shift).",
      "startOffset" : 89,
      "endOffset" : 105
    }, {
      "referenceID" : 34,
      "context" : "[36] utilizes set covering based iterative agglomeration for improved efficiency.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 10,
      "context" : "σi is estimated using a variation of the following two heuristics ([12, 16]) - 1) kth nearest neighbor, xk i , distance heuristic → σi ∝ ‖xi− xk i ‖, or 2) Abramson’s heuristic → σi ∝ σo(π(xi))/2, where π(x) is the pilot density estimate obtained by first running mean shift with analysis bandwidth, σo.",
      "startOffset" : 67,
      "endOffset" : 75
    }, {
      "referenceID" : 14,
      "context" : "σi is estimated using a variation of the following two heuristics ([12, 16]) - 1) kth nearest neighbor, xk i , distance heuristic → σi ∝ ‖xi− xk i ‖, or 2) Abramson’s heuristic → σi ∝ σo(π(xi))/2, where π(x) is the pilot density estimate obtained by first running mean shift with analysis bandwidth, σo.",
      "startOffset" : 67,
      "endOffset" : 75
    }, {
      "referenceID" : 23,
      "context" : "They have found more use in smoothing type applications as reported in [25, 19].",
      "startOffset" : 71,
      "endOffset" : 79
    }, {
      "referenceID" : 17,
      "context" : "They have found more use in smoothing type applications as reported in [25, 19].",
      "startOffset" : 71,
      "endOffset" : 79
    }, {
      "referenceID" : 16,
      "context" : "Variants have also been used in tracking scenarios, where the bandwidths are adapted in a task specific fashion (see [18, 9], for example).",
      "startOffset" : 117,
      "endOffset" : 124
    }, {
      "referenceID" : 7,
      "context" : "Variants have also been used in tracking scenarios, where the bandwidths are adapted in a task specific fashion (see [18, 9], for example).",
      "startOffset" : 117,
      "endOffset" : 124
    }, {
      "referenceID" : 21,
      "context" : "[23, 33] adapt isotropic bandwidths to object scales, to unimodally track, search for them.",
      "startOffset" : 0,
      "endOffset" : 8
    }, {
      "referenceID" : 31,
      "context" : "[23, 33] adapt isotropic bandwidths to object scales, to unimodally track, search for them.",
      "startOffset" : 0,
      "endOffset" : 8
    }, {
      "referenceID" : 25,
      "context" : "The topological, blurring, evolving variants for clustering (like [27, 30, 37, 4, 29]) use isotropic bandwidths.",
      "startOffset" : 66,
      "endOffset" : 85
    }, {
      "referenceID" : 28,
      "context" : "The topological, blurring, evolving variants for clustering (like [27, 30, 37, 4, 29]) use isotropic bandwidths.",
      "startOffset" : 66,
      "endOffset" : 85
    }, {
      "referenceID" : 35,
      "context" : "The topological, blurring, evolving variants for clustering (like [27, 30, 37, 4, 29]) use isotropic bandwidths.",
      "startOffset" : 66,
      "endOffset" : 85
    }, {
      "referenceID" : 2,
      "context" : "The topological, blurring, evolving variants for clustering (like [27, 30, 37, 4, 29]) use isotropic bandwidths.",
      "startOffset" : 66,
      "endOffset" : 85
    }, {
      "referenceID" : 27,
      "context" : "The topological, blurring, evolving variants for clustering (like [27, 30, 37, 4, 29]) use isotropic bandwidths.",
      "startOffset" : 66,
      "endOffset" : 85
    }, {
      "referenceID" : 30,
      "context" : "[32] presents improvements over the somewhat related Mediod Shift.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 8,
      "context" : "In offline settings, [10] presents a supervised methodology.",
      "startOffset" : 21,
      "endOffset" : 25
    }, {
      "referenceID" : 15,
      "context" : "Only recently were automatic full bandwidth selectors for density gradient estimation proposed in [17, 6], for offline settings.",
      "startOffset" : 98,
      "endOffset" : 105
    }, {
      "referenceID" : 4,
      "context" : "Only recently were automatic full bandwidth selectors for density gradient estimation proposed in [17, 6], for offline settings.",
      "startOffset" : 98,
      "endOffset" : 105
    }, {
      "referenceID" : 9,
      "context" : "A very useful variant is Joint Domain Mean Shift, [11], which is used to create partitions jointly respecting the dataset’s multiple feature domains which are mutually independent; For example, 〈color,space〉 in color based segmentation & smoothing, and 〈color, f low〉 in motion segmentation.",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 29,
      "context" : "As noted in [31] on color segmentation, σ r and σ s need to be selected carefully.",
      "startOffset" : 12,
      "endOffset" : 16
    }, {
      "referenceID" : 32,
      "context" : "Reference [34] utlizes an anisotropic Σi for visual data segmentations.",
      "startOffset" : 10,
      "endOffset" : 14
    }, {
      "referenceID" : 11,
      "context" : "A reasonable test of significance for Σu estimates, is to check if the kernel weighted point count or Effective Sample Size (ESS, [13]) is above some value, λ .",
      "startOffset" : 130,
      "endOffset" : 134
    }, {
      "referenceID" : 11,
      "context" : "As a binomial rule of thumb ([13]), λ = 5 is chosen as the minimum ESS, which is analogous to choosing 5 as the minimum individual expected cell counts in a χ2 test of independence.",
      "startOffset" : 29,
      "endOffset" : 33
    }, {
      "referenceID" : 8,
      "context" : "Bandwidth estimates based on a cluster’s member data point locations are not reliable ([10] notes this too).",
      "startOffset" : 87,
      "endOffset" : 91
    }, {
      "referenceID" : 24,
      "context" : "4), kernel induced feature space metrics ([26]), information-theoretic ones like Renyi’s entropy ([14]) seem viable, interesting possibilities for MergeCheck.",
      "startOffset" : 42,
      "endOffset" : 46
    }, {
      "referenceID" : 12,
      "context" : "4), kernel induced feature space metrics ([26]), information-theoretic ones like Renyi’s entropy ([14]) seem viable, interesting possibilities for MergeCheck.",
      "startOffset" : 98,
      "endOffset" : 102
    }, {
      "referenceID" : 19,
      "context" : "34 Prior Art [21] FullSpectralOverMS [21] 0.",
      "startOffset" : 13,
      "endOffset" : 17
    }, {
      "referenceID" : 19,
      "context" : "34 Prior Art [21] FullSpectralOverMS [21] 0.",
      "startOffset" : 37,
      "endOffset" : 41
    }, {
      "referenceID" : 6,
      "context" : "21 JMS [8] 0.",
      "startOffset" : 7,
      "endOffset" : 10
    }, {
      "referenceID" : 19,
      "context" : "41 NCut [21] - Ref.",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 25,
      "context" : "[27] 0.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 19,
      "context" : "19 MNCUT [21] - Ref.",
      "startOffset" : 9,
      "endOffset" : 13
    }, {
      "referenceID" : 4,
      "context" : "[6] 0.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 19,
      "context" : "17 GBIS [21] - Ref.",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 7,
      "context" : "[9] 0.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 19,
      "context" : "67 Saliency [21] - Ref.",
      "startOffset" : 12,
      "endOffset" : 16
    }, {
      "referenceID" : 6,
      "context" : "[8] 0.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 19,
      "context" : "24 JSEG [21] - Ref.",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 5,
      "context" : "[7] 0.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 22,
      "context" : "Table 1: Results on BSD300 [24].",
      "startOffset" : 27,
      "endOffset" : 31
    }, {
      "referenceID" : 19,
      "context" : "For perspective, we also reproduce results from [21] of unsupervised image segmentation methods.",
      "startOffset" : 48,
      "endOffset" : 52
    }, {
      "referenceID" : 19,
      "context" : "[21] selects segment levels per image.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 19,
      "context" : "Note that [21], which has the next best values, operates over a priori Mean Shift segmentations.",
      "startOffset" : 10,
      "endOffset" : 14
    }, {
      "referenceID" : 0,
      "context" : "gence ([2], dB) was used as the merging criteria.",
      "startOffset" : 7,
      "endOffset" : 10
    }, {
      "referenceID" : 14,
      "context" : "Improvements in efficency based on fast nearest neighbor search such as exploiting grid structure of spatial domain, locally sensitive hashing ([16]) are applicable in our methodology too.",
      "startOffset" : 144,
      "endOffset" : 148
    }, {
      "referenceID" : 6,
      "context" : "1 7) are shown with joint domain Mean Shift implementation (JMS) from EDISON ([8]), over Berkely Segmentation Dataset ([24], BSD300).",
      "startOffset" : 78,
      "endOffset" : 81
    }, {
      "referenceID" : 22,
      "context" : "1 7) are shown with joint domain Mean Shift implementation (JMS) from EDISON ([8]), over Berkely Segmentation Dataset ([24], BSD300).",
      "startOffset" : 119,
      "endOffset" : 123
    }, {
      "referenceID" : 14,
      "context" : "Indicated values are of AAAMS / MS / VariableMS ([16]) respectively, with best values in red.",
      "startOffset" : 49,
      "endOffset" : 53
    }, {
      "referenceID" : 14,
      "context" : "2 shows initial results, along with comparisons with single domain standard Mean Shift (MS), and [16]’s isotropic variable bandwidth implementation.",
      "startOffset" : 97,
      "endOffset" : 101
    }, {
      "referenceID" : 14,
      "context" : "[16] first determines isotropic point bandwidths using the kth nearest neighbor distance heuristic, and subsequently utlizes them in single kernel mean shift iterations.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 14,
      "context" : "Note that [16] internally normalizes the data, while AAAMS & MS results are without any normalizations.",
      "startOffset" : 10,
      "endOffset" : 14
    } ],
    "year" : 2014,
    "abstractText" : "Mean Shift today, is widely used for mode detection and clustering. The technique though, is challenged in practice due to assumptions of isotropicity and homoscedasticity. We present an adaptive Mean Shift methodology that allows for full anisotropic clustering, through unsupervised local bandwidth selection. The bandwidth matrices evolve naturally, adapting locally through agglomeration, and in turn guiding further agglomeration. The online methodology is practical and effecive for low-dimensional feature spaces, preserving better detail and clustering salience. Additionally, conventional Mean Shift either critically depends on a per instance choice of bandwidth, or relies on offline methods which are inflexible and/or again data instance specific. The presented approach, due to its adaptive design, also alleviates this issue with a default form performing generally well. The methodology though, allows for effective tuning of results.",
    "creator" : "LaTeX with hyperref package"
  }
}