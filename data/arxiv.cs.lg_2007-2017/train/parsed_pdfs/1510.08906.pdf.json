{
  "name" : "1510.08906.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Sample Complexity of Episodic Fixed-Horizon Reinforcement Learning",
    "authors" : [ "Christoph Dann", "Emma Brunskill" ],
    "emails" : [ "cdann@cdann.net", "ebrun@cs.cmu.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "2|A|H2 2 ln 1 δ ) and a lower PAC bound Ω̃( |S||A|H2 2 ln 1 δ+c )\nthat match up to log-terms and an additional linear dependency on the number of states |S|. The lower bound is the first of its kind for this setting. Our upper bound leverages Bernstein’s inequality to improve on previous bounds for episodic finitehorizon MDPs which have a time-horizon dependency of at least H3."
    }, {
      "heading" : "1 Introduction and Motivation",
      "text" : "Consider test preparation software that tutors students for a national advanced placement exam taken at the end of a year, or maximizing business revenue by the end of each quarter. Each individual task instance requires making a sequence of decisions for a fixed number of steps H (e.g., tutoring one student to take an exam in spring 2015 or maximizing revenue for the end of the second quarter of 2014). Therefore, they can be viewed as a finite-horizon sequential decision making under uncertainty problem, in contrast to an infinite horizon setting in which the number of time steps is infinite. When the domain parameters (e.g. Markov decision process parameters) are not known in advance, and there is the opportunity to repeat the task many times (teaching a new student for each year’s exam, maximizing revenue for each new quarter), this can be treated as episodic fixed-horizon reinforcement learning (RL). One important question is to understand how much experience is required to act well in this setting. We formalize this as the sample complexity of reinforcement learning [1], which is the number of time steps on which the algorithm may select an action whose value is not near-optimal. RL algorithms with a sample complexity that is a polynomial function of the domain parameters are referred to as Probably Approximately Correct (PAC) [2, 3, 4, 1]. Though there has been significant work on PAC RL algorithms for the infinite horizon setting, there has been relatively little work on the finite horizon scenario.\nIn this paper we present the first, to our knowledge, lower bound, and a new upper bound on the sample complexity of episodic finite horizon PAC reinforcement learning in discrete state-action spaces. Our bounds are tight up to log-factors in the time horizon H , the accuracy , the number of actions |A| and up to an additive constant in the failure probability δ. These bounds improve upon existing results by a factor of at least H . Our results also apply when the reward model is a function of the within-episode time step in addition to the state and action space. While we assume a stationary transition model, our results can be extended readily to time-dependent state-\nar X\niv :1\n51 0.\n08 90\n6v 3\n[ st\nat .M\nL ]\n1 1\nM ay\ntransitions. Our proposed UCFH (Upper-confidence fixed-horizon RL) algorithm that achieves our upper PAC guarantee can be applied directly to wide range of fixed-horizon episodic MDPs with known rewards.1 It does not require additional structure such as assuming access to a generative model [8] or that the state transitions are sparse or acyclic [6].\nThe limited prior research on upper bound PAC results for finite horizon MDPs has focused on different settings, such as partitioning a longer trajectory into fixed length segments [4, 1], or considering a sliding time window [9]. The tightest dependence on the horizon in terms of the number of episodes presented in these approaches is at least H3 whereas our dependence is only H2. More importantly, such alternative settings require the optimal policy to be stationary, whereas in general in finite horizon settings the optimal policy is nonstationary (e.g. is a function of both the state and the within episode time-step).2 Fiechter [10, 11] and Reveliotis and Bountourelis [12] do tackle a closely related setting, but find a dependence that is at least H4.\nOur work builds on recent work [6, 8] on PAC infinite horizon discounted RL that offers much tighter upper and lower sample complexity bounds than was previously known. To use an infinite horizon algorithm in a finite horizon setting, a simple change is to augment the state space by the time step (ranging over 1, . . . ,H), which enables the learned policy to be non-stationary in the original state space (or equivalently, stationary in the newly augmented space). Unfortunately, since these recent bounds are in general a quadratic function of the state space size, the proposed state space expansion would introduce at least an additional H2 factor in the sample complexity term, yielding at least a H4 dependence in the number of episodes for the sample complexity.\nSomewhat surprisingly, we prove an upper bound on the sample complexity for the finite horizon case that only scales quadratically with the horizon. A key part of our proof is that the variance of the value function in the finite horizon setting satisfies a Bellman equation. We also leverage recent insights that state–action pairs can be estimated to different precisions depending on the frequency to which they are visited under a policy, extending these ideas to also handle when the policy followed is nonstationary. Our lower bound analysis is quite different than some prior infinite-horizon results, and involves a construction of parallel multi-armed bandits where it is required that the best arm in a certain portion of the bandits is identified with high probability to achieve near-optimality."
    }, {
      "heading" : "2 Problem Setting and Notation",
      "text" : "We consider episodic fixed-horizon MDPs, which can be formalized as a tuple M = (S,A, r, p, p0, H). Both, the statespace S and the actionspace A are finite sets. The learning agent interacts with the MDP in episodes of H time steps. At time t = 1 . . . H , the agent observes a state st and choses an action at based on a policy π that potentially depends on the within-episode time step, i.e., at = πt(st) for t = 1, . . . ,H . The next state is sampled from the stationary transition kernel st+1 ∼ p(·|st, at) and the initial state from s1 ∼ p0. In addition the agent receives a reward drawn from a distribution3 with mean rt(st) determined by the reward function. The reward function r is possibly time-dependent and takes values in [0, 1]. The quality of a policy π is evaluated by the total expected reward of an episode RπM = E [∑H t=1 rt(st) ] . For simplicity,1 we assume that the reward function r is known to the agent but the transition kernel p is unknown. The question we study is how many episodes does a learning agent follow a policy π that is not -optimal, i.e., R∗M − > RπM , with probability at least 1− δ for any chosen accuracy and failure probability δ.\nNotation. In the following sections, we reason about the true MDP M , an empirical MDP M̂ and an optimistic MDP M̃ which are identical except for their transition probabilities p, p̂ and p̃t. We will provide more details about these MDPs later. We introduce the notation explicitly only for M but the quantities carry over to M̃ and M̂ with additional tildes or hats by replacing p with p̃t or p̂.\n1 Previous works [5] have shown that the complexity of learning state transitions usually dominates learning reward functions. We therefore follow existing sample complexity analyses [6, 7] and assume known rewards for simplicity. The algorithm and PAC bound can be extended readily to the case of unknown reward functions.\n2The best action will generally depend on the state and the number of remaining time steps. In the tutoring example, even if the student has the same state of knowledge, the optimal tutor decision may be to space practice if there is many days till the test and provide intensive short-term practice if the test is tomorrow.\n3It is straightforward to have the reward depend on the state, or state/action or state/action/next state.\nThe (linear) operator Pπi f(s) := E[f(si+1)|si = s] = ∑ s′∈S p(s\n′|s, πi(s))f(s′) takes any function f : S → R and returns the expected value of f with respect to the next time step.4 For convenience, we define the multi-step version as Pπi:jf := P π i P π i+1 . . . P π j f . The value function from time i to\ntime j is defined as V πi:j(s) := E [∑j t=i rt(st)|si = s ] = ∑j t=i P π i:t−1rt = ( Pπi V π i+1:j ) (s) + ri(s) and V ∗i:j is the optimal value-function. When the policy is clear, we omit the superscript π.\nWe denote by S(s, a) ⊆ S the set of possible successor states of state s and action a. The maximum number of them is denoted by C = maxs,a∈S×A |S(s, a)|. In general, without making further assumptions, we have C = |S|, though in many practical domains (robotics, user modeling) each state can only transition to a subset of the full set of states (e.g. a robot can’t teleport across the building, but can only take local moves). The notation Õ is similar to the usual O-notation but ignores log-terms. More precisely f = Õ(g) if there are constants c1, c2 such that f ≤ c1g(ln g)c2 and analogously for Ω̃. The natural logarithm is ln and log = log2 is the base-2 logarithm."
    }, {
      "heading" : "3 Upper PAC-Bound",
      "text" : "We now introduce a new model-based algorithm, UCFH, for RL in finite horizon episodic domains. We will later prove UCFH is PAC with an upper bound on its sample complexity that is smaller than prior approaches. Like many other PAC RL algorithms [3, 13, 14, 15], UCFH uses an optimism under uncertainty approach to balance exploration and exploitation. The algorithm generally works in phases comprised of optimistic planning, policy execution and model updating that take several episodes each. Phases are indexed by k. As the agent acts in the environment and observes (s, a, r, s′) tuples, UCFH maintains a confidence set over the possible transition parameters for each state-action pair that are consistent with the observed transitions. Defining such a confidence set that holds with high probability can be be achieved using concentration inequalities like the Hoeffding inequality. One innovation in our work is to use a particular new set of conditions to define the confidence set that enables us to obtain our tighter bounds. We will discuss the confidence sets further below. The collection of these confidence sets together form a class of MDPsMk that are consistent with the observed data. We define M̂k as the maximum likelihood estimate of the MDP given the previous observations.\nGiven Mk, UCFH computes a policy πk by performing optimistic planning. Specifically, we use a finite horizon variant of extended value iteration (EVI) [5, 14]. EVI performs modified Bellman backups that are optimistic with respect to a given set of parameters. That is, given a confidence set of possible transition model parameters, it selects in each time step the model within that set that maximizes the expected sum of future rewards. Appendix A provides more details about fixed horizon EVI.\nUCFH then executes πk until there is a state-action pair (s, a) that has been visited often enough since its last update (defined precisely in the until-condition in UCFH). After updating the model statistics for this (s, a)-pair, a new policy πk+1 is obtained by optimistic planning again. We refer to each such iteration of planning-execution-update as a phase with index k. If there is no ambiguity, we omit the phase indices k to avoid cluttered notation.\nUCFH is inspired by the infinite-horizon UCRL-γ algorithm by Lattimore and Hutter [6] but has several important differences. First, the policy can only be updated at the end of an episode, so there is no need for explicit delay phases as in UCRL-γ. Second, the policies πk in UCFH are time-dependent. Finally, UCFH can directly deal with non-sparse transition probabilities, whereas UCRL-γ only directly allows two possible successor states for each (s, a)-pair (C = 2).\nConfidence sets. The class of MDPsMk consists of fixed-horizon MDPsM ′ with the known true reward function r and where the transition probability p′t(s\n′|s, a) from any (s, a) ∈ S × A to s′ ∈ S(s, a) at any time t is in the confidence set induced by p̂(s′|s, a) of the empirical MDP M̂ . Solely for the purpose of computationally more efficient optimistic planning, we allow time-dependent transitions (allows choosing different transition models in different time steps to maximize reward), but this does not affect the theoretical guarantees as the true stationary MDP is still inMk with high\n4The definition also works for time-dependent transition probabilities.\nAlgorithm 1: UCFH: Upper-Confidence Fixed-Horizon episodic reinforcement learning algorithm Input: desired accuracy ∈ (0, 1], failure tolerance δ ∈ (0, 1], fixed-horizon MDP M Result: with probability at least 1− δ: -optimal policy k := 1, wmin := 4H|S| , δ1 := δ 2UmaxC , Umax := |S × A| log2 |S|H wmin ; m := 512(log2 log2H) 2CH2 2 log 2 ( 8H2|S|2 ) ln 6|S×A|C log22(4|S| 2H2/ ) δ ; n(s, a) = v(s, a) = n(s, a, s′) := 0 ∀, s ∈ S, a ∈ A, s′ ∈ S(s, a); while do\n/* Optimistic planning */ p̂(s′|s, a) := n(s, a, s′)/n(s, a), for all (s, a) with n(s, a) > 0 and s′ ∈ S(s, a); Mk := { M̃ ∈Mnonst. : ∀(s, a) ∈ S ×A, t = 1 . . . H, s′ ∈ S(s, a)\np̃t(s ′|s, a) ∈ ConfidenceSet(p̂(s′|s, a), n(s, a)) } ;\nM̃k, π k := FixedHorizonEVI(Mk); /* Execute policy */ repeat\nSampleEpisode(πk) ; // from M using πk until there is a (s, a) ∈ S ×A with v(s, a) ≥ max{mwmin, n(s, a)} and n(s, a) < |S|mH; /* Update model statistics for one (s, a)-pair with condition above */ n(s, a) := n(s, a) + v(s, a); n(s, a, s′) := n(s, a, s′) + v(s, a, s′) ∀s′ ∈ S(s, a); v(s, a) := v(s, a, s′) := 0 ∀s′ ∈ S(s, a); k := k + 1\nProcedure SampleEpisode(π) s0 ∼ p0; for t = 0 to H − 1 do\nat := πt+1(st) and st+1 ∼ p(·|st, at); v(st, at) := v(st, at) + 1 and v(st, at, st+1) := v(st, at, st+1) + 1;\nFunction ConfidenceSet(p, n) P := { p′ ∈ [0, 1] :if n > 1 : ∣∣∣√p′(1− p′)−√p(1− p)∣∣∣ ≤√2 ln(6/δ1) n− 1 , (1)\n|p− p′| ≤ min\n(√ ln(6/δ1)\n2n ,\n√ 2p(1− p)\nn ln(6/δ1) +\n7\n3(n− 1) ln\n6\nδ1 )} (2)\nreturn P\nprobability. Unlike the confidence intervals used by Lattimore and Hutter [6], we not only include conditions based on Hoeffding’s inequality5 and Bernstein’s inequality (Eq. 2), but also require that the standard deviation √ p(1− p) of the Bernoulli random variable associated with this transition is close to the empirical one (Eq. 1). This additional condition (Eq. 1) is key for making the algorithm directly applicable to generic MDPs (in which states can transition to any number of next states, e.g. C > 2) while only having a linear dependency on C in the PAC bound."
    }, {
      "heading" : "3.1 PAC Analysis",
      "text" : "For simplicity we assume that each episode starts in a fixed start state s0. This assumption is not crucial and can easily be removed by additional notational effort.\nTheorem 1. For any 0 < , δ ≤ 1, the following holds. With probability at least 1 − δ, UCFH produces a sequence of policies πk, that yield at most\nÕ\n( H2C|S × A|\n2 ln\n1\nδ ) 5The first condition in the min in Equation (2) is actually not necessary for the theoretical results to hold. It\ncan be removed and all 6/δ1 can be replaced by 4/δ1.\nepisodes with R∗ −Rπk = V ∗1:H(s0)− V π k\n1:H(s0) > . The maximum number of possible successor states is denoted by 1 < C ≤ |S|.\nSimilarities to other analyses. The proof of Theorem 1 is quite long and involved, but builds on similar techniques for sample-complexity bounds in reinforcement learning (see e.g. Brafman and Tennenholtz [3], Strehl and Littman [16]). The general proof strategy is closest to the one of UCRL-γ [6] and the obtained bounds are similar if we replace the time horizon H with the equivalent in the discounted case 1/(1− γ). However, there are important differences that we highlight now briefly.\n• A central quantity in the analysis by Lattimore and Hutter [6] is the local variance of the value function. The exact definition for the fixed-horizon case will be given below. The key insight for the almost tight bounds of Lattimore and Hutter [6] and Azar et al. [8] is to leverage the fact that these local variances satisfy a Bellman equation [17] and so the discounted sum of local variances can be bounded by O((1−γ)−2) instead of O((1−γ)−3). We prove in Lemma 4 that local value function variances σ2i:j also satisfy a Bellman equation for fixed-horizon MDPs even if transition probabilities and rewards are time-dependent. This allows us to bound the total sum of local variances by O(H2) and obtain similarly strong results in this setting.\n• Lattimore and Hutter [6] assumed there are only two possible successor states (i.e., C = 2) which allows them to easily relate the local variances σ2i:j to the difference of the expected value of successor states in the true and optimistic MDP (Pi − P̃i)Ṽi+1:j . For C > 2, the relation is less clear, but we address this by proving a bound with tight dependencies on C (Lemma C.6).\n• To avoid super-linear dependency on C in the final PAC bound, we add the additional condition in Equation (1) to the confidence set. We show that this allows us to upper-bound the total reward difference R∗ − Rπk of policy πk with terms that either depend on σ2i:j or decrease linearly in the number of samples. This gives the desired linear dependency on C in the final bound. We therefore avoid assuming C = 2 which makes UCFH directly applicable to generic MDPs with C > 2 without the impractical transformation argument used by Lattimore and Hutter [6].\nWe will now introduce the notion of knownness and importance of state-action pairs that is essential for the analysis of UCFH and subsequently present several lemmas necessary for the proof of Theorem 1. We only sketch proofs here but detailed proofs for all results are available in the appendix.\nFine-grained categorization of (s, a)-pairs. Many PAC RL sample complexity proofs [3, 4, 13, 14] only have a binary notion of “knownness”, distinguishing between known (transition probability estimated sufficiently accurately) and unknown (s, a)-pairs. However, as recently shown by Lattimore and Hutter [6] for the infinite horizon setting, it is possible to obtain much tighter sample complexity results by using a more fine grained categorization. In particular, a key idea is that in order to obtain accurate estimates of the value function of a policy from a starting state, it is sufficient to have only a loose estimate of the parameters of (s, a)-pairs that are unlikely to be visited under this policy.\nLet the weight of a (s, a)-pair given policy πk be its expected frequency in an episode\nwk(s, a) := H∑ t=1 P(st = s, πkt (st) = a) = H∑ t=1 P1:t−1I{s = ·, a = πkt (s)}(s0).\nThe importance ιk of (s, a) is its relative weight compared to wmin := 4H|S| on a log-scale\nιk(s, a) := min { zi : zi ≥ wk(s, a)\nwmin\n} where z1 = 0 and zi = 2i−2 ∀i = 2, 3, . . . .\nNote that ιk(s, a) ∈ {0, 1, 2, 4, 8, 16 . . . } is an integer indicating the influence of the state-action pair on the value function of πk. Similarly, we define the knownness\nκk(s, a) := max { zi : zi ≤ nk(s, a)\nmwk(s, a)\n} ∈ {0, 1, 2, 4, . . . }\nwhich indicates how often (s, a) has been observed relative to its importance. The constant m is defined in Algorithm 1. We can now categorize (s, a)-pairs into subsets\nXk,κ,ι := {(s, a) ∈ Xk : κk(s, a) = κ, ιk(s, a) = ι} and X̄k = S ×A \\Xk\nwhere Xk = {(s, a) ∈ S × A : ιk(s, a) > 0} is the active set and X̄k the set of state-action pairs that are very unlikely under the current policy. Intuitively, the model of UCFH is accurate if only few (s, a) are in categories with low knownness – that is, important under the current policy but have not been observed often so far. Recall that over time observations are generated under many policies (as the policy is recomputed), so this condition does not always hold. We will therefore distinguish between phases k where |Xk,κ,ι| ≤ κ for all κ and ι and phases where this condition is violated. The condition essentially allows for only a few (s, a) in categories that are less known and more and more (s, a) in categories that are more well known. In fact, we will show that the policy is -optimal with high probability in phases that satisfy this condition.\nWe first show the validity of the confidence setsMk. Lemma 1 (Capturing the true MDP whp.). M ∈Mk for all k with probability at least 1− δ/2.\nProof Sketch. By combining Hoeffding’s inequality, Bernstein’s inequality and the concentration result on empirical standard deviations by Maurer and Pontil [18] with the union bound, we get that p(s′|s, a) ∈ P with probability at least 1 − δ1 for a single phase k, fixed s, a ∈ S × A and fixed s′ ∈ S(s, a). We then show that the number of model updates is bounded by Umax and apply the union bound.\nThe following lemma bounds the number of episodes in which ∀κ, ι : |Xk,κ,ι| ≤ κ is violated with high probability.\nLemma 2. Let E be the number of episodes k for which there are κ and ι with |Xk,κ,ι| > κ, i.e. E = ∑∞ k=1 I{∃(κ, ι) : |Xk,κ,ι| > κ} and assume that m ≥ 6H2 ln 2Emax δ . Then P(E ≤ 6NEmax) ≥ 1− δ/2 where N = |S × A|m and Emax = log2 Hwmin log2 |S|.\nProof Sketch. We first bound the total number of times a fixed pair (s, a) can be observed while being in a particular category Xk,κ,ι in all phases k for 1 ≤ κ < |S|. We then show that for a particular (κ, ι), the number of episodes where |Xk,κ,ι| > κ is bounded with high probability, as the value of ι implies a minimum probability of observing each (s, a) pair inXk,κ,ι in an episode. Since the observations are not independent we use martingale concentration results to show the statement for a fixed (κ, ι). The desired result follows with the union bound over all relevant κ and ι.\nThe next lemma states that in episodes where the condition ∀κ, ι : |Xk,κ,ι| ≤ κ is satisfied and the true MDP is in the confidence set, the expected optimistic policy value is close to the true value. This lemma is the technically most involved part of the proof.\nLemma 3 (Bound mismatch in total reward). Assume M ∈ Mk. If |Xk,κ,ι| ≤ κ for all (κ, ι) and 0 < ≤ 1 andm ≥ 512CH 2\n2 (log2 log2H) 2 log22\n( 8H2|S|2 ) ln 6δ1 . Then |Ṽ πk 1:H(s0)−V π k 1:H(s0)| ≤ .\nProof Sketch. Using basic algebraic transformations, we show that |p − p̃| ≤√ p̃(1− p̃)O (√ 1 n ln 1 δ1 ) + O ( 1 n ln 1 δ1 ) for each p̃, p ∈ P in the confidence set as defined in Eq. 2. Since we assume M ∈ Mk, we know that p(s′|s, a) and p̃(s′|s, a) satisfy this bound with n(s, a) for all s,a and s′. We use that to bound the difference of the expected value function of the successor state in M and M̃ , proving that |(Pi − P̃i)Ṽi+1:j(s)| ≤ O ( CH\nn(s,π(s)) ln 1 δ1\n) +\nO (√\nC n(s,π(s)) ln 1 δ1\n) σ̃i:j(s), where the local variance of the value function is defined as\nσ2i:j(s, a) := E [ (V πi+1:j(si+1)− Pπi V πi+1:j(si))2|si = s, ai = a ] and σ2i:j(s) := σ 2 i:j(s, πi(s)).\nThis bound then is applied to |Ṽ1:H(s0)−V1:H(s0)| ≤ ∑H−1 t=0 P1:t|(Pt− P̃t)Ṽt+1:H(s)|. The basic idea is to split the bound into a sum of two parts by partitioning of the (s, a) space by knownness, e.g. that is (st, at) ∈ X̄κ,ι for all κ and ι and (st, at) ∈ X̄ . Using the fact that w(st, at) and n(st, at) are tightly coupled for each (κ, ι), we can bound the expression eventually by . The final key ingredient in the remainder of the proof is to bound ∑H t=1 P1:t−1σt:H(s)\n2 by O(H2) instead of the trivial bound O(H3). To this end, we show the lemma below.\nLemma 4. The variance of the value function defined as Vπi:j(s) := E [(∑j t=i rt(st)− V πi:j(si) )2 |si = s ] satisfies a Bellman equation Vi:j = PiVi+1:j + σ2i:j\nwhich gives Vi:j = ∑j t=i Pi:t−1σ 2 t:j . Since 0 ≤ V1:H ≤ H2r2max, it follows that\n0 ≤ ∑j t=1 Pi:t−1σ 2 t:j(s) ≤ H2r2max for all s ∈ S.\nProof Sketch. The proof works by induction and uses fact that the value function satisfies the Bellman equation and the tower-property of conditional expectations.\nProof Sketch for Theorem 1. The proof of Theorem 1 consists of the following major parts: 1. The true MDP is in the set of MDPsMk for all phases k with probability at least 1− δ2 (Lemma 1). 2. The FixedHorizonEVI algorithm computes a value function whose optimistic value is higher\nthan the optimal reward in the true MDP with probability at least 1− δ/2 (Lemma A.1). 3. The number of episodes with |Xk,κ,ι| > κ for some κ and ι are bounded with probability at least\n1− δ/2 by Õ(|S × A|m) if m = Ω̃ ( H2\nln |S| δ\n) (Lemma 2).\n4. If |Xk,κ,ι| ≤ κ for all κ, ι, i.e., relevant state-action pairs are sufficiently known and m = Ω̃ ( CH2\n2 ln 1 δ1\n) , then the optimistic value computed is -close to the true MDP value. Together\nwith part 2, we get that with high probability, the policy πk is -optimal in this case. 5. From parts 3 and 4, with probability 1 − δ, there are at most Õ ( C|S×A|H2\n2 ln 1 δ\n) episodes that\nare not -optimal."
    }, {
      "heading" : "4 Lower PAC Bound",
      "text" : "Theorem 2. There exist positive constants c1, c2, δ0, 0 such that for every δ ∈ (0, δ0) and ∈ (0, 0) and for every algorithm A that satisfies a PAC guarantee for ( , δ) and outputs a deterministic policy, there is a fixed-horizon episodic MDP Mhard with\nE[nA] ≥ c1(H − 2)2(|A| − 1)(|S| − 3)\n2 ln\n( c2\nδ + c3\n) = Ω ( |S × A|H2\n2 ln\n( c2\nδ + c3\n)) (3)\nwhere nA is the number of episodes until the algorithm’s policy is ( , δ)-accurate. The constants can be set to δ0 = e −4 80 ≈ 1 5000 , 0 = H−2 640e4 ≈ H/35000, c2 = 4 and c3 = e −4/80.\nThe ranges of possible δ and are of similar order than in other state-of-the-art lower bounds for multi-armed bandits [19] and discounted MDPs [14, 6]. They are mostly determined by the bandit result by Mannor and Tsitsiklis [19] we build on. Increasing the parameter limits δ0 and 0 for bandits would immediately result in larger ranges in our lower bound, but this was not the focus of our analysis.\nProof Sketch. The basic idea is to show that the class of MDPs shown in Figure 1 require at least a number of observed episodes of the order of Equation (3). From the start state 0, the agent ends up in states 1 to n with equal probability, independent of the action. From each such state i, the agent transitions to either a good state + with reward 1 or a bad state − with reward 0 and stays there for the rest of the episode. Therefore, each state i = 1, . . . , n is essentially a multi-armed bandit with binary rewards of either 0 or H − 2. For each bandit, the probability of ending up in + or − is equal except for the first action a1 with p(st+1 = +|st = i, at = a1) = 1/2 + /2 and possibly an unknown optimal action a∗i (different for each state i) with p(st+1 = +|st = i, at = a∗i ) = 1/2 + . In the episodic fixed-horizon setting we are considering, taking a suboptimal action in one of the bandits does not necessarily yield a suboptimal episode. We have to consider the average over all\nbandits instead. In an -optimal episode, the agent therefore needs to follow a policy that would solve at least a certain portion of all n multi-armed bandits with probability at least 1− δ. We show that the best strategy for the agent to achieve this is to try to solve all bandits with equal probability. The number of samples required to do so then results in the lower bound in Equation (3).\nSimilar MDPs that essentially solve multiple of such multi-armed bandits have been used to prove lower sample-complexity bounds for discounted MDPs [14, 6]. However, the analysis in the infinite horizon case as well as for the sliding-window fixed-horizon optimality criterion considered by Kakade [4] is significantly simpler. For these criteria, every time step the agent follows a policy that is not -optimal counts as a ”mistake”. Therefore, every time the agent does not pick the optimal arm in any of the multi-armed bandits counts as a mistake. This contrasts with our fixed-horizon setting where we must instead consider taking an average over all bandits."
    }, {
      "heading" : "5 Related Work on Fixed-Horizon Sample Complexity Bounds",
      "text" : "We are not aware of any lower sample complexity bounds beyond multi-armed bandit results that directly apply to our setting. Our upper bound in Theorem 1 improves upon existing results by at least a factor of H . We briefly review those existing results in the following.\nTimestep bounds. Kakade [4, Chapter 8] proves upper and lower PAC bounds for a similar setting where the agent interacts indefinitely with the environment but the interactions are divided in segments of equal length and the agent is evaluated by the expected sum of rewards until the end of each segment. The bound states that there are not more than Õ ( |S|2|A|H6\n3 ln 1 δ\n) 6 time steps in\nwhich the agents acts -suboptimal. Strehl et al. [1] improves the state-dependency of these bounds for their delayed Q-learning algorithm to Õ\n( |S||A|H5\n4 ln 1 δ\n) . However, in episodic MDP it is more\nnatural to consider performance on the entire episode since suboptimality near the end of the episode is no issue as long as the total reward on the entire episode is sufficiently high. Kolter and Ng [9] use an interesting sliding-window criterion, but prove bounds for a Bayesian setting instead of PAC. Timestep-based bounds can be applied to the episodic case by augmenting the original statespace with a time-index per episode to allow resets after H steps. This adds H dependencies for each |S| in the original bound which results in a horizon-dependency of at least H6 of these existing bounds. Translating the regret bounds of UCRL2 in Corollary 3 by Jaksch et al. [20] yields a PAC-bound on the number of episodes of at least Õ ( |S|2|A|H3\n2 ln 1 δ\n) even if one ignores the reset after H time\nsteps. Timestep-based lower PAC-bounds cannot be applied directly to the episodic reward criterion.\nEpisode bounds. Similar to us, Fiechter [10] uses the value of initial states as optimality-criterion, but defines the value w.r.t. the γ-discounted infinite horizon. His results of order Õ\n( |S|2|A|H7\n2 ln 1 δ ) episodes of length Õ(1/(1− γ)) ≈ Õ(H) are therefore not directly applicable to our setting. Auer and Ortner [5] investigate the same setting as we and propose a UCB-type algorithm that has noregret, which translates into a basic PAC bound of order Õ ( |S|10|A|H7\n3 ln 1 δ\n) episodes. We improve\non this bound substantially in terms of its dependency on H , |S| and . Reveliotis and Bountourelis [12] also consider the episodic undiscounted fixed-horizon setting and present an efficient algorithm in cases where the transition graph is acyclic and the agent knows for each state a policy that visits this state with a known minimum probability q. These assumptions are quite limiting and rarely hold in practice and their bound of order Õ ( |S||A|H4\n2q ln 1 δ\n) explicitly depends on 1/q."
    }, {
      "heading" : "6 Conclusion",
      "text" : "We have shown upper and lower bounds on the sample complexity of episodic fixed-horizon RL that are tight up to log-factors in the time horizon H , the accuracy , the number of actions |A| and up to an additive constant in the failure probability δ. These bounds improve upon existing results by a factor of at leastH . One might hope to reduce the dependency of the upper bound on |S| to be linear by an analysis similar to Mormax [7] for discounted MDPs which has sample complexity linear in |S| at the penalty of additional dependencies on H . Our proposed UCFH algorithm that achieves our\n6For comparison we adapt existing bounds to our setting. While the original bound stated by Kakade [4] only has H3, an additional H3 comes in through −3 due to different normalization of rewards.\nPAC bound can be applied to directly to a wide range of fixed-horizon episodic MDPs with known rewards and does not require additional structure such as sparse or acyclic state transitions assumed in previous work. The empirical evaluation of UCFH is an interesting direction for future work.\nAcknowledgments: We thank Tor Lattimore for the helpful suggestions and comments. We are also grateful to Shiau Hong Lim and Ian Osband for discovering small bugs in previous versions of this paper. This work was supported by an NSF CAREER award and the ONR Young Investigator Program."
    }, {
      "heading" : "Appendices",
      "text" : ""
    }, {
      "heading" : "A Fixed-Horizon Extended Value Iteration 12",
      "text" : "B Runtime- and Space-Complexity of UCFH 13"
    }, {
      "heading" : "C Detailed Proofs for the Upper PAC Bound 13",
      "text" : "C.1 Bound on the Number of Policy Changes of UCFH . . . . . . . . . . . . . . . . . 13\nC.2 Proof of Lemma 1 – Capturing the true MDP . . . . . . . . . . . . . . . . . . . . 13\nC.3 Bounding the number of episodes with κ > |Xk,κ,ι| for some κ, ι . . . . . . . . . 14 C.4 Bound on the value function difference for episodes with ∀κ, ι : |Xk,κ,ι| ≤ κ . . . 16 C.5 Proof of Theorem 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25\nD Proof of the Lower PAC Bound 25"
    }, {
      "heading" : "A Fixed-Horizon Extended Value Iteration",
      "text" : "We want to find a policy πk and optimistic M̃k ∈ Mk which have the highest total reward Rπ k\nM̃k =\nmaxπ,M ′∈Mk R π M ′ . Note that π k is an optimal policy forMk but not necessarily forM . To facilitate planning, we relax this problem and instead compute a policy and optimistic MDP with Rπ k\nM̃k =\nmaxπ,M ′∈M′k R π M ′ with M′k := { M̃ ∈Mnonst. : ∀(s, a) ∈ S ×A, t = 1 . . . H, s′ ∈ S(s, a) p̃t(s ′|s, a) ∈ conv(ConfidenceSet(p̂(s′|s, a), n(s, a))) } .\nWe only require the transition probabilities to be in the convex hull of the confidence sets instead of the confidence sets. Since this is a relaxation, we haveMk ⊆ M′k. We can find such a policy by dynamic programming similar to extended value iteration [16, 5]. The optimal Q-function can be computed as Q̃∗H:H(s, a) = rH(s) and for i = H − 1, . . . , 2, 1 as\nQ̃∗i:H(s, a) =ri(s) + max p̃i∈Ps,a  ∑ s′∈S(s,a) p̃i max b∈A Q̃∗i+1:H(s ′, b)  The feasible set is defined as Ps,a := {p ∈ [0, 1]|S(s,a)| | ‖p‖1 = 1,∀s′ ∈ S(s, a) : p(s′) ∈ conv(ConfidenceSet(p̂(s′|s, a), n(s, a)))}. The optimal policy πkt (s) at time t is then simply the maximizer of the inner max operator and the transition probability p̃t(·|s, a) is the maximizer of the outer maximum. The inner max can be solved efficiently by enumeration and the outer maximum similar to extended value iteration [16]. The basic idea is to put as much probability mass as possible to successor states with highest value. See the following algorithm for the implementation details.\nFunction FixedHorizonEVI(M) Q̃∗H:H(s, a) = rH(s) ∀s, a ∈ S ×A ; // O(|S||A|) for t = H − 1 to 1 do // O(H|S| log |S|+H|S||A|C))\nπt+1(s) := arg maxa∈A Q̃ ∗ t+1:H(s, a) ∀s ∈ S ; // O(|S||A|) sort states s(1), . . . s(|S|) such that Q̃∗t+1:H(s (i), πt+1(s (i))) ≥ Q̃∗t+1:H(s(i+1), πt+1(s(i+1))) ; // O(|S| log |S|) for s, a ∈ S ×A do // O(|S||A|C) p̃t(s\n′|s, a) := minConfidenceSet(p̂(s′|s, a), n(s, a)) ∀s′ ∈ S(s, a) ; // O(C) ∆ := 1− ∑ s′∈S(s,a) p̃t(s\n′|s, a) ; // O(C) i := 1 ; // O(1) while ∆ > 0 do // O(C)\ns′ := s(i); ∆′ := min{∆,maxConfidenceSet(p̂(s′|s, a), n(s, a))− p̃t(s′|s, a)}; p̃t(s\n′|s, a) := p̃t(s′|s, a) + ∆′; ∆ := ∆−∆′; i := i+ 1;\nQ̃∗t:H(s, a) = ∑ s′∈S(s,a) p̃t(s ′|s, a)Q̃∗t+1:H(s′, πt+1(s′)) ; // O(C)\nπ1(s) := arg maxa∈A Q̃ ∗ 1:H(s, a) ∀s ∈ S ; // O(|S||A| return MDP with transition probabilities p̃t, optimal policy π\nNote that due to the nonlinear constraint in Equation (1), ConfidenceSet(p̂(s′|s, a), n(s, a)) may be the union of two disjoint intervals instead of one interval. Still, min- and max-operations on the confidence sets can be computed readily in constant time. Therefore, the transition probabilities p̃t(·|s, a) for a single time step t and state-action pair s, a can be computed in O(|S||A|C) given sorted states. Sorting the states takes O(|S| log |S|) which results in O(H|S| log |S| + H|S||A|C) runtime complexity of FixedHorizonEVI (see comments in Function FixedHorizonEVI ). The Algorithm requires O(H|S||A|C) additional space besides the storage requirements of the input MDPM as the transition probabilities p̃t are returned by the algorithm. If those are not required and only the optimal policy is of interest, the additional space can be reduced to O(|S||A|). Lemma A.1 (Validity of optimistic planning). FixedHorizonEVI(Mk) returns M̃, πk = arg maxM∈M′k,π R π M . SinceMk ⊆M′k, it also holds that Rπ k M̃ ≥ maxM∈Mk,π RπM .\nProof Sketch. This result can be proved straight-forwardly by showing that πk is optimal in the last time step H with highest possible reward and then subsequently for all previous time steps inductively. It follows directly from the definition of the algorithm in Function FixedHorizonEVI that the returned MDP is inM′k.\nB Runtime- and Space-Complexity of UCFH\nSampling one episode and updating the respective v variables has O(H) runtime. Theorem 1 states that after at most Õ\n( H2C|S×A|\n2 ln 1 δ\n) observed episodes, the current policy is -optimal with suffi-\nciently high probability. This results in a total runtime for sampling of Õ ( H3C|S×A|\n2 ln 1 δ\n) .\nEach update of the policy involves updating the n variables andMk which takes runtime O(C) and a call of FixedHorizonEVI with runtime cost O(H|S||A|C +H|S| log |S|). From Lemma C.1 below, we know that the policy can be updated at most Umax times which a gives total runtime for policy updates of\nO(UmaxH|S|(|A|C + log |S|)) =O ( H|S|2|A|(|A|C + log |S|) log |S| 2H2 ) =Õ ( H|S|2|A|2C log 1 ) .\nThe total runtime of UCFH before the policy is -optimal with probability at least 1− δ is therefore\nÕ\n( H3|S|2|A|2C\n2 ln\n1\nδ\n) .\nThe space complexity of UCFH is dominated by the requirement to store statistics for each possible transition which gives O(|S||A|C) complexity."
    }, {
      "heading" : "C Detailed Proofs for the Upper PAC Bound",
      "text" : "C.1 Bound on the Number of Policy Changes of UCFH\nLemma C.1. The total number of updates is bounded by Umax = |S × A| log2 |S|H wmin .\nProof. First note that n(s, a) is never never decreasing and no updates happen once n(s, a) ≥ |S|mH for all (s, a). In each update, the n(s, a) of exactly one (s, a) pair increases by max{mwmin, n(s, a)}. For a single (s, a) pair, such updates can happen only log2(|S|mH) − log2(mwmin) times. Hence, there are at most |S × A| log2 |S|mH wminm updates in total."
    }, {
      "heading" : "C.2 Proof of Lemma 1 – Capturing the true MDP",
      "text" : "Proof. For a single (s, a) pair, s′ ∈ S(s, a) and k, we can treat the event that s′ is the successor state of s when chosing action a as a Bernoulli random variable with probability p(s′|s, a). Using Hoeffding’s inequality,7 we then realize that\n|p(s′|s, a)− p̂(s′|s, a)| ≤ √ ln(6/δ1)\n2n\nand by Bernstein’s inequality |p(s′|s, a)− p̂(s′|s, a)| ≤ √\n2p(s′|s, a)(1− p(s′|s, a)) ln(6/δ1) n + 1 3n ln(6/δ1)\n7While the considered random variables are strictly speaking not necessarily independent, they can be treated as such for the concentration inequalities applied here. See Appendix A of Strehl and Littman [16] for details.\nwith probability at least 1 − δ1/3 respectively. Using both inequalities of Theorem 10 by Maurer and Pontil [18]8, we have\n| √ p(s′|s, a)(1− p(s′|s, a))− √ p̂(s′|s, a)(1− p̂(s′|s, a))| ≤ √ 2 ln(6/δ1)\nn− 1 (4)\nfor n > 1 with probability at least 1 − δ1/3. All three inequalities hold with probability 1 − δ1 by the union bound. Applying Inequality (4) to Bernstein’s inequality, we obtain\n|p(s′|s, a)− p̂(s′|s, a)| ≤ √\n2p(s′|s, a)(1− p(s′|s, a)) ln(6/δ1) n + 1 3n ln(6/δ1)\n≤ (√ p̂(s′|s, a)(1− p̂(s′|s, a)) + √ 2 ln(6/δ1)\nn− 1\n)√ 2 ln(6/δ1)\nn +\n1\n3n ln(6/δ1)\n≤ √\n2p̂(s′|s, a)(1− p̂(s′|s, a)) ln(6/δ1) n + 7 3(n− 1) ln(6/δ1).\nBy Lemma C.1, there are at most Umax updates and so there are at most Umax different k to consider. Since in each update, only a single (s, a) pair with at most C successor states is updated, for all k and (s, a), there are only UmaxC different p̂(s′|s, a) to consider. Applying the union bound, we get that M /∈ Mk for any k with probability at most UmaxCδ1. By setting δ1 = δ2CUmax we get the desired result.\nC.3 Bounding the number of episodes with κ > |Xk,κ,ι| for some κ, ι\nBefore presenting the proof of Lemma 2 which bounds the total number of episodes where there is a κ and ι such that κ > |Xk,κ,ι|, we establish a bound for each individual κ and ι in the following two additional lemmas.\nLemma C.2 (Bound on observations ofX·,κ,ι). The total number of observations of (s, a) ∈ Xk,κ,ι where κ ∈ [1, |S| − 1] and ι > 0 over all phases k is at most 3|S ×A|mwικ. The variable wι is the smallest possible weight of a (s, a)-pair that has importance ι.\nProof. We denote the smallest possible weight for any (s, a) pair such that ι(s, a) = ι by wι := min{w(s, a) : ιk(s, a) = ι}. Note that wι+1 = 2wι for ι > 0. Consider any phase k and fix (s, a) ∈ Xk,κ,ι with ι > 0. Since we assumed ιk(s, a) = ι > 0, we have wι ≤ wk(s, a) < 2wι. From κk(s, a) = κ, it follows that\nnk(s, a) 2mwk(s, a) ≤ κ ≤ nk(s, a) mwk(s, a)\nwhich implies that\nmwικ ≤ mwk(s, a)κ ≤ nk(s, a) ≤ 2mwk(s, a)κ ≤ 4mwικ. (5)\nHence, each state can only be observed 3mwι times while being in {(s, a) ∈ Xk,κ,ι : k ∈ N}.\nLemma C.3. The number of episodes Eκ,ι in phases with |Xk,κ,ι| > κ is bounded for every α ≥ 3 with high probability, P (Eκ,ι > αN) ≤ exp ( −βwι(κ+ 1)N\nH ) where N = |S × A|m and β = α(3/α−1) 2\n7/3−1/α .\nProof. Let νi := ∑H t=1 I{(st, at) ∈ Xk,κ,ι} be the number of observations of (s, a) in Xk,κ,ι in the ith epsiode with Xk,κ,ι > κ. We have i ∈ {1, . . . Eκ,ι}) and k is the phase that episode i belongs to. 8The empirical variance denoted by Vn(X) by Maurer and Pontil [18] is p̃(s′|s, a)(1 − p̃(s′|s, a)) in our case and EVn is the true variance which amounts to p(s′|s, a)(1− p(s′|s, a)) for us.\nSince Xk,κ,ι ≥ κ+ 1 and all states in partition (κ, ι) have wk(s, a) ≥ wι , we get E[νi|ν1, . . . νi−1] ≥ (κ+ 1)wι. (6)\nAlso V[νi|ν1 . . . νi−1] ≤ E[νi|ν1, . . . νi−1]H as νi ∈ [0, H]. To reason about Eκ,ι, we define the continuation\nν+i := { νi if i ≤ Eκ,ι wι(κ+ 1) otherwise\nand the centered auxiliary sequence\nν̄i := ν+i wι(κ+ 1)\nE[ν+i |ν + 1 , . . . ν + i−1]\n.\nBy construction\nE[ν̄i|ν̄1, . . . ν̄i−1] = wι(κ+ 1) E[ν+i |ν̄1, . . . , ν̄i−1] E[ν+i |ν + 1 , . . . ν + i−1] = wι(κ+ 1).\nBy Lemma C.2, we have that Eκ,ι > αN only if αN∑ i=1 ν̄i ≤ 3Nwικ ≤ 3Nwι(κ+ 1).\nDefine now the martingale\nBi := E αN∑ j=1 ν̄j |ν̄1, . . . ν̄i  = i∑ j=1 ν̄j + αN∑ j=i+1 E[ν̄j |ν̄1 . . . ν̄i]\nwhich givesB0 = αNwι(κ+1) andBαN = ∑αN i=1 ν̄i. Further, since ν + i ∈ [0, H] and Equation (6), we have\n|Bi+1 −Bi| = |ν̄i − E[ν̄i|ν̄1, . . . , ν̄i−1]| = ∣∣∣∣∣wι(κ+ 1)(ν+i − E[ν+i |ν̄1, . . . ν̄i−1])E[ν+i |ν+1 , . . . ν+i−1] ∣∣∣∣∣\n≤ ∣∣ν+i − E[ν+i |ν̄1, . . . ν̄i−1]∣∣ ≤ H.\nUsing\nσ2 := αN∑ i=1 V[Bi −Bi−1|B1 −B0, . . . Bi−1 −Bi−2]\n= αN∑ i=1 V[ν̄i|ν̄1, . . . ν̄i−1] ≤ αNHwι(κ+ 1) = HB0\nwe can apply Theorem 22 by Chung and Lu [21] and obtain\nP(Eκ,ι > αN) ≤ P ( αN∑ i=1 ν̄i ≤ 3Nwι(κ+ 1) ) = P(BαN −B0 ≤ 3B0/α−B0) = P(BαN −B0 ≤ − (1− 3/α)B0)\n≤ exp ( − (3/α− 1)\n2B20 2σ2 +H(1/3− 1/α)B0 ) for α ≥ 3. We can further simplify the bound to\nP(Eκ,ι > αN) ≤ exp ( − (3/α− 1)\n2B20 2HB0 +H(1/3− 1/α)B0 ) ≤ exp ( − (3/α− 1) 2\n2 + (−1/α+ 1/3) B0 H ) = exp ( −α(3/α− 1) 2\n7/3− 1/α Nwι(κ+ 1) H\n) .\nWe are now ready to prove Lemma 2 by combining the bound in the previous lemma for all κ and ι.\nProof of Lemma 2. Since wk(s, a) ≤ H , we have that wk(s,a)wmin < H wmin and so ιk(s, a) ≤ H/wmin = 4H\n2|S|/ . In addition, |Xk,κ,ι| ≤ |S| for all k, κ, ι and so |Xk,κ,ι| > κ can only be true for κ ≤ |S|. Hence, only\nEmax = log2 H\nwmin log2 |S|\npossible values for (κ, ι) exists that can have |Xk,κ,ι| > κ. Using the union bound over all (κ, ι) and Lemma C.3, we get that\nP(E ≤ αNEmax) ≥P(max (κ,ι)\nEκ,ι ≤ αN) ≥ 1− Emax exp ( −βwι(κ+ 1)N\nH ) ≥1− Emax exp ( −βwminN\nH\n) = 1− Emax exp ( −βwminm|S × A|\nH ) =1− Emax exp ( −β m|S × A|\n4H2|S| ) Bounding the right hand-side by 1− δ/2 and solving for m gives\n1− Emax exp ( −β m|S × A|\n4H2|S|\n) ≥1− δ/2 ⇔ m ≥ 4H\n2|S| |S × A|β ln 2Emax δ\nHence, the condition\nm ≥ 4H 2\nβ ln 2Emax δ\nis sufficient for the desired result to hold. By plugging in α = 6 and β = α(3/α−1) 2\n7/3−1/α = 9 13 ≥ 2 3 , we\nobtain the statement to show.\nC.4 Bound on the value function difference for episodes with ∀κ, ι : |Xk,κ,ι| ≤ κ\nTo prove Lemma 3, it is sufficient to consider a fixed phase k. To avoid notational clutter, we therefore omit the phase indices k in this section.\nFor the proof, we reason about a sequence of MDPsMd which have the same transition probabilities but different reward functions r(d). For d = 0, the reward function is the original reward function r of M , i.e. r(0)t = rt for all t = 1 . . . H . The following reward functions are then defined recursively as r(2d+2)t = σ (d),2 t:H , where σ (d),2 t:H is the local variance of the value function w.r.t. the rewards r\n(d). Note that for every d and t = 1 . . . H and s ∈ S, we have r(d)t (s) ∈ [0, Hd]. In complete analogy, we define M̃d and M̂d.\nWe first prove a sequence of lemmas necessary for Lemma 3. Lemma C.4.\nVi,j − Ṽi,j = H−1∑ t=i Pi:t−1(Pt − P̃t)Ṽt+1:j"
    }, {
      "heading" : "Proof.",
      "text" : "Vi,j(s)− Ṽi,j(s) =r(s) + PiVi+1:j(s)− r(s)− P̃iṼi+1:j(s) + PiṼi+1,j(s)− PiṼi+1:j(s) =Pi(Vi+1:j − Ṽi+1:j) + (Pi − P̃i)Ṽi+1:j(s)\nSince we have Vj:j(s) = r(s) = Ṽj:j(s), we can recursively expand the first difference until i = j and get\nVi,j − Ṽi,j = j−1∑ t=i Pi:t−1(Pt − P̃t)Ṽt+1:j\nLemma C.5. Assume p, p̂, p̃ ∈ [0, 1] satisfy p ∈ P and p̃ ∈ conv(P) where\nP := { p′ ∈ [0, 1] :|p̂− p′| ≤ √ ln(6/δ1)\n2n , |p̂− p′| ≤ √\n2p̂(1− p̂) n ln(6/δ1) + 7 3(n− 1) ln(6/δ1),\nif n > 1 : ∣∣∣√p′(1− p′)−√p̂(1− p̂)∣∣∣ ≤√2 ln(6/δ1)\nn− 1\n} .\nThen\n|p− p̃| ≤ √\n8p̃(1− p̃) n ln(6/δ1) + 26 3(n− 1) ln(6/δ1).\nProof. We have P = P1 ∩ P2 with P1 = { p′ ∈ [0, 1] :|p̂− p′| ≤ √ ln(6/δ1)\n2n , |p̂− p′| ≤ √\n2p̂(1− p̂) n ln(6/δ1) + 7 3(n− 1) ln(6/δ1),\nif n > 1 : ( max { 0, √ p̂(1− p̂)− √ 2 ln(6/δ1)\nn− 1\n})2 ≤ p′(1− p′) } .\nand\nP2 = { p′ ∈ R : if n > 1 : √ p′(1− p′) ≤ √ p̂(1− p̂) + √ 2 ln(6/δ1)\nn− 1\n} .\nNote that the last condition of P1 is equivalent to √ p̂(1− p̂) ≤ √ p′(1− p′) + √ 2 ln(6/δ1) n−1 as p′ ∈ [0, 1]. As an intersection of a polytope and the superlevel set of a concave function p′(1− p′), the set P1 is convex. Hence conv(P) = conv(P1 ∩ P2) ⊆ conv(P1) = P1. It therefore follows that p̃ ∈ P1. We now bound\n|p− p̃| ≤|p− p̂|+ |p̂− p̃| ≤ 2 √\n2p̂(1− p̂) n ln(6/δ1) + 2 7 3(n− 1) ln(6/δ1)\n= √ p̂(1− p̂)\n√ 8\nn ln(6/δ1) +\n14\n3(n− 1) ln(6/δ1)\n≤ (√ p̃(1− p̃) + √ 2 ln(6/δ1)\nn− 1\n)√ 8\nn ln(6/δ1) +\n14\n3(n− 1) ln(6/δ1)\n≤ √\n8p̃(1− p̃) n ln(6/δ1) + 26 3(n− 1) ln(6/δ1)\nLemma C.6. Assume |p(s′|s, a)− p̃i(s′|s, a)| ≤ c1(s, a) + c2(s, a) √ p̃i(s′|s, a)(1− p̃i(s′|s, a))\nfor a = πi(s) and all s′, s ∈ S. Then |(Pi − P̃i)Ṽi+1:j(s)| ≤ c1(s, a)|S(s, a)|‖Ṽi+1:j‖∞ + c2(s, a) √ |S(s, a)|σ̃i:j(s)\nfor any (s, a) ∈ S × A where S(s, a) denotes the set of possible successor states of state s and action a.\nProof. Let s and a = πi(s) be fixed and define for this fixed s the constant function V̄ (s′) = P̃iṼi+1:j(s) [sic] as the expected value function of the successor states of s. Note that V̄ (s′) is a constant function and so V̄ = P̃iV̄ = PiV̄ .\n|(Pi − P̃i)Ṽi+1:j(s)| = |(Pi − P̃i)Ṽi+1:j(s) + V̄ (s)− V̄ (s)| =|(Pi − P̃i)(Ṽi+1:j − V̄ )(s)|\n≤ ∑\ns′∈S(s,a)\n|p(s′|s, a)− p̃i(s′|s, a)||Ṽi+1:j(s′)− V̄ (s′)| (7)\n≤ ∑\ns′∈S(s,a)\n( c1(s, a) + c2(s, a) √ p̃i(s′|s, a)(1− p̃i(s′|s, a)) ) |Ṽi+1:j(s′)− V̄ (s′)|\n≤|S(s, a)|c1(s, a)‖Ṽi+1:j‖∞ + c2(s, a) ∑\ns′∈S(s,a)\n√ p̃i(s′|s, a)(1− p̃i(s′|s, a))(Ṽi+1:j(s′)− V̄ (s′))2\n≤|S(s, a)|c1(s, a)‖Ṽi+1:j‖∞ + c2(s, a) √ |S(s, a)| ∑ s′∈S(s,a) p̃i(s′|s, a)(1− p̃i(s′|s, a))(Ṽi+1:j(s′)− V̄ (s′))2\n(8) ≤|S(s, a)|c1(s, a)‖Ṽi+1:j‖∞ + c2(s, a) √ |S(s, a)| ∑ s′∈S(s,a) p̃i(s′|s, a)(Ṽi+1:j(s′)− V̄ (s′))2\n=|S(s, a)|c1(s, a)‖Ṽi+1:j‖∞ + c2(s, a) √ |S(s, a)|σ̃i:j(s)\nIn Inequality (7), we wrote out the definition ofPi and P̃i and applied the triangle inequality. We then applied the assumed bound and bounded |Ṽi+1:j(s′)−V̄ (s′)| by ‖Vi+1:j‖∞ as all value functions are nonnegative. In Inequality (8), we applied the Cauchy-Schwarz inequality and subsequently used the fact that each term is the sum is nonnegative and that (1 − p̃i(s′|s, a)) ≤ 1. The final equality follows from the definition of σ̃i:j .\nC.4.1 Bounding the difference in value function\nLemma C.7. Assume M ∈Mk. If |Xκ,ι| ≤ κ for all (κ, ι). Then\n|V (d)1:H(s0)− Ṽ (d) 1:H(s0)| =: ∆d ≤ Âd + B̂d + min{Ĉd, Ĉ ′ d + Ĉ ′′√∆2d+2} where\nÂd = 4 Hd, B̂d = 52Hd+1 |K × I|C 3m ln 6 δ1 ,\nand\nĈ ′d =\n√ C |K × I| 8\nm H2d+2 ln\n6 δ1 Ĉd = Ĉ ′ d\n√ H, Ĉ ′′ = √ C |K × I| 8\nm ln\n6 δ1 ."
    }, {
      "heading" : "Proof.",
      "text" : "∆d =|V (d)1:H(s0)− Ṽ (d) 1:H(s0)| = ∣∣∣∣∣ H−1∑ t=1 P1:t−1(Pt − P̃t)Ṽ (d)t+1:H(s0) ∣∣∣∣∣ ≤ H−1∑ t=1 P1:t−1|(Pt − P̃t)Ṽ (d)t+1:H |(s0)\n= H−1∑ t=1 P1:t−1  ∑ s,a∈S×A I{s = ·, a = πt(s)}|(Pt − P̃t)Ṽ (d)t+1:H |  (s0)\n= ∑\ns,a∈S×A H−1∑ t=1 P1:t−1 ( I{s = ·, a = πt(s)}|(Pt − P̃t)Ṽ (d)t+1:H | ) (s0)\n= ∑\ns,a∈S×A H−1∑ t=1 P1:t−1 ( I{s = ·, a = πt(s)}|(Pt − P̃t)Ṽ (d)t+1:H(s)| ) (s0)\nThe first equality follows from Lemma C.4, the second step from the fact that Vt+1:H ≥ 0 and P1:t−1 being non-expansive. In the third, we introduce an indicator function which does not change the value as we sum over all (s, a) pairs. The fourth step relies on the linearity of the Pi:j operators. In the fifth step, we realize that I{s = ·, a = πt(s)}|(Pt − P̃t)Ṽ (d)t+1:H(·) is a function that takes nonzero values only for input s. We can therefore replace the argument of the second term with s without changing the value. The term then becomes constant and by linearity of Pi:j , we can write\n|V (d)1:H(s0)− Ṽ (d) 1:H(s0)| = ∆d ≤ ∑ s,a∈S×A H−1∑ t=1 |(Pt − P̃t)Ṽ (d)t+1:H(s)|(P1:t−1I{s = ·, a = πt(s)})(s0)\n≤ ∑ s,a/∈X H−1∑ t=1 ‖Ṽ (d)t+1:H‖∞(P1:t−1I{s = ·, a = πt(s)})(s0)\n+ ∑ s,a∈X H−1∑ t=1 |(Pt − P̃t)Ṽ (d)t+1:H(s)|(P1:t−1I{s = ·, a = πt(s)})(s0)\n≤ ∑ s,a/∈X H−1∑ t=1 Hd+1(P1:t−1I{s = ·, a = πt(s)})(s0)\n+ ∑ s,a∈X H−1∑ t=1 |(Pt − P̃t)Ṽ (d)t+1:H(s)|(P1:t−1I{s = ·, a = πt(s)})(s0)\n≤ ∑ s,a/∈X H−1∑ t=1 Hd+1(P1:t−1I{s = ·, a = πt(s)})(s0)\n+ ∑ s,a∈X H−1∑ t=1 ∣∣∣|S(s, a)|c1(s, a)Hd+1 + c2(s, a)√|S(s, a)|σ̃(d)t:H(s, a)∣∣∣ (P1:t−1I{s = ·, a = πt(s)})(s0)\n≤ ∑ s,a/∈X H∑ t=1 Hd+1(P1:t−1I{s = ·, a = πt(s)})(s0)\n+ ∑ s,a∈X H∑ t=1 ∣∣|S(s, a)|c1(s, a)Hd+1∣∣ (P1:t−1I{s = ·, a = πt(s)})(s0) + ∑ s,a∈X H−1∑ t=1\n∣∣∣c2(s, a)√|S(s, a)|σ̃(d)t:H(s, a)∣∣∣ (P1:t−1I{s = ·, a = πt(s)})(s0) ≤ ∑ s,a/∈X Hd+1w(s, a) + ∑ s,a∈X |S(s, a)|c1(s, a)Hd+1w(s, a)\n+ ∑ s,a∈X √ |S(s, a)|c2(s, a) H−1∑ t=1 σ̃ (d) t:H(s, a)(P1:t−1I{s = ·, a = πt(s)})(s0)\n≤ ∑ s,a/∈X Hd+1w(s, a) + ∑ s,a∈X Cc1(s, a)H d+1w(s, a)\n+ ∑ s,a∈X √ Cc2(s, a) H−1∑ t=1 σ̃ (d) t:H(s, a)(P1:t−1I{s = ·, a = πt(s)})(s0)\nIn the second inequality, we split the sum over all (s, a) pairs and used the fact that Pt and P̃t are non-expansive, i.e., |(Pt− P̃t)Ṽ (d)t+1:H(s)| ≤ ‖V (d) t+1:H‖∞. The next step follows from ‖V (d) t+1:H‖∞ ≤ ‖V (d)1:H‖∞ ≤ Hd+1. We then apply Lemma C.6 and subsequently use that all terms are nonnegative and the definition ofw(s, a). Eventually, we use that |S(s, a)| ≤ C for all s, a. Using the assumption that M ∈Mk and M̃ ∈M′k from Lemma A.1, we can apply Lemma C.5 and get that\nc2(s, a) =\n√ 8\nn(s, a) ln\n6 δ1 and c1(s, a) =\n26\n3(n(s, a)− 1) ln\n6 δ1 .\nHence, we can bound ∆d ≤ A(s0) +B(s0) + C(s0)\nas a sum of three terms which we will consider individually in the following. The first term is A(s0) = ∑ s,a/∈X Hd+1w(s, a) ≤ wmin|S|Hd+1 ≤ Hd+1|S| 4H|S| = 4 Hd = Âd\nas w(s, a) ≤ wmin for all s, a not in the active set and that the policy is deterministic, which implies that there are only |S| nonzero w. The next term is\nB(s0) =C ∑ s,a∈X w(s, a)Hd+1 26 3(n(s, a)− 1) ln 6 δ1\n=Hd+1C ln 6\nδ1 ∑ κ,ι ∑ s,a∈Xκ,ι w(s, a) 26 3(n(s, a)− 1)\n≤Hd+1 26C 3 ln 6\nδ1 ∑ κ,ι ∑ s,a∈Xκ,ι w(s, a) n(s, a) n(s, a) n(s, a)− 1 .\nFor s, a ∈ Xκ,ι, we have n(s, a) ≥ mw(s, a)κ (see Equation (5)) and so w(s, a)\nn(s, a) ≤ 1 κm . (9)\nFurther, for all relevant (s, a)-pairs, we have n(s, a) > 1 (follows from |Xκ,ι| ≤ κ) which implies\nB(s0) ≤Hd+1 52C\n3 ln\n6\nδ1 ∑ κ,ι |Xκ,ι| κm\nand since we assumed |Xκ,ι| ≤ κ\nB(s0) ≤ 52Hd+1 |K × I|C\n3m ln\n6 δ1 = B̂d\nwhere K × I is the set of all possible (κ, ι)-pairs. The last term is C(s0) = √ C ∑ s,a∈X c2(s, a) H−1∑ t=1 σ̃ (d) t:H(s, a))P1:t−1I{s = ·, a = πt(s)}\n≤ √ C ∑ s,a∈X c2(s, a) H−1∑ t=1 σ̃ (d) t:H(s, a))P1:t−1I{s = ·, a = πt(s)} ≤ √ C ∑ s,a∈X c2(s, a) √√√√H−1∑ t=1 P1:t−1I{s = ·, a = πt(s)} √√√√H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}\n≤ √ C ∑ s,a∈X √√√√8w(s, a) n(s, a) ln 6 δ1 H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}\nwhere we first applied the Cauchy-Schwarz inequality and then used the definition of c2(s, a) and w(s, a).\nC(s0) ≤ √ C ∑ κ,ι ∑ s,a∈Xκ,ι √√√√8w(s, a) n(s, a) ln 6 δ1 H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}(s0)\n≤ √ C ∑ κ,ι √√√√|Xκ,ι| ∑ s,a∈Xκ,ι 8w(s, a) n(s, a) ln 6 δ1 H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}(s0)\n≤ √ C ∑ κ,ι √√√√ ∑ s,a∈Xκ,ι 8 m ln 6 δ1 H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}(s0)\n≤ √√√√C |K × I| 8 m ln 6\nδ1 ∑ s,a∈X H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}(s0)\n≤ √√√√C |K × I| 8 m ln 6\nδ1 ∑ s,a∈S×A H−1∑ t=1 σ̃ (d),2 t:H (s, a))P1:t−1I{s = ·, a = πt(s)}(s0)\n= √√√√C |K × I| 8 m ln 6\nδ1 H−1∑ t=1 P1:t−1σ̃ (d),2 t:H (s0) (10)\n≤ √ C |K × I| 8H 2d+3 ln(6/δ1)\nm = Ĉd\nWe first split the sum and applied the Cauchy-Schwarz inequality. Then we used again Inequality (9) and |Xκ,ι| ≤ κ. In the fourth step, we applied Cauchy-Schwarz and the final inequality follows from ‖σ̃(d),2t:H ‖∞ ≤ H2d+2 and the fact that P1:t−1 is non-expansive. Alternatively, we can rewrite the bound in Equation (10) as\nC(s0) ≤ √√√√C |K × I| 8 m ln 6\nδ1 H−1∑ t=1 P1:t−1σ̃ (d),2 t:H (s0)\n= √√√√C |K × I| 8 m ln 6\nδ1 H−1∑ t=1 P1:t−1σ̃ (d),2 t:H (s0)− P̃1:t−1σ̃ (d),2 t:H (s0) + P̃1:t−1σ̃ (d),2 t:H (s0).\nLemma 4 shows that the variance Ṽ(d)1:H also satisfies the Bellman equation with the local variances σ̃ (d),2 i:j . This insight allows us to bound ∑H−1 t=1 P̃1:t−1σ̃ (d),2 t:H (s0) = Ṽ (d) 1:H(s0) ≤ H2d+2. Also, note that σ̃(d),2t:H = r (2d+2) t which gives us\nC(s0) ≤ √√√√C |K × I| 8 m ln 6\nδ1\n( H2d+2 +\nH−1∑ t=1 P1:t−1r (2d+2) t (s0)− P̃1:t−1r (2d+2) t (s0)\n)\n= √ C |K × I| 8\nm ln\n6\nδ1\n( H2d+2 + V\n(2d+2) 1:H (s0)− Ṽ (2d+2) 1:H (s0) ) ≤ √ C |K × I| 8\nm ln\n6 δ1 (H2d+2 + ∆2d+2)\n≤ √ C |K × I| 8\nm H2d+2 ln\n6 δ1 +\n√ C |K × I| 8\nm ∆2d+2 ln\n6 δ1 = Ĉ ′d + Ĉ\n′′√∆2d+2\nC.4.2 Proof of Lemma 4 (Bellman equation of local value function variances)"
    }, {
      "heading" : "Proof of Lemma 4.",
      "text" : "Vi:j(s) =E ( j∑ t=i rt(st)− Vi:j(si) )2 |si = s  =E\n( j∑ t=i+1 rt(st)− Vi+1:j(si+1) + Vi+1:j(si+1) + ri(si)− Vi:j(si) )2 |si = s  =E\n( j∑ t=i+1 r(st)− Vi+1:j(si+1) )2 |si = s  + 2E [( j∑\nt=i+1\nrt(st)− Vi+1:j(si+1) ) (Vi+1:j(si+1) + ri(si)− V (si)) |si = s ] + E [ (Vi+1:j(si+1) + ri(si)− Vi:j(si))2 |si = s\n] =E [Vi+1:j(si+1)|si = s]\n+ 2E [ E [( j∑\nt=i+1\nrt(st)− Vi+1:j(si+1) ) (Vi+1:j(si+1) + ri(si)− Vi:j(si)) |si+1 ] |si = s ]\n+ E [ (Vi+1:j(si+1)− PiVi+1:j(si))2 |si = s ] where the final equality follows from the tower property of conditional expectations, and the fact that Vi:j(si) = PiVi+1:j(si) + ri(si). Since by the definition of the value function\nE\n[( j∑\nt=i+1\nrt(st)− Vi+1:j(si+1) ) |si+1 ] = 0\nthe middle term vanishes and the last term is by definition σ2i:j(s) we obtain\nVi:j(s) = PiVi+1:j(s) + σ 2 i:j(s).\nNoting that Vj:j(s) = (rj(s)− rj(s))2 = 0, we can unroll the equation and obtain\nVi:j(s) = j∑ t=i Pi:t−1σ 2 t:j(s).\nFrom the definition of V1:H and the fact that 0 ≤ r(·) ≤ rmax, we see that 0 ≤ V1:H ≤ H2r2max and the final statement of the lemma follows."
    }, {
      "heading" : "C.4.3 Proof of Lemma 3",
      "text" : "Proof of Lemma 3. The recursive bound from Lemma C.7 ∆d ≤ Âd + B̂d + Ĉ ′d + Ĉ ′′ √ ∆2d+2\nhas the form ∆d ≤ Yd + Z √ ∆2d+2. Expanding this form and using the triangle inequality gives\n∆0 ≤Y0 + Z √ ∆2 ≤ Y0 + Z √ Y2 + Z √ ∆6 ≤ Y0 + Z √ Y2 + Z 3/2∆ 1/4 6\n≤Y0 + Z √ Y2 + Z 3/2Y 1/4 6 + Z 7/4∆ 1/8 14 ≤ . . .\nand by doing this up to level γ = d lnH2 ln 2e, we obtain\n∆0 ≤ ∑\nd∈D\\{γ}\nZ 2d 2+dY 2 2+d d + Z 2γ 2+γ ∆ 2 2+γ γ\nwhere D = {0, 2, 6, 14, . . . γ}. Note that the exponent of H compared to m is the larger in Ĉ ′d than in B̂d. Therefore, for sufficiently large m, Ĉ ′d dominates the other term. More precisely, for\nm ≥ 338H 9 C |K × I| ln 6 δ1\n(11)\nwe have B̂d ≤ Ĉ ′d. We can therefore consider Z = Ĉ ′′ and Yd = 2Ĉ ′d + Âd. Also, since Ĉd ≥ Ĉ ′d, we can bound ∆γ ≤ Âd + 2Ĉd. For notational simplicity, we will use the auxiliary variable\nm1 = 8C|K × I|H2\nm 2 ln\n6 δ1 .\nand get\nZ = Ĉ ′′ = √ m1\nH and\nYd = Âd + 2Ĉ ′ d = (1/4 + 2 √ m1)H d and ∆γ ≤ Âγ + 2Ĉγ = (1/4 + 2 √ m1H)H γ .\nThen( Z2dY 2d )(2+d)−1 = ( md1 2d+2(1/4 + 2 √ m1) 2 )(2+d)−1 = ( md1 d(1/4 + 2 √ m1) 2 )(2+d)−1\nand ( Z2γ∆γ )(2+γ)−1 = ( mγ1 2γ+2(1/4 + 2 √ m1H) 2 )(2+γ)−1 = ( mγ1 γ(1/4 + 2 √ m1H) 2 )(2+γ)−1 .\nPutting these pieces together, we obtain\n∆0 ≤ ∑ d∈D\\{γ} ( m1) d 2+d ( 1 4 + 2 √ m1 ) 2 d+2 + ( m1) γ γ+2 ( 1 4 + 2 √ Hm1 ) 2 γ+2\n= 1 4 + 2 √ m1 + ∑ d∈D\\{0,γ} ( m1) d 2+d ( 1 4 + 2 √ m1 ) 2 d+2 + ( m1) γ γ+2 ( 1 4 + 2 √ Hm1 ) 2 γ+2\n≤1 4 + 2 √ m1 + ∑ d∈D\\{0,γ} ( m1) d 2+d\n[( 1\n4\n) 2 d+2\n+ (2 √ m1) 2 d+2\n]\n+ ( m1) γ γ+2\n[( 1\n4\n) 2 γ+2 + ( 2 √ Hm1 ) 2 γ+2 ]\nwhere we used the fact that (a + b)φ ≤ aφ + bφ for a, b > 0 and 0 < φ < 1. We now bound the H1/(2+γ) by using the definition of γ. Since\n1\n2 + γ =\n2 ln 2\n4 ln 2 + lnH ≤ 2 logH 2\nand since H ≥ 1, we have H1/(2+γ) ≤ 4. Therefore\n∆0 ≤1 4 + 2 √ m1 + ∑ d∈D\\{0,γ} ( m1) d 2+d\n[( 1\n4\n) 2 d+2\n+ (2 √ m1) 2 d+2\n]\n+ ( m1) γ γ+2\n[( 1\n4\n) 2 γ+2\n+ 4 (2 √ m1) 2 γ+2\n]\n≤1 4 + 2 √ m1 + ∑ d∈D\\{0} ( m1) d 2+d\n[( 1\n4\n) 2 d+2\n+ 4 (2 √ m1) 2 d+2\n]\n≤1 4 + 2 √ m1 + log2 γ∑ i=1 ( m1) 1−2−i\n[( 1\n4\n)2−i + 4 (2 √ m1) 2−i ]\n≤1 4 + 2 √ m1 + log2 γ∑ i=1 m1−2 −i 1\n[( 1\n4\n)2−i + 4 (2 √ m1) 2−i ] In the first inequality, we used the bound for H1/(2+γ) and in the second inequality we simplified the expression by noting that all terms are nonnegative. In the next step, we re-parameterized the sum. In the final inequality, we used the assumption that 0 < ≤ 1 and therefore 1−2−i ≤ 1.\n∆0 ≤1 4 + 2 √ m1 + 1 4 log2 γ∑ i=1 (4m1) 1−2−i + 4 log2 γ∑ i=1 (m1) 1−2−i (4m1) 2−i−1\n≤1 4 + 2 √ m1 + 1 4 log2 γ∑ i=1 (4m1) 1−2−i + 16 log2 γ∑ i=1 (m1 4 )1−2−i−1 .\nBy requiring that\nm1 ≤ 1\n4 and noting that 1− 2−i ≥ 1/2 and 1− 2−i−1 ≥ 3/4 for i ≥ 1, we can bound the expression by\n∆0 ≤1 4 + 2 √ m1 + 1 4 log2(γ) √ 4m1 + 16 log2(γ) (m1 4 )3/4 .\nBy requiring that m1 ≤ 1/64 and m1 ≤ (2 log2 γ)−2 and m1 ≤ 1/64(log2 γ)−4/3, we can assure that ∆0 ≤ . Taking all assumptions on m1 we made above together, we realize that\nm1 ≤ (\n1\n8 log2 log2H\n)2 ≤ ( 1\n8 log2 γ )2 is sufficient for them to hold where we used log2 γ = log2(d 12 log2He) ≤ log2 log2H . This gives the following condition on m\nm ≥ 512C(log2 log2H)2|K × I| H2 2 ln 6\nδ1\nwhich is a stronger condition that the one in Equation (11).\nBy construction of ι(s, a), we have ι(s, a) ≤ 2 Hwmin = 8|S|H2 = 8H2|S|\n. Also, κk(s, a) ≤ |S|mH mwmin = 4|S| 2H2 . Therefore\n|K × I| ≤ log2 4|S|2H2 log2 8H2|S| ≤ log22 8H2|S|2\nwhich let us conclude that\nm ≥ 512CH 2\n2 (log2 log2H) 2 log22\n( 8H2|S|2 ) ln 6\nδ1\nis a sufficient condition and thus, the statement to show, holds."
    }, {
      "heading" : "C.5 Proof of Theorem 1",
      "text" : "Proof of Theorem 1. By Lemma 2, we know that the number of episodes where |Xκ,ι| > κ for some κ, ι is bounded by 6Emax|S ×A|m with probability at least 1−δ/2. For all other episodes, we have by Lemma 3 that |R̃πk − Rπk | < . Since, with probability at least 1 − δ/2, we have by Lemma 1 M ∈ Mk, we can use Lemma A.1 which gives R̃πk > R∗ ≥ Rπk to conclude that with probabilty at least 1− δ/2, for all episodes with |Xκ,ι| ≤ κ for all κ, ι, we have R∗ − Rπk < . Applying the union bound, we get the desired result, if m satisfies\nm ≥512CH 2\n2 (log2 log2H) 2 log22\n( 8H2|S|2 ) ln 6\nδ1 and\nm ≥6H 2 ln 2Emax δ .\nFrom the definitions, we get\nln 6\nδ1 = ln 6CUmax δ = ln 6|S × A|C log2(|S|H/wmin) δ = ln 6|S × A|C log2(4|S|2H2/ ) δ\nand\nEmax = log2 |S| log2 4H2|S| ≤ log22 4H2|S|\nand\nln 2Emax δ = ln 2 log2 |S| log2(4H2|S|/ ) δ ≤ ln 2 log 2 2(4H 2|S|/ ) δ\n≤ ln 6 |S × A| log 2 2(4|S|2H2/ ) δ .\nSetting\nm = 512(log2 log2H) 2CH\n2\n2 log2\n( 8H2|S|2 ) ln\n6 |S × A|C log22(4|S|2H2/ ) δ\nis therefore a valid choice for m to ensure that with probability at least 1− δ , there are at most\n6mEmax =3072(log2 log2H) 2CH 2 |S × A| 2\n× log22 ( 4H2|S| ) log2 ( 8H2|S|2 ) ln\n6|S × A|C log22(4|S|2H2/ ) δ\n-suboptimal episodes."
    }, {
      "heading" : "D Proof of the Lower PAC Bound",
      "text" : "Proof of Theorem 2. We consider the class of MDPs shown in Figure 1. The MDPs essentially consist of n parallel multi-armed bandits. For each bandit, there exist m + 1 = |A| possible instantiations, which we denote by Ii = 0 . . .m. The instantiation, or hypothesis, Ii = 0 corresponds to i(a) = I{a = a0} ′/2, that is, only action a0 has a small bias. The other hypotheses Ii = j for j = 1 . . .m correspond to i(a) = I{a = a0} ′/2 + I{a = aj} ′. We use I = (I1, . . . In) to indicate the instance of the entire MDP.\nWe defineGi = {ω ∈ Ω : π(i) = aIi}, the event that π, the policy generated byA chooses optimally in bandit i. For a given instance I , the difference between the optimal expected cumulative reward R∗I and the expected cumulative reward R π I of policy π is at least\nR∗I −RπI ≥ (H − 2)\n( 1− 1\nn n∑ i=1 I{Gi}\n) ′\n2 .\nFor π to be -optimal, we therefore need\n≥R∗I −RπI ≥ (H − 2)\n( 1− 1\nn n∑ i=1 I{Gi}\n) ′\n2 ,\n2\n(H − 2) ′ ≥\n( 1− 1\nn n∑ i=1 I{Gi}\n) ,\n1\nn n∑ i=1 I{Gi} ≥ ( 1− 2 (H − 2) ′ ) ,\n1\nn n∑ i=1 I{Gi} ≥ ( 1− 2 (H − 2)η (H − 2)16 e4 ) = 1− η 8e4\nwhere we chose value ′ := 16 e 4 (H−2)η for ′. We will specify the exact value of parameter η later. The condition basically states that at least a fraction of φ := 1− η/(8e4) bandits need to be solved optimally by A for the resulting policy π to be -accurate. For A to be ( , δ)-correct, we therefore need\nPI\n( 1\nn n∑ i=1 I{Gi} ≥ φ ) ≥ PI(R∗I −RπI ≥ ) ≥ 1− δ\nfor each instance I . Using Markov’s inequality, we obtain\n1− δ ≤ PI\n( 1\nn n∑ i=1 I{Gi} ≥ φ ) ≤ 1 nφ n∑ i=1 EI [I{Gi}] ≤ 1 nφ n∑ i=1 PI(Gi)\nAll Gi are independent of each other by construction of the MDP. In fact ∑n i=1 I{Gi} is Poissonbinomial distributed as I{Gi} are independent Bernoulli random variables with potentially different mean. Therefore, upper bounds δi must exist such that δi ≥ PI(GCi ) for all hypotheses I and such that 1−δ ≤ 1nφ ∑n i=1(1−δi) or equivalently n(1+δφ−φ) ≥ ∑n i=1 δi. Since allGi are independent of each other and\n′ = 16 e4 (H − 2)η ≤ 16(H − 2)e 4η (H − 2)64e4η = 1 4\nwe can apply Theorem 1 by Mannor and Tsitsiklis [19] in cases where\nδi ≤ 1 η (1− φ+ δφ) ≤ 1 η (1− φ+ δ) ≤ 1 8e4 + δ η ≤ 2 8e4 .\nThis result gives us the minimum expected number of times EI [ni] we need to observe state i to ensure that PI(GCi ) ≤ δi\nEI [ni] ≥ [ c1(|A| − 1)\n′2 ln ( c2 δi )] I{ηδi ≤ 1− φ+ φδ},\nfor appropriate constants c1 and c2 (e.g. c1 = 400 and c2 = 4). We can find a valid lower bound for the total number of samples for any δ1, . . . δn by considering the worst bound over all δ1, . . . δn. The following optimization problem encodes this idea\nmin δ1,...δn n∑ i=1 ln 1 δi I{ηδi ≤ 1− φ+ φδ} (12)\ns.t. n∑ i=1 δi ≤ n(1 + φδ − φ)\nAs shown in Lemma D.1 in the supplementary material, the optimal solution of the optimization problem in Equation (12) is δ1 = · · · = δn = c if η(1 − ln c) ≤ 1 with c = 1 + δφ − φ. Since the left-hand side of this condition is decreasing in c, we can plug in a lower bound of c ≥ 1− φ = η8e4 and get the sufficient condition\nη(1− ln η 8e4 ) = η(1− ln η + 4 + ln 8) ≤ 1.\nIt is easy to verify that η = 1/10 satisfies this condition. Hence δ1 = · · · = δn = c is the optimal solution to the problem in Equation (12). In each episode, we only observe a single state i and therefore, there need to be at least\nEI [nA] ≥ n∑ i=1 EI [ni] ≥ c1(|A| − 1)n ′2 ln ( c2 δi ) ≥ c1(|A| − 1)n ′2 ln ( c2 δ + η8e4 ) observed episodes for appropriate constants c1 and c2. Plugging in ′ and n = |S| − 3, we obtain the desired statement.\nLemma D.1. The optimization problem\nmin δ1...δn∈[0,1] n∑ i=1 ln 1 δ i I{ηδi ≤ c}\ns.t. n∑ i=1 δi ≤ nc\nwith c ∈ [0, 1] and η(1− ln c) ≤ 1\nhas optimal solution δ1 = · · · = δn = c.\nProof. Without the indicator part in the objective, we can show that δ1 = · · · = δn = c is an optimal solution by checking the KKT conditions and noting that the problem is convex. Let k denote the number of δj that are set such that the indicator function is 0. Without loss of generality we can assume that their value is δP := c/η and the remaining δj take the same value δA (for a fixed δP and k, the problem reduces to the one without the indicator functions). Then the problem transforms into\nmin δA∈(0,1),k∈{0,1,...n} (n− k) ln 1 δA\n(n− k)δA + kδP ≤ nc\nWe can rewrite the constraint as\n(n− k)δA + kδP ≤ nc (n− k)δA ≤ nc− kδP = ( n− k\nη\n) c\nδA ≤ n− kη n− k c.\nSince the objective decreases with δA, it is optimal to choose δA as large as possible. The optimization problem then reduces to\nmin k∈{0,...bn/γc} (n− k) ln ( n− k n− γk c−1 ) .\nwhere we used for convenience γ := 1/η. We want to show that the optimal solution to this problem is k = 0. We can therefore relax the problem to the continuous domain without loss of generality\nmin k∈[0,n/γ] (n− k) ln ( n− k n− γk c−1 ) .\nBy reparameterizing the problem with α = k/n, we get\nmin α∈[0,1/γ]\nn(1− α) ln (\n1− α c(1− γα)\n) .\nWe realize that the minimizer does not depend on n (while the value does). The second derivative of the objective function is\nn (γ − 1)2\n(1− γα)2(1− α) ,\nwhich is nonnegative for α ∈ [0, 1/γ]. Hence, the objective is convex in the feasible region and the minimizer of this problem is α = 0 if the derivative of the objective is nonnegative in 0. The derivative of the objective in 0 is given by\nn(γ − 1 + ln(c)).\nA sufficient condition for α = 0 being optimal is therefore\nγ ≥ 1− ln c\nor, in terms of the original problem with η = 1/γ, δ1 = . . . δn = c is optimal if\nη(1− ln c) ≤ 1"
    } ],
    "references" : [ {
      "title" : "PAC Model-Free Reinforcement Learning",
      "author" : [ "Alexander L. Strehl", "Lihong Li", "Eric Wiewiora", "John Langford", "Michael L. Littman" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2006
    }, {
      "title" : "Finite-Sample Convergence Rates for Q-Learning and Indirect Algorithms",
      "author" : [ "Michael J Kearns", "Satinder P Singh" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 1999
    }, {
      "title" : "R-MAX – A General Polynomail Time Algorithm for Near-Optimal Reinforcement Learning",
      "author" : [ "Ronen I Brafman", "Moshe Tennenholtz" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2002
    }, {
      "title" : "On the Sample Complexity of Reinforcement Learning",
      "author" : [ "Sham M. Kakade" ],
      "venue" : "PhD thesis,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2003
    }, {
      "title" : "Online Regret Bounds for a New Reinforcement Learning Algorithm",
      "author" : [ "Peter Auer", "Ronald Ortner" ],
      "venue" : "In Proceedings 1st Austrian Cognitive Vision Workshop,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2005
    }, {
      "title" : "PAC bounds for discounted MDPs",
      "author" : [ "Tor Lattimore", "Marcus Hutter" ],
      "venue" : "In International Conference on Algorithmic Learning Theory,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2012
    }, {
      "title" : "Model-based reinforcement learning with nearly tight exploration complexity bounds",
      "author" : [ "Istvàn Szita", "Csaba Szepesvári" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2010
    }, {
      "title" : "On the Sample Complexity of Reinforcement Learning with a Generative Model",
      "author" : [ "Mohammad Gheshlaghi Azar", "Rémi Munos", "Hilbert J. Kappen" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2012
    }, {
      "title" : "Near-Bayesian exploration in polynomial time",
      "author" : [ "J Zico Kolter", "Andrew Y Ng" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2009
    }, {
      "title" : "Efficient reinforcement learning",
      "author" : [ "Claude-Nicolas Fiechter" ],
      "venue" : "In Conference on Learning Theory,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 1994
    }, {
      "title" : "Expected Mistake Bound Model for On-Line Reinforcement Learning",
      "author" : [ "Claude-Nicolas Fiechter" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 1997
    }, {
      "title" : "Efficient PAC learning for episodic tasks with acyclic state spaces",
      "author" : [ "Spyros Reveliotis", "Theologos Bountourelis" ],
      "venue" : "Discrete Event Dynamic Systems: Theory and Applications,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2007
    }, {
      "title" : "Incremental Model-based Learners With Formal Learning-Time Guarantees",
      "author" : [ "Alexander L Strehl", "Lihong Li", "Michael L Littman" ],
      "venue" : "In Conference on Uncertainty in Artificial Intelligence,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2006
    }, {
      "title" : "Reinforcement Learning in Finite MDPs : PAC Analysis",
      "author" : [ "Alexander L Strehl", "Lihong Li", "Michael L Littman" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2009
    }, {
      "title" : "Near-optimal Regret Bounds for Reinforcement Learning",
      "author" : [ "Thomas Jaksch", "Ronald Ortner", "Peter Auer" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2010
    }, {
      "title" : "An analysis of model-based Interval Estimation for Markov Decision Processes",
      "author" : [ "Alexander L. Strehl", "Michael L. Littman" ],
      "venue" : "Journal of Computer and System Sciences,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2008
    }, {
      "title" : "The Variance of Markov Decision Processes",
      "author" : [ "Matthew J Sobel" ],
      "venue" : "Journal of Applied Probability,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 1982
    }, {
      "title" : "Empirical Bernstein Bounds and Sample-Variance Penalization",
      "author" : [ "Andreas Maurer", "Massimiliano Pontil" ],
      "venue" : "In Conference on Learning Theory,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2009
    }, {
      "title" : "The Sample Complexity of Exploration in the Multi-Armed Bandit Problem",
      "author" : [ "Shie Mannor", "John N Tsitsiklis" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2004
    }, {
      "title" : "Near-optimal Regret Bounds for Reinforcement Learning",
      "author" : [ "Thomas Jaksch", "Ronald Ortner", "Peter Auer" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2010
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "We formalize this as the sample complexity of reinforcement learning [1], which is the number of time steps on which the algorithm may select an action whose value is not near-optimal.",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 1,
      "context" : "RL algorithms with a sample complexity that is a polynomial function of the domain parameters are referred to as Probably Approximately Correct (PAC) [2, 3, 4, 1].",
      "startOffset" : 150,
      "endOffset" : 162
    }, {
      "referenceID" : 2,
      "context" : "RL algorithms with a sample complexity that is a polynomial function of the domain parameters are referred to as Probably Approximately Correct (PAC) [2, 3, 4, 1].",
      "startOffset" : 150,
      "endOffset" : 162
    }, {
      "referenceID" : 3,
      "context" : "RL algorithms with a sample complexity that is a polynomial function of the domain parameters are referred to as Probably Approximately Correct (PAC) [2, 3, 4, 1].",
      "startOffset" : 150,
      "endOffset" : 162
    }, {
      "referenceID" : 0,
      "context" : "RL algorithms with a sample complexity that is a polynomial function of the domain parameters are referred to as Probably Approximately Correct (PAC) [2, 3, 4, 1].",
      "startOffset" : 150,
      "endOffset" : 162
    }, {
      "referenceID" : 7,
      "context" : "1 It does not require additional structure such as assuming access to a generative model [8] or that the state transitions are sparse or acyclic [6].",
      "startOffset" : 89,
      "endOffset" : 92
    }, {
      "referenceID" : 5,
      "context" : "1 It does not require additional structure such as assuming access to a generative model [8] or that the state transitions are sparse or acyclic [6].",
      "startOffset" : 145,
      "endOffset" : 148
    }, {
      "referenceID" : 3,
      "context" : "The limited prior research on upper bound PAC results for finite horizon MDPs has focused on different settings, such as partitioning a longer trajectory into fixed length segments [4, 1], or considering a sliding time window [9].",
      "startOffset" : 181,
      "endOffset" : 187
    }, {
      "referenceID" : 0,
      "context" : "The limited prior research on upper bound PAC results for finite horizon MDPs has focused on different settings, such as partitioning a longer trajectory into fixed length segments [4, 1], or considering a sliding time window [9].",
      "startOffset" : 181,
      "endOffset" : 187
    }, {
      "referenceID" : 8,
      "context" : "The limited prior research on upper bound PAC results for finite horizon MDPs has focused on different settings, such as partitioning a longer trajectory into fixed length segments [4, 1], or considering a sliding time window [9].",
      "startOffset" : 226,
      "endOffset" : 229
    }, {
      "referenceID" : 9,
      "context" : "2 Fiechter [10, 11] and Reveliotis and Bountourelis [12] do tackle a closely related setting, but find a dependence that is at least H.",
      "startOffset" : 11,
      "endOffset" : 19
    }, {
      "referenceID" : 10,
      "context" : "2 Fiechter [10, 11] and Reveliotis and Bountourelis [12] do tackle a closely related setting, but find a dependence that is at least H.",
      "startOffset" : 11,
      "endOffset" : 19
    }, {
      "referenceID" : 11,
      "context" : "2 Fiechter [10, 11] and Reveliotis and Bountourelis [12] do tackle a closely related setting, but find a dependence that is at least H.",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 5,
      "context" : "Our work builds on recent work [6, 8] on PAC infinite horizon discounted RL that offers much tighter upper and lower sample complexity bounds than was previously known.",
      "startOffset" : 31,
      "endOffset" : 37
    }, {
      "referenceID" : 7,
      "context" : "Our work builds on recent work [6, 8] on PAC infinite horizon discounted RL that offers much tighter upper and lower sample complexity bounds than was previously known.",
      "startOffset" : 31,
      "endOffset" : 37
    }, {
      "referenceID" : 0,
      "context" : "The reward function r is possibly time-dependent and takes values in [0, 1].",
      "startOffset" : 69,
      "endOffset" : 75
    }, {
      "referenceID" : 4,
      "context" : "1 Previous works [5] have shown that the complexity of learning state transitions usually dominates learning reward functions.",
      "startOffset" : 17,
      "endOffset" : 20
    }, {
      "referenceID" : 5,
      "context" : "We therefore follow existing sample complexity analyses [6, 7] and assume known rewards for simplicity.",
      "startOffset" : 56,
      "endOffset" : 62
    }, {
      "referenceID" : 6,
      "context" : "We therefore follow existing sample complexity analyses [6, 7] and assume known rewards for simplicity.",
      "startOffset" : 56,
      "endOffset" : 62
    }, {
      "referenceID" : 2,
      "context" : "Like many other PAC RL algorithms [3, 13, 14, 15], UCFH uses an optimism under uncertainty approach to balance exploration and exploitation.",
      "startOffset" : 34,
      "endOffset" : 49
    }, {
      "referenceID" : 12,
      "context" : "Like many other PAC RL algorithms [3, 13, 14, 15], UCFH uses an optimism under uncertainty approach to balance exploration and exploitation.",
      "startOffset" : 34,
      "endOffset" : 49
    }, {
      "referenceID" : 13,
      "context" : "Like many other PAC RL algorithms [3, 13, 14, 15], UCFH uses an optimism under uncertainty approach to balance exploration and exploitation.",
      "startOffset" : 34,
      "endOffset" : 49
    }, {
      "referenceID" : 14,
      "context" : "Like many other PAC RL algorithms [3, 13, 14, 15], UCFH uses an optimism under uncertainty approach to balance exploration and exploitation.",
      "startOffset" : 34,
      "endOffset" : 49
    }, {
      "referenceID" : 4,
      "context" : "Specifically, we use a finite horizon variant of extended value iteration (EVI) [5, 14].",
      "startOffset" : 80,
      "endOffset" : 87
    }, {
      "referenceID" : 13,
      "context" : "Specifically, we use a finite horizon variant of extended value iteration (EVI) [5, 14].",
      "startOffset" : 80,
      "endOffset" : 87
    }, {
      "referenceID" : 5,
      "context" : "UCFH is inspired by the infinite-horizon UCRL-γ algorithm by Lattimore and Hutter [6] but has several important differences.",
      "startOffset" : 82,
      "endOffset" : 85
    }, {
      "referenceID" : 0,
      "context" : "H, s′ ∈ S(s, a) p̃t(s ′|s, a) ∈ ConfidenceSet(p̂(s′|s, a), n(s, a)) } ; M̃k, π k := FixedHorizonEVI(Mk); /* Execute policy */ repeat SampleEpisode(π) ; // from M using π until there is a (s, a) ∈ S ×A with v(s, a) ≥ max{mwmin, n(s, a)} and n(s, a) < |S|mH; /* Update model statistics for one (s, a)-pair with condition above */ n(s, a) := n(s, a) + v(s, a); n(s, a, s′) := n(s, a, s′) + v(s, a, s′) ∀s′ ∈ S(s, a); v(s, a) := v(s, a, s′) := 0 ∀s′ ∈ S(s, a); k := k + 1 Procedure SampleEpisode(π) s0 ∼ p0; for t = 0 to H − 1 do at := πt+1(st) and st+1 ∼ p(·|st, at); v(st, at) := v(st, at) + 1 and v(st, at, st+1) := v(st, at, st+1) + 1; Function ConfidenceSet(p, n) P := { p′ ∈ [0, 1] :if n > 1 : ∣∣∣√p′(1− p′)−√p(1− p)∣∣∣ ≤√2 ln(6/δ1) n− 1 , (1)",
      "startOffset" : 677,
      "endOffset" : 683
    }, {
      "referenceID" : 5,
      "context" : "Unlike the confidence intervals used by Lattimore and Hutter [6], we not only include conditions based on Hoeffding’s inequality5 and Bernstein’s inequality (Eq.",
      "startOffset" : 61,
      "endOffset" : 64
    }, {
      "referenceID" : 2,
      "context" : "Brafman and Tennenholtz [3], Strehl and Littman [16]).",
      "startOffset" : 24,
      "endOffset" : 27
    }, {
      "referenceID" : 15,
      "context" : "Brafman and Tennenholtz [3], Strehl and Littman [16]).",
      "startOffset" : 48,
      "endOffset" : 52
    }, {
      "referenceID" : 5,
      "context" : "The general proof strategy is closest to the one of UCRL-γ [6] and the obtained bounds are similar if we replace the time horizon H with the equivalent in the discounted case 1/(1− γ).",
      "startOffset" : 59,
      "endOffset" : 62
    }, {
      "referenceID" : 5,
      "context" : "• A central quantity in the analysis by Lattimore and Hutter [6] is the local variance of the value function.",
      "startOffset" : 61,
      "endOffset" : 64
    }, {
      "referenceID" : 5,
      "context" : "The key insight for the almost tight bounds of Lattimore and Hutter [6] and Azar et al.",
      "startOffset" : 68,
      "endOffset" : 71
    }, {
      "referenceID" : 7,
      "context" : "[8] is to leverage the fact that these local variances satisfy a Bellman equation [17] and so the discounted sum of local variances can be bounded by O((1−γ)−2) instead of O((1−γ)−3).",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 16,
      "context" : "[8] is to leverage the fact that these local variances satisfy a Bellman equation [17] and so the discounted sum of local variances can be bounded by O((1−γ)−2) instead of O((1−γ)−3).",
      "startOffset" : 82,
      "endOffset" : 86
    }, {
      "referenceID" : 5,
      "context" : "• Lattimore and Hutter [6] assumed there are only two possible successor states (i.",
      "startOffset" : 23,
      "endOffset" : 26
    }, {
      "referenceID" : 5,
      "context" : "We therefore avoid assuming C = 2 which makes UCFH directly applicable to generic MDPs with C > 2 without the impractical transformation argument used by Lattimore and Hutter [6].",
      "startOffset" : 175,
      "endOffset" : 178
    }, {
      "referenceID" : 2,
      "context" : "Many PAC RL sample complexity proofs [3, 4, 13, 14] only have a binary notion of “knownness”, distinguishing between known (transition probability estimated sufficiently accurately) and unknown (s, a)-pairs.",
      "startOffset" : 37,
      "endOffset" : 51
    }, {
      "referenceID" : 3,
      "context" : "Many PAC RL sample complexity proofs [3, 4, 13, 14] only have a binary notion of “knownness”, distinguishing between known (transition probability estimated sufficiently accurately) and unknown (s, a)-pairs.",
      "startOffset" : 37,
      "endOffset" : 51
    }, {
      "referenceID" : 12,
      "context" : "Many PAC RL sample complexity proofs [3, 4, 13, 14] only have a binary notion of “knownness”, distinguishing between known (transition probability estimated sufficiently accurately) and unknown (s, a)-pairs.",
      "startOffset" : 37,
      "endOffset" : 51
    }, {
      "referenceID" : 13,
      "context" : "Many PAC RL sample complexity proofs [3, 4, 13, 14] only have a binary notion of “knownness”, distinguishing between known (transition probability estimated sufficiently accurately) and unknown (s, a)-pairs.",
      "startOffset" : 37,
      "endOffset" : 51
    }, {
      "referenceID" : 5,
      "context" : "However, as recently shown by Lattimore and Hutter [6] for the infinite horizon setting, it is possible to obtain much tighter sample complexity results by using a more fine grained categorization.",
      "startOffset" : 51,
      "endOffset" : 54
    }, {
      "referenceID" : 17,
      "context" : "By combining Hoeffding’s inequality, Bernstein’s inequality and the concentration result on empirical standard deviations by Maurer and Pontil [18] with the union bound, we get that p(s′|s, a) ∈ P with probability at least 1 − δ1 for a single phase k, fixed s, a ∈ S × A and fixed s′ ∈ S(s, a).",
      "startOffset" : 143,
      "endOffset" : 147
    }, {
      "referenceID" : 18,
      "context" : "The ranges of possible δ and are of similar order than in other state-of-the-art lower bounds for multi-armed bandits [19] and discounted MDPs [14, 6].",
      "startOffset" : 118,
      "endOffset" : 122
    }, {
      "referenceID" : 13,
      "context" : "The ranges of possible δ and are of similar order than in other state-of-the-art lower bounds for multi-armed bandits [19] and discounted MDPs [14, 6].",
      "startOffset" : 143,
      "endOffset" : 150
    }, {
      "referenceID" : 5,
      "context" : "The ranges of possible δ and are of similar order than in other state-of-the-art lower bounds for multi-armed bandits [19] and discounted MDPs [14, 6].",
      "startOffset" : 143,
      "endOffset" : 150
    }, {
      "referenceID" : 18,
      "context" : "They are mostly determined by the bandit result by Mannor and Tsitsiklis [19] we build on.",
      "startOffset" : 73,
      "endOffset" : 77
    }, {
      "referenceID" : 13,
      "context" : "Similar MDPs that essentially solve multiple of such multi-armed bandits have been used to prove lower sample-complexity bounds for discounted MDPs [14, 6].",
      "startOffset" : 148,
      "endOffset" : 155
    }, {
      "referenceID" : 5,
      "context" : "Similar MDPs that essentially solve multiple of such multi-armed bandits have been used to prove lower sample-complexity bounds for discounted MDPs [14, 6].",
      "startOffset" : 148,
      "endOffset" : 155
    }, {
      "referenceID" : 3,
      "context" : "However, the analysis in the infinite horizon case as well as for the sliding-window fixed-horizon optimality criterion considered by Kakade [4] is significantly simpler.",
      "startOffset" : 141,
      "endOffset" : 144
    }, {
      "referenceID" : 0,
      "context" : "[1] improves the state-dependency of these bounds for their delayed Q-learning algorithm to Õ ( |S||A|H 4 ln 1 δ ) .",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 8,
      "context" : "Kolter and Ng [9] use an interesting sliding-window criterion, but prove bounds for a Bayesian setting instead of PAC.",
      "startOffset" : 14,
      "endOffset" : 17
    }, {
      "referenceID" : 19,
      "context" : "[20] yields a PAC-bound on the number of episodes of at least Õ ( |S||A|H 2 ln 1 δ ) even if one ignores the reset after H time steps.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 9,
      "context" : "Similar to us, Fiechter [10] uses the value of initial states as optimality-criterion, but defines the value w.",
      "startOffset" : 24,
      "endOffset" : 28
    }, {
      "referenceID" : 4,
      "context" : "Auer and Ortner [5] investigate the same setting as we and propose a UCB-type algorithm that has noregret, which translates into a basic PAC bound of order Õ ( |S||A|H 3 ln 1 δ ) episodes.",
      "startOffset" : 16,
      "endOffset" : 19
    }, {
      "referenceID" : 11,
      "context" : "Reveliotis and Bountourelis [12] also consider the episodic undiscounted fixed-horizon setting and present an efficient algorithm in cases where the transition graph is acyclic and the agent knows for each state a policy that visits this state with a known minimum probability q.",
      "startOffset" : 28,
      "endOffset" : 32
    }, {
      "referenceID" : 6,
      "context" : "One might hope to reduce the dependency of the upper bound on |S| to be linear by an analysis similar to Mormax [7] for discounted MDPs which has sample complexity linear in |S| at the penalty of additional dependencies on H .",
      "startOffset" : 112,
      "endOffset" : 115
    }, {
      "referenceID" : 3,
      "context" : "While the original bound stated by Kakade [4] only has H, an additional H comes in through −3 due to different normalization of rewards.",
      "startOffset" : 42,
      "endOffset" : 45
    }, {
      "referenceID" : 0,
      "context" : "References [1] Alexander L.",
      "startOffset" : 11,
      "endOffset" : 14
    }, {
      "referenceID" : 1,
      "context" : "[2] Michael J Kearns and Satinder P Singh.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 2,
      "context" : "[3] Ronen I Brafman and Moshe Tennenholtz.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "[4] Sham M.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 4,
      "context" : "[5] Peter Auer and Ronald Ortner.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 5,
      "context" : "[6] Tor Lattimore and Marcus Hutter.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 6,
      "context" : "[7] Istvàn Szita and Csaba Szepesvári.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 7,
      "context" : "[8] Mohammad Gheshlaghi Azar, Rémi Munos, and Hilbert J.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 8,
      "context" : "[9] J Zico Kolter and Andrew Y Ng.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 9,
      "context" : "[10] Claude-Nicolas Fiechter.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 10,
      "context" : "[11] Claude-Nicolas Fiechter.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 11,
      "context" : "[12] Spyros Reveliotis and Theologos Bountourelis.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 12,
      "context" : "[13] Alexander L Strehl, Lihong Li, and Michael L Littman.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 13,
      "context" : "[14] Alexander L Strehl, Lihong Li, and Michael L Littman.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 14,
      "context" : "[15] Thomas Jaksch, Ronald Ortner, and Peter Auer.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 15,
      "context" : "[16] Alexander L.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 16,
      "context" : "[17] Matthew J Sobel.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 17,
      "context" : "[18] Andreas Maurer and Massimiliano Pontil.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 18,
      "context" : "[19] Shie Mannor and John N Tsitsiklis.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 19,
      "context" : "[20] Thomas Jaksch, Ronald Ortner, and Peter Auer.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 15,
      "context" : "We can find such a policy by dynamic programming similar to extended value iteration [16, 5].",
      "startOffset" : 85,
      "endOffset" : 92
    }, {
      "referenceID" : 4,
      "context" : "We can find such a policy by dynamic programming similar to extended value iteration [16, 5].",
      "startOffset" : 85,
      "endOffset" : 92
    }, {
      "referenceID" : 0,
      "context" : "The feasible set is defined as Ps,a := {p ∈ [0, 1]|S(s,a)| | ‖p‖1 = 1,∀s′ ∈ S(s, a) : p(s′) ∈ conv(ConfidenceSet(p̂(s′|s, a), n(s, a)))}.",
      "startOffset" : 44,
      "endOffset" : 50
    }, {
      "referenceID" : 15,
      "context" : "The inner max can be solved efficiently by enumeration and the outer maximum similar to extended value iteration [16].",
      "startOffset" : 113,
      "endOffset" : 117
    }, {
      "referenceID" : 15,
      "context" : "See Appendix A of Strehl and Littman [16] for details.",
      "startOffset" : 37,
      "endOffset" : 41
    }, {
      "referenceID" : 17,
      "context" : "Using both inequalities of Theorem 10 by Maurer and Pontil [18]8, we have",
      "startOffset" : 59,
      "endOffset" : 63
    }, {
      "referenceID" : 17,
      "context" : "The empirical variance denoted by Vn(X) by Maurer and Pontil [18] is p̃(s′|s, a)(1 − p̃(s′|s, a)) in our case and EVn is the true variance which amounts to p(s′|s, a)(1− p(s′|s, a)) for us.",
      "startOffset" : 61,
      "endOffset" : 65
    }, {
      "referenceID" : 0,
      "context" : "Assume p, p̂, p̃ ∈ [0, 1] satisfy p ∈ P and p̃ ∈ conv(P) where",
      "startOffset" : 19,
      "endOffset" : 25
    }, {
      "referenceID" : 0,
      "context" : "P := { p′ ∈ [0, 1] :|p̂− p′| ≤ √ ln(6/δ1) 2n ,",
      "startOffset" : 12,
      "endOffset" : 18
    }, {
      "referenceID" : 0,
      "context" : "We have P = P1 ∩ P2 with P1 = { p′ ∈ [0, 1] :|p̂− p′| ≤ √ ln(6/δ1) 2n ,",
      "startOffset" : 37,
      "endOffset" : 43
    }, {
      "referenceID" : 0,
      "context" : "Note that the last condition of P1 is equivalent to √ p̂(1− p̂) ≤ √ p′(1− p′) + √ 2 ln(6/δ1) n−1 as p′ ∈ [0, 1].",
      "startOffset" : 105,
      "endOffset" : 111
    }, {
      "referenceID" : 18,
      "context" : "Since allGi are independent of each other and ′ = 16 e (H − 2)η ≤ 16(H − 2)e η (H − 2)64e4η = 1 4 we can apply Theorem 1 by Mannor and Tsitsiklis [19] in cases where δi ≤ 1 η (1− φ+ δφ) ≤ 1 η (1− φ+ δ) ≤ 1 8e4 + δ η ≤ 2 8e4 .",
      "startOffset" : 146,
      "endOffset" : 150
    }, {
      "referenceID" : 0,
      "context" : "δn∈[0,1] n ∑",
      "startOffset" : 3,
      "endOffset" : 8
    }, {
      "referenceID" : 0,
      "context" : "with c ∈ [0, 1] and η(1− ln c) ≤ 1 has optimal solution δ1 = · · · = δn = c.",
      "startOffset" : 9,
      "endOffset" : 15
    } ],
    "year" : 2016,
    "abstractText" : "Recently, there has been significant progress in understanding reinforcement learning in discounted infinite-horizon Markov decision processes (MDPs) by deriving tight sample complexity bounds. However, in many real-world applications, an interactive learning agent operates for a fixed or bounded period of time, for example tutoring students for exams or handling customer service requests. Such scenarios can often be better treated as episodic fixed-horizon MDPs, for which only looser bounds on the sample complexity exist. A natural notion of sample complexity in this setting is the number of episodes required to guarantee a certain performance with high probability (PAC guarantee). In this paper, we derive an upper PAC bound Õ( |S| |A|H 2 ln 1 δ ) and a lower PAC bound Ω̃( |S||A|H 2 ln 1 δ+c ) that match up to log-terms and an additional linear dependency on the number of states |S|. The lower bound is the first of its kind for this setting. Our upper bound leverages Bernstein’s inequality to improve on previous bounds for episodic finitehorizon MDPs which have a time-horizon dependency of at least H.",
    "creator" : "LaTeX with hyperref package"
  }
}