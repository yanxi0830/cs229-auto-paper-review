{
  "name" : "1501.06095.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Between Pure and Approximate Differential Privacy",
    "authors" : [ "Thomas Steinke", "Jonathan Ullman" ],
    "emails" : [ "tsteinke@seas.harvard.edu.", "jullman@cs.columbia.edu." ],
    "sections" : [ {
      "heading" : null,
      "text" : "Specifically, we consider a database D ∈ {±1}n×d and its one-way marginals, which are the d queries of the form “What fraction of individual records have the i-th bit set to +1?” We show that in order to answer all of these queries to within error ±α (on average) while satisfying (ε,δ)-differential privacy, it is necessary that\nn ≥Ω √d log(1/δ)αε  , which is optimal up to constant factors. To prove our lower bound, we build on the connection between fingerprinting codes and lower bounds in differential privacy (Bun, Ullman, and Vadhan, STOC’14).\nIn addition to our lower bound, we give new purely and approximately differentially private algorithms for answering arbitrary statistical queries that improve on the sample complexity of the standard Laplace and Gaussian mechanisms for achieving worst-case accuracy guarantees by a logarithmic factor.\n∗Harvard University School of Engineering and Applied Sciences. Supported by NSF grant CCF-1116616. Email: tsteinke@seas.harvard.edu. †Columbia University Department of Computer Science. Supported by a Junior Fellowship from the Simons Society of Fellows. Email: jullman@cs.columbia.edu.\nar X\niv :1\n50 1.\n06 09\n5v 1\n[ cs\n.D S]\n2 4\nJa n\n20 15\nContents"
    }, {
      "heading" : "1 Introduction 1",
      "text" : "1.1 Average-Case Versus Worst-Case Error . . . . . . . . . . . . . . . . . . . . . . . . 2 1.2 Techniques . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3"
    }, {
      "heading" : "2 Preliminaries 4",
      "text" : ""
    }, {
      "heading" : "3 Lower Bounds for Approximate Differential Privacy 5",
      "text" : ""
    }, {
      "heading" : "4 New Mechanisms for L∞ Error 7",
      "text" : "4.1 Pure Differential Privacy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 4.2 Approximate Differential Privacy . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\nReferences 10\nA Alternative Lower Bound for Pure Differential Privacy 12"
    }, {
      "heading" : "1 Introduction",
      "text" : "The goal of privacy-preserving data analysis is to enable rich statistical analysis of a database while protecting the privacy of individuals whose data is in the database. A formal privacy guarantee is given by (ε,δ)-differential privacy [DMNS06, DKM+06], which ensures that no individual’s data has a significant influence on the information released about the database. The two parameters ε and δ control the level of privacy. Very roughly, ε is an upper bound on the amount of influence an individual’s record has on the information released and δ is the probability that this bound fails to hold1, so the definition becomes more stringent as ε,δ→ 0.\nA natural way to measure the tradeoff between privacy and utility is sample complexity— the minimum number of records n that is sufficient in order to publicly release a given set of statistics about the database, while achieving both differential privacy and statistical accuracy. Intuitively, it’s easier to achieve these two goals when n is large, as each individual’s data will have only a small influence on the aggregate statistics of interest. Conversely, the sample complexity n should increase as ε and δ decrease (which strengthens the privacy guarantee).\nThe strongest version of differential privacy, in which δ = 0, is known as pure differential privacy. The sample complexity of achieving pure differential privacy is well known for many settings (e.g. [HT10]). The more general case where δ > 0 is known as approximate differential privacy, and is less well understood. Recently, Bun, Ullman, and Vadhan [BUV14] showed how to prove strong lower bounds for approximate differential privacy that are essentially optimal for δ ≈ 1/n, which is essentially the weakest privacy guarantee that is still meaningful.2\nSince δ bounds the probability of a complete privacy breach, we would like δ to be very small. Thus we would like to quantify the cost (in terms of sample complexity) as δ→ 0. In this work we give lower bounds for approximately differentially private algorithms that are nearly optimal for every choice of δ, and smoothly interpolate between pure and approximate differential privacy.\nSpecifically, we consider algorithms that compute the one-way marginals of the database—an extremely simple and fundamental family of queries. For a databaseD ∈ {±1}n×d , the d one-way marginals are simply the mean of the bits in each of the d columns. Formally, we define\nD := 1 n n∑ i=1 Di ∈ [±1]d\nwhere Di ∈ {±1}d is the i-th row of D. A mechanism M is said to be accurate if, on input D, its output is “close to”D. Accuracy may be measured in a worst-case sense—i.e. ∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣∞ ≤ α, meaning every one-way marginal is answered with accuracy α—or in an average-case sense— i.e. ∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣ 1 ≤ αd, meaning the marginals are answered with average accuracy α.\nSome of the earliest results in differential privacy [DN03, DN04, BDMN05, DMNS06] give a simple (ε,δ)-differentially private algorithm—the Laplace mechanism—that computes the oneway marginals of D ∈ {±1}n×d with average error α as long as\nn ≥O min  √ d log(1/δ) εα , d εα   . (1)\n1This intuition is actually somewhat imprecise, although it is suitable for this informal discussion. See [KS08] for a more precise semantic interpretation of (ε,δ)-differential privacy.\n2When δ ≥ 1/n there are algorithms that are intuitively not private, yet satisfy (0,δ)-differential privacy.\nThe previous best lower bounds are n ≥Ω(d/εα) [HT10] for pure differential privacy and n ≥ Ω̃( √ d/εα) for approximate differential privacy with δ = o(1/n) [BUV14]. Our main result is an optimal lower bound that combines the previous lower bounds.\nTheorem 1.1 (Main Theorem). For every ε ≤ O(1), every 2−Ω(n) ≤ δ ≤ 1/n1+Ω(1) and every α ≤ 1/10, if M : {±1}n×d → [±1]d is (ε,δ)-differentially private and E\nM\n[ ‖M(D)−D‖1 ] ≤ αd, then\nn ≥Ω √d log(1/δ)εα  . More generally, this is the first result showing that the sample complexity must grow by a\nmultiplicative factor of √\nlog(1/δ) for answering any family of queries, as opposed to an additive dependence on δ. We also remark that the assumption on the range of δ is necessary, as the Laplace mechanism gives accuracy α and satisfies (ε,0)-differential privacy when n ≥O(d/εα)."
    }, {
      "heading" : "1.1 Average-Case Versus Worst-Case Error",
      "text" : "Our lower bound holds for mechanisms with an average-case (L1) error guarantee. Thus, it also holds for algorithms that achieve worst-case (L∞) error guarantees. The Laplace mechanism gives a matching upper bound for average-case error. In many cases worst-case error guarantees are preferrable. For worst-case error, the sample complexity of the Laplace mechanism degrades by an additional logd factor compared to (1).\nSurprisingly, this degradation is not necessary. We present algorithms that answer every one-way marginal with α accuracy and improve on the sample complexity of the Laplace mechanism by roughly a logd factor. These algorithms demonstrate that the widely used technique of adding independent noise to each query is suboptimal when the goal is to achieve worst-case error guarantees.\nOur algorithm for pure differential privacy satisfies the following.\nTheorem 1.2. For every ε,α > 0, d ≥ 1, and n ≥ 4d/εα, there exists an efficient mechanism M : {±1}n×d → [±1]d that is (ε,0)-differentially private and\n∀D ∈ {±1}n×d P M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣∞ ≥ α] ≤ (2e)−d . And our algorithm for approximate differential privacy is as follows.\nTheorem 1.3. For every ε,δ,α > 0, d ≥ 1, and n ≥O √d · log(1/δ) · loglogdεα  , there exists an efficient mechanism M : {±1}n×d → [±1]d that is (ε,δ)-differentially private and\n∀D ∈ {±1}n×d P M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣∞ ≥ α] ≤ 1dω(1) . These algorithms improve over the sample complexity of the best known mechanisms for each privacy and accuracy guarantee by a factor of (log(d))Ω(1). Namely, the Laplace mechanism requires n ≥O(d · logd/εα) samples for pure differential privacy and the Gaussian mechanism requires n ≥O( √ d · log(1/δ) · logd/εα) samples for approximate differential privacy."
    }, {
      "heading" : "1.2 Techniques",
      "text" : "Lower Bounds: Our lower bound relies on a combinatorial objected called a fingerprinting code [BS98]. Fingerprinting codes were originally used in cryptography for watermarking digital content, but several recent works have shown they are intimately connected to lower bounds for differential privacy and related learning problems [Ull13, BUV14, HU14, SU14]. In particular, Bun et al. [BUV14] showed that fingerprinting codes can be used to construct an attack demonstrating that any mechanism that accurately answers one-way marginals is not differentially private. Specifically, a fingerprinting code gives a distribution on individuals’ data and a corresponding “tracer” algorithm such that, if a database is constructed from the data of a fixed subset of the individuals, then the tracer algorithm can identify at least one of the individuals in that subset given only approximate answers to the one-way marginals of the database. Specifically, their attack shows that a mechanism that satisfies (1, o(1/n))-differential privacy requires n ≥ Ω̃( √ d) samples to accurately compute one-way marginals.\nOur proof uses a new, more general reduction from breaking fingerprinting codes to differentially private data release. Specifically, our reduction uses group differential privacy. This property states that if an algorithm is (ε,δ)-differentially private with respect to the change of one individual’s data, then for any k, it is roughly (kε,ekεδ)-differentially private with respect to the change of k individuals’ data. Thus an (ε,δ)-differentially private algorithm provides a meaningful privacy guarantee for groups of size k ≈ log(1/δ)/ε.\nTo use this in our reduction, we start with a mechanism M that takes a database of n rows and is (ε,δ)-differentially private. We design a mechanismMk that takes a database of n/k rows, copies each of its rows k times, and uses the result as input to M. The resulting mechanism Mk is roughly (kε,ekεδ)-differentially private. For our choice of k, these parameters will be small enough to apply the attack of [BUV14] to obtain a lower bound on the number of samples used by Mk , which is n/k. Thus, for larger values of k (equivalently, smaller values of δ), we obtain a stronger lower bound. The remainder of the proof is to quantify the parameters precisely.\nUpper Bounds: Our algorithm for pure differential privacy and worst-case error is an instantiation of the exponential mechanism [MT07] using the L∞ norm. That is, the mechanism\nsamples y ∈ Rd with probability proportional to exp(−η ∣∣∣∣∣∣y∣∣∣∣∣∣∞) and outputs M(D) = D + y. In contrast, adding independent Laplace noise corresponds to using the exponential mechanism with the L1 norm and adding independent Gaussian noise corresponds to using the exponential mechanism with the L2 norm squared. Using this distribution turns out to give better tail bounds than adding independent noise.\nFor approximate differential privacy, we use a completely different algorithm. We start by adding independent Gaussian noise to each marginal. However, rather than using a union bound to show that each Gaussian error is small with high probability, we use a Chernoff bound to show that most errors are small. Namely, with the sample complexity that we allow M, we can ensure that all but a 1/polylog(d) fraction of the errors are small. Now we “fix” the d/polylog(d) marginals that are bad. The trick is that we use the sparse vector algorithm, which allows us to do indentify and fix these d/polylog(d) marginals with sample complexity corresponding to only d/polylog(d) queries, rather than d queries."
    }, {
      "heading" : "2 Preliminaries",
      "text" : "We define a database D ∈ {±1}n×d to be a matrix of n rows, where each row corresponds to an individual, and each row has dimension d (consists of d binary attributes). We say that two databases D,D ′ ∈ {±1}n×d are adjacent if they differ only by a single row, and we denote this by D ∼ D ′. In particular, we can replace the ith row of a database D with some fixed element of {±1}d to obtain another database D−i ∼D. Definition 2.1 (Differential Privacy [DMNS06]). Let M : {±1}n×d →R be a randomized mechanism. We say that M is (ε,δ)-differentially private if for every two adjacent databases D ∼ D ′ and every subset S ⊆R,\nP [M(D) ∈ S] ≤ eε ·P [ M(D ′) ∈ S ] + δ.\nA well known fact about differential privacy is that it generalizes smoothly to databases that differ on more than a single row. We say that two databases D,D ′ ∈ {±1}n×d are k-adjacent if they differ by at most k rows, and we denote this by D ∼k D ′. Fact 2.2 (Group Differential Privacy). For every k ≥ 1, if M : {±1}n×d → R is (ε,δ)-differentially private, then for every two k-adjacent databases D ∼k D ′, and every subset S ⊆R,\nP [M(D) ∈ S] ≤ ekε ·P [ M(D ′) ∈ S ] + ekε − 1 eε − 1 · δ.\nAll of the upper and lower bounds for one-way marginals have a multiplicative 1/αε dependence on the accuracy α and the privacy loss ε. This is no coincidence - there is a generic reduction:\nFact 2.3 (α and ε dependence). Let p ∈ [1,∞] and α,ε,δ ∈ [0,1/10]. Suppose there exists a (ε,δ)-differentially private mechanism M : {±1}n×d → [±1]d such that for every database D ∈ {±1}n×d , E M [ ‖M(D)−D‖p ] ≤ αd1/p.\nThen there exists a (1,δ/ε)-differentially private mechanism M ′ : {±1}n′×d → [±1]d for n′ = Θ(αεn) such that for every database D ′ ∈ {±1}n′×d ,\nE M ′\n[ ‖M ′(D ′)−D ′‖p ] ≤ d1/p/10.\nThis fact allows us to suppress the accuracy parameter α and the privacy loss ε when proving our lower bounds. Namely, if we prove a lower bound of n′ ≥ n∗ for all (1,δ)-differentially private mechanisms M ′ : {±1}n′×d → [±1]d with E\nM ′\n[ ‖M ′(D ′)−D ′‖p ] ≤ d1/p/10, then we obtain\na lower bound of n ≥ Ω(n∗/αε) for all (ε,εδ)-differentially private mechanisms M : {±1}n×d → [±1]d with E\nM\n[ ‖M(D)−D‖p ] ≤ αd1/p. So we will simply fix the parameters α = 1/10 and ε = 1 in\nour lower bounds."
    }, {
      "heading" : "3 Lower Bounds for Approximate Differential Privacy",
      "text" : "Our main theorem can be stated as follows.\nTheorem 3.1 (Main Theorem). Let M : {±1}n×d → [±1]d be a (1,δ)-differentially private mechanism that answers one-way marginals such that\n∀D ∈ {±1}n×d E M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣ 1 ] ≤ d 10 ,\nwhere D is the true answer vector. If 2−Ω(n) ≤ δ ≤ 1/n1+Ω(1) and n is sufficiently large, then\nd ≤O ( n2\nlog(1/δ)\n) .\nTheorem 1.1 in the introduction follows by rearranging terms, and applying Fact 2.3. The statement above is more convenient technically, but the statement in the introduction is more consistent with the literature.\nFirst we must introduce fingerprinting codes. The following definition is tailored to the application to privacy. Fingerprinting codes were originally defined by Boneh and Shaw [BS98] with a worst-case accuracy guarantee. Subsequent works [BUV14, SU14] have altered the accuracy guarantee to an average-case one, which we use here.\nDefinition 3.2 (L1 Fingerprinting Code). A ε-complete δ-sound α-robust L1 fingerprinting code for n users with length d is a pair of random variables D ∈ {±1}n×d and Trace : [±1]d → 2[n] such that the following hold.\nCompleteness: For any fixed M : {±1}n×d → [±1]d ,\nP [(∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣\n1 ≤ αd\n) ∧ (Trace(M(D)) = ∅) ] ≤ ε.\nSoundness: For any i ∈ [n] and fixed M : {±1}n×d → [±1]d ,\nP [i ∈ Trace(M(D−i))] ≤ δ,\nwhere D−i denotes D with the ith row replaced by some fixed element of {±1}d .\nFingerprinting codes with optimal length were first constructed by Tardos [Tar08] (for worst-case error) and subsequent works [BUV14, SU14] have adapted Tardos’ construction to work for average-case error guarantees, which yields the following theorem.\nTheorem 3.3. For every n ≥ 1, δ > 0, and d ≥ dn,δ = O(n2 log(1/δ)), there exists a 1/100-complete δ-sound 1/8-robust L1 fingerprinting code for n users with length d.\nWe now show how the existence of fingerprinting codes implies our lower bound.\nProof of Theorem 3.1 from Theorem 3.3. Let M : {±1}n×d → [±1]d be a (1,δ)-differentially private mechanism such that\n∀D ∈ {±1}n×d E M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣ 1 ] ≤ d 10 .\nThen, by Markov’s inequality,\n∀D ∈ {±1}n×d P M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣ 1 > d 9 ] ≤ 9 10 . (2)\nLet k be a parameter to be chosen later. Let nk = bn/kc. Let Mk : {±1}nk×d → [±1]d be the following mechanism. On input D∗ ∈ {±1}nk×d , Mk creates D ∈ {±1}n×d by taking k copies of D∗ and filling the remaining entries with 1s. Then Mk runs M on D and outputs M(D).\nBy group privacy (Fact 2.2),Mk is a ( εk = k,δk = ek−1 e−1 δ ) -differentially private mechanism. By the triangle inequality, ∣∣∣∣∣∣Mk(D∗)−D∗∣∣∣∣∣∣1 ≤ ∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣1 + ∣∣∣∣∣∣D −D∗∣∣∣∣∣∣1 . (3) Now\nDj = k ·nk n D∗j + n− k ·nk n 1.\nThus ∣∣∣∣Dj −D∗j ∣∣∣∣ = ∣∣∣∣∣∣ ( k ·nk n − 1 ) D∗j + n− k ·nk n ∣∣∣∣∣∣ = n− k ·nkn ∣∣∣∣1−D∗j ∣∣∣∣ ≤ 2n− k ·nkn . We have\nn− k ·nk n = n− kbn/kc n ≤ n− k(n/k − 1) n = k n .\nThus ∣∣∣∣∣∣D −D∗∣∣∣∣∣∣\n1 ≤ 2k/n. Assume k ≤ n/200. Thus ∣∣∣∣∣∣D −D∗∣∣∣∣∣∣ 1 ≤ d/100 and, by (2) and (3),\nP Mk [∣∣∣∣∣∣Mk(D∗)−D∗∣∣∣∣∣∣1 > d8 ] ≤ P M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣ 1 > d 9 ] ≤ 9 10 . (4)\nAssume d ≥ dnk ,δ, were dnk ,δ = O(n 2 k log(1/δ)) is as in Theorem 3.3. We will show by contradiction that this cannot be – that is d ≤O(n2k log(1/δ)). LetD ∗ ∈ {±1}nk×d and Trace : [±1]d → 2[nk] be a 1/100-complete δ-sound 1/8-robust L1 fingerprinting code for nk users of length d. By the completeness of the fingerprinting code,\nP [∣∣∣∣∣∣Mk(D∗)−D∗∣∣∣∣∣∣1 ≤ d8 ∧Trace(M(D)) = ∅ ] ≤ 1 100 . (5)\nCombinging (4) and (5), gives\nP [Trace(Mk(D ∗)) , ∅] ≥ 9\n100 > 1 12 .\nIn particular, there exists i∗ ∈ [nk] such that\nP [i∗ ∈ Trace(Mk(D∗))] > 1\n12nk . (6)\nWe have that Trace(Mk(D∗)) is a (εk ,δk)-differentially private function of D∗, as it is only postprocessing Mk(D∗). Thus\nP [i∗ ∈ Trace(Mk(D∗))] ≤ eεkP [ i∗ ∈ Trace(Mk(D∗−i∗)) ] + δk ≤ eεkδ+ δk , (7)\nwhere the second inequality follows from the soundness of the fingerprinting code. Combining (6) and (7) gives\n1 12nk ≤ eεkδ+ δk = ekδ+ ek − 1 e − 1 δ = ek+1 − 1 e − 1 δ < ek+1δ. (8)\nIf k ≤ log(1/12nkδ) − 1, then (8) gives a contradiction. Let k = blog(1/12nδ) − 1c. Assuming δ ≥ e−n/200 ensures k ≤ n/200, as required. Assuming δ ≤ 1/n1+γ implies k ≥ log(1/δ)/(1+1/γ)− 5 ≥Ω(log(1/δ)). This setting of k gives a contradiction, which implies that\nd < dnk ,δ =O(n 2 k log(1/δ)) =O\n( n2\nk2 log(1/δ)\n) =O ( n2\nlog(1/δ)\n) ,\nas required."
    }, {
      "heading" : "4 New Mechanisms for L∞ Error",
      "text" : "Adding independent noise seems very natural for one-way marginals, but it is suboptimal if one is interested in worst-case (i.e. L∞) error bounds, rather than average-case (i.e. L1) error bounds."
    }, {
      "heading" : "4.1 Pure Differential Privacy",
      "text" : "Theorem 1.2 follows from Theorem 4.1. In particular, the mechanism M : {±1}n×d → [±1]d in Theorem 1.2 is given by M(D) = D + Y , where Y ∼ D and D is the distribution from Theorem 4.1 with ∆ = 2/n.3\nTheorem 4.1. For all ε > 0, d ≥ 1, and ∆ > 0, there exists a continuous distribution D on Rd with the following properties.\n• Privacy: If x,x′ ∈Rd with ||x − x′ ||∞ ≤ ∆, then\nP Y∼D [x+Y ∈ S] ≤ eε P Y∼D\n[ x′ +Y ∈ S ] for all measurable S ⊆Rd .\n3Note that we must truncate the output of M to ensure that M(D) is always in [±1]d .\n• Accuracy: For all α > 0,\nP Y∼D [||Y ||∞ ≥ α] ≤ ( ∆d εα )d ed−αε/∆.\nIn particular, if d ≤ εα/2∆, then P Y∼D [||Y ||∞ ≥ α] ≤ (2e)−d .\n• Efficiency: D can be efficiently sampled.\nProof. The distribution D is simply an instantiation of the exponential mechanism [MT07]. In particular, the probability density function is given by\npdfD(y) ∝ exp ( − ε ∆ ∣∣∣∣∣∣y∣∣∣∣∣∣∞) . Formally, for every measurable S ⊆Rd ,\nP Y∼D [Y ∈ S] =\n∫ S exp ( − ε∆ ∣∣∣∣∣∣y∣∣∣∣∣∣∞)dy∫ Rd exp ( − ε∆\n∣∣∣∣∣∣y∣∣∣∣∣∣∞)dy . Firstly, this is clearly a well-defined distribution as long as ε/∆ > 0.\nPrivacy is easy to verify: It suffices to bound the ratio of the probability densities for the shifted distributions. For x,x′ ∈Rd with ||x′ − x||∞ ≤ ∆, by the triangle inequality,\npdfD(x+ y) pdfD(x′ + y) = exp\n( − ε∆ ∣∣∣∣∣∣x+ y∣∣∣∣∣∣∞) exp ( − ε∆ ∣∣∣∣∣∣x′ + y∣∣∣∣∣∣∞) = exp ( ε ∆ (∣∣∣∣∣∣x′ + y∣∣∣∣∣∣∞ − ∣∣∣∣∣∣x+ y∣∣∣∣∣∣∞)) ≤ exp( ε∆ ∣∣∣∣∣∣x′ − x∣∣∣∣∣∣∞) ≤ eε. Define a distribution D∗ on [0,∞) to by Z ∼ D∗ meaning Z = ||Y ||∞ for Y ∼ D. To prove\naccuracy, we must give a tail bound on D∗. The probability density function of D∗ is given by\npdfD∗(z) ∝ z d−1 · exp ( − ε ∆ z ) ,\nwhich is obtained by integrating the probability density function of D over the infinity-ball of radius z, which has surface area d2dzd−1 ∝ zd−1. Thus D∗ is precisely the gamma distribution with shape d and mean d∆/ε. The moment generating function is therefore\nE Z∼D∗\n[ etZ ] = ( 1− ∆\nε t )−d for all t < ε/∆. By Markov’s inequality\nP Z∼D∗\n[Z ≥ α] ≤ E Z∼D∗\n[ etZ ] etα = ( 1− ∆ ε t )−d e−tα .\nSetting t = ε/∆− d/α gives the required bound. It is easy to verify that Y ∼ D can be sampled by first sampling a radius R from a gamma distribution with shape d + 1 and mean (d + 1)∆/ε and then sampling Y ∈ [±R]d uniformly at random. To sample R we can set R = ∆ε ∑d i=0 logUi , where each Ui ∈ (0,1] is uniform and independent. This gives an algorithm (in the form of an explicit circuit) to sample D that uses onlyO(d) real arithmetic operations, d+1 logarithms, and 2d+1 independent uniform samples from [0,1]."
    }, {
      "heading" : "4.2 Approximate Differential Privacy",
      "text" : "Our algorithm for approximate differential privacy makes use of a powerful tool from the literature [DNR+09, HR10, DNPR10, RR10] called the sparse vector algorithm:\nTheorem 4.2 (Sparse Vector). For every c,k ≥ 1, ε,δ,α,β > 0, and\nn ≥O √c log(1/δ) log(k/β)αε  , there exists a mechanism SV with the following properties.\n• SV takes as input a database D ∈ X n and provides answers a1, · · · , ak ∈ [±1] to k (adaptive) linear queries q1, · · · ,qk : X → [±1].\n• SV is (ε,δ)-differentially private. • Assuming ∣∣∣∣{j ∈ [k] : |qj(D)| > α/2}∣∣∣∣ ≤ c, we have\nP SV\n[ ∀j ∈ [k] |aj − qj(D)| ≤ α ] ≥ 1− β.\nA proof of this theorem can be found in [DR13, Theorem 3.28].4 We now describe our approximately differentially private mechanism.\n4Note that the algorithms in the literature are designed to sometimes output ⊥ as an answer or halt prematurely. To modify these algorithms into the form given by Theorem 4.2 simply output 0 in these cases.\nProof of Theorem 1.3. Firstly, we consider the privacy of M: ã is the output of the Gaussian mechanism with parameters to ensure that it is a (ε/2,δ/2)-differentially private function of D. Likewise â is the output of SV with parameters to ensure that it is also a (ε/2,δ/2)-differentially private function of D. Since the output is ã + 2â, composition implies that M as a whole is (ε,δ)-differentially private, as required.\nNow we must prove accuracy. Suppose that |âj − qj(D)| ≤ αSV = α/2 for all j ∈ [d]. Then\n|aj −Dj | =|ãj + 2âj −Dj | =|ãj −Dj + 2(qj(D) + (âj − qj(D)))| ≤|ãj −Dj + 2qj(D)|+ 2|âj − qj(D))| ≤|ãj −Dj + (D − ãj )|+ 2αSV =α,\nas required. So we need only show that |âj − qj(D)| ≤ αSV for all j ∈ [d], which sparse vector guarantees will happen with probability at least 1− βSV as long as∣∣∣∣{j ∈ [d] : |qj(D)| > αSV/2}∣∣∣∣ ≤ cSV. (9) Now we verify that (9) holds with high probability.\nBy our setting of parameters, we have qj(D) = −zj /2. This means\nP [ |qj(D)| > αSV/2 ] = P [ |zj | > α/2 ] ≤ e−α 2/8σ2 = 1\nlog8d .\nLet Ej ∈ {0,1} be the indicator of the event |qj(D)| > αSV/2. Since the zjs are independent, so are the Ejs. Thus we can apply a Chernoff bound:\nP [∣∣∣∣{j ∈ [d] : |qj(D)| > αSV/2}∣∣∣∣ > cSV] = P ∑ j∈[d] Ej > 2d log8d  ≤ e−2d/ log16 d . (10) The failure probability of M is bounded by the failure probability of SV plus (10), which is dominated by βSV = exp(− log4d).\nFinally we consider the sample complexity. The accuracy is bounded by\nα ≤ 40\n√ d · log(1/δ) · loglogd\nεn ,\nwhich rearranges to\nn ≥ 40\n√ d · log(1/δ) · loglogd\nαε .\nTheorem 4.2 requires n ≥O √cSV log(1/δ) log(d/βSV)αε  =O√d log(1/δ)αε \nfor sparse vector to work, which is also satisfied.\nWe remark that we have not attempted to optimize the constant factors in this analysis."
    }, {
      "heading" : "A Alternative Lower Bound for Pure Differential Privacy",
      "text" : "It is known [HT10] that any ε-differentially private mechanism that answers d one-way marginals requires n ≥Ω(d/ε) samples. Our techniques yield an alternative simple proof of this fact.\nTheorem A.1. Let M : {±1}n×d → [±1]d be a ε-differentially private mechanism. Suppose\n∀D ∈ {±1}n×d E M [∣∣∣∣∣∣M(D)−D∣∣∣∣∣∣ 1 ] ≤ 0.9d\nThen n ≥Ω(d/ε).\nThe proof uses a special case of Hoeffding’s Inequality:\nLemma A.2 (Hoeffding’s Inequality). Let X ∈ {±1}n be uniformly random and a ∈Rn fixed. Then\nP X\n[〈a,X〉 > λ ||a||2] ≤ e−λ 2/2\nfor all λ ≥ 0.\nProof of Theorem A.1. Let x,x′ ∈ {±1}d be independent and uniform. Let D ∈ {±1}n×d be n copies of x and, likewise, let D ′ ∈ {±1}n×d be n copies of x′. Let Z = 〈M(D),x〉 and Z ′ = 〈M(D ′),x〉.\nNow we give conflicting tail bounds for Z and Z ′, which we can relate by privacy. By our hypothesis and Markov’s inequality,\nP [Z ≤ d/20] =P [〈M(D),x〉 ≤ 0.05d] =P [ 〈D,x〉 − 〈D −M(D),x〉 ≤ 0.05d ] =P [ 〈D −M(D),x〉 ≥ 0.95d\n] ≤P [∣∣∣∣∣∣D −M(D)∣∣∣∣∣∣ 1 ≥ 0.95d\n] ≤ E [∣∣∣∣∣∣D −M(D)∣∣∣∣∣∣ 1 ] 0.95d ≤ 0.9 0.95 < 0.95.\nSince M(D ′) is independent from x, we have\n∀λ ≥ 0 P [ Z ′ > λ √ d ] ≤ P [ 〈M(D ′),x〉 > λ ∣∣∣∣∣∣M(D ′)∣∣∣∣∣∣ 2 ] ≤ e−λ 2/2,\nby Lemma A.2. In particular, setting λ = √ d/20 gives P [Z ′ > d/20] ≤ e−d/800.\nNow D and D ′ are databases that differ in n rows, so privacy implies that\nP [M(D) ∈ S] ≤ enεP [ M(D ′) ∈ S ] for all S. Thus\n1 20 < P\n[ Z >\nd 20\n] = P [M(D) ∈ Sx] ≤ enεP [ M(D ′) ∈ Sx ] = enεP [ Z ′ >\nd 20\n] ≤ enεe−d/800,\nwhere\nSx = { y ∈ [±1]d : 〈y,x〉 > d\n20\n} .\nRearranging 1/20 < enεe−d/800, gives\nn > d\n800ε − log(20) ε ,\nas required."
    } ],
    "references" : [ {
      "title" : "Practical privacy: the sulq framework",
      "author" : [ "Avrim Blum", "Cynthia Dwork", "Frank McSherry", "Kobbi Nissim" ],
      "venue" : "In PODS, pages 128–138",
      "citeRegEx" : "Blum et al\\.,? \\Q2005\\E",
      "shortCiteRegEx" : "Blum et al\\.",
      "year" : 2005
    }, {
      "title" : "Collusion-secure fingerprinting for digital data",
      "author" : [ "Dan Boneh", "James Shaw" ],
      "venue" : "IEEE Transactions on Information Theory,",
      "citeRegEx" : "Boneh and Shaw.,? \\Q1998\\E",
      "shortCiteRegEx" : "Boneh and Shaw.",
      "year" : 1998
    }, {
      "title" : "Fingerprinting codes and the price of approximate differential privacy",
      "author" : [ "Mark Bun", "Jonathan Ullman", "Salil P. Vadhan" ],
      "venue" : "In STOC,",
      "citeRegEx" : "Bun et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Bun et al\\.",
      "year" : 2014
    }, {
      "title" : "Our data, ourselves: Privacy via distributed noise generation",
      "author" : [ "Cynthia Dwork", "Krishnaram Kenthapadi", "Frank McSherry", "Ilya Mironov", "Moni Naor" ],
      "venue" : "In EUROCRYPT,",
      "citeRegEx" : "Dwork et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Dwork et al\\.",
      "year" : 2006
    }, {
      "title" : "Calibrating noise to sensitivity in private data analysis",
      "author" : [ "Cynthia Dwork", "Frank McSherry", "Kobbi Nissim", "Adam Smith" ],
      "venue" : "In TCC,",
      "citeRegEx" : "Dwork et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Dwork et al\\.",
      "year" : 2006
    }, {
      "title" : "Revealing information while preserving privacy",
      "author" : [ "Irit Dinur", "Kobbi Nissim" ],
      "venue" : "In PODS, pages 202–210",
      "citeRegEx" : "Dinur and Nissim.,? \\Q2003\\E",
      "shortCiteRegEx" : "Dinur and Nissim.",
      "year" : 2003
    }, {
      "title" : "Privacy-preserving datamining on vertically partitioned databases",
      "author" : [ "Cynthia Dwork", "Kobbi Nissim" ],
      "venue" : "In CRYPTO,",
      "citeRegEx" : "Dwork and Nissim.,? \\Q2004\\E",
      "shortCiteRegEx" : "Dwork and Nissim.",
      "year" : 2004
    }, {
      "title" : "Differential privacy under continual observation",
      "author" : [ "Cynthia Dwork", "Moni Naor", "Toniann Pitassi", "Guy N. Rothblum" ],
      "venue" : "In Proceedings of the Forty-second ACM Symposium on Theory of Computing,",
      "citeRegEx" : "Dwork et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Dwork et al\\.",
      "year" : 2010
    }, {
      "title" : "On the complexity of differentially private data release: efficient algorithms and hardness results",
      "author" : [ "Cynthia Dwork", "Moni Naor", "Omer Reingold", "Guy N. Rothblum", "Salil P. Vadhan" ],
      "venue" : "In STOC,",
      "citeRegEx" : "Dwork et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Dwork et al\\.",
      "year" : 2009
    }, {
      "title" : "The algorithmic foundations of differential privacy",
      "author" : [ "Cynthia Dwork", "Aaron Roth" ],
      "venue" : "Foundations and Trends in Theoretical Computer Science,",
      "citeRegEx" : "Dwork and Roth.,? \\Q2013\\E",
      "shortCiteRegEx" : "Dwork and Roth.",
      "year" : 2013
    }, {
      "title" : "A multiplicative weights mechanism for privacypreserving data analysis",
      "author" : [ "Moritz Hardt", "Guy Rothblum" ],
      "venue" : "In Proc. 51st Foundations of Computer Science (FOCS),",
      "citeRegEx" : "Hardt and Rothblum.,? \\Q2010\\E",
      "shortCiteRegEx" : "Hardt and Rothblum.",
      "year" : 2010
    }, {
      "title" : "On the geometry of differential privacy",
      "author" : [ "Moritz Hardt", "Kunal Talwar" ],
      "venue" : "In Proceedings of the Forty-second ACM Symposium on Theory of Computing,",
      "citeRegEx" : "Hardt and Talwar.,? \\Q2010\\E",
      "shortCiteRegEx" : "Hardt and Talwar.",
      "year" : 2010
    }, {
      "title" : "Preventing false discovery in interactive data analysis is hard",
      "author" : [ "Moritz Hardt", "Jonathan Ullman" ],
      "venue" : "In FOCS. IEEE, October",
      "citeRegEx" : "Hardt and Ullman.,? \\Q2014\\E",
      "shortCiteRegEx" : "Hardt and Ullman.",
      "year" : 2014
    }, {
      "title" : "On the “semantics” of differential privacy: A bayesian formulation",
      "author" : [ "Shiva Prasad Kasiviswanathan", "Adam Smith" ],
      "venue" : "CoRR, abs/0803.3946,",
      "citeRegEx" : "Kasiviswanathan and Smith.,? \\Q2008\\E",
      "shortCiteRegEx" : "Kasiviswanathan and Smith.",
      "year" : 2008
    }, {
      "title" : "Mechanism design via differential privacy",
      "author" : [ "Frank McSherry", "Kunal Talwar" ],
      "venue" : "In Proceedings of the 48th Annual IEEE Symposium on Foundations of Computer Science,",
      "citeRegEx" : "McSherry and Talwar.,? \\Q2007\\E",
      "shortCiteRegEx" : "McSherry and Talwar.",
      "year" : 2007
    }, {
      "title" : "Interactive privacy via the median mechanism",
      "author" : [ "Aaron Roth", "Tim Roughgarden" ],
      "venue" : "In Proc. 42nd Symposium on Theory of Computing (STOC),",
      "citeRegEx" : "Roth and Roughgarden.,? \\Q2010\\E",
      "shortCiteRegEx" : "Roth and Roughgarden.",
      "year" : 2010
    }, {
      "title" : "Interactive fingerprinting codes and the hardness of preventing false discovery",
      "author" : [ "Thomas Steinke", "Jonathan Ullman" ],
      "venue" : "CoRR, abs/1410.1228,",
      "citeRegEx" : "Steinke and Ullman.,? \\Q2014\\E",
      "shortCiteRegEx" : "Steinke and Ullman.",
      "year" : 2014
    }, {
      "title" : "Optimal probabilistic fingerprint codes",
      "author" : [ "Gábor Tardos" ],
      "venue" : "J. ACM,",
      "citeRegEx" : "Tardos.,? \\Q2008\\E",
      "shortCiteRegEx" : "Tardos.",
      "year" : 2008
    }, {
      "title" : "Answering n2+o(1) counting queries with differential privacy is hard",
      "author" : [ "Jonathan Ullman" ],
      "venue" : "In STOC, pages 361–370",
      "citeRegEx" : "Ullman.,? \\Q2013\\E",
      "shortCiteRegEx" : "Ullman.",
      "year" : 2013
    } ],
    "referenceMentions" : [ ],
    "year" : 2015,
    "abstractText" : "We show a new lower bound on the sample complexity of (ε,δ)-differentially private algorithms that accurately answer statistical queries on high-dimensional databases. The novelty of our bound is that it depends optimally on the parameter δ, which loosely corresponds to the probability that the algorithm fails to be private, and is the first to smoothly interpolate between approximate differential privacy (δ > 0) and pure differential privacy (δ = 0). Specifically, we consider a database D ∈ {±1}n×d and its one-way marginals, which are the d queries of the form “What fraction of individual records have the i-th bit set to +1?” We show that in order to answer all of these queries to within error ±α (on average) while satisfying (ε,δ)-differential privacy, it is necessary that n ≥Ω √d log(1/δ) αε  , which is optimal up to constant factors. To prove our lower bound, we build on the connection between fingerprinting codes and lower bounds in differential privacy (Bun, Ullman, and Vadhan, STOC’14). In addition to our lower bound, we give new purely and approximately differentially private algorithms for answering arbitrary statistical queries that improve on the sample complexity of the standard Laplace and Gaussian mechanisms for achieving worst-case accuracy guarantees by a logarithmic factor. ∗Harvard University School of Engineering and Applied Sciences. Supported by NSF grant CCF-1116616. Email: tsteinke@seas.harvard.edu. †Columbia University Department of Computer Science. Supported by a Junior Fellowship from the Simons Society of Fellows. Email: jullman@cs.columbia.edu. ar X iv :1 50 1. 06 09 5v 1 [ cs .D S] 2 4 Ja n 20 15",
    "creator" : "LaTeX with hyperref package"
  }
}