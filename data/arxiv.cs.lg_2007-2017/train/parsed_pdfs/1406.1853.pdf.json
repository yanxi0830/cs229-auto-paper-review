{
  "name" : "1406.1853.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Model-based Reinforcement Learning and the Eluder Dimension",
    "authors" : [ "Ian Osband", "Benjamin Van Roy" ],
    "emails" : [ "iosband@stanford.edu", "bvr@stanford.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 6.\n18 53\nv2 [\nst at\n.M L\n] 3\n1 O\nct 2\n√ dKdET ) where T is time elapsed, dK is the\nKolmogorov dimension and dE is the eluder dimension. These represent the first unified regret bounds for model-based reinforcement learning and provide state of the art guarantees in several important settings. Moreover, we present a simple and computationally efficient algorithm posterior sampling for reinforcement learning (PSRL) that satisfies these bounds."
    }, {
      "heading" : "1 Introduction",
      "text" : "We consider the reinforcement learning (RL) problem of optimizing rewards in an unknown Markov decision process (MDP) [1]. In this setting an agent makes sequential decisions within its enironment to maximize its cumulative rewards through time. We model the environment as an MDP, however, unlike the standard MDP planning problem the agent is unsure of the underlying reward and transition functions. Through exploring poorlyunderstood policies, an agent may improve its understanding of its environment but it may improve its short term rewards by exploiting its existing knowledge [2, 3].\nThe focus of the literature in this area has been to develop algorithms whose performance will be close to optimal in some sense. There are numerous criteria for statistical and computational efficiency that might be considered. Some of the most common include PAC (Probably Approximately Correct) [4], MB (Mistake Bound) [5], KWIK (Knows What It Knows) [6] and regret [7]. We will focus our attention upon regret, or the shortfall in the agent’s expected rewards compared to that of the optimal policy. We believe this is a natural criteria for performance during learning, although these concepts are closely linked. A good overview of various efficiency guarantees is given in section 3 of Li et al. [6].\nBroadly, algorithms for RL can be separated as either model-based, which build a generative model of the environment, or model-free which do not. Algorithms of both type have been developed to provide PAC-MDP bounds polynomial in the number of states S and actions A [8, 9, 10]. However, model-free approaches can struggle to plan efficient exploration. The only near-optimal regret bounds to time T of Õ(S √ AT ) have only been attained by modelbased algorithms [7, 11]. But even these bounds grow with the cardinality of the state and action spaces, which may be extremely large or even infinite. Worse still, there is a lower bound Ω( √ SAT ) for the expected regret in an arbitrary MDP [7].\nIn special cases, where the reward or transition function is known to belong to a certain functional family, existing algorithms can exploit the structure to move beyond this “‘tabula rasa” (where nothing is assumed beyond S and A) lower bound. The most widely-studied\nparameterization is the degenerate MDP with no transitions, the mutli-armed bandit [12, 13, 14]. Another common assumption is that the transition function is linear in states and actions. Papers here establigh regret bounds Õ( √ T ) for linear quadratic control [16], but with constants that grow exponentially with dimension. Later works remove this exponential dependence, but only under significant sparsity assumptions [17]. The most general previous analysis considers rewards and transitions that are α-Hölder in a d-dimensional space to establish regret bounds Õ(T (2d+α)/(2d+2α)) [18]. However, the proposed algorithm UCCRL is not computationally tractable and the bounds approach linearity in many settings.\nIn this paper we analyse the simple and intuitive algorithm posterior sampling for reinforcement learning (PSRL) [20, 21, 11]. PSRL was initially introduced as a heuristic method [21], but has since been shown to satisfy state of the art regret bounds in finite MDPs [11] and also exploit the structure of factored MDPs [15]. We show that this same algorithm satisfies general regret bounds that depends upon the dimensionality, rather than the cardinality, of the underlying reward and transition function classes. To characterize the complexity of this learning problem we extend the definition of the eluder dimension, previously introduced for bandits [19], to capture the complexity of the reinforcement learning problem. Our results provide a unified analysis of model-based reinforcement learning in general and provide new state of the art bounds in several important problem settings."
    }, {
      "heading" : "2 Problem formulation",
      "text" : "We consider the problem of learning to optimize a random finite horizon MDP M = (S,A, RM , PM , τ, ρ) in repeated finite episodes of interaction. S is the state space, A is the action space, RM (s, a) is the reward distribution over R and PM (·|s, a) is the transition distribution over S when selecting action a in state s, τ is the time horizon, and ρ the initial state distribution. All random variables we will consider are on a probability space (Ω,F,P).\nA policy µ is a function mapping each state s ∈ S and i = 1, . . . , τ to an action a ∈ A. For each MDP M and policy µ, we define a value function V :\nV Mµ,i(s) := EM,µ [\nτ ∑\nj=i\nrM (sj , aj) ∣ ∣ ∣si = s ]\n(1)\nwhere rM (s, a) := E[r|r ∼ RM (s, a)] and the subscripts of the expectation operator indicate that aj = µ(sj , j), and sj+1 ∼ PM (·|sj , aj) for j = i, . . . , τ . A policy µ is said to be optimal for MDP M if V Mµ,i(s) = maxµ′ V M µ′,i(s) for all s ∈ S and i = 1, . . . , τ . We will associate with each MDP M a policy µM that is optimal for M .\nWe require that the state space S is a subset of Rd for some finite d with a ‖ · ‖2-norm induced by an inner product. These result actually extend to general Hilbert spaces, but we will not deal with that in this paper. This allows us to decompose the transition function as a mean value in S plus additive noise s′ ∼ PM (·|s, a) =⇒ s′ = pM (s, a) + ǫP . At first this may seem to exclude discrete MDPs with S states from our analysis. However, we can represent the discrete state as a probability vector st ∈ S = [0, 1]S ⊂ RS with a single active component equal to 1 and 0 otherwise. In fact, the notational convention that S ⊆ Rd should not impose a great restriction for most practical settings. For any distribution Φ over S, we define the one step future value function U to be the expected value of the optimal policy with the next state distributed according to Φ.\nUMi (Φ) := EM,µM [ VMµM ,i+1(s) ∣ ∣s ∼ Φ ] . (2)\nOne natural regularity condition for learning is that the future values of similar distributions should be similar. We examine this idea through the Lipschitz constant on the means of these state distributions. We write E(Φ) := E[s|s ∼ Φ] ∈ S for the mean of a distribution Φ and express the Lipschitz continuity for UMi with respect to the ‖ · ‖2-norm of the mean:\n|UMi (Φ)− UMi (Φ̃)| ≤ KMi (D)‖E(Φ)− E(Φ̃)‖2 for all Φ, Φ̃ ∈ D (3) We define KM (D) := maxiKMi (D) to be a global Lipschitz contant for the future value function with state distributions from D. Where appropriate, we will condense our notation\nto write KM := KM (D(M)) where D(M) := {PM (·|s, a)|s ∈ S, a ∈ A} is the set of all possible one-step state distributions under the MDP M .\nThe reinforcement learning agent interacts with the MDP over episodes that begin at times tk = (k − 1)τ + 1, k = 1, 2, . . .. Let Ht = (s1, a1, r1, . . . , st−1, at−1, rt−1) denote the history of observations made prior to time t. A reinforcement learning algorithm is a deterministic sequence {πk|k = 1, 2, . . .} of functions, each mapping Htk to a probability distribution πk(Htk) over policies which the agent will employ during the kth episode. We define the regret incurred by a reinforcement learning algorithm π up to time T to be\nRegret(T, π,M∗) :=\n⌈T/τ⌉ ∑\nk=1\n∆k,\nwhere ∆k denotes regret over the kth episode, defined with respect to the MDP M ∗ by\n∆k :=\n∫\ns∈S\nρ(s) ( V M ∗\nµ∗,1 − V M ∗\nµk,1\n)\n(s)\nwith µ∗ = µM ∗ and µk ∼ πk(Htk). Note that regret is not deterministic since it can depend on the random MDP M∗, the algorithm’s internal random sampling and, through the history Htk , on previous random transitions and random rewards. We will assess and compare algorithm performance in terms of regret and its expectation."
    }, {
      "heading" : "3 Main results",
      "text" : "We now review the algorithm PSRL, an adaptation of Thompson sampling [20] to reinforcement learning. PSRL was first proposed by Strens [21] and later was shown to satisfy efficient regret bounds in finite MDPs [11]. The algorithm begins with a prior distribution over MDPs. At the start of episode k, PSRL samples an MDP Mk from the posterior. PSRL then follows the policy µk = µ Mk which is optimal for this sampled MDP during episode k.\nAlgorithm 1 Posterior Sampling for Reinforcement Learning (PSRL)\n1: Input: Prior distribution φ for M∗, t=1 2: for episodes k = 1, 2, .. do 3: sample Mk ∼ φ(·|Ht) 4: compute µk = µMk 5: for timesteps j = 1, .., τ do 6: apply at ∼ µk(st, j) 7: observe rt and st+1 8: advance t = t+ 1 9: end for 10: end for\nTo state our results we first introduce some notation. For any set X and Y ⊆ Rd for d finite let PC,σX ,Y be the family the distributions from X to Y with mean ‖ · ‖2-bounded in [0, C] and additive σ-sub-Gaussian noise. We let N(F , α, ‖ · ‖2) be the α-covering number of F with respect to the ‖ · ‖2-norm and write nF = log(8N(F , 1/T 2, ‖ · ‖2)T ) for brevity. Finally we write dE(F) = dimE(F , T−1) for the eluder dimension of F at precision T−1, a notion of dimension specialized to sequential measurements described in Section 4.\nOur main result, Theorem 1, bounds the expected regret of PSRL at any time T .\nTheorem 1 (Expected regret for PSRL in parameterized MDPs). Fix a state space S, action space A, function families R ⊆ PCR,σRS×A,R and P ⊆ P CP ,σP S×A,S for any CR, CP , σR, σP > 0. Let M ∗ be an MDP with state space S, action space A, rewards R∗ ∈ R and transitions P ∗ ∈ P. If φ is the distribution of M∗ and K∗ = KM∗ is a global Lipschitz constant for the future value function as per (3) then:\nE[Regret(T, πPS ,M∗)] ≤ [ CR + CP ] + D̃(R) + +E[K∗] ( 1 + 1\nT − 1\n)\nD̃(P) (4)\nWhere for F equal to either R or P we will use the shorthand: D̃(F) := 1 + τCFdE(F) + 8 √ dE(F)(4CF + √ 2σ2F log(32T 3)) + 8 √ 2σ2FnFdE(F)T .\nTheorem 1 is a general result that applies to almost all RL settings of interest. In particular, we note that any bounded function is sub-Gaussian. To clarify the assymptotics if this bound we use another classical measure of dimensionality. Definition 1. The Kolmogorov dimension of a function class F is given by:\ndimK(F) := lim sup α↓0 log(N(F , α, ‖ · ‖2)) log(1/α) .\nUsing Definition 1 in Theorem 1 we can obtain our Corollary.\nCorollary 1 (Assymptotic regret bounds for PSRL in parameterized MDPs). Under the assumptions of Theorem 1 and writing dK(F) := dimK(F):\nE[Regret(T, πPS ,M∗)] = Õ ( σR √ dK(R)dE(R)T + E[K∗]σP √ dK(P)dE(P)T )\n(5)\nWhere Õ(·) ignores terms logarithmic in T .\nIn Section 4 we provide bounds on the eluder dimension of several function classes. These lead to explicit regret bounds in a number of important domains such as discrete MDPs, linear-quadratic control and even generalized linear systems. In all of these cases the eluder dimension scales comparably with more traditional notions of dimensionality. For clarity, we present bounds in the case of linear-quadratic control.\nCorollary 2 (Assymptotic regret bounds for PSRL in bounded linear quadratic systems). Let M∗ be an n-dimensional linear-quadratic system with σ-sub-Gaussian noise. If the state is ‖ · ‖2-bounded by C and φ is the distribution of M∗, then:\nE[Regret(T, πPS ,M∗)] = Õ ( σCλ1n 2 √ T ) . (6)\nHere λ1 is the largest eigenvalue of the matrix Q given as the solution of the Ricatti equations for the unconstrained optimal value function V (s) = −sTQs [22].\nProof. We simply apply the results of for eluder dimension in Section 4 to Corollary 1 and upper bound the Lipschitz constant of the constrained LQR by 2Cλ1, see Appendix D.\nAlgorithms based upon posterior sampling are intimately linked to those based upon optimism [14]. In Appendix E we outline an optimistic variant that would attain similar regret bounds but with high probility in a frequentist sense. Unfortunately this algorithm remains computationally intractable even when presented with an approximate MDP planner. Further, we believe that PSRL will generally be more statistically efficient than an optimistic variant with similar regret bounds since the algorithm is not affected by loose analysis [11]."
    }, {
      "heading" : "4 Eluder dimension",
      "text" : "To quantify the complexity of learning in a potentially infinite MDP, we extend the existing notion of eluder dimension for real-valued functions [19] to vector-valued functions. For any G ⊆ PC,σX ,Y we define the set of mean functions F = E[G] := {f |f = E[G] for G ∈ G}. If we consider sequential observations yi ∼ G∗(xi) we can equivalently write them as yi = f∗(xi)+ ǫi for some f\n∗(xi) = E[y|y ∼ G∗(xi)] and ǫi zero mean noise. Intuitively, the eluder dimension of F is the length d of the longest possible sequence x1, .., xd such that for all i, knowing the function values of f(x1), .., f(xi) will not reveal f(xi+1). Definition 2 ((F , ǫ)− dependence). We will say that x ∈ X is (F , ǫ)-dependent on {x1, ..., xn} ⊆ X\n⇐⇒ ∀f, f̃ ∈ F , n ∑\ni=1\n‖f(xi)− f̃(xi)‖22 ≤ ǫ2 =⇒ ‖f(x)− f̃(x)‖2 ≤ ǫ.\nx ∈ X is (ǫ,F)-independent of {x1, .., xn} iff it does not satisfy the definition for dependence.\nDefinition 3 (Eluder Dimension). The eluder dimension dimE(F , ǫ) is the length of the longest possible sequence of elements in X such that for some ǫ′ ≥ ǫ every element is (F , ǫ′)-independent of its predecessors.\nTraditional notions from supervised learning, such as the VC dimension, are not sufficient to characterize the complexity of reinforcement learning. In fact, a family learnable in constant time for supervised learning may require arbitrarily long to learn to control well [19]. The eluder dimension mirrors the linear dimension for vector spaces, which is the length of the longest sequence such that each element is linearly independent of its predecessors, but allows for nonlinear and approximate dependencies. We overload our notation for G ⊆ PC,σX ,Y and write dimE(G, ǫ) := dimE(E[G], ǫ), which should be clear from the context."
    }, {
      "heading" : "4.1 Eluder dimension for specific function classes",
      "text" : "Theorem 1 gives regret bounds in terms of the eluder dimension, which is well-defined for any F , ǫ. However, for any given F , ǫ actually calculating the eluder dimension may take some additional analysis. We now provide bounds on the eluder dimension for some common function classes in a similar approach to earlier work for real-valued functions [14]. These proofs are available in Appendix C.\nProposition 1 (Eluder dimension for finite X ). A counting argument shows that for |X | = X finite, any ǫ > 0 and any function class F :\ndimE(F , ǫ) ≤ X This bound is tight in the case of independent measurements.\nProposition 2 (Eluder dimension for linear functions). Let F = {f |f(x) = θφ(x) for θ ∈ Rn×p, φ ∈ Rp, ‖θ‖2 ≤ Cθ, ‖φ‖2 ≤ Cφ} then ∀X :\ndimE(F , ǫ) ≤ p(4n− 1) e e− 1 log [( 1 + ( 2CφCθ ǫ )2 ) (4n− 1) ] + 1 = Õ(np)\nProposition 3 (Eluder dimension for quadratic functions). Let F = {f |f(x) = φ(x)T θφ(x) for θ ∈ Rp×p, φ ∈ Rp, ‖θ‖2 ≤ Cθ, ‖φ‖2 ≤ Cφ} then ∀X :\ndimE(F , ǫ) ≤ p(4p− 1) e\ne− 1 log\n\n\n\n1 +\n(\n2pC2φCθ\nǫ\n)2 \n (4p− 1)\n\n+ 1 = Õ(p2).\nProposition 4 (Eluder dimension for generalized linear functions). Let g(·) be a component-wise independent function on Rn with derivative in each component bounded ∈ [h, h] with h > 0. Define r = hh > 1 to be the condition number. If F = {f |f(x) = g(θφ(x)) for θ ∈ Rn×p, φ ∈ Rp, ‖θ‖2 ≤ Cθ, ‖φ‖2 ≤ Cφ} then for any X :\ndimE(F , ǫ) ≤ p ( r2(4n− 2) + 1 ) e\ne− 1\n(\nlog\n[\n( r2(4n− 2) + 1 )\n(\n1 + (2CθCφ\nǫ\n)2 )])\n+1 = Õ(r2np)"
    }, {
      "heading" : "5 Confidence sets",
      "text" : "We now follow the standard argument that relates the regret of an optimistic or posterior sampling algorithm to the construction of confidence sets [7, 11]. We will use the eluder dimension build confidence sets for the reward and transition which contain the true functions with high probability and then bound the regret of our algorithm by the maximum deviation within the confidence sets. For observations from f∗ ∈ F we will center the sets around the least squares estimate f̂LSt ∈ argminf∈F L2,t(f) where L2,t(f) := ∑t−1 i=1 ‖f(xt) − yt‖22 is the cumulative squared prediciton error. The confidence\nsets are defined Ft = Ft(βt) := {f ∈ F|‖f − f̂LSt ‖2,Et ≤ √ βt} where βt controls the growth of the confidence set and the empirical 2-norm is defined ‖g‖22,Et := ∑t−1 i=1 ‖g(xi)‖22.\nFor F ⊆ PC,σX ,Y , we define the distinguished control parameter:\nβ∗t (F , δ, α) := 8σ2 log(N(F , α, ‖ · ‖2)/δ) + 2αt ( 8C + √ 8σ2 log(4t2/δ)) )\n(7)\nThis leads to confidence sets which contain the true function with high probability.\nProposition 5 (Confidence sets with high probability). For all δ > 0 and α > 0 and the confidence sets Ft = Ft(β∗t (F , δ, α)) for all t ∈ N then:\nP\n(\nf∗ ∈ ∞ ⋂\nt=1\nFt ) ≥ 1− 2δ\nProof. We combine standard martingale concentrations with a discretization scheme. The argument is essentially the same as Proposition 6 in [14], but extends statements about R to vector-valued functions. A full derivation is available in the Appendix A."
    }, {
      "heading" : "5.1 Bounding the sum of set widths",
      "text" : "We now bound the deviation from f∗ by the maximum deviation within the confidence set.\nDefinition 4 (Set widths). For any set of functions F we define the width of the set at x to be the maximum L2 deviation between any two members of F evaluated at x.\nwF (x) := sup f,f∈F\n‖f(x)− f(x)‖2\nWe can bound for the number of large widths in terms of the eluder dimension.\nLemma 1 (Bounding the number of large widths). If {βt > 0 ∣\n∣t ∈ N} is a nondecreasing sequence with Ft = Ft(βt) then m ∑\nk=1\nτ ∑\ni=1\n1{wFtk (xtk+i) > ǫ} ≤ ( 4βT ǫ2 + τ ) dimE(F , ǫ)\nProof. This result follows from proposition 8 in [14] but with a small adjustment to account for episodes. A full proof is given in Appendix B.\nWe now use Lemma 1 to control the cumulative deviation through time.\nProposition 6 (Bounding the sum of widths). If {βt > 0 ∣\n∣t ∈ N} is nondecreasing with Ft = Ft(βt) and ‖f‖2 ≤ C for all f ∈ F then: m ∑\nk=1\nτ ∑\ni=1\nwFtk (xtk+i) ≤ 1 + τCdimE(F , T −1) + 4\n√\nβTdimE(F , T−1)T (8)\nProof. Once again we follow the analysis of Russo [14] and strealine notation by letting wt = wFtk (xtk+i) abd d = dimE(F , T\n−1). Reordering the sequence (w1, .., wT ) → (wi1 , .., wiT ) such that wi1 ≥ .. ≥ wiT we have that:\nm ∑\nk=1\nτ ∑\ni=1\nwFtk (xtk+i) =\nT ∑\nt=1\nwit ≤ 1 + T ∑\ni=1\nwit1{wit ≥ T−1}\n.\nBy the reordering we know that wit > ǫ means that ∑m k=1 ∑τ i=1 1{wFtk (xtk+i) > ǫ} ≥ t. From Lemma 1, ǫ ≤ √\n4βT d t−τd . So that if wit > T −1 then wit ≤ min{C, √ 4βT d t−τd}. Therefore,\nT ∑\ni=1\nwit1{wit ≥ T−1} ≤ τCd+ T ∑\nt=τd+1\n√\n4βTd\nt− τd ≤ τCd+2 √ βT\n∫ T\n0\n√\nd t dt ≤ τCd+4 √ βT dT"
    }, {
      "heading" : "6 Analysis",
      "text" : "We will now show reproduce the decomposition of expected regret in terms of the Bellman error [11]. From here, we will apply the confidence set results from Section 5 to obtain our regret bounds. We streamline our discussion of PM , RM , V Mµ,i , U M i and T Mµ by simply writing ∗ in place of M∗ or µ∗ and k in place of Mk or µk where appropriate; for example V ∗k,i := V M∗ µ̃k,i .\nThe first step in our ananlysis breaks down the regret by adding and subtracting the imagined optimal reward of µk under the MDP Mk.\n∆k = ( V ∗∗,1 − V ∗k,1 ) (s0) = ( V ∗∗,1 − V kk,1 ) (s0) + ( V kk,1 − V ∗k,1 ) (s0) (9)\nHere s0 is a distinguished initial state, but moving to general ρ(s) poses no real challenge. Algorithms based upon optimism bound (V ∗∗,1 − V kk,1) ≤ 0 with high probability. For PSRL we use Lemma 2 and the tower property to see that this is zero in expectation.\nLemma 2 (Posterior sampling). If φ is the distribution of M∗ then, for any σ(Htk)-measurable function g,\nE[g(M∗)|Htk ] = E[g(Mk)|Htk ] (10)\nWe introduce the Bellman operator T Mµ , which for any MDP M = (S,A, RM , PM , τ, ρ), stationary policy µ : S → A and value function V : S → R, is defined by\nT Mµ V (s) := rM (s, µ(s)) + ∫\ns′∈S\nPM (s′|s, µ(s))V (s′).\nThis returns the expected value of state s where we follow the policy µ under the laws of M , for one time step. The following lemma gives a concise form for the dynamic programming paradigm in terms of the Bellman operator.\nLemma 3 (Dynamic programming equation). For any MDP M = (S,A, RM , PM , τ, ρ) and policy µ : S × {1, . . . , τ} → A, the value functions V Mµ satisfy V Mµ,i = T Mµ(·,i)V Mµ,i+1 (11) for i = 1 . . . τ , with V Mµ,τ+1 := 0.\nThrough repeated application of the dynamic programming operator and taking expectation of martingale differences we can mirror earlier analysis [11] to equate expected regret with the cumulative Bellman error:\nE[∆k] =\nτ ∑\ni=1\n(T kk,i − T ∗k,i)V kk,i+1(stk+i) (12)"
    }, {
      "heading" : "6.1 Lipschitz continuity",
      "text" : "Efficient regret bounds for MDPs with an infinite number of states and actions require some regularity assumption. One natural notion is that nearby states might have similar optimal values, or that the optimal value function function might be Lipschitz. Unfortunately, any discontinuous reward function will usually lead to discontious values functions so that this assumption is violated in many settings of interest. However, we only require that the future value is Lipschitz in the sense of equation (3). This will will be satisfied whenever the underlying value function is Lipschitz, but is a strictly weaker requirement since the system noise helps to smooth future values.\nSince P has σP -sub-Gaussian noise we write st+1 = pM (st, at) + ǫPt in the natural way. We now use equation (12) to reduce regret to a sum of set widths. To reduce clutter and more closely follow the notation of Section 4 we will write xk,i = (stk+i, atk+i).\nE[∆k] ≤ E [ τ ∑\ni=1\n{ rk(xk,i)− r∗(xk,i) + Uki (P k(xk,i))− Uki (P ∗(xk,i)) }\n]\n≤ E [ τ ∑\ni=1\n{ |rk(xk,i)− r∗(xk,i)|+Kk‖pk(xk,i)− p∗(xk,i)‖2 }\n]\n(13)\nWhere Kk is a global Lipschitz constant for the future value function of Mk as per (3).\nWe now use the results from Sections 4 and 5 to form the corresponding confidence sets Rk := Rtk(β∗(R, δ, α)) and Pk := Ptk(β∗(P , δ, α)) for the reward and transition functions respectively. Let A = {R∗, Rk ∈ Rk ∀k} and B = {P ∗, Pk ∈ Pk ∀k} and condition upon these events to give:\nE[Regret(T, πPS ,M∗)] ≤ E [ m ∑\nk=1\nτ ∑\ni=1\n{ |rk(xk,i)− r∗(xk,i)|+Kk‖pk(xk,i)− p∗(xk,i)‖2 }\n]\n≤ m ∑\nk=1\nτ ∑\ni=1\n{\nwRk(xk,i) + E[K k|A,B]wPk(xk,i) + 8δ(CR + CP )\n}\n(14)\nThe posterior sampling lemma ensures that E[Kk] = E[K∗] so that E[Kk|A,B] ≤ E[K ∗]\nP(A,B) ≤ E[K∗] 1−8δ by a union bound on {Ac ∪Bc}. We fix δ = 1/8T to see that:\nE[Regret(T, πPS,M∗)] ≤ (CR + CP) + m ∑\nk=1\nτ ∑\ni=1\nwRk (xk,i) +E[K ∗] ( 1 + 1 T − 1 )\nm ∑\nk=1\nτ ∑\ni=1\nwPt(xk,i)\nWe now use equation (7) together with Proposition 6 to obtain our regret bounds. For ease of notation we will write dE(R) = dimE(R, T−1) and dE(P) = dimE(P , T−1).\nE[Regret(T, πPS ,M∗)] ≤ 2 + (CR + CP) + τ(CRdE(R) + CPdE(P)) +\n4 √ β∗T (R, 1/8T, α)dE(R)T + 4 √ β∗T (P , 1/8T, α)dE(P)T(15)\nWe let α = 1/T 2 and write nF = log(8N(F , 1/T 2, ‖ · ‖2)T ) for R and P to complete our proof of Theorem 1:\nE[Regret(T, πPS ,M∗)] ≤ [ CR + CP ] + D̃(R) + E[K∗] ( 1 + 1\nT − 1\n)\nD̃(P) (16)\nWhere D̃(F) is shorthand for 1 + τCFdE(F) + 8 √ dE(F)(4CF + √ 2σ2F log(32T 3)) + 8 √\n2σ2FnFdE(F)T . The first term [CR + CP ] bounds the contribution from missed confidence sets. The cost of learning the reward function R∗ is bounded by D̃(R). In most problems the remaining contribution bounding transitions and lost future value will be dominant. Corollary 1 follows from the Definition 1 together with nR and nP ."
    }, {
      "heading" : "7 Conclusion",
      "text" : "We present a new analysis of posterior sampling for reinforcement learning that leads to a general regret bound in terms of the dimensionality, rather than the cardinality, of the underlying MDP. These are the first regret bounds for reinforcement learning in such a general setting and provide new state of the art guarantees when specialized to several important problem settings. That said, there are a few clear shortcomings which we do not address in the paper. First, we assume that it is possible to draw samples from the posterior distribution exactly and in some cases this may require extensive computational effort. Second, we wonder whether it is possible to extend our analysis to learning in MDPs without episodic resets. Finally, there is a fundamental hurdle to model-based reinforcement learning that planning for the optimal policy even in a known MDP may be intractable. We assume access to an approximateMDP planner, but this will generally require lengthy computations. We would like to examine whether similar bounds are attainable in model-free learning [23], which may obviate complicated MDP planning, and examine the computational and statistical efficiency tradeoffs between these methods."
    }, {
      "heading" : "Acknowledgments",
      "text" : "Osband is supported by Stanford Graduate Fellowships courtesy of PACCAR inc. This work was supported in part by Award CMMI-0968707 from the National Science Foundation."
    }, {
      "heading" : "A Confidence sets with high probability",
      "text" : "In this appendix we will build up to a proof of Proposition 5, that the confidence sets defined by β∗ in equation 7 hold with high probability. We begin with some elementary results from martingale theory.\nLemma 4 (Exponential Martingale). Let Zi ∈ L1 be real-calued random variables adapted to Hi. We define the conditional mean µi = E[Zi|Hi−1] and conditional cumulant generating function ψi(λ) = logE[exp (λ(Zi − µi)) |Hi−1], then\nMn(λ) = exp\n(\nn ∑\n1\nλ(Zi − µi)− ψi(λ) )\nis a martingale with E[Mn(λ)] = 1.\nLemma 5 (Concentration Guarantee). For Zi adapted real L\n1 random variables adapted to Hi. We define the conditional mean µi = E[Zi|Hi−1] and conditional cumulant generating function ψi(λ) = logE[exp (λ(Zi − µi)) |Hi−1].\nP\n(\n∞ ⋃\nn=1\n{ n ∑\n1\nλ(Zi − µi)− ψi(λ) ≥ x} ) ≤ e−x\nBoth of these lemmas are available in earlier discussion for real-valued variables [14]. We now specialize our discussion to the vector space Y ⊆ Rd where the inner product < y, y >= ‖y‖22. To simplify notation we will write f∗t := f ∗(xt) and ft = f(xt) for arbitrary f ∈ F . We now define\nZt = ‖f∗t − yt‖2 − ‖ft − yt‖2 = < f∗t − yt, f∗t − yt > − < ft − yt, ft − yt, ft − yt > = − < ft − f∗t , ft − f∗t > +2 < ft − f∗t , yt − f∗t > = −‖ft − f∗t ‖2 + 2 < ft − f∗t , ǫt >\nso that clearly µt = −‖ft − f∗t ‖2. Now since we have said that the noise is σ-sub-Gaussian, E[exp (< φ, ǫ >)] ≤ exp ( ‖φ‖2 2 σ2\n2\n)\n∀φ ∈ Y. From here we can deduce that:\nψt(λ) = logE[exp (λ(Zt − µt)) |Ht−1] = logE[exp(2λ < ft − f∗t , ǫt >)]\n≤ ‖2λ(ft − f ∗ t )‖22σ2\n2 .\nWe now write ∑t−1 i=1 Zi = L2,t(f∗) − L2,t(f) according to our earlier definition of L2,t. We can apply Lemma 5 with λ = 1/4σ2, x = log(1/δ) to obtain:\nP{ ( L2,t(f) ≥ L2,t(f∗) + 1 2 ‖f − f∗‖2,Et − 4σ2 log(1/δ) ) ∀t} ≥ 1− δ\nsubstituting f = f̂ to be the least squares solution which minimizes L2,t(f) we can remove L2,t(f̂)− L2,t(f∗) ≤ 0. From here we use an α-cover discretization argument to complete the proof of Proposition 5.\nLet Fα ⊂ F be an α-2 cover of F such that ∀f ∈ F there is some ‖fα − f‖2 ≤ α. We can use a union bound on Fα so that ∀f ∈ F :\nL2,t(f)− L2,t(f∗) ≥ 12‖f − f ∗‖2,Et − 4σ2 log(N(F , α, ‖ · ‖2)/δ) +DE(α) (17)\nFor DE(α) = min fα∈Fα {1 2 ‖fα − f∗‖22,Et − 1 2 ‖f − f∗‖22,Et + L2,t(f)− L2,t(f α) }\nWe will now seek to bound this discretization error with high probability.\nLemma 6 (Bounding discretization error). If ‖fα(x)− f(x)‖2 ≤ α for all x ∈ X then with probability at least 1− δ:\nDE(α) ≤ αt [ 8C + √ 8σ2 log(4t2/δ) ]\nProof. For non-trivial bounds we will consider the case of α ≤ C and note that via Cauchy-Schwarz: ‖fα(x)‖22 − ‖f(x)‖22 ≤ max\n‖y‖2≤α ‖f(x) + y‖22 − ‖f‖22 ≤ 2Cα+ α2.\nFrom here we can say that\n‖fα(x)− f∗(x)‖22 − ‖f(x)− f∗(x)‖22 = ‖fα(x)‖22 − ‖f(x)‖22 + 2 < f∗(x), f(x)− fα(x) >≤ 4Cα ‖y − f(x)‖22 − ‖y − fα(x)‖22 = 2 < y, fα(x)− f(x) > +‖f(x)‖22 − ‖fα(x)‖22 ≤ 2α|y|+ 2Cα+ α2 Summing these expressions over time i = 1, .., t−1 and using sub-gaussian high probability bounds on |y| gives our desired result.\nFinally we apply Lemma 6 to equation 17 and use the fact that f̂LSt is the L2,t minimizer to obtain the result that with probability at least 1− 2δ:\n‖f̂LSt − f∗‖2,Et ≤ √\nβ∗t (F , α, δ) Which is our desired result."
    }, {
      "heading" : "B Bounding the number of large widths",
      "text" : "Lemma 1 (Bounding the number of large widths). If {βt > 0 ∣\n∣t ∈ N} is a nondecreasing sequence with Ft = Ft(βt) then m ∑\nk=1\nτ ∑\ni=1\n1{wFtk (xtk+i) > ǫ} ≤ (4βT\nǫ2 + τ\n)\ndimE(F , ǫ)\nProof. We first imagine that wFt(xt) > ǫ and is ǫ-dependent on K disjoint subsequences of x1, .., xt−1. If xt is ǫ-dependent on K disjoint subsequences then there exist ‖f − f‖2,Et > Kǫ2. By the triangle inequality ‖f − f‖2,Et ≤ 2 √ βt ≤ 2 √ βT so that K < 4βT /ǫ2.\nIn the case without episodic delay, Russo went on to show that in any sequence of length l there is some element which is ǫ-dependent on at least l\ndimE(F,ǫ) −1 disjoint subsequences [14]. Our analysis\nfollows similarly, but we may lose up to τ −1 proper subsequences due to the delay in updating the episode. This means that we can only say that K ≥ l\ndimE(F,ǫ) − τ . Considering the subsequence\nwFtk (xtk+i) > ǫ we see that l ≤ ( 4βT ǫ2 + τ ) dimE(F , ǫ) as required."
    }, {
      "heading" : "C Eluder dimension for specific function classes",
      "text" : "In this section of the appendix we will provide bounds upon the eluder dimension for some canonical function classes. Recalling Definition 3, dimE(F , ǫ) is the length d of the longest sequence x1, .., xd such that for some ǫ′ ≥ ǫ:\nwk = sup\n{ ‖(f − f)(xk)‖2 ∣ ∣ ∣\n∣\n‖f − f‖2,Et ≤ ǫ′ } > ǫ′ (18)\nfor each k ≤ d.\nC.1 Finite domain X\nAny x ∈ X is ǫ-dependent upon itself for all ǫ > 0. Therefore for all ǫ > 0 the eluder dimension of F is bounded by |X |.\nC.2 Linear functions f(x) = θφ(x)\nLet F = {f |f(x) = θφ(x) for θ ∈ Rn×p, φ ∈ Rp, ‖θ‖2 ≤ Cθ, ‖φ‖2 ≤ Cφ}. To simplify our notation we will write φk = φ(xk) and θ = θ1 − θ2. From here, we may manipulate the expression\n‖θφ‖22 = φTk θT θφk = Tr(φTk θT θφk) = Tr(θφkφTk θ)\n=⇒ wk = sup θ\n{‖θφk‖2 ∣ ∣Tr(θΦkθ T ) ≤ ǫ2} where Φk :=\nk−1 ∑\ni=1\nφiφ T i\nWe next require a lemma which gives an upper bound for trace constrained optimizations.\nLemma 7 (Bounding norms under trace constraints). Let θ ∈ Rn×p, φ ∈ Rp and V ∈ Rp×p++ , the set of positive definite p× p matrices, then:\nW 2 = max θ ‖θφ‖22 subject to Tr(θV θT ) ≤ ǫ2\nis bounded above by W 2 ≤ (2n− 1)ǫ2‖φ‖2V −1 where ‖φ‖2A := φTAφ.\nProof. We first note that ‖θφ‖22 = Tr(θφφTθT ) = ∑n 1 (θφ)2i ≤ ( ∑n 1 (θφ)i )2 by Jensen’s inequality. We define Φ̃ ∈ Rn×p such that each row of Φ̃ = φT . Then this inequality can be expressed as: W 2 = Tr(θφφTθT ) ≤ Sum(θ ⊗ Φ̃)2\nWhere A⊗B = C for Cij = AijBij and Sum(C) := ∑\ni,j Cij We can now obtain an upper bound\nfor our original problem through this convex relaxation:\nmax θ\nSum(θ ⊗ Φ̃) subject to Tr(θV θT ) ≤ ǫ2\nWe can now form the lagrangian L(θ, λ) = −Sum(θ ⊗ Φ̃) + λ(Tr(θV θT ) − ǫ2). Solving for first order optimality ▽θL = 0 =⇒ θ∗ = 12λ Φ̃V −1. From here we form the dual objective\ng(λ) = −Sum( 1 2λ Φ̃V −1 ⊗ Φ̃) + Tr( 1 4λ Φ̃V −1Φ̃T )− λǫ2\nHere we solve for the dual-optimal λ∗ ▽λg = 0 =⇒ 12λ∗ 2 Sum( 1 2λ Φ̃V −1 ⊗ Φ̃) −\n1 4λ∗ 2 Tr( 1 4λ Φ̃V −1Φ̃T ) = ǫ2. From the definition of Φ̃, Sum(Φ̃V −1 ⊗ Φ̃) = nφTV −1φ and Tr(Φ̃V −1Φ̃T ) = φTV −1φ. From this we can simplify our expression to conclude:\nn 2λ∗2 φTV −1φ− 1 4λ∗2 φTV −1φ = ǫ2 =⇒ λ∗ =\n√\n(n− 1/2) 2ǫ2 ‖φ‖V −1\n=⇒ g(λ∗) = − n 2λ∗ ‖φ‖2V −1 + 1 4λ∗ ‖φ‖2V −1 − λ∗ǫ\nstrong duality =⇒ f(θ∗) = g(λ∗) = √ 2n− 1ǫ‖φ‖V −1\nFrom here we conclude that the optimal value of W 2 ≤ f(θ∗)2 ≤ (2n− 1)ǫ2‖φ‖2V −1 .\nUsing this lemma, we will be able to address the eluder dimension for linear functions. Using the definition of wk from equation 18 together with Φk we may rewrite:\nwk = max θ\n{ √ Tr(θφkφTk θ) ∣ ∣ Tr(θΦkθ T ) ≤ ǫ2}.\nLet Vk := Φk + (\nǫ 2Cθ\n)2\nI so that Tr(θΦkθT ) ≤ ǫ2 =⇒ Tr(θVkθT ) ≤ 2ǫ2 through a triangle inequality. Now applying Lemma 7 we can say that wk ≤ ǫ √ 4n− 2‖φk‖V −1\nk\n. This means that if\nwk ≥ ǫ then ‖φk‖2V −1 k > 1 4n−2 > 0.\nWe now imagine that wi ≥ ǫ for each i < k. Then since Vk = Vk−1 + φkφTk we can use the Matrix Determinant together with the above observation to say that:\ndet(Vk) = det(Vk−1)(1 + φ T k V −1 K φk) ≥ det(Vk−1)\n(\n1 + 1\n4n− 2\n) ≥ .. ≥ λp ( 1 + 1\n4n− 2\n)k−1\n(19)\nfor λ := (\nǫ 2Cθ\n)2\n. To get an upper bound on the determinant we note that det(Vk) is maximized\nwhen all eigenvalues are equal or equivalently:\ndet(Vk) ≤ (\nTr(Vk) p\n)p ≤ ( C2φ(k − 1) p + λ )p\n(20)\nNow using equations 19 and 20 together we see that k must satistfy the inequality (\n1 + 1 4n−2\n)(k−1)/p ≤ C 2 φ (k−1)\nλp + 1. We now write ζ0 = 14n−2 and α0 =\nC2 φ λ = ( 2CφCθ ǫ )2 so that we\ncan epress this as:\n(1 + ζ0) k−1 p ≤ α0 k − 1\np + 1\nWe now use the result that B(x, α) = max{B ∣\n∣ (1+x)B ≤ αB+1} ≤ 1+x x e e−1 {log(1+α)+log( 1+x x )}. We complete our proof of Proposition 2 through computing this upper bound at (ζ0, α0),\ndimE(F , ǫ) ≤ p(4n− 1) e e− 1 log [( 1 + (2CφCθ ǫ )2 ) (4n− 1) ] + 1 = Õ(np).\nC.3 Quadratic functions f(x) = φT (x)θφ(x)\nLet F = {f |f(x) = φ(x)T θφ(x) for θ ∈ Rp×p, φ ∈ Rp, ‖θ‖2 ≤ Cθ, ‖φ‖2 ≤ Cφ} then for any X we can say that:\ndimE(F , ǫ) ≤ p(4p− 1) e e− 1 log [( 1 + ( 2pC2φCθ ǫ )2 ) (4p− 1) ] + 1 = Õ(p2).\nWhere we have simply applied the linear result with ǫ̃ = ǫ pCP . This is valid since if we can identify the linear function g(x) = θφ(x) to within this tolerance then we will certainly know f(x) as well.\nC.4 Generalized linear models\nLet g(·) be a component-wise independent function on Rn with derivative in each component bounded ∈ [h, h] with h > 0. Define r = h\nh > 1 to be the condition number. If F = {f |f(x) =\ng(θφ(x)) for θ ∈ Rn×p, φ ∈ Rp, ‖θ‖2 ≤ Cθ, ‖φ‖2 ≤ Cφ} then for any X :\ndimE(F , ǫ) ≤ p ( r2(4n− 2) + 1 ) e\ne− 1\n(\nlog\n[\n( r2(4n− 2) + 1 )\n(\n1 + (2CθCφ\nǫ\n)2 )])\n+1 = Õ(r2np)\nThis proof follows exactly as per the linear case, but first using a simple reduction on the form of equation (18).\nwk = sup\n{ ‖(f − f)(xk)‖2 ∣ ∣ ∣\n∣\n‖f − f‖2,Et ≤ ǫ′ }\n≤ max θ1,θ2\n{\n‖g(θ1φk)− g(θ2φk)‖2 ∣ ∣\nk−1 ∑\ni=1\n‖g(θ1φi)− g(θ2φi)‖22 ≤ ǫ2 }\n≤ max θ\n{\nh‖θφk‖2 ∣ ∣\nk−1 ∑\ni=1\nh2‖θφi‖22 ≤ ǫ2 }\nTo which we can now apply Lemma 7 with the ǫ rescaled by r. Following the same arguments as for linear functions now completes our proof."
    }, {
      "heading" : "D Bounded LQR control",
      "text" : "We imagine a standard linear quadratic controller with rewards with x = (s, a) the state-action vector. The rewards and transitions are given by:\nR(x) = −xTAx+ ǫR , P (x) = ΠC(Bx+ ǫP ), where A < 0 is positive semi-definite and ΠC projects x onto the ‖ · ‖2-ball at radius C. In the case of unbounded states and actions the Ricatti equations give the form of the optimal value function V (s) = −sTQs for Q < 0. In this case we can see that the difference in values of two states: |V (s)− V (s′)| = | − sTQs+ s′TQs′| = | − (s+ s′)TQ(s− s′)| ≤ 2Cλ1‖s − s′‖2 where λ1 is the largest eigenvalue of Q and C is an upper bound on the ‖ · ‖2-norm of both s and s′. We note that 2Cλ1 works as an effective Lipshcitz constant when we know what C can bound s, s′.\nWe observe that for any projection ΠC(x) = αx for α ∈ (0, 1] and that for all positive semi-definite matrices A < 0, (αx)TA(αx) = α2xTAx ≤ xTAx. Using this observation together with reward and transition functions we can see that the value function of the bounded LQR system is always greater than or equal to that of the unconstrained value function. The effect of excluding the lowreward outer region, but maintaining the higher-reward inner region means that the value function becomes more flat in the bounded case, and so 2Cλ1 works as an effective Lipschitz constant for this problem too."
    }, {
      "heading" : "E UCRL-Eluder",
      "text" : "For completeness, we explicitly outline an optimistic algorithm which uses the confidence sets in our analysis of PSRL to guarantee similar regret bounds with high probability over all MDP M∗. The algorithm follows the style of UCRL2 [7] so that at the start of the kth episode the algorithm form Mk = {M |PM ∈ Pk, RM ∈ Rk} and then solves for the optimistic policy that attains the highest reward over any M in Mk.\nAlgorithm 2 UCRL-Eluder\n1: Input: Confidence parameter δ > 0, t=1 2: for episodes k = 1, 2, .. do 3: form confidence sets Rk(β∗(R, δ, 1/k2)) and Pk(β∗(P , δ, 1/k2)) 4: compute µk optimistic policy over Mk = {M |PM ∈ Pk, RM ∈ Rk} 5: for timesteps j = 1, .., τ do 6: apply at ∼ µk(st, j) 7: observe rt and st+1 8: advance t = t+ 1 9: end for\n10: end for\nGenerally, step 4 of this algorithm with not be computationally tractable even when solving for µM is possible for a given M ."
    } ],
    "references" : [ {
      "title" : "Optimal adaptive policies for Markov decision processes",
      "author" : [ "Apostolos Burnetas", "Michael Katehakis" ],
      "venue" : "Mathematics of Operations Research,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 1997
    }, {
      "title" : "Asymptotically efficient adaptive allocation rules",
      "author" : [ "Tze Leung Lai", "Herbert Robbins" ],
      "venue" : "Advances in applied mathematics,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 1985
    }, {
      "title" : "Reinforcement learning: A survey",
      "author" : [ "Leslie Pack Kaelbling", "Michael L Littman", "Andrew W Moore" ],
      "venue" : "arXiv preprint cs/9605103,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 1996
    }, {
      "title" : "A theory of the learnable",
      "author" : [ "Leslie G Valiant" ],
      "venue" : "Communications of the ACM,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 1984
    }, {
      "title" : "Learning quickly when irrelevant attributes abound: A new linear-threshold algorithm",
      "author" : [ "Nick Littlestone" ],
      "venue" : "Machine learning,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 1988
    }, {
      "title" : "Knows what it knows: a framework for self-aware learning",
      "author" : [ "Lihong Li", "Michael L Littman", "Thomas J Walsh", "Alexander L Strehl" ],
      "venue" : "Machine learning,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2011
    }, {
      "title" : "Near-optimal regret bounds for reinforcement learning",
      "author" : [ "Thomas Jaksch", "Ronald Ortner", "Peter Auer" ],
      "venue" : "The Journal of Machine Learning Research,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2010
    }, {
      "title" : "Near-optimal reinforcement learning in polynomial time",
      "author" : [ "Michael Kearns", "Satinder Singh" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2002
    }, {
      "title" : "R-max-a general polynomial time algorithm for near-optimal reinforcement learning",
      "author" : [ "Ronen Brafman", "Moshe Tennenholtz" ],
      "venue" : "The Journal of Machine Learning Research,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2003
    }, {
      "title" : "Pac modelfree reinforcement learning",
      "author" : [ "Alexander Strehl", "Lihong Li", "Eric Wiewiora", "John Langford", "Michael Littman" ],
      "venue" : "In Proceedings of the 23rd international conference on Machine learning,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2006
    }, {
      "title" : "More) Efficient Reinforcement Learning via Posterior Sampling",
      "author" : [ "Ian Osband", "Daniel Russo", "Benjamin Van Roy" ],
      "venue" : "Advances in Neural Information Processing Systems,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2013
    }, {
      "title" : "Using confidence bounds for exploitation-exploration trade-offs",
      "author" : [ "Peter Auer" ],
      "venue" : "The Journal of Machine Learning Research,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2003
    }, {
      "title" : "Learning to optimize via posterior sampling",
      "author" : [ "Daniel Russo", "Benjamin Van Roy" ],
      "venue" : "CoRR, abs/1301.2609,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2013
    }, {
      "title" : "Near-optimal regret bounds for reinforcement learning in factored MDPs",
      "author" : [ "Ian Osband", "Benjamin Van Roy" ],
      "venue" : "arXiv preprint arXiv:1403.3741,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2014
    }, {
      "title" : "Improved algorithms for linear stochastic bandits",
      "author" : [ "Yassin Abbasi-Yadkori", "Dávid Pál", "Csaba Szepesvári" ],
      "venue" : "Advances in Neural Information Processing Systems,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2011
    }, {
      "title" : "Efficient reinforcement learning for high dimensional linear quadratic systems",
      "author" : [ "Morteza Ibrahimi", "Adel Javanmard", "Benjamin Van Roy" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2012
    }, {
      "title" : "Online regret bounds for undiscounted continuous reinforcement learning",
      "author" : [ "Ronald Ortner", "Daniil Ryabko" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2012
    }, {
      "title" : "Eluder dimension and the sample complexity of optimistic exploration",
      "author" : [ "Daniel Russo", "Benjamin Van Roy" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2013
    }, {
      "title" : "On the likelihood that one unknown probability exceeds another in view of the evidence of two samples",
      "author" : [ "William Thompson" ],
      "venue" : null,
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 1933
    }, {
      "title" : "A Bayesian framework for reinforcement learning",
      "author" : [ "Malcom Strens" ],
      "venue" : "In Proceedings of the 17th International Conference on Machine Learning,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2000
    }, {
      "title" : "Dynamic programming and optimal control, volume 1",
      "author" : [ "Dimitri Bertsekas" ],
      "venue" : "Athena Scientific Belmont, MA,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 1995
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "1 Introduction We consider the reinforcement learning (RL) problem of optimizing rewards in an unknown Markov decision process (MDP) [1].",
      "startOffset" : 133,
      "endOffset" : 136
    }, {
      "referenceID" : 1,
      "context" : "Through exploring poorlyunderstood policies, an agent may improve its understanding of its environment but it may improve its short term rewards by exploiting its existing knowledge [2, 3].",
      "startOffset" : 182,
      "endOffset" : 188
    }, {
      "referenceID" : 2,
      "context" : "Through exploring poorlyunderstood policies, an agent may improve its understanding of its environment but it may improve its short term rewards by exploiting its existing knowledge [2, 3].",
      "startOffset" : 182,
      "endOffset" : 188
    }, {
      "referenceID" : 3,
      "context" : "Some of the most common include PAC (Probably Approximately Correct) [4], MB (Mistake Bound) [5], KWIK (Knows What It Knows) [6] and regret [7].",
      "startOffset" : 69,
      "endOffset" : 72
    }, {
      "referenceID" : 4,
      "context" : "Some of the most common include PAC (Probably Approximately Correct) [4], MB (Mistake Bound) [5], KWIK (Knows What It Knows) [6] and regret [7].",
      "startOffset" : 93,
      "endOffset" : 96
    }, {
      "referenceID" : 5,
      "context" : "Some of the most common include PAC (Probably Approximately Correct) [4], MB (Mistake Bound) [5], KWIK (Knows What It Knows) [6] and regret [7].",
      "startOffset" : 125,
      "endOffset" : 128
    }, {
      "referenceID" : 6,
      "context" : "Some of the most common include PAC (Probably Approximately Correct) [4], MB (Mistake Bound) [5], KWIK (Knows What It Knows) [6] and regret [7].",
      "startOffset" : 140,
      "endOffset" : 143
    }, {
      "referenceID" : 5,
      "context" : "[6].",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 7,
      "context" : "Algorithms of both type have been developed to provide PAC-MDP bounds polynomial in the number of states S and actions A [8, 9, 10].",
      "startOffset" : 121,
      "endOffset" : 131
    }, {
      "referenceID" : 8,
      "context" : "Algorithms of both type have been developed to provide PAC-MDP bounds polynomial in the number of states S and actions A [8, 9, 10].",
      "startOffset" : 121,
      "endOffset" : 131
    }, {
      "referenceID" : 9,
      "context" : "Algorithms of both type have been developed to provide PAC-MDP bounds polynomial in the number of states S and actions A [8, 9, 10].",
      "startOffset" : 121,
      "endOffset" : 131
    }, {
      "referenceID" : 6,
      "context" : "The only near-optimal regret bounds to time T of Õ(S √ AT ) have only been attained by modelbased algorithms [7, 11].",
      "startOffset" : 109,
      "endOffset" : 116
    }, {
      "referenceID" : 10,
      "context" : "The only near-optimal regret bounds to time T of Õ(S √ AT ) have only been attained by modelbased algorithms [7, 11].",
      "startOffset" : 109,
      "endOffset" : 116
    }, {
      "referenceID" : 6,
      "context" : "Worse still, there is a lower bound Ω( √ SAT ) for the expected regret in an arbitrary MDP [7].",
      "startOffset" : 91,
      "endOffset" : 94
    }, {
      "referenceID" : 11,
      "context" : "parameterization is the degenerate MDP with no transitions, the mutli-armed bandit [12, 13, 14].",
      "startOffset" : 83,
      "endOffset" : 95
    }, {
      "referenceID" : 12,
      "context" : "parameterization is the degenerate MDP with no transitions, the mutli-armed bandit [12, 13, 14].",
      "startOffset" : 83,
      "endOffset" : 95
    }, {
      "referenceID" : 14,
      "context" : "Papers here establigh regret bounds Õ( √ T ) for linear quadratic control [16], but with constants that grow exponentially with dimension.",
      "startOffset" : 74,
      "endOffset" : 78
    }, {
      "referenceID" : 15,
      "context" : "Later works remove this exponential dependence, but only under significant sparsity assumptions [17].",
      "startOffset" : 96,
      "endOffset" : 100
    }, {
      "referenceID" : 16,
      "context" : "The most general previous analysis considers rewards and transitions that are α-Hölder in a d-dimensional space to establish regret bounds Õ(T ) [18].",
      "startOffset" : 145,
      "endOffset" : 149
    }, {
      "referenceID" : 18,
      "context" : "In this paper we analyse the simple and intuitive algorithm posterior sampling for reinforcement learning (PSRL) [20, 21, 11].",
      "startOffset" : 113,
      "endOffset" : 125
    }, {
      "referenceID" : 19,
      "context" : "In this paper we analyse the simple and intuitive algorithm posterior sampling for reinforcement learning (PSRL) [20, 21, 11].",
      "startOffset" : 113,
      "endOffset" : 125
    }, {
      "referenceID" : 10,
      "context" : "In this paper we analyse the simple and intuitive algorithm posterior sampling for reinforcement learning (PSRL) [20, 21, 11].",
      "startOffset" : 113,
      "endOffset" : 125
    }, {
      "referenceID" : 19,
      "context" : "PSRL was initially introduced as a heuristic method [21], but has since been shown to satisfy state of the art regret bounds in finite MDPs [11] and also exploit the structure of factored MDPs [15].",
      "startOffset" : 52,
      "endOffset" : 56
    }, {
      "referenceID" : 10,
      "context" : "PSRL was initially introduced as a heuristic method [21], but has since been shown to satisfy state of the art regret bounds in finite MDPs [11] and also exploit the structure of factored MDPs [15].",
      "startOffset" : 140,
      "endOffset" : 144
    }, {
      "referenceID" : 13,
      "context" : "PSRL was initially introduced as a heuristic method [21], but has since been shown to satisfy state of the art regret bounds in finite MDPs [11] and also exploit the structure of factored MDPs [15].",
      "startOffset" : 193,
      "endOffset" : 197
    }, {
      "referenceID" : 17,
      "context" : "To characterize the complexity of this learning problem we extend the definition of the eluder dimension, previously introduced for bandits [19], to capture the complexity of the reinforcement learning problem.",
      "startOffset" : 140,
      "endOffset" : 144
    }, {
      "referenceID" : 0,
      "context" : "However, we can represent the discrete state as a probability vector st ∈ S = [0, 1] ⊂ R with a single active component equal to 1 and 0 otherwise.",
      "startOffset" : 78,
      "endOffset" : 84
    }, {
      "referenceID" : 18,
      "context" : "3 Main results We now review the algorithm PSRL, an adaptation of Thompson sampling [20] to reinforcement learning.",
      "startOffset" : 84,
      "endOffset" : 88
    }, {
      "referenceID" : 19,
      "context" : "PSRL was first proposed by Strens [21] and later was shown to satisfy efficient regret bounds in finite MDPs [11].",
      "startOffset" : 34,
      "endOffset" : 38
    }, {
      "referenceID" : 10,
      "context" : "PSRL was first proposed by Strens [21] and later was shown to satisfy efficient regret bounds in finite MDPs [11].",
      "startOffset" : 109,
      "endOffset" : 113
    }, {
      "referenceID" : 20,
      "context" : "(6) Here λ1 is the largest eigenvalue of the matrix Q given as the solution of the Ricatti equations for the unconstrained optimal value function V (s) = −sTQs [22].",
      "startOffset" : 160,
      "endOffset" : 164
    }, {
      "referenceID" : 12,
      "context" : "Algorithms based upon posterior sampling are intimately linked to those based upon optimism [14].",
      "startOffset" : 92,
      "endOffset" : 96
    }, {
      "referenceID" : 10,
      "context" : "Further, we believe that PSRL will generally be more statistically efficient than an optimistic variant with similar regret bounds since the algorithm is not affected by loose analysis [11].",
      "startOffset" : 185,
      "endOffset" : 189
    }, {
      "referenceID" : 17,
      "context" : "4 Eluder dimension To quantify the complexity of learning in a potentially infinite MDP, we extend the existing notion of eluder dimension for real-valued functions [19] to vector-valued functions.",
      "startOffset" : 165,
      "endOffset" : 169
    }, {
      "referenceID" : 17,
      "context" : "In fact, a family learnable in constant time for supervised learning may require arbitrarily long to learn to control well [19].",
      "startOffset" : 123,
      "endOffset" : 127
    }, {
      "referenceID" : 12,
      "context" : "We now provide bounds on the eluder dimension for some common function classes in a similar approach to earlier work for real-valued functions [14].",
      "startOffset" : 143,
      "endOffset" : 147
    }, {
      "referenceID" : 6,
      "context" : "5 Confidence sets We now follow the standard argument that relates the regret of an optimistic or posterior sampling algorithm to the construction of confidence sets [7, 11].",
      "startOffset" : 166,
      "endOffset" : 173
    }, {
      "referenceID" : 10,
      "context" : "5 Confidence sets We now follow the standard argument that relates the regret of an optimistic or posterior sampling algorithm to the construction of confidence sets [7, 11].",
      "startOffset" : 166,
      "endOffset" : 173
    }, {
      "referenceID" : 12,
      "context" : "The argument is essentially the same as Proposition 6 in [14], but extends statements about R to vector-valued functions.",
      "startOffset" : 57,
      "endOffset" : 61
    }, {
      "referenceID" : 12,
      "context" : "This result follows from proposition 8 in [14] but with a small adjustment to account for episodes.",
      "startOffset" : 42,
      "endOffset" : 46
    }, {
      "referenceID" : 12,
      "context" : "Once again we follow the analysis of Russo [14] and strealine notation by letting wt = wFtk (xtk+i) abd d = dimE(F , T ).",
      "startOffset" : 43,
      "endOffset" : 47
    }, {
      "referenceID" : 10,
      "context" : "6 Analysis We will now show reproduce the decomposition of expected regret in terms of the Bellman error [11].",
      "startOffset" : 105,
      "endOffset" : 109
    }, {
      "referenceID" : 10,
      "context" : "Through repeated application of the dynamic programming operator and taking expectation of martingale differences we can mirror earlier analysis [11] to equate expected regret with the cumulative Bellman error: E[∆k] = τ",
      "startOffset" : 145,
      "endOffset" : 149
    } ],
    "year" : 2014,
    "abstractText" : "We consider the problem of learning to optimize an unknown Markov decision process (MDP). We show that, if the MDP can be parameterized within some known function class, we can obtain regret bounds that scale with the dimensionality, rather than cardinality, of the system. We characterize this dependence explicitly as Õ( √ dKdET ) where T is time elapsed, dK is the Kolmogorov dimension and dE is the eluder dimension. These represent the first unified regret bounds for model-based reinforcement learning and provide state of the art guarantees in several important settings. Moreover, we present a simple and computationally efficient algorithm posterior sampling for reinforcement learning (PSRL) that satisfies these bounds.",
    "creator" : "LaTeX with hyperref package"
  }
}