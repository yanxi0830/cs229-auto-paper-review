{
  "name" : "1307.5870.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Square Deal: Lower Bounds and Improved Relaxations for Tensor Recovery",
    "authors" : [ "Cun Mu", "Bo Huang", "John Wright", "Donald Goldfarb" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Tensors arise naturally in problems where the goal is to estimate a multi-dimensional object whose entries are indexed by several continuous or discrete variables. For example, a video is indexed by two spatial variables and one temporal variable; a hyperspectral datacube is indexed by two spatial variables and a frequency/wavelength variable. While tensors often reside in extremely highdimensional data spaces, in many applications, the tensor of interest is low-rank, or approximately so [KB09], and hence has much lower-dimensional structure. The general problem of estimating a low-rank tensor has applications in many different areas, both theoretical and applied: e.g., estimating latent variable graphical models [AGH+12], classifying audio [MSS06], mining text [CC12], processing radar signals [DN10], to name a few.\nIn this paper, we consider the problem of recovering aK-way tensor X ∈ Rn1×n2×···nK from linear measurements z = G[X ] ∈ Rm. Typically, m N = ∏K i=1 ni, and so the problem of recovering X from z is ill-posed. In the past few years, tremendous progress has been made in understanding how to exploit structural assumptions such as sparsity for vectors [CRT] or low-rankness for matrices [RFP10] to develop computationally tractable methods for tackling ill-posed inverse problems. In many situations, convex optimization can estimate a structured object from near-minimal sets of\nar X\niv :1\n30 7.\n58 70\nv1 [\nst at\n.M L\n] 2\nobservations [NRWY12, CRPW12, ALMT13]. For example, an n × n matrix of rank r can, with high probability, be exactly recovered from Cnr generic linear measurements, by minimizing the nuclear norm ‖X‖∗ = ∑ i σi(X). Since a generic rank r matrix has r(2n − r) degrees of freedom, this is nearly optimal. In contrast, the correct generalization of these results to low-rank tensors is not obvious. The numerical algebra of tensors is fraught with hardness results [HL09]. For example, even computing a tensor’s (CP) rank,\nrankcp(X ) = min { r | X =\nr∑ i=1 a (i) 1 ◦ a (i) 2 ◦ · · · ◦ a (i) K\n} , (1.1)\nis NP-hard in general. The nuclear norm of a tensor is also intractable, and so we cannot simply follow the formula that has worked for vectors and matrices.\nWith an eye towards numerical computation, many researchers have studied how to estimate or recover tensors of small Tucker rank [Tuc66]. The Tucker rank of a K-way tensor X is a Kdimensional vector whose i-th entry is the (matrix) rank of the mode-i unfolding X (i) of X :\nranktc(X ) := ( rank(X (1)), rank(X (2)), · · · , rank(X (K)) ) . (1.2)\nHere, the matrix X (i) ∈ Rni× ∏\nj 6=i nj is obtained by concatenating all the mode-i fibers of X as column vectors. Each mode-i fiber is an ni-dimensional vector obtained by fixing every index of X but the i-th one. The Tucker rank of X can be computed efficiently using the (matrix) singular value decomposition. For this reason, we focus on tensors of low Tucker rank. However, we will see that our proposed regularization strategy also automatically adapts to recover tensors of low CP rank, with some reduction in the required number of measurements.\nThe definition (1.2) suggests a very natural, tractable convex approach to recovering low-rank tensors: seek the X that minimizes ∑ i λi ∥∥X (i)∥∥∗ out of all X satisfying G[X ] = z. We will refer to this as the sum-of-nuclear-norms (SNN) model. Originally, proposed in [LMWY09], this approach has been widely studied [GRY11, SDS10, THK10, TSHK11, STDLS13] and applied to various datasets in imaging [SVdPDMS11, SHKM13, KS13, LL10, GEK13, LYZY10].\nPerhaps surprisingly, we show that this natural approach can be substantially suboptimal, and introduce a simple new convex regularizer with provably better performance. For ease of stating results, suppose that n1 = · · · = nK = n, and ranktc(X ) (r, r, · · · , r). Let Tr denote the set of all such tensors. We will consider the problem of estimating an element X 0 of Tr from Gaussian measurements G (i.e., zi = 〈Gi,X 〉, where Gi has i.i.d. standard normal entries). To describe a generic tensor in Tr, we need at most r\nK + rnK parameters. Section 2 shows that a certain nonconvex strategy can recover all X ∈ Tr exactly when m > (2r)K + 2nrK. In contrast, the best known theoretical guarantee for SNN minimization, due to Tomioka et. al. [TSHK11], shows that X 0 ∈ Tr can be recovered (or accurately estimated) from Gaussian measurements G, provided m = Ω(rnK−1). In Section 3, we prove that this number of measurements is also necessary: accurate recovery is unlikely unless m = Ω(rnK−1). Thus, there is a substantial gap between an ideal nonconvex approach and the best known tractable surrogate. In Section 4, we introduce a simple alternative, which we call the square norm model, which reduces the required number of measurements to O(rbK/2cndK/2e). For K > 3, this improves by a multiplicative factor polynomial in n.\nOur theoretical results pertain to Gaussian operators G. The motivation for studying Gaussian measurements is twofold. First, Gaussian measurements may be of interest for compressed sensing recovery [Don06], either directly as a measurement strategy, or indirectly due to universality phenomena [DT09, BLM12]. Second, the available theoretical tools for Gaussian measurements are very sharp, allowing us to rigorously investigate the efficacy of various regularization schemes, and prove both upper and lower bonds on the number of observations required. In simulation, our qualitative conclusions carry over to more realistic measurement models, such as random subsampling [LMWY09] (see Section 5). We expect our results to be of interest for a wide range of problems in tensor completion [LMWY09], robust tensor recovery / decomposition [LYZY10, GQ12] and sensing.\nOur technical methodology draws on, and enriches, the literature on general structured model recovery. The surprisingly poor behavior of the SNN model is an example of a phenomenon first discovered by Oymak et. al. [OJF+12]: for recovering objects with multiple structures, a combination of structure-inducing norms is often not significantly more powerful than the best individual structure-inducing norm. Our lower bound for the SNN model follows from a general result of this nature, which we prove using the geometric framework of [ALMT13]. Compared to [OJF+12], our result pertains to a more general family of regularizers, and gives sharper constants."
    }, {
      "heading" : "2 Bounds for Non-Convex Recovery",
      "text" : "In this section, we introduce a non-convex model for tensor recovery, and show that it recovers low-rank tensors from near-minimal numbers of measurements. While our nonconvex formulation is computationally intractable, it gives a baseline for evaluating tractable (convex) approaches.\nFor a tensor of low Tucker rank, the matrix unfolding along each mode is low-rank. Suppose we observe G[X 0] ∈ Rm. We would like to attempt to recover X 0 by minimizing some combination of the ranks of the unfoldings, over all tensors X that are consistent with our observations. This suggests a vector optimization problem (e.g. [BV04] Chapter 4.7):\nminimize(w.r.t. RK+ ) ranktc(X ) subject to G[X ] = G[X 0]. (2.1)\nIn vector optimization, a feasible point is called Pareto optimal if no other feasible point dominates it in every criterion. In a similar vein, we say that (2.1) recovers X 0 if there does not exist any other tensor X that is consistent with the observations and has no larger rank along each mode:\nDefinition 1. We call X 0 recoverable by (2.1) if the set\n{X ′ 6= X 0 | G[X ′] = G[X 0], ranktc(X ′) RK+ ranktc(X 0)} = ∅.\nThis is equivalent to saying that X 0 is the unique optimal solution to the scalar optimization:\nminimizeX max i { rank(X (i)) rank(X 0(i)) } subject to G[X ] = G[X 0]. (2.2)\nThe problems (2.1)-(2.2) are not tractable. However, they do serve as a baseline for understanding how many generic measurements are required to recover X 0. The recovery performance of program (2.1) depends heavily on the properties of G. Suppose (2.1) fails to recover X 0 ∈ Tr. Then there exists another X ′ ∈ Tr such that G[X ′] = G[X 0]. So, to guarantee that (2.1) recovers any X 0 ∈ Tr, a necessary and sufficient condition is that G is injective on Tr, which can be implied by the condition\nnull(G) ∩ T2r = {0}. Consequently, if null(G) ∩ T2r = {0}, (2.1) will recover any X 0 ∈ Tr. We expect this to occur when the number of measurements significantly exceeds the number of intrinsic degrees of freedom of a generic element of Tr, which is O(r\nK + nrK). The following theorem shows that when m is approximately twice this number, with probability one, G is injective on Tr:\nTheorem 1. Whenever m ≥ (2r)K + 2nrK + 1, with probability one, null(G) ∩ T2r = {0}, and hence (2.1) recovers every X 0 ∈ Tr.\nThe proof of Theorem 1 follows from a covering argument, which we establish in several steps. Let\nS2r = {D | D ∈ T2r, ‖D‖F = 1} . (2.3)\nThe following lemma shows that the required number of measurements can be bounded in terms of the exponent of the covering number for S2r, which can be considered as a proxy for dimensionality:\nLemma 1. Suppose that the covering number for S2r with respect to Frobenius norm, satisfies\nN(S2r, ‖·‖F , ε) ≤ (β/ε) d , (2.4)\nfor some integer d and scalar β that does not depend on ε. Then if m ≥ d+ 1, with probability one null (G) ∩S2r = ∅, which implies that null (G) ∩ T2r = {0}.\nIt just remains to find the covering number of S2r. We use the following lemma, which uses the triangle inequality to control the effect of perturbations in the factors of the Tucker decomposition\n[[C;U1,U2, · · · ,UK ]] := C ×1 U1 ×2 U2 ×3 · · · ×K UK , (2.5)\nwhere the mode-i (matrix) product of tensor A with matrix B of compatible size, denoted as A×iB, outputs a tensor C such that C(i) = BA(i).\nLemma 2. Let C,C′ ∈ Rr1,...,rK , and U1,U ′1 ∈ Rn1×r1 , . . . ,UK ,U ′ K ∈ RnK×rK with U ∗ iU i = U ′i ∗ U ′i = I, and ‖C‖F = ∥∥C′∥∥ F = 1. Then\n∥∥[[C;U1, . . . ,UK ]]− [[C′;U ′1, . . . ,U ′K ]]∥∥F ≤ ∥∥C − C′∥∥F + K∑ i=1 ∥∥U i −U ′i∥∥. (2.6) Using this result, we construct an ε-net for S2r by building ε/(K + 1)-nets for each of the K + 1\nfactors C, (U i). The total size of the resulting ε net is bounded by the following lemma:\nLemma 3. N(S2r, ‖·‖F , ε) ≤ (3(K + 1)/ε) (2r)K+2nrK\nWith these observations in hand, Theorem 1 follows immediately."
    }, {
      "heading" : "3 Convexification: Sum of Nuclear Norms?",
      "text" : "Since the nonconvex problem (2.1) is NP-hard for general G, it is tempting to seek a convex surrogate. In matrix recovery problems, the nuclear norm is often an excellent convex surrogate for the rank\n[Faz02, RFP10, Gro11]. It seems natural, then, to replace the ranks in (2.1) with nuclear norms, and solve\nminimize h(X ) := (∥∥X (1)∥∥∗ ,∥∥X (2)∥∥∗ , · · · ,∥∥X (K)∥∥∗) subject to G[X ] = G[X 0]. (3.1)\nSince ∥∥X (i)∥∥∗ is a convex function, the set H := ⋃X :G[X ]=G[X 0] {Y | h(Y) h(X )} is convex. For any pareto optimal point X̂ , there is a hyperplane supporting H passing through h(X̂ ), with normal vector λ ≥ 0. Therefore, X̂ is an optimal solution to the following scalar optimization:\nminimize K∑ i=1 λi‖X (i)‖∗ subject to G[X ] = G[X 0]. (3.2)\nThe optimization (3.2) was first introduced by [LMWY09] and has been used successfully in applications in imaging [SVdPDMS11, SHKM13, KS13, LL10, GEK13, LYZY10]. Similar convex relaxations have been considered in a number of theoretical and algorithmic works [GRY11, SDS10, THK10, TSHK11, STDLS13]. It is not too surprising, then, that (3.2) provably recovers the underlying tensor X 0, when the number of measurements m is sufficiently large. For example, the following is a (simplified) corollary of results of Tomioka et. al. [THK10]:1\nCorollary 2 (of [THK10], Theorem 3). Suppose that X 0 has Tucker rank (r, . . . , r), and m ≥ CrnK−1. With high probability, X 0 is an optimal solution to (3.2), with each λi = 1. Here, C is numerical.\nThis result shows that there is a range in which (3.2) succeeds: loosely, when we undersample by at most a factor of m/N ∼ r/n. However, the number of observations m ∼ rnK−1 is significantly larger than the number of degrees of freedom in X 0, which is on the order of rK + nrK. Is it possible to prove a better bound for this model? Unfortunately, we show that in general O(rnK−1) measurements are also necessary for reliable recovery using (3.2):\nTheorem 3. Let X 0 ∈ Tr be nonzero. Set κ = mini {∥∥(X 0)(i)∥∥2∗ / ‖X 0‖2F} × nK−1. Then if the number of measurements m ≤ κ− 1, X 0 is not the unique solution to (3.2), with probability at least 1− 4 exp(− (κ−m−1) 2\n16(κ−1) ). Moreover, there exists X 0 ∈ Tr for which κ = rn K−1.\nThis implies that Corollary 2 (and other results of [THK10]) is essentially tight. Unfortunately, it has negative implications for the efficacy of the sum of nuclear norms in (3.2): although a generic element X 0 of Tr can be described using at most rK + nrK real numbers, we require Ω(rnK−1) observations to recover it using (3.2).\nRecovering objects with multiple structures. The poor behavior of (3.2) is actually an instance of a much more general phenomenon, first discovered by Oymak et. al. [OJF+12]. Our target tensor X 0 has multiple low-dimensional structures simultaneously: it is low-rank along each of the K modes. In practical applications, many other such simultaneously structured objects may be of interest – for example, matrices that are simultaneously sparse and low-rank [RSV12, OJF+12]. To recover such a simultaneously structured object, it is tempting to build a convex relaxation by\n1Tomioka et. al. also show noise stability when m = Ω(rnK−1) and give extensions to the case where the ranktc (X 0) = (r1, . . . , rK) differs from mode to mode.\ncombining the convex relaxations for each of the individual structures. In the tensor case, this yields (3.2). Surprisingly, this combination is often not significantly more powerful than the best single regularizer [OJF+12]. We obtain Theorem 3 as a consquence of a new, general result of this nature, using a geometric framework introduced in [ALMT13]. Compared to the proof strategy in [OJF+12], this approach has a clearer geometric intuition, covers a more general class of regularizers and yields sharper bounds.\nConsider a signal x0 ∈ Rn having K low-dimensional structures simultaneously (e.g. sparsity, low-rank, etc.). Let ‖·‖(i) be the penalty norms corresponding to the i-th structure (e.g. `1, nuclear norm). Consider the composite norm optimization\nmin x∈Rn f(x) := λ1 ‖x‖(1) + λ2 ‖x‖(2) + · · ·+ λK ‖x‖(K) subject to G[x] = G[x0], (3.3)\nwhere G[·] is a Gaussian measurement operator, and λ > 0. Is x0 the unique optimal solution to (3.3)? Recall that the descent cone of a function f at a point x0 is defined as\nC(f,x0) = cone {v | f(x0 + v) ≤ f(x0)} , (3.4)\nwhich, in short, will be denoted as C. Then x0 is the unique optimal solution if and only if null(G)∩ C = {0}. Conversely, recovery fails if null(G) has nontrivial intersection with C. If G is a Gaussian operator, null(G) is a uniformly oriented random subspace of dimension n−m. This random subspace is more likely to have nontrivial intersection with C if C is “large,” in a sense we will make precise. The polar of C is Co = cone ( ∂f(x0) ) . Because polarity reverses inclusion, we expect that C will be “large” whenever Co is “small”. Figure 1 visualizes this geometry. To control the size of Co, first consider a single norm ‖·‖ , with dual norm ‖·‖ ∗ . Suppose that ‖·‖ is L-Lipschitz: ‖x‖ ≤ L ‖x‖2 for all x. Then ‖x‖2 ≤ L ‖x‖ ∗ for all x as well. Noting that\n∂ ‖·‖ (x) = { v | 〈v,x〉 = ‖x‖ , ‖v‖ ∗ ≤ 1 } ,\nfor any v ∈ ∂ ‖·‖ (x0), we have\n〈v,x0〉 ‖v‖2 ‖x0‖2 ≥ ‖x0‖ L ‖v‖∗ ‖x0‖2 ≥ ‖x0‖ L ‖x0‖2 . (3.5)\nA more geometric way of summarizing this is as follows: for x 6= 0, let\ncirc(x, θ) = {z | ∠(z,x) ≤ θ} , (3.6)\nand denote the circular cone with axis x and angle θ. Then if x0 6= 0, and θ = cos−1(‖x0‖ /L ‖x0‖2),\n∂ ‖·‖ (x0) ⊆ circ (x0, θ) . (3.7)\nTable 1 describes the angle parameters θ for various structure inducing norms. Notice that in general, more complicated x0 leads to smaller angles θ. For example, if x0 is a k-sparse vectors with entries all of the same magnitude, and ‖·‖ the `1 norm, cos2 θ = k/n. As x0 becomes more dense, ∂ ‖·‖ is contained in smaller and smaller circular cones.\nFor f = ∑ i λi ‖·‖(i), notice that every element of ∂f(x0) is a conic combination of elements of the ∂ ‖·‖(i) (x0). Since each of the ∂ ‖·‖(i) (x0) is contained in a circular cone with axis x0, ∂f(x0) is also contained in a circular cone:\nLemma 4. Suppose that ‖·‖(i) is Li-Lipschitz. For x0 6= 0, set θi = cos−1 ( ‖x0‖(i) /L ‖x0‖2 ) . Then ∂f(x0) ⊆ circ ( x0, max\ni=1...K θi\n) . (3.8)\nSo, the subdifferential of our combined regularizer f is contained in a circular cone whose angle is given by the largest of the θi.\nHow does this behavior affect the recoverability of x0 via (3.3)? The informal reasoning above suggests that as θ becomes smaller, the descent cone C becomes larger, and we require more measurements to recover x0. This can be made precise using an elegant framework introduced by Amelunxen et. al. [ALMT13]. They define the statistical dimension of the convex cone C to be the expected norm of the projection of a standard Gaussian vector onto C:\nδ(C) .= Eg∼i.i.d.N (0,1) [ ‖PC(g)‖22 ] . (3.9)\nUsing tools from spherical integral geometry, [ALMT13] shows that for linear inverse problems with Gaussian measurements, a sharp phase transition in recoverability occurs around m = δ(C). We will need only one side of their result; for more details see [ALMT13]. We state a slight variant here:\nCorollary 4. Let G : Rn → Rm be a Gaussian operator, and C a convex cone. Then if m ≤ δ(C), P [ C ∩ null(G) = {0} ] ≤ 4 exp ( − (δ(C)−m) 2\n16δ(C)\n) . (3.10)\nTo apply this result to our problem, we lower bound the statistical dimension δ(C), of the descent cone C of f at x0. Using the Pythagorean theorem, monotonicity of δ(·), and Lemma 4, we calculate\nδ(C) = n− δ(Co) = n− δ (cone(∂f(x0))) ≥ n− δ(circ(x0,max i θi)).\nMoreover, using several results established in [ALMT13], we can show that δ(circ(x0, θ)) ≤ n sin2 θ+ 1, whose proof is included in the appendix. So, finally, δ(C) ≥ nmini cos2 θi− 1. Using Corollary 4, we obtain\nTheorem 5. Let x0 6= 0. Suppose that for each i, ‖·‖(i) is Li-Lipschitz. Set\nκi = n ‖x0‖2(i) L2i ‖x0‖ 2 2 = n cos2(θi),\nand κ = mini κi. Then if m ≤ κ− 1, P [x0 is the unique optimal solution to (3.3) ] ≤ 4 exp ( − (κ−m− 1) 2\n16 (κ− 1)\n) . (3.11)\nThus, for reliable recovery, the number of measurements needs to be at least proportional to κ.2 Notice that κ = mini κi is determined by only the best of the structures. Per Table 1, κi is often on the order of the number of degrees of freedom in a generic object of the i-th structure. For example, for a k-sparse vector whose nonzeros are all of the same magnitude, κ = k.\nTheorem 5 together with Table 1 leads us to the phenomenon that recently discovered by Oymak et. al. [OJF+12]: for recovering objects with multiple structures, a combination of structure-inducing norms tends to be not significantly more powerful than the best individual structure-inducing norm. As we demonstrate, this general behavior follows a clear geometric interpretation that the subdifferential of a norm at x0 is contained in a relatively small circular cone with central axis x0.\nWe can specialize Theorem 5 to low-rank tensors as follows: if X is a K-mode n × n × · · · × n tensor of Tucker rank (r, r, . . . , r), then for each i, ‖X‖(i) . = ∥∥X (i)∥∥∗ is L = √n-Lipschitz. Hence,\nκ = min i {∥∥X (i)∥∥2∗ / ‖X‖2F} nK−1. (3.12) 2E.g., if m = (κ− 1)/2, the probability of success is at most 4 exp(−(κ− 1)/64).\nThe term in brackets lies between 1 and r, inclusive. For example, if X = [[C,U1, . . . ,UK ]], with UTi U i = I and C supersymmetric (Ci1...iK = 1i1=i2=···=iK ), then this term is equal to r."
    }, {
      "heading" : "4 A Better Convexification: Square Norm",
      "text" : "The number of measurements promised by Corollary 2 and Theorem 3 is actually the same (up to constants) as the number of measurements required to recover a tensor X 0 which is low-rank along just one mode. Since matrix nuclear norm minimization correctly recovers a n1× n2 matrix of rank r when m ≥ Cr(n1 + n2) [CRPW12], solving\nminimize ‖X (1)‖∗ subject to G[X ] = G[X 0] (4.1)\nalso exactly recovers X 0 with high probability when m ≥ CrnK−1. This suggests a more mundane explanation for the difficulty with (3.2): the term rnK−1 comes from the need to reconstruct the right singular vectors of the n × nK−1 matrix X (1). If we had some way of matricizing a tensor that produced a more balanced (square) matrix and also preserved the low-rank property, we could substantially reduce this effect, and reduce the overall sampling requirement. In fact, this is possible when the order K of X 0 is four or larger.\nFor A ∈ Rm1×n1 , and integers m2 and n2 satisfying m1n1 = m2n2, the reshaping operator reshape(A,m2, n2) returns a m2 × n2 matrix whose elements are taken columnwise from A. This operator rearranges elements in A and leads to a matrix of different shape. In the following, we reshape matrix X (1) to a more square matrix while preserving the low-rank property. Let X ∈ Rn1×n2×···×nK . Select j ∈ [K] := {1, 2, · · · , K}. Then we define matrix X [j] as\nX [j] = reshape ( X (1), j∏ i=1 ni, K∏ i=j+1 ni ) .\nWe can view X [j] as a natural generalization of the standard tensor matricization. When j = 1, X [j] is nothing but X (1). However, when some j > 1 is selected, X [j] becomes a more balanced matrix. This reshaping also preserves some of the algebraic structures of X . In particular, we will see that if X is a low-rank tensor (in either the CP or Tucker sense), X [j] will be a low-rank matrix.\nLemma 5. (1) If X has CP decomposition X = ∑r i=1 λia (1) i ◦ a (2) i ◦ · · · ◦ a (K) i , then\nX [j] = r∑ i=1 λi(a (j) i ⊗ a (j−1) i ⊗ · · · ⊗ a (1) i ) ◦ (a (K) i ⊗ a (K−1) i · · · ⊗ a (j+1) i ). (4.2)\n(2) If X has Tucker decomposition X = C ×1 U1 ×2 U2 ×3 · · · ×K UK , then\nX [j] = (U j ⊗U j−1 ⊗ · · · ⊗U1)C[j] (UK ⊗UK−1 ⊗ · · · ⊗U j+1)∗. (4.3)\nUsing Lemma 5 and the fact that rank(A⊗B) = rank(A) rank(B), we obtain:\nLemma 6. Let ranktc (X ) = (r1, r2, · · · , rK), and rankcp (X ) = rcp. Then rank(X [j]) ≤ rcp, and rank(X [j]) ≤ min { ∏j i=1 ri, ∏K i=j+1 ri } .\nThus, X [j] is not only more balanced but also maintains the low-rank property of tensor X . In the following, we show how this new matricization can lead to better relaxations for tensor recovery. For ease of discussion, we assume X has the same length (say n) along each mode and has Tucker rank (r, r, · · · , r). We write X\n. = X [bK2 c] and call ‖X‖ := ‖X ‖? the square norm of tensor X .\nSince X is low-rank, we can attempt to recover X by solving\nminimize ‖X‖ subject to G[X ] = G[X 0]. (4.4)\nUsing Lemma 6 and Proposition 3.11 of [CRPW12], we can prove that this relaxation exactly recovers X 0, when the number of measurements is sufficienly large:\nTheorem 6. (1) If X 0 has CP rank r, using (4.4), m ≥ Crnd K 2 e is sufficient to recover X 0 with high probability. (2) If X 0 has Tucker rank (r, r, · · · , r), using (4.4), m ≥ Crb K 2 cnd K 2 e is sufficient to recover X 0 with high probability."
    }, {
      "heading" : "5 Simulation Results for Tensor Completion",
      "text" : "Tensor completion attempts to reconstruct the low-rank tensor X 0 based on observations over a subset of its entries Ω. By imposing appropriate incoherence conditions (and modifying slightly arguments in [Gro11]), it is possible to prove recovery guarantees for each of the following programs:\nminimize K∑ i=1 λi‖X (i)‖∗ subject to PΩ[X ] = PΩ[X 0]; (5.1)\nminimize ‖X‖ subject to PΩ[X ] = PΩ[X 0]. (5.2)\nUnlike the recovery problem under Gaussian random measurements, due to the lack of sharp upper bounds, we have no proof that our square norm formulation outperforms the SNN model here. However, our simulation result below will strongly suggest that (5.2) also performs much better than (5.1) for tensor completion case.\nOur experiment is set up as follows. We generate a 4-way tensor, X 0 ∈ Rn×n×n×n, as\nX 0 = [[C0;U1,U2,U3,U4]] = C0 ×1 U1 ×2 U2 ×3 U3 ×4 U4,\nwhere the core tensor C0 ∈ R1×1×2×2 has i.i.d. standard Gaussian entries, and matrices U1, U2 ∈ Rn×1 and matrices U3, U4 ∈ Rn×2, satisfying U∗iU i = I, are drawn uniformly at random (by the command orth(randn(·, ·)) in Matlab). The observed entries are chosen uniformly with ratio ρ. We increase the problem size n from 10 to 30 with increment 1, and the observation ratio ρ from 0.01 to 0.2 with increment 0.01. For each (ρ, n)-pair, we simulate 5 test instances and declare a trial to be successful if the recovered X ? satisfies ‖X ?−X 0‖F ‖X 0‖F\n≤ 10−2. The optimization problems are solved using efficient first-order methods. Since (5.2) is in the form of standard matrix completion, we use the Augmented Lagrangian Method (ALM) in [LCM10] to solve it. For the sum of nuclear norms minimization (5.1) with λi = 1, we implement the accelerated linearized Bregman algorithm [HMG13], of which we include a detailed discussion in the appendix. Figure 2 plots the fraction of correct recovery for each pair (black = 0% and white = 100%). Clearly much larger white region is produced by square norm, which empirically suggests that (5.2) outperforms (5.1) for tensor completion problem."
    }, {
      "heading" : "6 Conclusion",
      "text" : "In this paper, we establish several theoretical bounds for the problem of low-rank tensor recovery using random Gaussian measurements. For the nonconvex model (2.1), we show that ( (2r)K +\n2nrK + 1 )\nmeasurements are sufficient to recover any X 0 ∈ Tr almost surely. We highlight that though the nonconvex recovery program is NP-hard in general, it does serve a baseline for evaluating tractable (convex) approaches. For the conventional convex surrogate sum-of-nuclear-norms (SNN) model (3.2), we prove a necessary condition that Ω(rnK−1) Gaussian measurements are required for reliable recovery. This lower bound is derived from our general study on multi-structured object recovery, which may also be of interest for other problems. To narrow the gap between the non-convex model and the SNN model, we unfold the tensor into a more balanced matrix while preserving its lowrank property, leading to our square-norm model (4.4). We prove that O(rb K 2 cnd K 2 e) measurements are sufficient to recover a tensor X 0 ∈ Tr with high probability. Though the theoretical results only pertain to Gaussian measurements, our simulation result for tensor completion also suggests that square-norm model outperforms the SNN model.\nCompared with Ω(rnK−1) measurements required by the sum-of-nuclear-norms model, the sam-\nple complexity, O(rb K 2 cnd K 2 e), required by the square reshaping (4.4), is always within a constant of it, much better for small r and K ≥ 4 – e.g., by a multiplicative factor of nbK/2c−1 when r is a constant. This is a significant improvement. However, there are also two clear limitations. First,\nno improvement is obtained for the case K = 3. Second, the improved sample complexity in Theorem 6 is still suboptimal compared to the nonconvex model (2.1). Obtaining near-optimal convex relaxations remains an open problem for all K > 2.\nMore broadly speaking, to recover objects with multiple structures, regularizing with a combination of individual structure-inducing norms is proven to be substantially suboptimal (Theorem 5 and also [OJF+12]). The resulting sample requirements tend to be much larger than the intrinsic degrees of freedom of the low-dimensional manifold that the structured signal lies in. Our squarenorm model for the low-rank tensor recovery demonstrates the possibility that a better exploitation can significantly reduce this sample complexity. However, there are still no clear clues on how to intelligently utilize several simultaneous structures generally, and moreover how to design tractable method to recover multi-structured objects with near minimal number of measurements. These problems are definitely worth pursuing in future study."
    }, {
      "heading" : "A Proofs for Section 2",
      "text" : ""
    }, {
      "heading" : "Proof of Lemma 1.",
      "text" : "Proof. The arguments we used below are primarily adapted from [ENP11], where their interest is to establish the number of Gaussian measurements required to recover a low rank matrix by rank minimization.\nNotice that every D ∈ S2r, and every i, 〈Gi,D〉 is a standard Gaussian random variable, and so\n∀ t > 0, P [ |〈Gi,D〉| < t ] < 2t · 1√ 2π = t\n√ 2\nπ . (A.1)\nLet N be an ε-net for S2r in terms of ‖·‖F . Because the measurements are independent, for any fixed D̄ ∈ S2r, P [ ∥∥G[D̄]∥∥∞ < t ] < (t√2/π)m . (A.2)\nMoreover, for any D ∈ S2r, we have ‖G[D]‖∞ ≥ maxD̄∈N { ∥∥G[D̄]∥∥∞ − ‖G‖F→∞ ∥∥D̄ −D∥∥F } (A.3)\n≥ min D̄∈N {∥∥G[D̄]∥∥∞}− ε ‖G‖F→∞ . (A.4) Hence,\nP [\ninf D∈S2r\n‖G[D]‖∞ < ε log(1/ε) ]\n≤ P [\nmin D∈N\n‖G[D]‖∞ < 2ε log(1/ε) ] + P [ ‖G‖F→∞ > log(1/ε) ]\n≤ #N× ( 2 √ 2/π × ε log(1/ε) )m\n+ P [ ‖G‖F→∞ > log(1/ε) ] ≤ βd(2 √\n2/π)mεm−d log(1/ε)m + P [ ‖G‖F→∞ > log(1/ε) ] . (A.5)\nSince m ≥ d+ 1, (A.5) goes to zero as ε↘ 0. Hence, taking a sequence of decreasing ε, we can show that P [ infD∈S2r ‖G[D]‖∞ = 0 ] ≤ t for every positive t, establishing the result."
    }, {
      "heading" : "Proof of Lemma 2.",
      "text" : "Proof. This follows from the basic fact that for any tensor X and matrix U of compatible size,\n‖X ×k U‖F ≤ ‖U‖ ‖X‖F , (A.6)\nwhich can be established by direct calculation. Write∥∥[[C;U1, . . . ,UK ]]− [[C′;U ′1, . . . ,U ′K ]]∥∥F ≤\n∥∥[[C;U1, . . . ,UK ]]− [[C′;U1, . . . ,UK ]]∥∥F +\n∥∥∥∥∥ K∑ i=1 [[C′;U ′1, . . . ,U ′ i,U i+1, . . .Uk]]− [[C ′;U ′1, . . . ,U ′ i−1,U i, . . .UK ]] ∥∥∥∥∥ F\n≤ ∥∥C − C′∥∥\nF + K∑ i=1 ∥∥U i −U ′i∥∥, where the first inequality follows from triangle inequality and the second inequality follows from the fact that ‖C‖F = 1, ‖U j‖ = 1 and U ∗ iU i = I."
    }, {
      "heading" : "Proof of Lemma 3.",
      "text" : "Proof. The idea of this proof is to construct a net for each component of the Tucker decomposition and then combine those nets to form a compound net with the desired cardinality.\nDenote C = {C ∈ R2r×2r×···×2r | ‖C‖F = 1} and O = {U ∈ Rn×r | U ∗U = I}. Clearly, for any C ∈ C, ‖C‖F = 1, and for any U ∈ O, ‖U‖ = 1. Thus by Proposition 4 in [Ver07] and Lemma 5.2 in [Ver10], there exists an εK+1 -net C ′ covering C with respect to the Frobenius norm such that #C′ ≤ ( 3(K+1)ε ) (2r)K , and there exists an εK+1 -net O\n′ covering O with respect to the operator norm such that #O′ ≤ ( 3(K+1)ε ) 2nr. Construct\nS′2r = {[[C ′;U ′1, . . . ,U ′ K ]] | C ′ ∈ C′, U ′i ∈ O′}.\nClearly #S′2r ≤ ( 3(K+1) ε )(2r)K+2nrK . The rest is to show that S′2r is indeed an ε-net covering S2r with respect to the Frobenius norm. For any fixed D = [[C;U1, · · · ,UK ]] ∈ S2r where C ∈ C and U i ∈ O, by our constructions\nabove, there exist C′ ∈ C′ and U ′i ∈ O′ such that ∥∥C − C′∥∥ F ≤ 3(K+1)ε and ∥∥U i −U ′i∥∥ ≤ 3(K+1)ε . Then D′ = [[C′;U ′1, · · · ,U ′ K ]] ∈ S′2r is within ε-distance from D, since by the triangle inequality derived in Lemma 2, we have\n∥∥D −D′∥∥ F = ∥∥[[C;U1, . . . ,UK ]]− [[C′;U ′1, . . . ,U ′K ]]∥∥F ≤ ∥∥C − C′∥∥F + K∑\ni=1 ∥∥U i −U ′i∥∥ ≤ ε. This completes the proof."
    }, {
      "heading" : "B Proofs for Section 3",
      "text" : "Proof of the upper bound for the statistical dimension of circular cone: δ ( circ(x0, θ) ) ≤ n sin2 θ + 1.\nProof. Denote circ(en, θ) as circn(θ), where en is the nth standard basis for Rn. Since δ ( circ(x0, θ) ) =\nδ ( circ(en, θ) ) , it is sufficient to prove δ ( circn(θ) ) ≤ n sin2 θ + 1, which will be proved using several results established in [ALMT13]. Let us first consider the case where n is even. Define a discrete random variable V supporting on {0, 1, 2, · · · , n} with probability mass function P [V = k ] = vk. Here vk denotes the k-th intrinsic volumes of circn(θ), which has been specified in (C.2) of [ALMT13]:\nvk =\n{ 1 2 ( 1 2 (n−2) 1 2 (k−1) ) sink−1(θ) cosn−k−1(θ) for k = 1, 2, · · · , n− 1;\n0 for k = 0 and n.\nBy Proposition 5.11 in [ALMT13], we know that\nδ ( circn(θ) ) = E [V ] = n∑ k=1 P [V ≥ k ] .\nMoreover, by the interlacing result from Proposition 5.6 of [ALMT13], we have\nP [V ≥ 1 ] ≤ 2P [V = 1 ] + 2P [V = 3 ] + · · ·+ 2P [V = n− 1 ] , P [V ≥ 2 ] ≤ 2P [V = 1 ] + 2P [V = 3 ] + · · ·+ 2P [V = n− 1 ] ;\nP [V ≥ 3 ] ≤ 2P [V = 3 ] + 2P [V = 5 ] + · · ·+ 2P [V = n− 1 ] , P [V ≥ 5 ] ≤ 2P [V = 3 ] + 2P [V = 5 ] + · · ·+ 2P [V = n− 1 ] ;\n... ... ...\nP [V ≥ n− 1 ] ≤ 2P [V = n− 1 ] , P [V ≥ n ] ≤ 2P [V = n− 1 ] .\nSumming up the above inequalities, we have\nE [V ] = n∑ k=1 P [V ≥ k ]\n≤ ∑\nk=1,3,··· ,n−1\n2(k − 1)vk + ∑\nk=1,3,··· ,n−1\n2vk\n≤ (n− 2) sin2 θ + n∑ k=0 vk ≤ (n− 2) sin2 θ + 1 = n sin2 θ + (cos 2θ),\nwhere the second last inequality follows observations that ∑ k=1,3,··· ,n−1(k−1)vk = E [ Bin(n−22 , sin 2 θ) ]\nand ∑n k=0 vk ≥ ∑ k=1,3,··· ,n−1 2vk by the interlacing result in Proposition 5.6 of [ALMT13].\nSuppose n is odd. Since the intersection of circn+1(θ) with any n-dimensional linear subspace containing en+1 is an isometric image of circn(θ), by Proposition 4.1 in [ALMT13], we have\nδ(circn(θ)) = δ(circn(θ)× {0}) ≤ δ(circn+1(θ)) ≤ (n+ 1) sin2 θ + cos(2θ) ≤ n sin2 θ + cos2 θ.\nThus, taking both cases (d is even and d is odd) into consideration, we have δ ( circn(θ) ) ≤ n sin2 θ + 1."
    }, {
      "heading" : "Proof of Corollary 4.",
      "text" : "Proof. Denote λ = δ(C)−m. Then following Theorem 7.1 in [ALMT13], we have P [C ∩ null(G) = {0} ] ≤ exp ( − λ 2/8\nmin{δ(C), δ(C◦)}+ λ ) ≤ exp ( − λ 2/8\nδ(C) + λ ) ≤ 4 exp ( − (δ(C)−m) 2\n16δ(C)\n) ."
    }, {
      "heading" : "Proof of Theorem 5.",
      "text" : "Proof. Notice that for any fixed m > 0, the function f : t → 4 exp ( − (t−m) 2\n16t\n) is decreasing for\nt ≥ m. Then due to Corollary 4 and the fact that δ(C) ≥ κ− 1 ≥ m, we have\nP [x0 is the unique optimal solution to (3.3) ] = P [C ∩ null(G) = {0} ] ≤ 4 exp ( − (δ(C)−m) 2\n16δ(C) ) ≤ 4 exp ( − (κ−m− 1) 2\n16 (κ− 1)\n) ."
    }, {
      "heading" : "C Proofs for Section 4",
      "text" : ""
    }, {
      "heading" : "Proof of Lemma 5.",
      "text" : "Proof. (1) By the definition of X [j], it is sufficient to prove that the vectorization of the right hand side of (4.2) equals vec(X (1)).\nSince X = ∑r i=1 λia (1) i ◦ a (2) i ◦ · · · ◦ a (K) i , we have\nvec(X (1)) = vec ( r∑ i=1 λia (1) i ◦ (a (K) i ⊗ a (K−1) i ⊗ · · · ⊗ a (2) i ) )\n= r∑ i=1 λivec ( a (1) i ◦ (a (K) i ⊗ a (K−1) i ⊗ · · · ⊗ a (2) i ) )\n= r∑ i=1 λi(a (K) i ⊗ a (K−1) i ⊗ · · · ⊗ a (2) i ⊗ a (1) i ),\nwhere the last equality follows from the fact that vec(a ◦ b) = b⊗ a. Similarly, we can derive that the vectorization of the right hand side of (4.2),\nvec( r∑ i=1 λi(a (j) i ⊗ a (j−1) i ⊗ · · · ⊗ a (1) i ) ◦ (a (K) i ⊗ a (K−1) i · · · ⊗ a (j+1) i ))\n= r∑ i=1 λivec ( (a (j) i ⊗ a (j−1) i ⊗ · · · ⊗ a (1) i ) ◦ (a (K) i ⊗ a (K−1) i · · · ⊗ a (j+1) i ) ) =\nr∑ i=1 λi(a (K) i ⊗ a (K−1) i ⊗ · · · ⊗ a (2) i ⊗ a (1) i )\n= vec(X (1)).\nThus, equation (4.2) is valid.\n(2) The above argument can be easily adapted to prove the second claim. Since X = C ×1 U1 ×2 U2 ×3 · · · ×K UK , we have\nvec(X (1)) = vec ( U1 C(1) (UK ⊗UK−1 ⊗ · · · ⊗U2)∗ ) = (UK ⊗UK−1 ⊗ · · · ⊗U1) vec(C(1)),\nwhere the last equality follows from the fact that vec(ABC) = (C∗ ⊗A)vec(B). Similarly, we can derive that the vectorization of the right hand side of (4.3),\nvec ( (U j ⊗U j−1 ⊗ · · · ⊗U1) C[j] (UK ⊗UK−1 ⊗ · · · ⊗U j+1)∗ ) = (UK ⊗UK−1 ⊗ · · · ⊗U1) vec(C[j]) = (UK ⊗UK−1 ⊗ · · · ⊗U1) vec(C(1)) = vec(X (1)).\nThus, equation (4.3) is valid."
    }, {
      "heading" : "D Algorithms for Section 5",
      "text" : "In this section, we will discuss in detail our implementation of accelerated linearized Bregman algorithm for the following problem:\nminimizeX K∑ i=1 ‖X (i)‖∗ subject to PΩ[X ] = PΩ[X 0]. (D.1)\nBy introducing auxiliary variable W and splitting X into X 1, X 2, · · · , XK , it can be easily\nverified that problem (D.1) is equivalent to\nmin({X i},W) K∑ i=1 ‖(X i)(i)‖∗\ns.t. X i = W , i = 1, 2, · · · ,K, (D.2) PΩ[W ] = PΩ[X 0],\nwhose objective function is now separable. The accelerated linearized Bregman (ALB) algorithm, proposed in [HMG13], is an efficient firstorder method designed for solving convex optimization problems with nonsmooth objective functions and linear constraints. It has been successfully applied to solve `1 and nuclear norm minimization problems [HMG13]. The ALB algorithm solves nonsmooth problem by firstly smoothing the objective function (e.g. adding a small l2 perturbation), and then exploiting Nesterov’s accelerated scheme [Nes83] to the dual problem, which can be verified to be unconstrained and Lipschitz differentiable. In Algorithm 1, we describe our ALM algorithm adapted to problem (D.2). Algorithm 1 solves exactly the smoothed version of problem (D.2):\nmin({X i},W) K∑ i=1 ( ‖(X i)(i)‖∗ + 1 2µ ‖(X i)(i)‖2F ) + 1 2µ ‖W‖2F\ns.t. X i = W , i = 1, 2, · · · ,K, (D.3) PΩ[W ] = PΩ[X 0],\nwhere we denote Yi as the dual variable for the constraint X i = W and denote Z as the dual variable for the last constraint PΩ[W ] = PΩ[X 0]. Since the objective function in (D.3) is separable, each setup of the ALB algorithm is easy to solve as we can see from Algorithm 1 3.\nAlgorithm 1: accelerated linearized Bregman algorithm for SNN model (D.1)\n1 Initialization: Y0i = Ỹ 0 i = 0 for each i ∈ [K], Z 0 = Z̃0 = 0, µ > 0, τ > 0, t0 = 1; 2 for k = 0, 1, 2, · · · do 3 for i = 1, 2, · · · , K do 4 X k+1i = µ · Shrinkage(Y k i , 1) ;\n5 Wk+1 = µ · ( PΩ [ Zk ] − ∑ iY k i ) ; 6 for i = 1, 2, · · · , K do 7 Ỹki = Y k i − τ · ( X k+1i −W k+1 ) ;\n8 Z̃k = Zk − τ · PΩ [ Wk+1 −X 0 ] ; 9 tk+1 = 1+ √ 1+4t2k 2 ;\n10 for i = 1, 2, · · · , K do 11 Yk+1i = Ỹ k i + tk−1 tk+1 ( Ỹki − Ỹ k−1 i ) ;\n12 Zk+1 = Z̃k + tk−1tk+1 ( Z̃k − Z̃k−1 ) ;\n3 The Shrinkage operator in line 4 of Algorithm 1 performs the regular shrinkage on the singular values of the ith unfolding matrix of Yki , i.e. (Yki )(i), and then folds the resulting matrix back into tensor.\nFor our numerical experiment (K = 4), we choose smoothing parameter µ = 50‖X 0‖F and step size τ = 15µ . Empirically, we observe that larger values of µ do not result in a better recovery performance. This is consistent with the theoretical results established in [LY12, ZCCZ11]."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2017,
    "abstractText" : "Recovering a low-rank tensor from incomplete information is a recurring problem in signal processing and machine learning. The most popular convex relaxation of this problem minimizes the sum of the nuclear norms of the unfoldings of the tensor. We show that this approach can be substantially suboptimal: reliably recovering a K-way tensor of length n and Tucker rank r from Gaussian measurements requires Ω(rnK−1) observations. In contrast, a certain (intractable) nonconvex formulation needs only O(r +nrK) observations. We introduce a very simple, new convex relaxation, which partially bridges this gap. Our new formulation succeeds with O(rbK/2cndK/2e) observations. While these results pertain to Gaussian measurements, simulations strongly suggest that the new norm also outperforms the sum of nuclear norms for tensor completion from a random subset of entries. Our lower bounds for the sum-of-nuclearnorm model follow from a new result on simultaneously structured models, which may be of independent interest for matrix and vector recovery problems.",
    "creator" : "LaTeX with hyperref package"
  }
}