{
  "name" : "1603.00223.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Segmental Recurrent Neural Networks for End-to-end Speech Recognition",
    "authors" : [ "Liang Lu", "Lingpeng Kong", "Chris Dyer", "Noah A. Smith", "Steve Renals" ],
    "emails" : [ "s.renals}@ed.ac.uk,", "cdyer}@cs.cmu.edu,", "nasmith@cs.washington.edu" ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "Speech recognition is a typical sequence to sequence transduction problem, i.e., given a sequence of acoustic observations, the speech recognition engine decodes the corresponding sequence of words (or phonemes). A key component in a speech recognition system is the acoustic model, which computes the conditional probability of the output sequence given the input sequence. However, directly computing this conditional probability is challenging due to many factors including the variable lengths of the input and output sequences. The hidden Markov model (HMM) converts this sequence-level classification task into a frame-level classification problem, where each acoustic frame is classified into one of the hidden states, and each output sequence corresponds to a sequence of hidden states. To make it computationally tractable, HMMs usually rely on the conditional independence assumption and the first-order Markov rule — the well-known weaknesses of HMMs [1]. Furthermore, the HMM-based pipeline is composed of a few relatively independent modules, which makes the joint optimisation nontrivial.\nThere has been a consistent research effort to seek architectures to replace HMMs and overcome their limitation for acoustic modelling, e.g., [2, 3, 4, 5]; however these approaches have not yet improved speech recognition accuracy over HMMs. In the past few years, several neural network based\n∗ Equal contribution. Lu and Renals are funded by the UK EPSRC Programme Grant EP/I031022/1, Natural Speech Technology (NST). The NST research data collection may be accessed at http://datashare.is.ed.ac.uk/handle/10283/786.\napproaches have been proposed and demonstrated promising results. In particular, the connectionist temporal classification (CTC) [6, 7, 8, 9] approach defines the loss function directly to maximise the conditional probability of the output sequence given the input sequence, and it usually uses a recurrent neural network to extract features. However, CTC simplifies the sequence-level error function by a product of the frame-level error functions (i.e., independence assumption), which means it essentially still does frame-level classification. It also requires the lengths of the input and output sequence to be the same, which is inappropriate for speech recognition. CTC deals with this problem by replicating the output labels so that a consecutive frames may correspond to the same output label or a blank token.\nAttention-based RNNs have been demonstrated to be a powerful alternative sequence-to-sequence transducer, e.g., in machine translation [10], and speech recognition [11, 12, 13]. A key difference of this model from HMMs and CTCs is that the attention-based approach does not apply the conditional independence assumption to the input sequence. Instead, it maps the variable-length input sequence into a fixed-size vector representation at each decoding step by an attention-based scheme (see [10] for further explanation). It then generates the output sequence using an RNN conditioned on the vector representation from the source sequence. The attentive scheme suits the machine translation task well, because there may be no clear alignment between the source and target sequence for many language pairs. However, this approach does not naturally apply to the speech recognition task, as each output token only corresponds to a small size window of acoustic spectrum.\nIn this paper, we study segmental RNNs [14] for acoustic modelling. This model is similar to CTC and attention-based RNN in the sense that an RNN encoder is also used for feature extraction, but it differs in the sense that the sequence-level conditional probability is defined using an segmental (semiMarkov) CRF [15], which is an extension on the standard CRF [16]. There have been numerous works on CRFs and their variants for speech recognition, e.g, [4, 5, 17] (see [18] for an overview). In particular, feed-forward neural networks have been used with segmental CRFs for speech recognition [19, 20]. However, segmental RNN is different in that it is an end-toend model — it does not depend on an external system to provide segmentation boundaries and features, instead, this model is trained by marginalising out all possible segmentations, while the features are derived from the encoder RNN, which is trained jointly with the segmental CRF. Our experiments were performed on the TIMIT dataset, and we achieved 17.3% PER from first-pass decoding with zeroth-order CRF and without using any language model — the best reported result using CRFs. ar X iv :1\n60 3.\n00 22\n3v 1\n[ cs\n.C L\n] 1\nM ar\n2 01\n6"
    }, {
      "heading" : "2. Segmental Recurrent Neural Networks",
      "text" : ""
    }, {
      "heading" : "2.1. Segmental Conditional Random Fields",
      "text" : "Given a sequence of acoustic frames X = {x1, · · · ,xT } and its corresponding sequence of output labels y = {y1, · · · , yJ}, where T ≥ J , segmental (or semi-Markov) conditional random field defines the sequence-level conditional probability with the auxiliary segment labels E = {e1, · · · , eJ} as\nP (y,E | X) = 1 Z(X) J∏ j=1 exp f (yj , ej ,X) , (1)\nwhere ej = 〈sj , nj〉 is a tuple of the beginning (sj) and the end (nj) time tag for the segment of yj , and nj > sj while nj , sj ∈ [1, T ]; yj ∈ Y and Y denotes the vocabulary set; Z(X) is the normaliser that that sums over all the possible (y,E) pairs, i.e.,\nZ(X) = ∑ y,E J∏ j=1 exp f (yj , ej ,X) . (2)\nHere, we only consider the zeroth-order CRF, while the extension to higher order models is straightforward. Similar to other CRF-based models, the function f(·) is defined as\nf (yj , ej ,X) = w >Φ(yj , ej ,X), (3)\nwhere Φ(·) denotes the feature function, and w is the weight vector. Previous works on CRF-based acoustic models mainly use heuristically handcrafted feature function Φ(·). They also usually rely on an external system to provide the segment labels. In this paper, we define Φ(·) using neural networks, and the segmentation E is marginalised out during training, which makes our model self-contained."
    }, {
      "heading" : "2.2. Feature Representations",
      "text" : "We use neural networks to define the feature function Φ(·), which maps the acoustic segment and its corresponding label into a joint feature space. More specifically, yj is firstly represented as a one-hot vector vj , and it is then mapped into a continuous space by a linear embedding matrix M as\nuj = Mvj (4)\nGiven the segment label ej , we use an RNN to map the acoustic segment to a fixed-dimensional vector representation, i.e.,\nhj1 = r(h0,xsj ) (5)\nhj2 = r(h j 1,xsj+1) (6)\n...\nhjdj = r(h j dj−1,xnj ) (7)\nwhere h0 denotes the initial hidden state, dj = nj − sj denotes the duration of the segment and r(·) is a non-linear function. We take the final hidden state hjdj as the segment embedding vector, then Φ(·) can be represented as\nΦ(yj , ej ,X) = g(uj ,h j dj ), (8)\nwhere g(·) corresponds to one layer or multiple layers of linear or non-linear transformation. In fact, it is flexible to include other relevant features as additional inputs to the function g(·), e.g., the duration feature which can be obtained by converting dj into another embedding vector. In practice, multiple RNN layers can be used transform the acoustic signal X before extracting the segment embedding vector hjdj as Figure 1."
    }, {
      "heading" : "2.3. Conditional Maximum Likelihood Training",
      "text" : "For speech recognition, the segmentation labels E are usually unknown, training the model by maximising the conditional probability as Eq. (1) is therefore not practical. The problem can be addressed by defining the loss function as the negative marginal log-likelihood as\nL(θ) = − logP (y | X) = − log ∑ E P (y,E | X)\n= − log ∑ E ∏ j\nexp f (yj , ej ,X)︸ ︷︷ ︸ ≡Z(X,y) + logZ(X), (9)\nwhere θ denotes the set of model parameters, and Z(X,y) denotes the summation over all the possible segmentations when only y is observed. To simplify notations, the objective function L(θ) is define with only one training utterance.\nHowever, the number of possible segmentations is exponential with the length of X, which makes the naive computation of both Z(X,y) and Z(X) impractical. Fortunately, this can be addressed by using the following dynamic programming algorithm as proposed in [15]:\nα0 = 1 (10) αt = ∑\n0<k<t αk × ∑ y∈Y f(y, 〈k, t〉,X) (11)\nZ(X) = αT (12)\nIn Eq. (11), the first summation is over all the possible segmentation up to timestep t, and the second summation is over all the possible labels from the vocabulary. The computation cost of this algorithm is O(T 2 · |Y|), where |Y| is the size of the vocabulary. The cost can be further reduced by introducing an upper bound of the segment length, in which case Eq. (11) can be rewritten as\nαt = ∑\nl<k<t αk × ∑ y∈Y f(y, 〈k, t〉,X) (13)\nl = { 0 if t− L < 0 t− L otherwise (14)\nwhere L denotes the maximum value of the segment length. The cost is then reduced toO(L·T ·|Y|), and for long sequences\nlike speech signals where T L, the computational savings are substantial.\nThe term Z(X,y) can be computed similarly. In this case, since the label y is now observed, the summation over all the possible labels y ∈ Y in Eq. (11) is not necessary, i.e.,\nβ0,0 = 1 (15) βt,j = ∑\n0<k<t\nβk,j−1 × f(yj , 〈k, t〉,X) (16)\nZ(X,y) = βT,J (17)\nAgain, we can limit the length of the possible segments as Eq. (13). Given Z(X) and Z(X,y), the loss function L(θ) can be minimised using the stochastic gradient decent (SGD) algorithm similar to training other neural network models. Other losses, for example, hinge, can be considered in future work."
    }, {
      "heading" : "2.4. Viterbi Decoding",
      "text" : "During decoding, we need to search the target label sequence y that yields the highest posterior probability given X by marginalising out all the possible segmentations:\ny∗ = arg max y log ∑ E P (y,E | X) (18)\nThis involves minor modification of the recursive algorithm in Eq. (11) that instead of summing over all the possible labels, the Viterbi path up to the timestep t is\nα∗t = ∑\n0<k<t\nα∗k ×max y∈Y f(y, 〈k, t〉,X) (19)\nHowever, marginalising out all the possible segmentations is still expensive. The computational cost can be further reduced by greedy searching the most likely segmentation, i.e.,\nα∗t = max 0<k<t α∗k ×max y∈Y f(y, 〈k, t〉,X), (20)\nwhich corresponds to the decoding objective as\ny∗,E∗ = arg max y,E logP (y,E | X) (21)\nThis joint maximization algorithm may yield high search error, because it only considers one segmentation. In the future, we shall investigate the beam search algorithm which may yield a lower search error."
    }, {
      "heading" : "2.5. Further Speedup",
      "text" : "It is computationally expensive for RNNs to model long sequences, and the number of possible segmentations is exponential with the length of the input sequence as mentioned before. The computational cost can be significantly reduced by using the hierarchical subsampling RNN [21] to shorten the input sequences, where the subsampling layer takes a window of hidden states from the lower layer as input as shown in Figure 2. In this work, we consider three variants: a) concatenate – the hidden states in the subsampling window are concatenated before been fed into the next layer; b) add – the hidden states are added into one vector for the next layer; c) skip – only the last hidden state in the window is kept and all the others are skipped. The last two schemes are computationally cheaper as they do not introduce extra model parameters."
    }, {
      "heading" : "3. Experiments",
      "text" : ""
    }, {
      "heading" : "3.1. System Setup",
      "text" : "We used the TIMIT dataset to evaluate the segmental RNN acoustic models. This dataset was preferred for the rapid evaluation of different system settings, and for the comparison to other CRF and end-to-end systems. We followed the standard protocol of the TIMIT dataset, and our experiments were based on the Kaldi recipe [22]. We used the core test set as our evaluation set, which has 192 utterances. We used 24 dimensional log fiterbanks (FBANKs) with delta and double-delta coefficients, yielding 72 dimensional feature vectors. Our models were trained with 48 phonemes, and their predictions were converted to 39 phonemes before scoring. The dimension of uj was fixed to be 32. For all our experiments, we used the long short-term memory (LSTM) networks [23] as the implementation of RNNs, and the networks were always bi-directional. We set the initial SGD learning rate to be 0.1, and we exponentially decay the learning rate by a factor of 2 when the validation error stopped decreasing. Our models were trained with dropout\nregularisation [24], using an specific implementation for recurrent networks [25]. The dropout rate was 0.2 unless specified otherwise. Our models were randomly initialised with the same random seed."
    }, {
      "heading" : "3.2. Results of Hierarchical Subsampling",
      "text" : "We first demonstrate the results of the hierarchical subsampling recurrent network, which is the key to speed up our experiments. We set the size of the subsampling window to be 2, therefore each subsampling layer reduced the time resolution by a factor of 2. We set the maximum segment length L in Eq. (14) to be 300 milliseconds, which corresponded to 30 frames of FBANKs (sampled at the rate of 10 milliseconds). With two layers of subsampling recurrent networks, the time resolution was reduced by a factor of 4, and the value of L was reduced to be 8, yielding around 10 times speedup as shown in Table 1.\nTable 2 compares the three implementations of the recurrent subsampling network detailed in section 2.5. We observed that concatenating all the hidden states in the subsampling window did not yield lower phone error rate (PER) than using the simple skipping approach, which may be due to the fact that the TIMIT dataset is small and it prefers a smaller model. On the other hand, adding the hidden states in the subsampling window together worked even worse, possibly due to that the sequential information in the subsampling window was flattened. In the following experiments, we sticked to the skipping method, and using two subsampling layers."
    }, {
      "heading" : "3.3. Hyperparameters and Different Features",
      "text" : "We then evaluated the model by tuning the hyperparameters, and the results are given in Table 3. We tuned the number of LSTM layers, and the dimension of LSTM cells, as well as the dimensions of w and the segment vector hj . In general, larger models with dropout regularisation yielded higher recognition accuracy. Our best result was obtained using 6 layers of 250- dimensional LSTMs. However, without the dropout regularisation, the model can be easily overfit due to the small size of training set. In the future, we shall evaluate this model with a large dataset.\nWe then evaluated another two types of features using the same system configuration that achieved the best result in Table 3. We increased the number of FBANKs from 24 to 40, which yielded slightly lower PER. We also evaluated the standard Kaldi features — 39 dimensional MFCCs spliced by a context window of 7, followed by LDA and MLLT transform and with feature-space speaker-dependent MLLR, which were the same features used in the HMM-DNN baseline in Table 5. The well-engineered features improved the accuracy of our system by more than 1% absolute."
    }, {
      "heading" : "3.4. Comparison to Related Works",
      "text" : "In Table 5, we compare our result to other reported results using segmental CRFs as well as recent end-to-end systems. Previous state-of-the-art result using segmental CRFs on the TIMIT dataset is reported in [28], where the first-pass decoding was used to prune the search space, and the second-pass was used to re-score the hypothesis using various features including neural network features. Besides, the ground-truth segmentation was used in [28]. We achieved considerably lower PER with firstpass decoding, despite the fact that our CRF was zeroth-order, and we did not use any language model. Furthermore, our results are also comparable to that from the CTC and attentionbased RNN end-to-end systems. The accuracy of segmental RNNs may be further improved by using higher-order CRFs or incorporating a language model into the decode step, and using beam search to reduce the search error."
    }, {
      "heading" : "4. Conclusions",
      "text" : "In this paper, we present the segmental RNN — a novel acoustic model that combines the segmental CRF with an encoder RNN for end-to-end speech recognition. We discuss the practical training and decoding algorithms of this model for speech recognition, and the subsampling network to reduce the computational cost. Our experiments were performed on the TIMIT dataset, and we achieved strong recognition accuracy using zeroth-order CRF, and without using any language model. In the future, we shall investigate discriminative training criteria, and incorporating a language model into the decoding step. Future works also include implementing a weighted finite sate transducer (WFST) based decoder and scaling this model to large vocabulary datasets."
    }, {
      "heading" : "5. References",
      "text" : "[1] D. Gillick, L. Gillick, and S. Wegmann, “Don’t multiply\nlightly: Quantifying problems with the acoustic model assumptions in speech recognition,” in Proc. ASRU. IEEE, 2011, pp. 71–76.\n[2] M. Ostendorf, V. Digalakis, and O. Kimball, “From HMM’s to segment models: A unified view of stochastic modeling for speech recognition,” IEEE Transactions on Speech and Audio Processing, pp. 360–378, 1996.\n[3] N. Smith and M. Gales, “Speech recognition using SVMs,” in Advances in neural information processing systems, 2001, pp. 1197–1204.\n[4] A. Gunawardana, M. Mahajan, A. Acero, and J. C. Platt, “Hidden conditional random fields for phone classification.” in INTERSPEECH, 2005, pp. 1117–1120.\n[5] Y. Hifny and S. Renals, “Speech recognition using augmented conditional random fields,” Audio, Speech, and Language Processing, IEEE Transactions on, vol. 17, no. 2, pp. 354–365, 2009.\n[6] A. Graves and N. Jaitly, “Towards end-to-end speech recognition with recurrent neural networks,” in Proc. ICML, 2014, pp. 1764–1772.\n[7] A. Hannun, C. Case, J. Casper, B. Catanzaro, G. Diamos, E. Elsen, R. Prenger et al., “Deep Speech: Scaling up end-to-end speech recognition,” in arXiv preprint arXiv:1412.5567, 2014.\n[8] H. Sak, A. Senior, K. Rao, and F. Beaufays, “Fast and accurate recurrent neural network acoustic models for speech recognition,” in Proc. INTERSPEECH, 2015.\n[9] Y. Miao, M. Gowayyed, and F. Metze, “EESEN: Endto-end speech recognition using deep RNN models and WFST-based decoding,” in Proc. ASRU, 2015.\n[10] D. Bahdanau, K. Cho, and Y. Bengio, “Neural machine translation by jointly learning to align and translate,” in Proc. ICLR, 2015.\n[11] J. K. Chorowski, D. Bahdanau, D. Serdyuk, K. Cho, and Y. Bengio, “Attention-based models for speech recognition,” in Advances in Neural Information Processing Systems, 2015, pp. 577–585.\n[12] L. Lu, X. Zhang, K. Cho, and S. Renals, “A study of the recurrent neural network encoder-decoder for large vocabulary speech recognition,” in Proc. INTERSPEECH, 2015.\n[13] W. Chan, N. Jaitly, Q. V. Le, and O. Vinyals, “Listen, attend and spell,” arXiv preprint arXiv:1508.01211, 2015.\n[14] L. Kong, C. Dyer, and N. A. Smith, “Segmental recurrent neural networks,” arXiv preprint arXiv:1511.06018, 2015.\n[15] S. Sarawagi and W. W. Cohen, “Semi-markov conditional random fields for information extraction,” in Advances in neural information processing systems, 2004, pp. 1185– 1192.\n[16] J. Lafferty, A. McCallum, and F. Pereira, “Conditional random fields: Probabilistic models for segmenting and labeling sequence data,” in Proc. ICML, 2001, pp. 282– 289.\n[17] G. Zweig, P. Nguyen, D. Van Compernolle, K. Demuynck, L. Atlas, P. Clark et al., “Speech recognition with segmental conditional random fields: A summary of the JHU CLSP 2010 summer workshop,” in Proc. ICASSP. IEEE, 2011, pp. 5044–5047.\n[18] E. Fosler-Lussier, Y. He, P. Jyothi, and R. Prabhavalkar, “Conditional random fields in speech, audio, and language processing,” Proceedings of the IEEE, vol. 101, no. 5, pp. 1054–1075, 2013.\n[19] O. Abdel-Hamid, L. Deng, D. Yu, and H. Jiang, “Deep segmental neural networks for speech recognition.” in Proc. INTERSPEECH, 2013, pp. 1849–1853.\n[20] Y. He and E. Fosler-Lussier, “Segmental conditional random fields with deep neural networks as acoustic models for first-pass word recognition,” in Proc. INTERSPEECH, 2015.\n[21] A. Graves, “Hierarchical subsampling networks,” in Supervised Sequence Labelling with Recurrent Neural Networks. Springer, 2012, pp. 109–131.\n[22] D. Povey, A. Ghoshal, G. Boulianne, L. Burget, O. Glembek, N. Goel, M. Hannemann, P. Motlıcek, Y. Qian, P. Schwarz, J. Silovský, G. Semmer, and K. Veselý, “The Kaldi speech recognition toolkit,” in Proc. ASRU, 2011.\n[23] S. Hochreiter and J. Schmidhuber, “Long short-term memory,” Neural computation, vol. 9, no. 8, pp. 1735– 1780, 1997.\n[24] N. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhutdinov, “Dropout: A simple way to prevent neural networks from overfitting,” The Journal of Machine Learning Research, vol. 15, no. 1, pp. 1929–1958, 2014.\n[25] W. Zaremba, I. Sutskever, and O. Vinyals, “Recurrent neural network regularization,” arXiv preprint arXiv:1409.2329, 2014.\n[26] G. Zweig, “Classification and recognition with direct segment models,” in Proc. ICASSP. IEEE, 2012, pp. 4161– 4164.\n[27] Y. He and E. Fosler-Lussier, “Efficient segmental conditional random fields for phone recognition,” in Proc. INTERSPEECH, 2012, pp. 1898–1901.\n[28] H. Tang, W. Wang, K. Gimpel, and K. Livescu, “Discriminative segmental cascades for feature-rich phone recognition,” in Proc. ASRU, 2015.\n[29] A. Graves, A.-R. Mohamed, and G. Hinton, “Speech recognition with deep recurrent neural networks,” in Proc. ICASSP. IEEE, 2013, pp. 6645–6649."
    } ],
    "references" : [ {
      "title" : "Don’t multiply lightly: Quantifying problems with the acoustic model assumptions in speech recognition",
      "author" : [ "D. Gillick", "L. Gillick", "S. Wegmann" ],
      "venue" : "Proc. ASRU. IEEE, 2011, pp. 71–76.",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "From HMM’s to segment models: A unified view of stochastic modeling for speech recognition",
      "author" : [ "M. Ostendorf", "V. Digalakis", "O. Kimball" ],
      "venue" : "IEEE Transactions on Speech and Audio Processing, pp. 360–378, 1996.",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Speech recognition using SVMs",
      "author" : [ "N. Smith", "M. Gales" ],
      "venue" : "Advances in neural information processing systems, 2001, pp. 1197–1204.",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Hidden conditional random fields for phone classification.",
      "author" : [ "A. Gunawardana", "M. Mahajan", "A. Acero", "J.C. Platt" ],
      "venue" : "INTERSPEECH,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2005
    }, {
      "title" : "Speech recognition using augmented conditional random fields",
      "author" : [ "Y. Hifny", "S. Renals" ],
      "venue" : "Audio, Speech, and Language Processing, IEEE Transactions on, vol. 17, no. 2, pp. 354–365, 2009.",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Towards end-to-end speech recognition with recurrent neural networks",
      "author" : [ "A. Graves", "N. Jaitly" ],
      "venue" : "Proc. ICML, 2014, pp. 1764–1772.",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Deep Speech: Scaling up end-to-end speech recognition",
      "author" : [ "A. Hannun", "C. Case", "J. Casper", "B. Catanzaro", "G. Diamos", "E. Elsen", "R. Prenger" ],
      "venue" : "arXiv preprint arXiv:1412.5567, 2014.",
      "citeRegEx" : "7",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Fast and accurate recurrent neural network acoustic models for speech recognition",
      "author" : [ "H. Sak", "A. Senior", "K. Rao", "F. Beaufays" ],
      "venue" : "Proc. INTERSPEECH, 2015.",
      "citeRegEx" : "8",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "EESEN: Endto-end speech recognition using deep RNN models and WFST-based decoding",
      "author" : [ "Y. Miao", "M. Gowayyed", "F. Metze" ],
      "venue" : "Proc. ASRU, 2015.",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Neural machine translation by jointly learning to align and translate",
      "author" : [ "D. Bahdanau", "K. Cho", "Y. Bengio" ],
      "venue" : "Proc. ICLR, 2015.",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Attention-based models for speech recognition",
      "author" : [ "J.K. Chorowski", "D. Bahdanau", "D. Serdyuk", "K. Cho", "Y. Bengio" ],
      "venue" : "Advances in Neural Information Processing Systems, 2015, pp. 577–585.",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "A study of the recurrent neural network encoder-decoder for large vocabulary speech recognition",
      "author" : [ "L. Lu", "X. Zhang", "K. Cho", "S. Renals" ],
      "venue" : "Proc. INTERSPEECH, 2015.",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Listen, attend and spell",
      "author" : [ "W. Chan", "N. Jaitly", "Q.V. Le", "O. Vinyals" ],
      "venue" : "arXiv preprint arXiv:1508.01211, 2015.",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Segmental recurrent neural networks",
      "author" : [ "L. Kong", "C. Dyer", "N.A. Smith" ],
      "venue" : "arXiv preprint arXiv:1511.06018, 2015.",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Semi-markov conditional random fields for information extraction",
      "author" : [ "S. Sarawagi", "W.W. Cohen" ],
      "venue" : "Advances in neural information processing systems, 2004, pp. 1185– 1192.",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 2004
    }, {
      "title" : "Conditional random fields: Probabilistic models for segmenting and labeling sequence data",
      "author" : [ "J. Lafferty", "A. McCallum", "F. Pereira" ],
      "venue" : "Proc. ICML, 2001, pp. 282– 289.",
      "citeRegEx" : "16",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Speech recognition with segmental conditional random fields: A summary of the JHU CLSP 2010 summer workshop",
      "author" : [ "G. Zweig", "P. Nguyen", "D. Van Compernolle", "K. Demuynck", "L. Atlas", "P. Clark" ],
      "venue" : "Proc. ICASSP. IEEE, 2011, pp. 5044–5047.",
      "citeRegEx" : "17",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Conditional random fields in speech, audio, and language processing",
      "author" : [ "E. Fosler-Lussier", "Y. He", "P. Jyothi", "R. Prabhavalkar" ],
      "venue" : "Proceedings of the IEEE, vol. 101, no. 5, pp. 1054–1075, 2013.",
      "citeRegEx" : "18",
      "shortCiteRegEx" : null,
      "year" : 2013
    }, {
      "title" : "Deep segmental neural networks for speech recognition.",
      "author" : [ "O. Abdel-Hamid", "L. Deng", "D. Yu", "H. Jiang" ],
      "venue" : "in Proc. INTERSPEECH,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2013
    }, {
      "title" : "Segmental conditional random fields with deep neural networks as acoustic models for first-pass word recognition",
      "author" : [ "Y. He", "E. Fosler-Lussier" ],
      "venue" : "Proc. INTERSPEECH, 2015.",
      "citeRegEx" : "20",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Hierarchical subsampling networks",
      "author" : [ "A. Graves" ],
      "venue" : "Supervised Sequence Labelling with Recurrent Neural Networks. Springer, 2012, pp. 109–131.",
      "citeRegEx" : "21",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "The Kaldi speech recognition toolkit",
      "author" : [ "D. Povey", "A. Ghoshal", "G. Boulianne", "L. Burget", "O. Glembek", "N. Goel", "M. Hannemann", "P. Motlıcek", "Y. Qian", "P. Schwarz", "J. Silovský", "G. Semmer", "K. Veselý" ],
      "venue" : "Proc. ASRU, 2011.",
      "citeRegEx" : "22",
      "shortCiteRegEx" : null,
      "year" : 2011
    }, {
      "title" : "Long short-term memory",
      "author" : [ "S. Hochreiter", "J. Schmidhuber" ],
      "venue" : "Neural computation, vol. 9, no. 8, pp. 1735– 1780, 1997.",
      "citeRegEx" : "23",
      "shortCiteRegEx" : null,
      "year" : 1997
    }, {
      "title" : "Dropout: A simple way to prevent neural networks from overfitting",
      "author" : [ "N. Srivastava", "G. Hinton", "A. Krizhevsky", "I. Sutskever", "R. Salakhutdinov" ],
      "venue" : "The Journal of Machine Learning Research, vol. 15, no. 1, pp. 1929–1958, 2014.",
      "citeRegEx" : "24",
      "shortCiteRegEx" : null,
      "year" : 1929
    }, {
      "title" : "Recurrent neural network regularization",
      "author" : [ "W. Zaremba", "I. Sutskever", "O. Vinyals" ],
      "venue" : "arXiv preprint arXiv:1409.2329, 2014.",
      "citeRegEx" : "25",
      "shortCiteRegEx" : null,
      "year" : 2014
    }, {
      "title" : "Classification and recognition with direct segment models",
      "author" : [ "G. Zweig" ],
      "venue" : "Proc. ICASSP. IEEE, 2012, pp. 4161– 4164.",
      "citeRegEx" : "26",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Efficient segmental conditional random fields for phone recognition",
      "author" : [ "Y. He", "E. Fosler-Lussier" ],
      "venue" : "Proc. IN- TERSPEECH, 2012, pp. 1898–1901.",
      "citeRegEx" : "27",
      "shortCiteRegEx" : null,
      "year" : 2012
    }, {
      "title" : "Discriminative segmental cascades for feature-rich phone recognition",
      "author" : [ "H. Tang", "W. Wang", "K. Gimpel", "K. Livescu" ],
      "venue" : "Proc. ASRU, 2015.",
      "citeRegEx" : "28",
      "shortCiteRegEx" : null,
      "year" : 2015
    }, {
      "title" : "Speech recognition with deep recurrent neural networks",
      "author" : [ "A. Graves", "A.-R. Mohamed", "G. Hinton" ],
      "venue" : "Proc. ICASSP. IEEE, 2013, pp. 6645–6649.",
      "citeRegEx" : "29",
      "shortCiteRegEx" : null,
      "year" : 2013
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "To make it computationally tractable, HMMs usually rely on the conditional independence assumption and the first-order Markov rule — the well-known weaknesses of HMMs [1].",
      "startOffset" : 167,
      "endOffset" : 170
    }, {
      "referenceID" : 1,
      "context" : ", [2, 3, 4, 5]; however these approaches have not yet improved speech recognition accuracy over HMMs.",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 2,
      "context" : ", [2, 3, 4, 5]; however these approaches have not yet improved speech recognition accuracy over HMMs.",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 3,
      "context" : ", [2, 3, 4, 5]; however these approaches have not yet improved speech recognition accuracy over HMMs.",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 4,
      "context" : ", [2, 3, 4, 5]; however these approaches have not yet improved speech recognition accuracy over HMMs.",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 5,
      "context" : "In particular, the connectionist temporal classification (CTC) [6, 7, 8, 9] approach defines the loss function directly to maximise the conditional probability of the output sequence given the input sequence, and it usually uses a recurrent neural network to extract features.",
      "startOffset" : 63,
      "endOffset" : 75
    }, {
      "referenceID" : 6,
      "context" : "In particular, the connectionist temporal classification (CTC) [6, 7, 8, 9] approach defines the loss function directly to maximise the conditional probability of the output sequence given the input sequence, and it usually uses a recurrent neural network to extract features.",
      "startOffset" : 63,
      "endOffset" : 75
    }, {
      "referenceID" : 7,
      "context" : "In particular, the connectionist temporal classification (CTC) [6, 7, 8, 9] approach defines the loss function directly to maximise the conditional probability of the output sequence given the input sequence, and it usually uses a recurrent neural network to extract features.",
      "startOffset" : 63,
      "endOffset" : 75
    }, {
      "referenceID" : 8,
      "context" : "In particular, the connectionist temporal classification (CTC) [6, 7, 8, 9] approach defines the loss function directly to maximise the conditional probability of the output sequence given the input sequence, and it usually uses a recurrent neural network to extract features.",
      "startOffset" : 63,
      "endOffset" : 75
    }, {
      "referenceID" : 9,
      "context" : ", in machine translation [10], and speech recognition [11, 12, 13].",
      "startOffset" : 25,
      "endOffset" : 29
    }, {
      "referenceID" : 10,
      "context" : ", in machine translation [10], and speech recognition [11, 12, 13].",
      "startOffset" : 54,
      "endOffset" : 66
    }, {
      "referenceID" : 11,
      "context" : ", in machine translation [10], and speech recognition [11, 12, 13].",
      "startOffset" : 54,
      "endOffset" : 66
    }, {
      "referenceID" : 12,
      "context" : ", in machine translation [10], and speech recognition [11, 12, 13].",
      "startOffset" : 54,
      "endOffset" : 66
    }, {
      "referenceID" : 9,
      "context" : "Instead, it maps the variable-length input sequence into a fixed-size vector representation at each decoding step by an attention-based scheme (see [10] for further explanation).",
      "startOffset" : 148,
      "endOffset" : 152
    }, {
      "referenceID" : 13,
      "context" : "In this paper, we study segmental RNNs [14] for acoustic modelling.",
      "startOffset" : 39,
      "endOffset" : 43
    }, {
      "referenceID" : 14,
      "context" : "This model is similar to CTC and attention-based RNN in the sense that an RNN encoder is also used for feature extraction, but it differs in the sense that the sequence-level conditional probability is defined using an segmental (semiMarkov) CRF [15], which is an extension on the standard CRF [16].",
      "startOffset" : 246,
      "endOffset" : 250
    }, {
      "referenceID" : 15,
      "context" : "This model is similar to CTC and attention-based RNN in the sense that an RNN encoder is also used for feature extraction, but it differs in the sense that the sequence-level conditional probability is defined using an segmental (semiMarkov) CRF [15], which is an extension on the standard CRF [16].",
      "startOffset" : 294,
      "endOffset" : 298
    }, {
      "referenceID" : 3,
      "context" : "g, [4, 5, 17] (see [18] for an overview).",
      "startOffset" : 3,
      "endOffset" : 13
    }, {
      "referenceID" : 4,
      "context" : "g, [4, 5, 17] (see [18] for an overview).",
      "startOffset" : 3,
      "endOffset" : 13
    }, {
      "referenceID" : 16,
      "context" : "g, [4, 5, 17] (see [18] for an overview).",
      "startOffset" : 3,
      "endOffset" : 13
    }, {
      "referenceID" : 17,
      "context" : "g, [4, 5, 17] (see [18] for an overview).",
      "startOffset" : 19,
      "endOffset" : 23
    }, {
      "referenceID" : 18,
      "context" : "In particular, feed-forward neural networks have been used with segmental CRFs for speech recognition [19, 20].",
      "startOffset" : 102,
      "endOffset" : 110
    }, {
      "referenceID" : 19,
      "context" : "In particular, feed-forward neural networks have been used with segmental CRFs for speech recognition [19, 20].",
      "startOffset" : 102,
      "endOffset" : 110
    }, {
      "referenceID" : 14,
      "context" : "Fortunately, this can be addressed by using the following dynamic programming algorithm as proposed in [15]:",
      "startOffset" : 103,
      "endOffset" : 107
    }, {
      "referenceID" : 20,
      "context" : "Figure 2: Hierarchical subsampling recurrent network [21] .",
      "startOffset" : 53,
      "endOffset" : 57
    }, {
      "referenceID" : 20,
      "context" : "The computational cost can be significantly reduced by using the hierarchical subsampling RNN [21] to shorten the input sequences, where the subsampling layer takes a window of hidden states from the lower layer as input as shown in Figure 2.",
      "startOffset" : 94,
      "endOffset" : 98
    }, {
      "referenceID" : 21,
      "context" : "We followed the standard protocol of the TIMIT dataset, and our experiments were based on the Kaldi recipe [22].",
      "startOffset" : 107,
      "endOffset" : 111
    }, {
      "referenceID" : 22,
      "context" : "For all our experiments, we used the long short-term memory (LSTM) networks [23] as the implementation of RNNs, and the networks were always bi-directional.",
      "startOffset" : 76,
      "endOffset" : 80
    }, {
      "referenceID" : 23,
      "context" : "regularisation [24], using an specific implementation for recurrent networks [25].",
      "startOffset" : 15,
      "endOffset" : 19
    }, {
      "referenceID" : 24,
      "context" : "regularisation [24], using an specific implementation for recurrent networks [25].",
      "startOffset" : 77,
      "endOffset" : 81
    }, {
      "referenceID" : 25,
      "context" : "5 first-pass SCRF [26] √ × 33.",
      "startOffset" : 18,
      "endOffset" : 22
    }, {
      "referenceID" : 26,
      "context" : "1 Boundary-factored SCRF [27] × × 26.",
      "startOffset" : 25,
      "endOffset" : 29
    }, {
      "referenceID" : 18,
      "context" : "5 Deep Segmental NN [19] √ × 21.",
      "startOffset" : 20,
      "endOffset" : 24
    }, {
      "referenceID" : 27,
      "context" : "9 Discriminative segmental cascade [28] √ × 21.",
      "startOffset" : 35,
      "endOffset" : 39
    }, {
      "referenceID" : 28,
      "context" : "9 CTC [29] × × 18.",
      "startOffset" : 6,
      "endOffset" : 10
    }, {
      "referenceID" : 28,
      "context" : "4 RNN transducer [29] - × 17.",
      "startOffset" : 17,
      "endOffset" : 21
    }, {
      "referenceID" : 10,
      "context" : "7 Attention-based RNN [11] - × 17.",
      "startOffset" : 22,
      "endOffset" : 26
    }, {
      "referenceID" : 27,
      "context" : "Previous state-of-the-art result using segmental CRFs on the TIMIT dataset is reported in [28], where the first-pass decoding was used to prune the search space, and the second-pass was used to re-score the hypothesis using various features including neural network features.",
      "startOffset" : 90,
      "endOffset" : 94
    }, {
      "referenceID" : 27,
      "context" : "Besides, the ground-truth segmentation was used in [28].",
      "startOffset" : 51,
      "endOffset" : 55
    } ],
    "year" : 2017,
    "abstractText" : "We study the segmental recurrent neural network for end-to-end acoustic modelling. This model connects the segmental conditional random field (CRF) with a recurrent neural network (RNN) used for feature extraction. Compared to most previous CRF-based acoustic models, it does not rely on an external system to provide features or segmentation boundaries. Instead, this model marginalises out all the possible segmentations, and features are extracted from the RNN trained together with the segmental CRF. In essence, this model is self-contained and can be trained end-to-end. In this paper, we discuss practical training and decoding issues as well as the method to speed up the training in the context of speech recognition. We performed experiments on the TIMIT dataset. We achieved 17.3% phone error rate (PER) from the first-pass decoding — the best reported result using CRFs, despite the fact that we only used a zeroth-order CRF and without using any language model.",
    "creator" : "LaTeX with hyperref package"
  }
}