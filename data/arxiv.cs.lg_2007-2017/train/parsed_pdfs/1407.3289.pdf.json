{
  "name" : "1407.3289.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Altitude Training: Strong Bounds for Single-Layer Dropout",
    "authors" : [ "Stefan Wager", "William Fithian", "Sida Wang" ],
    "emails" : [ "wfithian}@stanford.edu,", "pliang}@cs.stanford.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Dropout training [1] is an increasingly popular method for regularizing learning algorithms. Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8]. For single-layer linear models, learning with dropout is equivalent to using “blankout noise” [9].\nThe goal of this paper is to gain a better theoretical understanding of why dropout regularization works well for natural language tasks. We focus on the task of document classification using linear classifiers where data comes from a generative Poisson topic model. In this setting, dropout effectively deletes random words from a document during training; this corruption makes the training examples harder. A classifier that is able to fit the training data will therefore receive an accuracy boost at test time on the much easier uncorrupted examples. An apt analogy is altitude training, where athletes practice in more difficult situations than they compete in. Importantly, our analysis does not rely on dropout merely creating more pseudo-examples for training, but rather on dropout creating more challenging training examples. Somewhat paradoxically, we show that removing information from training examples can induce a classifier that performs better at test time.\nMain Result Consider training the zero-one loss empirical risk minimizer (ERM) using dropout, where each word is independently removed with probability δ ∈ (0, 1). For a class of Poisson generative topic models, we show that dropout gives rise to what we call the altitude training phenomenon: dropout improves the excess risk of the ERM by multiplying the exponent in its decay rate by 1/(1 − δ). This improvement comes at the cost of an additive term of O(1/ √ λ), where λ is the average number of words per document. More formally, let h∗ and ĥ0 be the expected and\nS. Wager and W. Fithian are supported by a B.C. and E.J. Eaves Stanford Graduate Fellowship and NSF VIGRE grant DMS–0502385 respectively.\nar X\niv :1\n40 7.\n32 89\nv2 [\nst at\n.M L\n] 3\n1 O\nct 2\nempirical risk minimizers, respectively; let h∗δ and ĥδ be the corresponding quantities for dropout training. Let Err(h) denote the error rate (on test examples) of h. In Section 4, we show that:\nErr ( ĥδ ) − Err (h∗δ)︸ ︷︷ ︸\ndropout excess risk\n= ÕP (Err(ĥ0)− Err (h∗))︸ ︷︷ ︸ ERM excess risk 1 1−δ + 1√ λ  , (1) where ÕP is a variant of big-O in probability notation that suppresses logarithmic factors. If λ is large (we are classifying long documents rather than short snippets of text), dropout considerably accelerates the decay rate of excess risk. The bound (1) holds for fixed choices of δ. The constants in the bound worsen as δ approaches 1, and so we cannot get zero excess risk by sending δ to 1.\nOur result is modular in that it converts upper bounds on the ERM excess risk to upper bounds on the dropout excess risk. For example, recall from classic VC theory that the ERM excess risk is ÕP ( √ d/n), where d is the number of features (vocabulary size) and n is the number of training examples. With dropout δ = 0.5, our result (1) directly implies that the dropout excess risk is ÕP (d/n+ 1/ √ λ).\nThe intuition behind the proof of (1) is as follows: when δ = 0.5, we essentially train on half documents and test on whole documents. By conditional independence properties of the generative topic model, the classification score is roughly Gaussian under a Berry-Esseen bound, and the error rate is governed by the tails of the Gaussian. Compared to half documents, the coefficient of variation of the classification score on whole documents (at test time) is scaled down by √ 1− δ compared to half documents (at training time), resulting in an exponential reduction in error. The additive penalty of 1/ √ λ stems from the Berry-Esseen approximation.\nNote that the bound (1) only controls the dropout excess risk. Even if dropout reduces the excess risk, it may introduce a bias Err(h∗δ)−Err(h∗), and thus (1) is useful only when this bias is small. In Section 5, we will show that the optimal Bayes decision boundary is not affected by dropout under the Poisson topic model. Bias is thus negligible when the Bayes boundary is close to linear.\nIt is instructive to compare our generalization bound to that of Ng and Jordan [10], who showed that the naive Bayes classifier exploits a strong generative assumption—conditional independence of the features given the label—to achieve an excess risk of OP ( √ (log d)/n). However, if the generative assumption is incorrect, then naive Bayes can have a large bias. Dropout enables us to cut excess risk without incurring as much bias. In fact, naive Bayes is closely related to logistic regression trained using an extreme form of dropout with δ → 1. Training logistic regression with dropout rates from the range δ ∈ (0, 1) thus gives a family of classifiers between unregularized logistic regression and naive Bayes, allowing us to tune the bias-variance tradeoff.\nOther perspectives on dropout In the general setting, dropout only improves generalization by a multiplicative factor. McAllester [11] used the PAC-Bayes framework to prove a generalization bound for dropout that decays as 1 − δ. Moreover, provided that δ is not too close to 1, dropout behaves similarly to an adaptive L2 regularizer with parameter δ/(1−δ) [6, 12], and at least in linear regression such L2 regularization improves generalization error by a constant factor. In contrast, by leveraging the conditional independence assumptions of the topic model, we are able to improve the exponent in the rate of convergence of the empirical risk minimizer.\nIt is also possible to analyze dropout as an adaptive regularizer [6, 9, 13]: in comparison with L2 regularization, dropout favors the use of rare features and encourages confident predictions. If we believe that good document classification should produce confident predictions by understanding rare words with Poisson-like occurrence patterns, then the work on dropout as adaptive regularization and our generalization-based analysis are two complementary explanations for the success of dropout in natural language tasks."
    }, {
      "heading" : "2 Dropout Training for Topic Models",
      "text" : "In this section, we introduce binomial dropout, a form of dropout suitable for topic models, and the Poisson topic model, on which all our analyses will be based.\nBinomial Dropout Suppose that we have a binary classification problem1 with count features x(i) ∈ {0, 1, 2, . . .}d and labels y(i) ∈ {0, 1}. For example, x(i)j is the number of times the j-th word in our dictionary appears in the i-th document, and y(i) is the label of the document. Our goal is to train a weight vector ŵ that classifies new examples with features x via a linear decision rule ŷ = I{ŵ · x > 0}. We start with the usual empirical risk minimizer:\nŵ0 def = argminw∈Rd { n∑ i=1 ` ( w; x(i), y(i) )} (2)\nfor some loss function ` (we will analyze the zero-one loss but use logistic loss in experiments, e.g., [10, 14, 15]). Binomial dropout trains on perturbed features x̃(i) instead of the original features x(i):\nŵδ def = argminw { n∑ i=1 E [ ` ( w; x̃(i), y(i) )]} , where x̃(i)j = Binom ( x (i) j ; 1− δ ) . (3)\nIn other words, during training, we randomly thin the j-th feature xj with binomial noise. If xj counts the number of times the j-th word appears in the document, then replacing xj with x̃j is equivalent to independently deleting each occurrence of word j with probability δ. Because we are only interested in the decision boundary, we do not scale down the weight vector obtained by dropout by a factor 1− δ as is often done [1]. Binomial dropout differs slightly from the usual definition of (blankout) dropout, which alters the feature vector x by setting random coordinates to 0 [6, 9, 11, 12]. The reason we chose to study binomial rather than blankout dropout is that Poisson random variables remain Poisson even after binomial thinning; this fact lets us streamline our analysis. For rare words that appear once in the document, the two types of dropout are equivalent.\nA Generative Poisson Topic Model Throughout our analysis, we assume that the data is drawn from a Poisson topic model depicted in Figure 1a and defined as follows. Each document i is assigned a label y(i) according to some Bernoulli distribution. Then, given the label y(i), the document gets a topic τ (i) ∈ Θ from a distribution ρy(i) . Given the topic τ (i), for every word j in the vocabulary, we generate its frequency x(i)j according to x (i) j\n∣∣ τ (i) ∼ Poisson(λ(τ(i))j ), where λ(τ)j ∈ [0,∞) is the expected number of times word j appears under topic τ . Note that ‖λ(τ)‖1 is the average length of a document with topic τ . Define λ def= minτ∈Θ ‖λ(τ)‖1 to be the shortest average document length across topics. If Θ contains only two topics—one for each class—we get the naive Bayes model. If Θ is the (K − 1)-dimensional simplex where λ(τ) is a τ -mixture over K basis vectors, we get the K-topic latent Dirichlet allocation [16].2\nNote that although our generalization result relies on a generative model, the actual learning algorithm is agnostic to it. Our analysis shows that dropout can take advantage of a generative structure while remaining a discriminative procedure. If we believed that a certain topic model held exactly and we knew the number of topics, we could try to fit the full generative model by EM. This, however, could make us vulnerable to model misspecification. In contrast, dropout benefits from generative assumptions while remaining more robust to misspecification."
    }, {
      "heading" : "3 Altitude Training: Linking the Dropout and Data-Generating Measures",
      "text" : "Our goal is to understand the behavior of a classifier ĥδ trained using dropout. During dropout, the error of any classifier h is characterized by two measures. In the end, we are interested in the usual generalization error (expected risk) of hwhere x is drawn from the underlying data-generating measure:\nErr (h) def = P [y 6= h(x)] . (4)\n1Dropout training is known to work well in practice for multi-class problems [8]. For simplicity, however, we will restrict our theoretical analysis to a two-class setup.\n2 In topic modeling, the vertices of the simplex Θ are “topics” and τ is a mixture of topics, whereas we call τ itself a topic.\nHowever, since dropout training works on the corrupted data x̃ (see (3)), in the limit of infinite data, the dropout estimator will converge to the minimizer of the generalization error with respect to the dropout measure over x̃:\nErrδ (h) def = P [y 6= h(x̃)] . (5)\nThe main difficulty in analyzing the generalization of dropout is that classical theory tells us that the generalization error with respect to the dropout measure will decrease as n → ∞, but we are interested in the original measure. Thus, we need to bound Err in terms of Errδ . In this section, we show that the error on the original measure is actually much smaller than the error on the dropout measure; we call this the altitude training phenomenon.\nUnder our generative model, the count features xj are conditionally independent given the topic τ . We thus focus on a single fixed topic τ and establish the following theorem, which provides a per-topic analogue of (1). Section 4 will then use this theorem to obtain our main result. Theorem 1. Let h be a binary linear classifier with weights w, and suppose that our features are drawn from the Poisson generative model given topic τ . Let cτ be the more likely label given τ :\ncτ def = arg max c∈{0,1} P [ y(i) = c ∣∣ τ (i) = τ] . (6) Let ε̃τ be the sub-optimal prediction rate in the dropout measure\nε̃τ def = P [ I { w · x̃(i) > 0 } 6= cτ ∣∣ τ (i) = τ] , (7) where x̃(i) is an example thinned by binomial dropout (3), and P is taken over the data-generating process. Let ετ be the sub-optimal prediction rate in the original measure\nετ def = P [ I { w · x(i) > 0 } 6= cτ ∣∣ τ (i) = τ] . (8) Then:\nετ = Õ ( ε̃ 1 1−δ τ + √ Ψτ ) , (9)\nwhere Ψτ = maxj { w2j } / ∑d j=1 λ (τ) j w 2 j , and the constants in the bound depend only on δ.\nTheorem 1 only provides us with a useful bound when the term Ψτ is small. Whenever the largest w2j is not much larger than the average w 2 j , then √ Ψτ scales as O(1/ √ λ), where λ is the average document length. Thus, the bound (9) is most useful for long documents.\nA Heuristic Proof of Theorem 1. The proof of Theorem 1 is provided in the technical appendix. Here, we provide a heuristic argument for intuition. Given a fixed topic τ , suppose that it is optimal to predict cτ = 1, so our test error is ετ = P [ w · x ≤ 0 ∣∣ τ] . For long enough documents, by the central limit theorem, the score s def= w · x will be roughly Gaussian s ∼ N ( µτ , σ 2 τ ) , where\nµτ = ∑d j=1 λ (τ) j wj and σ 2 τ = ∑d j=1 λ (τ) j w 2 j . This implies that ετ ≈ Φ (−µτ/στ ) , where Φ is the cumulative distribution function of the Gaussian. Now, let s̃ def= w · x̃ be the score on a dropout sample. Clearly, E [s̃] = (1 − δ)µτ and Var [s̃] = (1 − δ)σ2τ , because the variance of a Poisson random variable scales with its mean. Thus,\nε̃τ ≈ Φ ( − √\n1− δ µτ στ\n) ≈ Φ ( −µτ στ )(1−δ) ≈ ε(1−δ)τ . (10)\nFigure 1b illustrates the relationship between the two Gaussians. This explains the first term on the right-hand side of (9). The extra error term √ Ψτ arises from a Berry-Esseen bound that approximates Poisson mixtures by Gaussian random variables."
    }, {
      "heading" : "4 A Generalization Bound for Dropout",
      "text" : "By setting up a bridge between the dropout measure and the original data-generating measure, Theorem 1 provides a foundation for our analysis. It remains to translate this result into a statement about the generalization error of dropout. For this, we need to make a few assumptions.\nOur first assumption is fundamental: if the classification signal is concentrated among just a few features, then we cannot expect dropout training to do well. The second and third assumptions, which are more technical, guarantee that a classifier can only do well overall if it does well on every topic; this lets us apply Theorem 1. A more general analysis that relaxes Assumptions 2 and 3 may be an interesting avenue for future work.\nAssumption 1: well-balanced weights First, we need to assume that all the signal is not concentrated in a few features. To make this intuition formal, we say a linear classifier with weights w is well-balanced if the following holds for each topic τ :\nmaxj { w2j } ∑d\nj=1 λ (τ) j∑d\nj=1 λ (τ) j w 2 j\n≤ κ for some 0 < κ <∞. (11)\nFor example, suppose each word was either useful (|wj | = 1) or not (wj = 0); then κ is the inverse expected fraction of words in a document that are useful. In Theorem 2 we restrict the ERM to well-balanced classifiers and assume that the expected risk minimizer h∗ over all linear rules is also well-balanced.\nAssumption 2: discrete topics Second, we assume that there are a finite number T of topics, and that the available topics are not too rare or ambiguous: the minimal probability of observing any topic τ is bounded below by P [τ ] ≥ pmin > 0, (12) and that each topic-conditional probability is bounded away from 12 (random guessing):∣∣∣∣P [y(i) = c ∣∣ τ (i) = τ]− 12\n∣∣∣∣ ≥ α > 0 (13) for all topics τ ∈ {1, ..., T}. This assumption substantially simplifies our arguments, allowing us to apply Theorem 1 to each topic separately without technical overhead.\nAssumption 3: distinct topics Finally, as an extension of Assumption 2, we require that the topics be “well separated.” First, define Errmin = P[y(i) 6= cτ(i) ], where cτ is the most likely label given topic τ (6); this is the error rate of the optimal decision rule that sees topic τ . We assume that the best linear rule h∗δ satisfying (11) is almost as good as always guessing the best label cτ under the dropout measure:\nErrδ (h ∗ δ) = Errmin +O ( 1√ λ ) , (14)\nwhere, as usual, λ is a lower bound on the average document length. If the dimension d is larger than the number of topics T , this assumption is fairly weak: the condition (14) holds whenever the matrix Π of topic centers has full rank, and the minimum singular value of Π is not too small (see Proposition 6 in the Appendix for details). This assumption is satisfied if the different topics can be separated from each other with a large margin.\nUnder Assumptions 1–3 we can turn Theorem 1 into a statement about generalization error. Theorem 2. Suppose that our features x are drawn from the Poisson generative model (Figure 1a), and Assumptions 1–3 hold. Define the excess risks of the dropout classifier ĥδ on the dropout and data-generating measures, respectively:\nη̃ def = Errδ ( ĥδ ) − Errδ (h∗δ) and η def = Err ( ĥδ ) − Err (h∗δ) . (15)\nThen, the altitude training phenomenon applies: η = Õ ( η̃ 1 1−δ +\n1√ λ\n) . (16)\nThe above bound scales linearly in p−1min and α −1; the full dependence on δ is shown in the appendix.\nIn a sense, Theorem 2 is a meta-generalization bound that allows us to transform generalization bounds with respect to the dropout measure (η̃) into ones on the data-generating measure (η) in a modular way. As a simple example, standard VC theory provides an η̃ = ÕP ( √ d/n) bound which, together with Theorem 2, yields:\nCorollary 3. Under the same conditions as Theorem 2, the dropout classifier ĥδ achieves the following excess risk:\nErr ( ĥδ ) − Err (h∗δ) = ÕP (√ d n ) 1 1−δ + 1√ λ  . (17) More generally, we can often check that upper bounds for Err(ĥ) − Err(h∗) also work as upper bounds for Errδ(ĥδ)− Errδ(h∗δ); this gives us the heuristic result from (1)."
    }, {
      "heading" : "5 The Bias of Dropout",
      "text" : "In the previous section, we showed that under the Poisson topic model in Figure 1a, dropout can achieve a substantial cut in excess risk Err(ĥδ)−Err(h∗δ). But to complete our picture of dropout’s performance, we must address the bias of dropout: Err(h∗δ)− Err(h∗). Dropout can be viewed as importing “hints” from a generative assumption about the data. Each observed (x, y) pair (each labeled document) gives us information not only about the conditional class probability at x, but also about the conditional class probabilities at numerous other hypothetical values x̃ representing shorter documents of the same class that did not occur. Intuitively, if these x̃ are actually good representatives of that class, the bias of dropout should be mild.\nFor our key result in this section, we will take the Poisson generative model from Figure 1a, but further assume that document length is independent of the topic. Under this assumption, we will show that dropout preserves the Bayes decision boundary in the following sense: Proposition 4. Let (x, y) be distributed according to the Poisson topic model of Figure 1a. Assume that document length is independent of topic: ‖λ(τ)‖1 = λ for all topics τ . Let x̃ be a binomial dropout sample of x with some dropout probability δ ∈ (0, 1). Then, for every feature vector v ∈ Rd, we have:\nP [ y = 1 ∣∣ x̃ = v] = P [y = 1 ∣∣x = v] . (18) If we had an infinite amount of data (x̃, y) corrupted under dropout, we would predict according to I{P [ y = 1\n∣∣ x̃ = v] > 12}. The significance of Proposition 4 is that this decision rule is identical to the true Bayes decision boundary (without dropout). Therefore, the empirical risk minimizer of a sufficiently rich hypothesis class trained with dropout would incur very small bias.\nHowever, Proposition 4 does not guarantee that dropout incurs no bias when we fit a linear classifier. In general, the best linear approximation for classifying shorter documents is not necessarily the best for classifying longer documents. As n → ∞, a linear classifier trained on (x, y) pairs will eventually outperform one trained on (x̃, y) pairs.\nDropout for Logistic Regression To gain some more intuition about how dropout affects linear classifiers, we consider logistic regression. A similar phenomenon should also hold for the ERM, but discussing this solution is more difficult since the ERM solution does not have have a simple characterization. The relationship between the 0-1 loss and convex surrogates has been studied by, e.g., [14, 15]. The score criterion for logistic regression is 0 = ∑n i=1 ( y(i) − p̂i ) x(i), where p̂i = (1 + e −ŵ·x(i))−1 are the fitted probabilities. Note that easily-classified examples (where p̂i is close to y(i)) play almost no role in driving the fit. Dropout turns easy examples into hard examples, giving more examples a chance to participate in learning a good classification rule.\nFigure 2a illustrates dropout’s tendency to spread influence more democratically for a simple classification problem with d = 2. The red class is a 99:1 mixture over two topics, one of which is much less common, but harder to classify, than the other. There is only one topic for the blue class. For long documents (open circles in the top right), the infrequent, hard-to-classify red cluster dominates the fit while the frequent, easy-to-classify red cluster is essentially ignored. For dropout documents with δ = 0.75 (small dots, lower left), both red clusters are relatively hard to classify, so the infrequent one plays a less disproportionate role in driving the fit. As a result, the fit based on dropout is more stable but misses the finer structure near the decision boundary. Note that the solid gray curve, the Bayes boundary, is unaffected by dropout, per Proposition 4. But, because it is nonlinear, we obtain a different linear approximation under dropout."
    }, {
      "heading" : "6 Experiments and Discussion",
      "text" : "Synthetic Experiment Consider the following instance of the Poisson topic model: We choose the document label uniformly at random: P [ y(i) = 1 ] = 12 . Given label 0, we choose topic τ (i) = 0 deterministically; given label 1, we choose a real-valued topic τ (i) ∼ Exp(3). The per-topic Poisson intensities λ(τ) are defined as follows:\nθ(τ) =  (1, . . . , 1 ∣∣ 0, . . . , 0 ∣∣ 0, . . . , 0) if τ = 0, (0, . . . , 0︸ ︷︷ ︸\n7\n∣∣ τ, . . . , τ︸ ︷︷ ︸ 7 ∣∣ 0, . . . , 0︸ ︷︷ ︸ 486 ) otherwise, λ(τ)j = 1000 · eθ (τ) j∑500 j′=1 e θ (τ) j′ . (19)\nThe first block of 7 independent words are indicative of label 0, the second block of 7 correlated words are indicative of label 1, and the remaining 486 words are indicative of neither.\nWe train a model on training sets of various size n, and evaluate the resulting classifiers’ error rates on a large test set. For dropout, we recalibrate the intercept on the training set. Figure 2b shows the results. There is a clear bias-variance tradeoff, with logistic regression (δ = 0) and naive Bayes (δ = 1) on the two ends of the spectrum.3 For moderate values of n, dropout improves performance, with δ = 0.95 (resulting in roughly 50-word documents) appearing nearly optimal for this example.\nSentiment Classification We also examined the performance of dropout as a function of training set size on a document classification task. Figure 3a shows results on the Polarity 2.0 task [17], where the goal is to classify positive versus negative movie reviews on IMDB. We divided the dataset into a training set of size 1,200 and a test set of size 800, and trained a bag-of-words logistic regression model with 50,922 features. This example exhibits the same behavior as our simulation. Using a larger δ results in a classifier that converges faster at first, but then plateaus. We also ran experiments on a larger IMDB dataset [18] with training and test sets of size 25,000 each and approximately 300,000 features. As Figure 3b shows, the results are similar, although the training set is not large enough for the learning curves to cross. When using the full training set, all but three pairwise comparisons in Figure 3 are statistically significant (p < 0.05 for McNemar’s test).\nDropout and Generative Modeling Naive Bayes and empirical risk minimization represent two divergent approaches to the classification problem. ERM is guaranteed to find the best model as n→ ∞ but can have suboptimal generalization error when n is not large relative to d. Conversely, naive Bayes has very low generalization error, but suffers from asymptotic bias. In this paper, we showed that dropout behaves as a link between ERM and naive Bayes, and can sometimes achieve a more favorable bias-variance tradeoff. By training on randomly generated sub-documents rather than on whole documents, dropout implicitly codifies a generative assumption about the data, namely that excerpts from a long document should have the same label as the original document (Proposition 4).\nLogistic regression with dropout appears to have an intriguing connection to the naive Bayes SVM (NBSVM) [19], which is a way of using naive Bayes generative assumptions to strengthen an SVM. In a recent survey of bag-of-words classifiers for document classification, NBSVM and dropout often obtain state-of-the-art accuracies, e.g., [7]. This suggests that a good way to learn linear models for document classification is to use discriminative models that borrow strength from an approximate generative assumption to cut their generalization error. Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25]. Our approach is more guarded in that we only let the generative assumption speak through pseudo-examples.\nConclusion We have presented a theoretical analysis that explains how dropout training can be very helpful under a Poisson topic model assumption. Specifically, by making training examples artificially difficult, dropout improves the exponent in the generalization bound for ERM. We believe that this work is just the first step in understanding the benefits of training with artificially corrupted features, and we hope the tools we have developed can be extended to analyze other training schemes under weaker data-generating assumptions.\n3When the logistic regression fit is degenerate, we use L2-regularized logistic regression with weight 10−7."
    }, {
      "heading" : "A Technical Results",
      "text" : "We now give detailed proofs of the theorems in the paper.\nA.1 Altitude Training Phenomeon\nWe begin with a proof of our main generalization bound result, namely Theorem 1. The proof is built on top of the following Berry-Esseen type result. Lemma 5. Let Z1, ..., Zd be independent Poisson random variables with means λj ∈ R+, and let\nS = d∑ j=1 wjZj , µ = E [S] , and σ2 = Var [S]\nfor some fixed set of weights {wj}dj=1. Then, writing FS for the distribution function of S and Φ for the standard Gaussian distribution,\nsup x∈R ∣∣∣∣FS(x)− Φ(x− µσ )∣∣∣∣ ≤ CBE √√√√ maxj{w2j}∑d j=1 λjw 2 j , (20)\nwhere CBE ≤ 4. Proof. Our first step is to write S as a sum of bounded i.i.d. random variables. Let N = ∑d j=1 Zj . Conditional on N , the Zj are distributed as a multinomial with parameters πj = λj/λ where λ =∑d j=1 λj . Thus,\nL ( S ∣∣N) d=L( N∑\nk=1\nWk ∣∣N) ,\nwhere Wk ∈ {w1, ..., wd} is a single multinomial draw from the available weights with probability parameters P [Wk = wj ] = πj . This implies that,\nS d = N∑ k=1 Wk,\nwhere N itself is a Poisson random variable with mean λ.\nWe also know that a Poisson random variable can be written as a limiting mixture of many rare Bernoulli trials: B(m) ⇒ N, with B(m) = Binom ( m, λ\nm\n) .\nThe upshot is that\nS(m) ⇒ S, with S(m) = m∑ k=1 WkIk, (21)\nwhere the Wk are as before, and the Ik are independent Bernoulli draws with parameter λ/m. Because S(m) converges to S in distribution, it suffices to show that (20) holds for large enough m. The moments of S(m) are correct in finite samples: E [ S(m) ] = µ and Var [ S(m) ] = σ2 for all m.\nThe key ingredient in establishing (20) is the Berry-Esseen inequality [26], which in our case implies that\nsup x∈R ∣∣∣∣FS(m)(x)− Φ(x− µσ )∣∣∣∣ ≤ ρm2s3m√m,\nwhere\ns2m = Var [WkIk] , ρm = E [ |WkIk − E [WkIk]|3 ] ,\nWe can show that\ns2m = E [ (WkIk) 2 ] − E [WkIk]2 = λ m E [ W 2k ] − ( λ m E [Wk] )2 , and\nρm ≤ 8 ( E [ |WkIk|3 ] + E [|WkIk|]3 ) = 8\n( λ\nm E [ |Wk|3 ] + ( λ m E [|Wk|] )3) .\nTaking m to∞, this implies that\nsup x∈R ∣∣∣∣FS(x)− Φ(x− µσ )∣∣∣∣ ≤ 4E\n[ |W |3 ] E [W 2]3/2 1√ λ .\nThus, to establish (20), it only remains to bound E [ |W |3 ] /E [ W 2 ]3/2 . Notice that Pj def =\nπjw 2 j/E\n[ W 2 ] defines a probability distribution on {1, . . . , d}, and\nE [ |W |3 ] E [W 2] = EP [|W |] ≤ max j {|wj |}.\nThus,\nE [ |W |3 ] E [W 2]3/2 ≤ √√√√ maxj{w2j}∑d j=1 πjw 2 j .\nWe are now ready to prove our main result.\nProof of Theorem 1. The classifier h is a linear classifier of the form\nh (x) = I {S > 0} where S def= d∑ j=1 wjxj ,\nwhere by assumption xj ∼ Poisson ( λ (τ) j ) . Our model was fit by dropout, so during training we\nonly get to work with x̃ instead of x, where\nx̃j ∼ Binom (xj , 1− δ) , and so unconditionally x̃j ∼ Poisson ( (1− δ) λ(τ)j ) .\nWithout loss of generality, suppose that cτ = 1, so that we can write the error rate ετ during dropout as\nετ = P [ S̃ < 0 ∣∣ τ] , where S̃ = d∑ j=1 wj x̃j . (22)\nIn order to prove our result, we need to translate the information about S̃ into information about S.\nThe key to the proof is to show that the sums S and S̃ have nearly Gaussian distributions. Let\nµ = d∑ j=1 λ (τ) j wj and σ 2 = d∑ j=1 λ (τ) j w 2 j\nbe the mean and variance of S. After dropout, E [ S̃ ] = (1− δ)µ and Var [ S̃ ] = (1− δ)σ2.\nWriting FS and FS̃ for the distributions of S and S̃, we see from Lemma 5 that\nsup x∈R ∣∣∣∣FS(x)− Φ(x− µσ )∣∣∣∣ ≤ CBE√Ψτ and\nsup x∈R ∣∣∣∣FS̃(x)− Φ(x− (1− δ)µ√1− δ σ )∣∣∣∣ ≤ CBE√1− δ √Ψτ ,\nwhere Ψτ is as defined in (9). Recall that our objective is to bound ετ = FS(0) in terms of ε̃τ = FS̃(0). The above result implies that\nετ ≤ Φ ( −µ σ ) + CBE √ Ψτ , and\nΦ ( − √\n1− δ µ σ\n) ≤ ε̃τ +\nCBE√ 1− δ\n√ Ψτ .\nNow, writing t = √ 1− δ µ/σ, we can use the Gaussian tail inequalities\nτ τ2 + 1 < √ 2π e τ2 2 Φ (−τ) < 1 τ for all τ > 0 (23)\nto check that for all t ≥ 1,\nΦ ( − t√\n1− δ\n) ≤ 1√\n2π\n√ 1− δ t e− t2 2(1−δ)\n=\n√ 1− δ t δ 1−δ\n√ 2π − δ1−δ\n( 1√ 2π 1 t e− t2 2 ) 1 1−δ\n≤ 2 1 1−δ\n√ 1− δ t δ 1−δ\n√ 2π − δ1−δ\n( 1√ 2π t t2 + 1 e− t2 2 ) 1 1−δ\n≤ 2 1\n1−δ √\n1− δ √\n2π − δ1−δ\nt δ 1−δ Φ (−t) 1 1−δ\nand so noting that in tΦ(−t) is monotone decreasing in our range of interest and that t ≤√ −2 log Φ(−t), we conclude that for all ε̃τ + CBE/ √ 1− δ √ Ψτ ≤ Φ(−1),\nετ ≤ 2\n1 1−δ √\n1− δ √\n4π − δ1−δ\n(√ − log ( ε̃+\nCBE√ 1− δ\n√ Ψτ\n)) δ1−δ\n· ( ε̃+\nCBE√ 1− δ\n√ Ψτ\n) 1 1−δ\n+ CBE √ Ψτ . (24)\nWe can also write the above expression in more condensed form: P [ I{ŵ · x(i)} 6= cτ ∣∣ τ (i) = τ] (25) = O  ε̃τ + √√√√ max{w2j}∑d j=1 λ (τ) j w 2 j (1−δ)  1 1−δ ·max { 1, √ − log (ε̃τ ) δ 1−δ\n} . The desired conclusion (9) is equivalent to the above expression, except it uses notation that hides the log factors.\nProof of Theorem 2. We can write the dropout error rate as\nErrδ ( ĥδ ) = Errmin +∆,\nwhere Errmin is the minimal possible error from assumption (14) and ∆ is the the excess error\n∆ = T∑ τ=1 P [τ ] ε̃τ · ∣∣∣P [y(i) = 1 ∣∣ τ (i) = τ]− P [y(i) = 0 ∣∣ τ (i) = τ]∣∣∣ .\nHere, P [τ ] is the probability of observing a document with topic τ and ε̃τ is as in Theorem 1. The equality follows by noting that, for each topic τ , the excess error rate is given by the rate at which we make sub-optimal guesses, i.e., ε̃τ , times the excess probability that we make a classification error given that we made a sub-optimal guess, i.e.,\n∣∣P [y(i) = 1 ∣∣ τ (i) = τ]− P [y(i) = 0 ∣∣ τ (i) = τ]∣∣. Now, thanks to (14), we know that\nErrδ (h ∗ δ) = Errmin +O ( 1√ λ ) ,\nand so the generalization error η̃ under the dropout measure satisfies ∆ = η̃ +O (\n1√ λ\n) .\nUsing (12), we see that ε̃τ ≤ ∆ / (2αpmin)\nfor each τ , and so\nε̃τ = O ( η̃ +\n1√ λ ) uniformly in τ . Thus, given the bound (11), we conclude using (25) that\nετ = O (( η̃ + λ− 1−δ 2 ) 1 1−δ max { 1, √ − log (η̃) δ 1−δ }) for each topic τ , and so\nη = Err ( ĥδ ) − Err (h∗δ) (26)\n= O (( η̃ + λ− 1−δ 2 ) 1 1−δ max { 1, √ − log (η̃) δ 1−δ }) ,\nwhich directly implies (16). Note η will in general be larger than the ετ , because guessing the optimal label cτ is not guaranteed to lead to a correct classification decision (unless each topic is pure, i.e., only represents one class). Here, substracting the optimal error Err (h∗δ) allows us to compensate for this effect.\nProof of Corollary 3. Here, we prove the more precise bound\nErr ( ĥδ ) − Err (h∗δ) = OP √( d n + 1 λ(1−δ) ) max { 1, log (n d )}1+δ 11−δ . (27) To do this, we only need to show that\nErrδ ( ĥδ ) − Errδ (h∗δ) = OP\n(√ d\nn max\n{ 1, log (n d )}) , (28)\ni.e., that dropout generalizes at the usual rate with respect to the dropout measure. Then, by applying (26) from the proof of Theorem 2, we immediately conclude that ĥδ converges at the rate given in (17) under the data-generating measure.\nLet Êrrδ(h) be the average training loss for a classifier h. The empirical loss is unbiased, i.e., E [ Êrrδ(h) ] = Errδ(h).\nGiven this unbiasedness condition, standard methods for establishing rates as in (28) [27] only require that the loss due to any single training example (x(i), y(i)) is bounded, and that the training examples are independent; these conditions are needed for an application of Hoeffding’s inequality. Both of these conditions hold here.\nA.2 Distinct Topics Assumption\nProposition 6. Let the generative model from Section 2 hold, and define π(τ) = λ(τ)/ ∥∥∥λ(τ)∥∥∥\n1\nfor the topic-wise word probability vectors and\nΠ = (π(1), . . . , π(T )) ∈ Rd×T\nfor the induced matrix. Suppose that Π has rank T , and that the minimum singular value of Π (in absolute value) is bounded below by\n|σmin (Π)| ≥\n√ T\n(1− δ)λ\n( 1 + √ log+ λ\n2π\n) , (29)\nwhere log+ is the positive part of log. Then (14) holds.\nProof. Our proof has two parts. We begin by showing that, given (29), there is a vector w with ‖w‖2 ≤ 1 such that\nI { w · π(τ) > 0 } = cτ , and ∣∣∣w · π(τ)∣∣∣ ≥ − 1√ (1− δ)λ Φ−1 ( 1√ λ ) (30)\nfor all topics τ ; in other words, the topic centers can be separated with a large margin. After that, we show that (30) implies (14).\nWe can re-write the condition (30) as\nmin { ‖w‖2 : cτw · π (τ) ≥ 1 for all τ } ≤ ( − 1√\n(1− δ)λ Φ−1 ( 1√ λ ))−1 ,\nor equivalently that\nmin { ‖w‖2 : SΠ >w ≥ 1 } ≤ ( − 1√\n(1− δ)λ Φ−1 ( 1√ λ ))−1 where S = diag(cτ ) is a diagonal matrix of class signs. Now, assuming that rank(Π) ≥ T , we can verify that\nmin { ‖w‖2 : SΠ >w ≥ 1 } = min {√ z> (Π>S2Π) −1 z : z ≥ 1 } ≤ √ 1> (Π>Π) −1 1\n≤ |σmin (Π)|−1 √ T\n≤ ( 1√\n(1− δ)λ\n( 1 + √ log+ λ\n2π\n))−1 ,\nwhere the last line followed by hypothesis. Now, by (23)\nΦ ( − ( 1 + √ log+ λ\n2π\n)) ≤ 1√\n2π exp\n( −1\n2 log\nλ\n2π\n) =\n1√ λ .\nBecause Φ−1 is monotone increasing, this implies that( 1 + √ log+ λ\n2π\n)−1 ≤ ( −Φ−1 ( 1√ λ ))−1 ,\nand so (30) holds.\nNow, taking (30) as given, it suffices to check that the sub-optimal prediction rate is O ( 1/ √ λ )\nuniformly for each τ . Focusing now on a single topic τ , suppose without loss of generality that cτ = 1. We thus need to show that P [w · x̃ ≤ 0] = O (\n1√ λ\n) ,\nwhere x̃ is a feature vector thinned by dropout. By Lemma 5 together with (11), we know that\nP [w · x̃ ≤ 0] ≤ Φ ( − E [w · x̃]√\nVar [w · x̃]\n) +O ( 1√ λ ) .\nBy hypothesis,\nE [w · x̃] ≥ − √ (1− δ)λ(τ)Φ−1 (\n1√ λ\n) ,\nand we can check that Var [w · x̃] = (1− δ) d∑ j=1 w2jλ (τ) j ≤ (1− δ)λ (τ)\nbecause ‖w‖2 ≤ 1. Thus,\nΦ ( − E [w · x̃]√\nVar [w · x̃]\n) ≤ Φ ( Φ−1 ( 1√ λ )) = 1√ λ ,\nand (14) holds.\nA.3 Dropout Preserves the Bayes Decision Boundary\nProof of Proposition 4. Another way to view our topic model is as follows. For each topic τ , define a distribution over words π(τ) ∈ ∆d−1: π(τ) def= λ(τ)/‖λ(τ)‖1. The generative model is equivalent to first drawing the length of the document and then drawing the words from a multinomial:\nLi ∼ Poisson ( ‖λ(τ)‖1 ) , and x(i) ∣∣ τ (i), Li ∼ Multinom(π(τ(i)), Li) . (31) Now, write the multinomial probability mass function (31) as\nPm [x; π, L] = L!\nx1! · · ·xp! πx11 · · ·π xd d\nFor each label c, define Πc to be the distribution over the probability vectors induced by the distribution over topics. Note that we could have an infinite number of topics. By Bayes rule,\nP [ x = v ∣∣ y = c] = P L = d∑\nj=1\nvj  · ∫ Pm v; π, d∑\nj=1\nvj  dΠc(π), and P [ y = c ∣∣x = v] = P [c] ∫ Pm [ v; π, ∑d j=1 vj ] dΠc(π)∑\nc′ P [c′] ∫ Pm [ v; π, ∑d j=1 vj ] dΠc′(π) .\nThe key part is that the distribution of L doesn’t depend on c, so that when we condition on x = v, it cancels. As for the joint distribution of (x̃, y), note that, given π and L̃ = ∑d j=1 x̃j , x̃ is\nconditionally Multinom(π, L̃). So then\nP [ x̃ = v ∣∣ y = c] = P L̃ = d∑\nj=1\nvj  · ∫ Pm v; π, d∑\nj=1\nvj  dΠc(π), and P [ y = c ∣∣ x̃ = v] = P [c] ∫ Pm [ v; π, ∑d j=1 vj ] dΠc(π)∑\nc′ P [c′] ∫ Pm [ v; π, ∑d j=1 vj ] dΠc′(π) .\nIn both cases, L and L̃ don’t depend on the topic, and when we condition on x and x̃, we get the same distribution over y."
    } ],
    "references" : [ {
      "title" : "Improving neural networks by preventing co-adaptation of feature detectors",
      "author" : [ "Geoffrey E Hinton", "Nitish Srivastava", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan R Salakhutdinov" ],
      "venue" : null,
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2012
    }, {
      "title" : "Adaptive dropout for training deep neural networks",
      "author" : [ "Jimmy Ba", "Brendan Frey" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2013
    }, {
      "title" : "Imagenet classification with deep convolutional neural networks",
      "author" : [ "Alex Krizhevsky", "Ilya Sutskever", "Geoff Hinton" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2012
    }, {
      "title" : "Regularization of neural networks using dropconnect",
      "author" : [ "Li Wan", "Matthew Zeiler", "Sixin Zhang", "Yann L Cun", "Rob Fergus" ],
      "venue" : "In Proceedings of the International Conference on Machine Learning,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2013
    }, {
      "title" : "Dropout training as adaptive regularization",
      "author" : [ "Stefan Wager", "Sida Wang", "Percy Liang" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2013
    }, {
      "title" : "Fast dropout training",
      "author" : [ "Sida I Wang", "Christopher D Manning" ],
      "venue" : "In Proceedings of the International Conference on Machine Learning,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2013
    }, {
      "title" : "Feature noising for log-linear structured prediction",
      "author" : [ "Sida I Wang", "Mengqiu Wang", "Stefan Wager", "Percy Liang", "Christopher D Manning" ],
      "venue" : "In Empirical Methods in Natural Language Processing,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2013
    }, {
      "title" : "Learning with marginalized corrupted features",
      "author" : [ "Laurens van der Maaten", "Minmin Chen", "Stephen Tyree", "Kilian Q Weinberger" ],
      "venue" : "In International Conference on Machine Learning,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2013
    }, {
      "title" : "On discriminative vs. generative classifiers: A comparison of logistic regression and naive Bayes",
      "author" : [ "Andrew Ng", "Michael Jordan" ],
      "venue" : "Advances in Neural Information Processing Systems,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2001
    }, {
      "title" : "A PAC-Bayesian tutorial with a dropout",
      "author" : [ "David McAllester" ],
      "venue" : "bound. arXiv:1307.2118,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2013
    }, {
      "title" : "The dropout learning algorithm",
      "author" : [ "Pierre Baldi", "Peter Sadowski" ],
      "venue" : "Artificial Intelligence,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2014
    }, {
      "title" : "Nightmare at test time: robust learning by feature deletion",
      "author" : [ "Amir Globerson", "Sam Roweis" ],
      "venue" : "In Proceedings of the International Conference on Machine Learning,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2006
    }, {
      "title" : "Convexity, classification, and risk bounds",
      "author" : [ "Peter L Bartlett", "Michael I Jordan", "Jon D McAuliffe" ],
      "venue" : "Journal of the American Statistical Association,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2006
    }, {
      "title" : "Statistical behavior and consistency of classification methods based on convex risk minimization",
      "author" : [ "Tong Zhang" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2004
    }, {
      "title" : "Latent Dirichlet allocation",
      "author" : [ "David M Blei", "Andrew Y Ng", "Michael I Jordan" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2003
    }, {
      "title" : "A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts",
      "author" : [ "Bo Pang", "Lillian Lee" ],
      "venue" : "In Proceedings of the Association for Computational Linguistics,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2004
    }, {
      "title" : "Learning word vectors for sentiment analysis",
      "author" : [ "Andrew L Maas", "Raymond E Daly", "Peter T Pham", "Dan Huang", "Andrew Y Ng", "Christopher Potts" ],
      "venue" : "In Proceedings of the Association for Computational Linguistics,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2011
    }, {
      "title" : "Baselines and bigrams: Simple, good sentiment and topic classification",
      "author" : [ "Sida Wang", "Christopher D Manning" ],
      "venue" : "In Proceedings of the Association for Computational Linguistics,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2012
    }, {
      "title" : "Classification with hybrid generative/discriminative models",
      "author" : [ "R. Raina", "Y. Shen", "A. Ng", "A. McCallum" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2004
    }, {
      "title" : "The trade-off between generative and discriminative classifiers",
      "author" : [ "G. Bouchard", "B. Triggs" ],
      "venue" : "In International Conference on Computational Statistics,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2004
    }, {
      "title" : "Principled hybrids of generative and discriminative models",
      "author" : [ "J.A. Lasserre", "C.M. Bishop", "T.P. Minka" ],
      "venue" : "In Computer Vision and Pattern Recognition,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2006
    }, {
      "title" : "Bias-variance tradeoff in hybrid generative-discriminative models",
      "author" : [ "Guillaume Bouchard" ],
      "venue" : "In International Conference on Machine Learning and Applications. IEEE,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2007
    }, {
      "title" : "Multi-conditional learning: Generative/discriminative training for clustering and classification",
      "author" : [ "A. McCallum", "C. Pal", "G. Druck", "X. Wang" ],
      "venue" : "In Association for the Advancement of Artificial Intelligence,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2006
    }, {
      "title" : "An asymptotic analysis of generative, discriminative, and pseudolikelihood estimators",
      "author" : [ "Percy Liang", "Michael I Jordan" ],
      "venue" : "In Proceedings of the International Conference on Machine Learning,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2008
    }, {
      "title" : "An introduction to probability theory and its applications, volume 2",
      "author" : [ "Willliam Feller" ],
      "venue" : null,
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 1971
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Dropout training [1] is an increasingly popular method for regularizing learning algorithms.",
      "startOffset" : 17,
      "endOffset" : 20
    }, {
      "referenceID" : 1,
      "context" : "Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8].",
      "startOffset" : 68,
      "endOffset" : 80
    }, {
      "referenceID" : 2,
      "context" : "Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8].",
      "startOffset" : 68,
      "endOffset" : 80
    }, {
      "referenceID" : 3,
      "context" : "Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8].",
      "startOffset" : 68,
      "endOffset" : 80
    }, {
      "referenceID" : 4,
      "context" : "Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8].",
      "startOffset" : 277,
      "endOffset" : 286
    }, {
      "referenceID" : 5,
      "context" : "Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8].",
      "startOffset" : 277,
      "endOffset" : 286
    }, {
      "referenceID" : 6,
      "context" : "Dropout is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found to improve the performance of logistic regression and other single-layer models for natural language tasks such as document classification and named entity recognition [6, 7, 8].",
      "startOffset" : 277,
      "endOffset" : 286
    }, {
      "referenceID" : 7,
      "context" : "For single-layer linear models, learning with dropout is equivalent to using “blankout noise” [9].",
      "startOffset" : 94,
      "endOffset" : 97
    }, {
      "referenceID" : 8,
      "context" : "It is instructive to compare our generalization bound to that of Ng and Jordan [10], who showed that the naive Bayes classifier exploits a strong generative assumption—conditional independence of the features given the label—to achieve an excess risk of OP ( √ (log d)/n).",
      "startOffset" : 79,
      "endOffset" : 83
    }, {
      "referenceID" : 9,
      "context" : "McAllester [11] used the PAC-Bayes framework to prove a generalization bound for dropout that decays as 1 − δ.",
      "startOffset" : 11,
      "endOffset" : 15
    }, {
      "referenceID" : 4,
      "context" : "Moreover, provided that δ is not too close to 1, dropout behaves similarly to an adaptive L2 regularizer with parameter δ/(1−δ) [6, 12], and at least in linear regression such L2 regularization improves generalization error by a constant factor.",
      "startOffset" : 128,
      "endOffset" : 135
    }, {
      "referenceID" : 10,
      "context" : "Moreover, provided that δ is not too close to 1, dropout behaves similarly to an adaptive L2 regularizer with parameter δ/(1−δ) [6, 12], and at least in linear regression such L2 regularization improves generalization error by a constant factor.",
      "startOffset" : 128,
      "endOffset" : 135
    }, {
      "referenceID" : 4,
      "context" : "It is also possible to analyze dropout as an adaptive regularizer [6, 9, 13]: in comparison with L2 regularization, dropout favors the use of rare features and encourages confident predictions.",
      "startOffset" : 66,
      "endOffset" : 76
    }, {
      "referenceID" : 7,
      "context" : "It is also possible to analyze dropout as an adaptive regularizer [6, 9, 13]: in comparison with L2 regularization, dropout favors the use of rare features and encourages confident predictions.",
      "startOffset" : 66,
      "endOffset" : 76
    }, {
      "referenceID" : 11,
      "context" : "It is also possible to analyze dropout as an adaptive regularizer [6, 9, 13]: in comparison with L2 regularization, dropout favors the use of rare features and encourages confident predictions.",
      "startOffset" : 66,
      "endOffset" : 76
    }, {
      "referenceID" : 8,
      "context" : ", [10, 14, 15]).",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 12,
      "context" : ", [10, 14, 15]).",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 13,
      "context" : ", [10, 14, 15]).",
      "startOffset" : 2,
      "endOffset" : 14
    }, {
      "referenceID" : 0,
      "context" : "Because we are only interested in the decision boundary, we do not scale down the weight vector obtained by dropout by a factor 1− δ as is often done [1].",
      "startOffset" : 150,
      "endOffset" : 153
    }, {
      "referenceID" : 4,
      "context" : "Binomial dropout differs slightly from the usual definition of (blankout) dropout, which alters the feature vector x by setting random coordinates to 0 [6, 9, 11, 12].",
      "startOffset" : 152,
      "endOffset" : 166
    }, {
      "referenceID" : 7,
      "context" : "Binomial dropout differs slightly from the usual definition of (blankout) dropout, which alters the feature vector x by setting random coordinates to 0 [6, 9, 11, 12].",
      "startOffset" : 152,
      "endOffset" : 166
    }, {
      "referenceID" : 9,
      "context" : "Binomial dropout differs slightly from the usual definition of (blankout) dropout, which alters the feature vector x by setting random coordinates to 0 [6, 9, 11, 12].",
      "startOffset" : 152,
      "endOffset" : 166
    }, {
      "referenceID" : 10,
      "context" : "Binomial dropout differs slightly from the usual definition of (blankout) dropout, which alters the feature vector x by setting random coordinates to 0 [6, 9, 11, 12].",
      "startOffset" : 152,
      "endOffset" : 166
    }, {
      "referenceID" : 14,
      "context" : "If Θ is the (K − 1)-dimensional simplex where λ is a τ -mixture over K basis vectors, we get the K-topic latent Dirichlet allocation [16].",
      "startOffset" : 133,
      "endOffset" : 137
    }, {
      "referenceID" : 6,
      "context" : "(4) Dropout training is known to work well in practice for multi-class problems [8].",
      "startOffset" : 80,
      "endOffset" : 83
    }, {
      "referenceID" : 12,
      "context" : ", [14, 15].",
      "startOffset" : 2,
      "endOffset" : 10
    }, {
      "referenceID" : 13,
      "context" : ", [14, 15].",
      "startOffset" : 2,
      "endOffset" : 10
    }, {
      "referenceID" : 15,
      "context" : "0 dataset [17].",
      "startOffset" : 10,
      "endOffset" : 14
    }, {
      "referenceID" : 16,
      "context" : "(b) IMDB dataset [18].",
      "startOffset" : 17,
      "endOffset" : 21
    }, {
      "referenceID" : 15,
      "context" : "0 task [17], where the goal is to classify positive versus negative movie reviews on IMDB.",
      "startOffset" : 7,
      "endOffset" : 11
    }, {
      "referenceID" : 16,
      "context" : "We also ran experiments on a larger IMDB dataset [18] with training and test sets of size 25,000 each and approximately 300,000 features.",
      "startOffset" : 49,
      "endOffset" : 53
    }, {
      "referenceID" : 17,
      "context" : "Logistic regression with dropout appears to have an intriguing connection to the naive Bayes SVM (NBSVM) [19], which is a way of using naive Bayes generative assumptions to strengthen an SVM.",
      "startOffset" : 105,
      "endOffset" : 109
    }, {
      "referenceID" : 5,
      "context" : ", [7].",
      "startOffset" : 2,
      "endOffset" : 5
    }, {
      "referenceID" : 18,
      "context" : "Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25].",
      "startOffset" : 155,
      "endOffset" : 179
    }, {
      "referenceID" : 19,
      "context" : "Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25].",
      "startOffset" : 155,
      "endOffset" : 179
    }, {
      "referenceID" : 20,
      "context" : "Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25].",
      "startOffset" : 155,
      "endOffset" : 179
    }, {
      "referenceID" : 21,
      "context" : "Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25].",
      "startOffset" : 155,
      "endOffset" : 179
    }, {
      "referenceID" : 22,
      "context" : "Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25].",
      "startOffset" : 155,
      "endOffset" : 179
    }, {
      "referenceID" : 23,
      "context" : "Our analysis presents an interesting contrast to other work that directly combine generative and discriminative modeling by optimizing a hybrid likelihood [20, 21, 22, 23, 24, 25].",
      "startOffset" : 155,
      "endOffset" : 179
    } ],
    "year" : 2014,
    "abstractText" : "Dropout training, originally designed for deep neural networks, has been successful on high-dimensional single-layer natural language tasks. This paper proposes a theoretical explanation for this phenomenon: we show that, under a generative Poisson topic model with long documents, dropout training improves the exponent in the generalization bound for empirical risk minimization. Dropout achieves this gain much like a marathon runner who practices at altitude: once a classifier learns to perform reasonably well on training examples that have been artificially corrupted by dropout, it will do very well on the uncorrupted test set. We also show that, under similar conditions, dropout preserves the Bayes decision boundary and should therefore induce minimal bias in high dimensions.",
    "creator" : "LaTeX with hyperref package"
  }
}