{
  "name" : "1606.06357.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Complex Embeddings for Simple Link Prediction",
    "authors" : [ "Théo Trouillon", "Johannes Welbl", "Sebastian Riedel", "Éric Gaussier", "Guillaume Bouchard" ],
    "emails" : [ "THEO.TROUILLON@XRCE.XEROX.COM", "J.WELBL@CS.UCL.AC.UK", "S.RIEDEL@CS.UCL.AC.UK", "ERIC.GAUSSIER@IMAG.FR", "G.BOUCHARD@CS.UCL.AC.UK" ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "Web-scale knowledge bases (KBs) provide a structured representation of world knowledge, with projects such as DBPedia (Auer et al., 2007), Freebase (Bollacker et al., 2008) or the Google Knowledge Vault (Dong et al., 2014). They enable a wide range of applications such as recommender systems, question answering or automated personal agents. The incompleteness of these KBs has stimulated\n1Code is available at: https://github.com/ ttrouill/complex\nProceedings of the 33 rd International Conference on Machine Learning, New York, NY, USA, 2016. JMLR: W&CP volume 48. Copyright 2016 by the author(s).\nresearch into predicting missing entries, a task known as link prediction that is one of the main problems in Statistical Relational Learning (SRL, Getoor & Taskar, 2007).\nKBs express data as a directed graph with labeled edges (relations) between nodes (entities). Natural redundancies among the recorded relations often make it possible to fill in the missing entries of a KB. As an example, the relation CountryOfBirth is not recorded for all entities, but it can easily be inferred if the relation CityOfBirth is known. The goal of link prediction is the automatic discovery of such regularities. However, many relations are non-deterministic: the combination of the two facts IsBornIn(John,Athens) and IsLocatedIn(Athens,Greece) does not always imply the fact HasNationality(John,Greece). Hence, it is required to handle other facts involving these relations or entities in a probabilistic fashion.\nTo do so, an increasingly popular method is to state the link prediction task as a 3D binary tensor completion problem, where each slice is the adjacency matrix of one relation type in the knowledge graph. Completion based on low-rank factorization or embeddings has been popularized with the Netflix challenge (Koren et al., 2009). A partially observed matrix or tensor is decomposed into a product of embedding matrices with much smaller rank, resulting in fixed-dimensional vector representations for each entity and relation in the database. For a given fact r(s,o) in which subject s is linked to object o through relation r, the score can then be recovered as a multi-linear product between the embedding vectors of s, r and o (Nickel et al., 2016a).\nBinary relations in KBs exhibit various types of patterns: hierarchies and compositions like FatherOf, OlderThan or IsPartOf—with partial/total, strict/non-strict orders—and equivalence relations like IsSimilarTo. As described in Bordes et al. (2013a), a relational model should (a) be able to learn\nar X\niv :1\n60 6.\n06 35\n7v 1\n[ cs\n.A I]\n2 0\nJu n\nall combinations of these properties, namely reflexivity/irreflexivity, symmetry/antisymmetry and transitivity, and (b) be linear in both time and memory in order to scale to the size of present day KBs, and keep up with their growth.\nDot products of embeddings scale well and can naturally handle both symmetry and (ir-)reflexivity of relations; using an appropriate loss function even enables transitivity (Bouchard et al., 2015). However, dealing with antisymmetric relations has so far almost always implied an explosion of the number of parameters (Nickel et al., 2011; Socher et al., 2013) (see Table 1), making models prone to overfitting. Finding the best ratio between expressiveness and parameter space size is the keystone of embedding models.\nIn this work we argue that the standard dot product between embeddings can be a very effective composition function, provided that one uses the right representation. Instead of using embeddings containing real numbers we discuss and demonstrate the capabilities of complex embeddings. When using complex vectors, i.e. vectors with entries in C, the dot product is often called the Hermitian (or sesquilinear) dot product, as it involves the conjugate-transpose of one of the two vectors. As a consequence, the dot product is not symmetric any more, and facts about antisymmetric relations can receive different scores depending on the ordering of the entities involved. Thus complex vectors can effectively capture antisymmetric relations while retaining the efficiency benefits of the dot product, that is linearity in both space and time complexity.\nThe remainder of the paper is organized as follows. We first justify the intuition of using complex embeddings in the square matrix case in which there is only a single relation between entities. The formulation is then extended to a stacked set of square matrices in a third-order tensor to represent multiple relations. We then describe experiments on large scale public benchmark KBs in which we empirically show that this representation leads not only to simpler and faster algorithms, but also gives a systematic accuracy improvement over current state-of-the-art alternatives.\nTo give a clear comparison with respect to existing approaches using only real numbers, we also present an equivalent reformulation of our model that involves only real embeddings. This should help practitioners when implementing our method, without requiring the use of complex numbers in their software implementation."
    }, {
      "heading" : "2. Relations as Real Part of Low-Rank Normal Matrices",
      "text" : "In this section we discuss the use of complex embeddings for low-rank matrix factorization and illustrate this\nby considering a simplified link prediction task with merely a single relation type.\nUnderstanding the factorization in complex space leads to a better theoretical understanding of the class of matrices that can actually be approximated by dot products of embeddings. These are the so-called normal matrices for which the left and right embeddings share the same unitary basis."
    }, {
      "heading" : "2.1. Modelling Relations",
      "text" : "Let E be a set of entities with |E| = n. A relation between two entities is represented as a binary value Yso ∈ {−1, 1}, where s ∈ E is the subject of the relation and o ∈ E its object. Its probability is given by the logistic inverse link function:\nP (Yso = 1) = σ(Xso) (1)\nwhere X ∈ Rn×n is a latent matrix of scores, and Y the partially observed sign matrix.\nOur goal is to find a generic structure for X that leads to a flexible approximation of common relations in real world KBs. Standard matrix factorization approximates X by a matrix product UV T , where U and V are two functionally independent n ×K matrices, K being the rank of the matrix. Within this formulation it is assumed that entities appearing as subjects are different from entities appearing as objects. This means that the same entity will have two different embedding vectors, depending on whether it appears as the subject or the object of a relation. This extensively studied type of model is closely related to the singular value decomposition (SVD) and fits well to the case where the matrix X is rectangular. However, in many link prediction problems, the same entity can appear as both subject and object. It then seems natural to learn joint embeddings of the entities, which entails sharing the embeddings of the left and right factors, as proposed by several authors to solve the link prediction problem (Nickel et al., 2011; Bordes et al., 2013b; Yang et al., 2015).\nIn order to use the same embedding for subjects and objects, researchers have generalised the notion of dot products to scoring functions, also known as composition functions, that combine embeddings in specific ways. We briefly recall several examples of scoring functions in Table 1, as well as the extension proposed in this paper.\nUsing the same embeddings for right and left factors boils down to Eigenvalue decomposition:\nX = EWE−1 . (2)\nIt is often used to approximate real symmetric matrices such as covariance matrices, kernel functions and distance or similarity matrices. In these cases all eigenvalues and eigenvectors live in the real space and E is orthogonal:\nET = E−1. We are in this work however explicitly interested in problems where matrices — and thus the relations they represent — can also be antisymmetric. In that case eigenvalue decomposition is not possible in the real space; there only exists a decomposition in the complex space where embeddings x ∈ CK are composed of a real vector component Re(x) and an imaginary vector component Im(x). With complex numbers, the dot product, also called the Hermitian product, or sesquilinear form, is defined as:\n〈u, v〉 := ūT v (3)\nwhere u and v are complex-valued vectors, i.e. u = Re(u) + iIm(u) with Re(u) ∈ RK and Im(u) ∈ RK corresponding to the real and imaginary parts of the vector u ∈ CK , and i denoting the square root of−1. We see here that one crucial operation is to take the conjugate of the first vector: ū = Re(u) − iIm(u). A simple way to justify the Hermitian product for composing complex vectors is that it provides a valid topological norm in the induced vectorial space. For example, x̄Tx = 0 implies x = 0 while this is not the case for the bilinear form xTx as there are many complex vectors for which xTx = 0.\nEven with complex eigenvectors E ∈ Cn×n, the inversion of E in the eigendecomposition of Equation (2) leads to computational issues. Fortunately, mathematicians defined an appropriate class of matrices that prevents us from inverting the eigenvector matrix: we consider the space of normal matrices, i.e. the complex n× n matrices X , such that XX̄T = X̄TX . The spectral theorem for normal matrices states that a matrix X is normal if and only if it is unitarily diagonalizable:\nX = EWĒT (4)\nwhere W ∈ Cn×n is the diagonal matrix of eigenvalues (with decreasing modulus) and E ∈ Cn×n is a unitary matrix of eigenvectors, with Ē representing its complex conjugate.\nThe set of purely real normal matrices includes all symmetric and antisymmetric sign matrices (useful to model\nhierarchical relations such as IsOlder), as well as all orthogonal matrices (including permutation matrices), and many other matrices that are useful to represent binary relations, such as assignment matrices which represent bipartite graphs. However, far from all matrices expressed as EWĒT are purely real, and equation 1 requires the scores X to be purely real. So we simply keep only the real part of the decomposition:\nX = Re(EWĒT ) . (5)\nIn fact, performing this projection on the real subspace allows the exact decomposition of any real square matrix X and not only normal ones, as shown by Trouillon et al. (2016).\nCompared to the singular value decomposition, the eigenvalue decomposition has two key differences:\n• The eigenvalues are not necessarily positive or real;\n• The factorization (5) is useful as the rows of E can be used as vectorial representations of the entities corresponding to rows and columns of the relation matrix X. Indeed, for a given entity, its subject embedding vector is the complex conjugate of its object embedding vector."
    }, {
      "heading" : "2.2. Low-Rank Decomposition",
      "text" : "In a link prediction problem, the relation matrix is unknown and the goal is to recover it entirely from noisy observations. To enable the model to be learnable, i.e. to generalize to unobserved links, some regularity assumptions are needed. Since we deal with binary relations, we assume that they have low sign-rank. The sign-rank of a sign matrix is the smallest rank of a real matrix that has the same sign-pattern as Y :\nrank±(Y ) = min A∈Rm×n\n{rank(A)|sign(A) = Y } . (6)\nThis is theoretically justified by the fact that the signrank is a natural complexity measure of sign matrices (Linial et al., 2007) and is linked to learnability (Alon et al., 2015), and empirically confirmed by the wide success of factorization models (Nickel et al., 2016a).\nIf the observation matrix Y is low-sign-rank, then our model can decompose it with a rank at most the double of the sign-rank of Y . That is, for any Y ∈ {−1, 1}n×n, there always exists a matrix X = Re(EWĒT ) with the same sign pattern sign(X) = Y , where the rank of EWĒT is at most twice the sign-rank of Y (Trouillon et al., 2016).\nAlthough twice sounds bad, this is actually a good upper bound. Indeed, the sign-rank is often much lower than the rank of Y . For example, the rank of the n × n identity matrix I is n, but rank±(I) = 3 (Alon et al., 2015). By permutation of the columns 2j and 2j + 1, the I matrix corresponds to the relation marriedTo, a relation known to be hard to factorize (Nickel et al., 2014). Yet our model can express it in rank 6, for any n.\nBy imposing a low-rank K n on EWĒT , only the first K values of diag(W ) are non-zero. So we can directly have E ∈ Cn×K and W ∈ CK×K . Individual relation scores Xso between entities s and o can be predicted through the following product of their embeddings es, eo ∈ CK :\nXso = Re(e T s Wēo) . (7)\nWe summarize the above discussion in three points:\n1. Our factorization encompasses all possible binary relations.\n2. By construction, it accurately describes both symmetric and antisymmetric relations.\n3. Learnable relations can be efficiently approximated by a simple low-rank factorization, using complex numbers to represent the latent factors."
    }, {
      "heading" : "3. Application to Binary Multi-Relational Data",
      "text" : "The previous section focused on modeling a single type of relation; we now extend this model to multiple types of relations. We do so by allocating an embedding wr to each relation r, and by sharing the entity embeddings across all relations.\nLet R and E be the set of relations and entities present in the KB. We want to recover the matrices of scores Xr for all the relations r ∈ R. Given two entities s and o ∈ E , the log-odd of the probability that the fact r(s,o) is true is:\nP (Yrso = 1) = σ(φ(r, s, o; Θ)) (8)\nwhere φ is a scoring function that is typically based on a factorization of the observed relations and Θ denotes the parameters of the corresponding model. While X as a whole is unknown, we assume that we observe a set of true and false facts {Yrso}r(s,o)∈Ω ∈ {−1, 1}|Ω|, corresponding to the partially observed adjacency matrices of different relations, where Ω ⊂ R⊗ E ⊗ E is the set of observed triples. The goal is to find the probabilities of entries Yr′s′o′ being true or false for a set of targeted unobserved triples r′(s′, o′) /∈ Ω.\nDepending on the scoring function φ(s, r, o; Θ) used to predict the entries of the tensor X, we obtain different models. Examples of scoring functions are given in Table 1. Our model scoring function is:\nφ(r, s, o; Θ) = Re(< wr, es, ēo >) (9)\n= Re( K∑ k=1 wrkeskēok) (10) = 〈Re(wr),Re(es),Re(eo)〉 + 〈Re(wr), Im(es), Im(eo)〉 + 〈Im(wr),Re(es), Im(eo)〉 − 〈Im(wr), Im(es),Re(eo)〉 (11)\nwhere wr ∈ CK is a complex vector . These equations provide two interesting views of the model:\n• Changing the representation: Equation (10) would correspond to DistMult with real embeddings, but handles asymmetry thanks to the complex conjugate of one of the embeddings2.\n• Changing the scoring function: Equation (11) only involves real vectors corresponding to the real and imaginary parts of the embeddings and relations.\nOne can easily check that this function is antisymmetric when wr is purely imaginary (i.e. its real part is zero), and symmetric when wr is real. Interestingly, by separating the real and imaginary part of the relation embedding wr, we obtain a decomposition of the relation matrix Xr as the sum of a symmetric matrix Re(E diag(Re(wr))ĒT ) and a antisymmetric matrix Im(E diag(−Im(wr))ĒT ). Relation embeddings naturally act as weights on each latent dimension: Re(wr) over the symmetric, real part of 〈eo, es〉, and Im(w) over the antisymmetric, imaginary part of 〈eo, es〉. Indeed, one has 〈eo, es〉 = 〈es, eo〉, meaning that Re(〈eo, es〉) is symmetric, while Im(〈eo, es〉) is antisymmetric. This enables us to accurately describe both\n2Note that in Equation (10) we used the standard componentwise multi-linear dot product < a, b, c >:= ∑ k akbkck. This is not the Hermitian extension as it is not properly defined in the linear algebra literature.\nsymmetric and antisymmetric relations between pairs of entities, while still using joint representations of entities, whether they appear as subject or object of relations.\nGeometrically, each relation embedding wr is an anisotropic scaling of the basis defined by the entity embeddings E, followed by a projection onto the real subspace."
    }, {
      "heading" : "4. Experiments",
      "text" : "In order to evaluate our proposal, we conducted experiments on both synthetic and real datasets. The synthetic dataset is based on relations that are either symmetric or antisymmetric, whereas the real datasets comprise different types of relations found in different, standard KBs. We refer to our model as ComplEx, for Complex Embeddings."
    }, {
      "heading" : "4.1. Synthetic Task",
      "text" : "To assess the ability of our proposal to accurately model symmetry and antisymmetry, we randomly generated a KB of two relations and 30 entities. One relation is entirely symmetric, while the other is completely antisymmetric. This dataset corresponds to a 2 × 30 × 30 tensor. Figure 2 shows a part of this randomly generated tensor, with a symmetric slice and an antisymmetric slice, decomposed into training, validation and test sets. The diagonal is unobserved as it is not relevant in this experiment.\nThe train set contains 1392 observed triples, whereas the validation and test sets contain 174 triples each. Figure 1 shows the best cross-validated Average Precision (area under Precision-Recall curve) for different factorization models of ranks ranging up to 50. Models were trained using Stochastic Gradient Descent with mini-batches and AdaGrad for tuning the learning rate (Duchi et al., 2011), by minimizing the negative log-likelihood of the logistic model with L2 regularization on the parameters Θ of the considered model:\nmin Θ ∑ r(s,o)∈Ω log(1+exp(−Yrsoφ(s, r, o; Θ)))+λ||Θ||22 . (12) In our model, Θ corresponds to the embeddings es, wr, eo ∈ CK . We describe the full algorithm in Appendix A.\nλ is validated in {0.1, 0.03, 0.01, 0.003, 0.001, 0.0003, 0.00001, 0.0}. As expected, DistMult (Yang et al., 2015) is not able to model antisymmetry and only predicts the symmetric relations correctly. Although TransE (Bordes et al., 2013b) is not a symmetric model, it performs poorly in practice, particularly on the antisymmetric relation. RESCAL (Nickel et al., 2011), with its large number of parameters, quickly overfits as the rank grows. Canonical Polyadic (CP) decomposition (Hitchcock, 1927) fails\non both relations as it has to push symmetric and antisymmetric patterns through the entity embeddings. Surprisingly, only our model succeeds on such simple data."
    }, {
      "heading" : "4.2. Datasets: FB15K and WN18",
      "text" : "We next evaluate the performance of our model on the FB15K and WN18 datasets. FB15K is a subset of Freebase, a curated KB of general facts, whereas WN18 is a subset of Wordnet, a database featuring lexical relations between words. We use original training, validation and test set splits as provided by Bordes et al. (2013b). Table 3 summarizes the metadata of the two datasets.\nBoth datasets contain only positive triples. As in Bordes et al. (2013b), we generated negatives using the local closed world assumption. That is, for a triple, we randomly change either the subject or the object at random, to form a negative example. This negative sampling is performed at runtime for each batch of training positive examples.\nFor evaluation, we measure the quality of the ranking of each test triple among all possible subject and object substitutions : r(s′, o) and r(s, o′), ∀s′,∀o′ ∈ E . Mean Reciprocal Rank (MRR) and Hits at m are the standard evaluation measures for these datasets and come in two flavours: raw and filtered (Bordes et al., 2013b). The filtered metrics\nare computed after removing all the other positive observed triples that appear in either training, validation or test set from the ranking, whereas the raw metrics do not remove these.\nSince ranking measures are used, previous studies generally preferred a pairwise ranking loss for the task (Bordes et al., 2013b; Nickel et al., 2016b). We chose to use the negative log-likelihood of the logistic model, as it is a continuous surrogate of the sign-rank, and has been shown to learn compact representations for several important relations, especially for transitive relations (Bouchard et al., 2015). In preliminary work, we tried both losses, and indeed the loglikelihood yielded better results than the ranking loss (except with TransE), especially on FB15K.\nWe report both filtered and raw MRR, and filtered Hits at 1, 3 and 10 in Table 2 for the evaluated models. Furthermore, we chose TransE, DistMult and HolE as baselines since they are the best performing models on those datasets to the best of our knowledge (Nickel et al., 2016b; Yang et al., 2015). We also compare with the CP model to emphasize empirically the importance of learning unique embeddings for entities. For experimental fairness, we reimplemented these methods within the same framework as the ComplEx model, using theano (Bergstra et al., 2010). However, due\nto time constraints and the complexity of an efficient implementation of HolE, we record the original results for HolE as reported in Nickel et al. (2016b)."
    }, {
      "heading" : "4.3. Results",
      "text" : "WN18 describes lexical and semantic hierarchies between concepts and contains many antisymmetric relations such as hypernymy, hyponymy, or being ”part of”. Indeed, the DistMult and TransE models are outperformed here by ComplEx and HolE, which are on par with respective filtered MRR scores of 0.941 and 0.938. Table 4 shows the filtered test set MRR for the models considered and each relation of WN18, confirming the advantage of our model on antisymmetric relations while losing nothing on the others. 2D projections of the relation embeddings provided in Appendix B visually corroborate the results.\nOn FB15K, the gap is much more pronounced and the ComplEx model largely outperforms HolE, with a filtered MRR of 0.692 and 59.9% of Hits at 1, compared to 0.524 and 40.2% for HolE. We attribute this to the simplicity of our model and the different loss function. This is supported by the relatively small gap in MRR compared to DistMult (0.654); our model can in fact be interpreted as a complex number version of DistMult. On both datasets, TransE\nand CP are largely left behind. This illustrates the power of the simple dot product in the first case, and the importance of learning unique entity embeddings in the second. CP performs poorly on WN18 due to the small number of relations, which magnifies this subject/object difference.\nReported results are given for the best set of hyper-parameters evaluated on the validation set for each model, after grid search on the following values: K ∈ {10, 20, 50, 100, 150, 200}, λ ∈ {0.1, 0.03, 0.01, 0.003, 0.001, 0.0003, 0.0}, α0 ∈ {1.0, 0.5, 0.2, 0.1, 0.05, 0.02, 0.01}, η ∈ {1, 2, 5, 10} with λ the L2 regularization parameter, α0 the initial learning rate (then tuned at runtime with AdaGrad), and η the number of negatives generated per positive training triple. We also tried varying the batch size but this had no impact and we settled with 100 batches per epoch. Best ranks were generally 150 or 200, in both cases scores were always very close for all models. The number of negative samples per positive sample also had a large influence on\nthe filtered MRR on FB15K (up to +0.08 improvement from 1 to 10 negatives), but not much on WN18. On both datasets regularization was important (up to +0.05 on filtered MRR between λ = 0 and optimal one). We found the initial learning rate to be very important on FB15K, while not so much on WN18. We think this may also explain the large gap of improvement our model provides on this dataset compared to previously published results – as DistMult results are also better than those previously reported (Yang et al., 2015) – along with the use of the log-likelihood objective. It seems that in general AdaGrad is relatively insensitive to the initial learning rate, perhaps causing some overconfidence in its ability to tune the step size online and consequently leading to less efforts when selecting the initial step size.\nTraining was stopped using early stopping on the validation set filtered MRR, computed every 50 epochs with a maximum of 1000 epochs."
    }, {
      "heading" : "4.4. Influence of Negative Samples",
      "text" : "We further investigated the influence of the number of negatives generated per positive training sample. In the previous experiment, due to computational limitations, the number of negatives per training sample, η, was validated among the possible numbers {1, 2, 5, 10}. We want to explore here whether increasing these numbers could lead to better results. To do so, we focused on FB15K, with the best validated λ,K, α0, obtained from the previous experiment. We then let η vary in {1, 2, 5, 10, 20, 50, 100, 200}.\nFigure 3 shows the influence of the number of generated negatives per positive training triple on the performance of our model on FB15K. Generating more negatives clearly improves the results, with a filtered MRR of 0.737 with 100 negative triples (and 64.8% of Hits@1), before decreasing again with 200 negatives. The model also converges with fewer epochs, which compensates partially for the additional training time per epoch, up to 50 negatives. It then grows linearly as the number of negatives increases, making 50 a good trade-off between accuracy and training time."
    }, {
      "heading" : "5. Related Work",
      "text" : "In the early age of spectral theory in linear algebra, complex numbers were not used for matrix factorization and mathematicians mostly focused on bi-linear forms (Beltrami, 1873). The eigen-decomposition in the complex domain as taught today in linear algebra courses came 40 years later (Autonne, 1915). Similarly, most of the existing approaches for tensor factorization were based on decompositions in the real domain, such as the Canonical Polyadic (CP) decomposition (Hitchcock, 1927). These methods are very effective in many applications that use different modes of the tensor for different types of entities. But in the link prediction problem, antisymmetry of relations was quickly seen as a problem and asymmetric extensions of tensors were studied, mostly by either considering independent embeddings (Sutskever, 2009) or considering relations as matrices instead of vectors in the RESCAL model (Nickel et al., 2011). Direct extensions were based on uni-,bi- and trigram latent factors for triple data, as well as a low-rank relation matrix (Jenatton et al., 2012).\nPairwise interaction models were also considered to improve prediction performances. For example, the Universal Schema approach (Riedel et al., 2013) factorizes a 2D unfolding of the tensor (a matrix of entity pairs vs. relations) while Welbl et al. (2016) extend this also to other pairs.\nIn the Neural Tensor Network (NTN) model, Socher et al. (2013) combine linear transformations and multiple bilinear forms of subject and object embeddings to jointly feed them into a nonlinear neural layer. Its non-linearity and multiple ways of including interactions between embeddings gives it an advantage in expressiveness over models\nwith simpler scoring function like DistMult or RESCAL. As a downside, its very large number of parameters can make the NTN model harder to train and overfit more easily.\nThe original multi-linear DistMult model is symmetric in subject and object for every relation (Yang et al., 2015) and achieves good performance, presumably due to its simplicity. The TransE model from Bordes et al. (2013b) also embeds entities and relations in the same space and imposes a geometrical structural bias into the model: the subject entity vector should be close to the object entity vector once translated by the relation vector.\nA recent novel way to handle antisymmetry is via the Holographic Embeddings (HolE) model by (Nickel et al., 2016b). In HolE the circular correlation is used for combining entity embeddings, measuring the covariance between embeddings at different dimension shifts. This generally suggests that other composition functions than the classical tensor product can be helpful as they allow for a richer interaction of embeddings. However, the asymmetry in the composition function in HolE stems from the asymmetry of circular correlation, an O(nlog(n)) operation, whereas ours is inherited from the complex inner product, in O(n)."
    }, {
      "heading" : "6. Conclusion",
      "text" : "We described a simple approach to matrix and tensor factorization for link prediction data that uses vectors with complex values and retains the mathematical definition of the dot product. The class of normal matrices is a natural fit for binary relations, and using the real part allows for efficient approximation of any learnable relation. Results on standard benchmarks show that no more modifications are needed to improve over the state-of-the-art.\nThere are several directions in which this work can be extended. An obvious one is to merge our approach with known extensions to tensor factorization in order to further improve predictive performance. For example, the use of pairwise embeddings together with complex numbers might lead to improved results in many situations that involve non-compositionality. Another direction would be to develop a more intelligent negative sampling procedure, to generate more informative negatives with respect to the positive sample from which they have been sampled. It would reduce the number of negatives required to reach good performance, thus accelerating training time.\nAlso, if we were to use complex embeddings every time a model includes a dot product, e.g. in deep neural networks, would it lead to a similar systematic improvement?"
    }, {
      "heading" : "Acknowledgements",
      "text" : "This work was supported in part by the Paul Allen Foundation through an Allen Distinguished Investigator grant and in part by a Google Focused Research Award."
    }, {
      "heading" : "A. SGD algorithm",
      "text" : "We describe the algorithm to learn the ComplEx model with Stochastic Gradient Descent using only real-valued vectors.\nLet us rewrite equation 11, by denoting the real part of embeddings with primes and the imaginary part with double primes: e′i = Re(ei), e ′′ i = Im(ei), w ′ r = Re(wr), w′′r = Im(wr). The set of parameters is Θ = {e′i, e′′i , w′r, w′′r ;∀i ∈ E ,∀r ∈ R}, and the scoring function involves only real vectors:\nφ(r, s, o; Θ) = 〈w′r, e′s, e′o〉+ 〈w′r, e′′s , e′′o〉 + 〈w′′r , e′s, e′′o〉 − 〈w′′r , e′′s , e′o〉\nwhere each entity and each relation has two real embeddings.\nGradients are now easy to write:\n∇e′sφ(r, s, o; Θ) = (w ′ r e′o) + (w′′r e′′o) ∇e′′s φ(r, s, o; Θ) = (w ′ r e′′o)− (w′′r e′o) ∇e′oφ(r, s, o; Θ) = (w ′ r e′s)− (w′′r e′′s ) ∇e′′o φ(r, s, o; Θ) = (w ′ r e′′s ) + (w′′r e′s) ∇w′rφ(r, s, o; Θ) = (e ′ s e′o) + (e′′s e′′o) ∇w′′r φ(r, s, o; Θ) = (e ′ s e′′o)− (e′′s e′o)\nwhere is the element-wise (Hadamard) product.\nAs stated in equation 8 we use the sigmoid link function, and minimize the L2-regularized negative log-likelihood:\nγ(Ω; Θ) = ∑\nr(s,o)∈Ω\nlog(1 + exp(−Yrsoφ(s, r, o; Θ)))\n+λ||Θ||22 .\nTo handle regularization, note that the squared L2-norm of a complex vector v = v′ + iv′′ is the sum of the squared modulus of each entry:\n||v||22 = ∑ j √ v′2j + v ′′2 j 2\n= ∑ j v′2j + ∑ j v′′2j = ||v′||22 + ||v′′||22\nwhich is actually the sum of the L2-norms of the vectors of the real and imaginary parts.\nAlgorithm 1 SGD for the ComplEx model input Training set Ω, Validation set Ωv , learning rate α,\nembedding dim. k, regularization factor λ, negative ratio η, batch size b, max iter m, early stopping s. e′i ← randn(k), e′′i ← randn(k) for each i ∈ E w′i ← randn(k), w′′i ← randn(k) for each i ∈ R for i = 1, · · · ,m do\nfor j = 1..|Ω|/b do Ωb ← sample(Ω, b, η) Update embeddings w.r.t.:∑\nr(s,o)∈Ωb ∇γ({r(s, o)}; Θ) Update learning rate α using Adagrad\nend for if i mod s = 0 then\nbreak if filteredMRR or AP on Ωv decreased end if\nend for\nWe can finally write the gradient of γ with respect to a real embedding v for one triple r(s, o):\n∇vγ({r(s, o)}; Θ) = −Yrsoφ(s, r, o; Θ)σ(∇vφ(r, s, o; Θ)) +2λv\nwhere σ(x) = 11+e−x is the sigmoid function.\nAlgorithm 1 describes SGD for this formulation of the scoring function. When Ω contains only positive triples, we generate η negatives per positive train triple, by corrupting either the subject or the object of the positive triple, as described in Bordes et al. (2013b)."
    }, {
      "heading" : "B. WN18 embeddings visualization",
      "text" : "We used principal component analysis (PCA) to visualize embeddings of the relations of the wordnet dataset (WN18). We plotted the four first components of the best DistMult and ComplEx model’s embeddings in Figure 4. For the ComplEx model, we simply concatenated the real and imaginary parts of each embedding.\nMost of WN18 relations describe hierarchies, and are thus antisymmetric. Each of these hierarchic relations has its inverse relation in the dataset. For example: hypernym / hyponym, part of / has part, synset domain topic of / member of domain topic. Since DistMult is unable to model antisymmetry, it will correctly represent the nature of each pair of opposite relations, but not the direction of the relations. Loosely speaking, in the hypernym / hyponym pair the nature is sharing semantics, and the direction is that one entity generalizes the semantics of the other. This makes DistMult reprensenting the opposite\nrelations with very close embeddings, as Figure 4 shows. It is especially striking for the third and fourth principal component (bottom-left). Conversely, ComplEx manages to oppose spatially the opposite relations."
    } ],
    "references" : [ {
      "title" : "Sign rank versus vc dimension",
      "author" : [ "Alon", "Noga", "Moran", "Shay", "Yehudayoff", "Amir" ],
      "venue" : "arXiv preprint arXiv:1503.07648,",
      "citeRegEx" : "Alon et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Alon et al\\.",
      "year" : 2015
    }, {
      "title" : "Dbpedia: A nucleus for a web of open data",
      "author" : [ "Auer", "Sren", "Bizer", "Christian", "Kobilarov", "Georgi", "Lehmann", "Jens", "Ives", "Zachary" ],
      "venue" : "Intl Semantic Web Conference,",
      "citeRegEx" : "Auer et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Auer et al\\.",
      "year" : 2007
    }, {
      "title" : "Sur les matrices hypohermitiennes et sur les matrices unitaires",
      "author" : [ "L. Autonne" ],
      "venue" : "Ann. Univ. Lyons, Nouvelle Srie I,",
      "citeRegEx" : "Autonne,? \\Q1915\\E",
      "shortCiteRegEx" : "Autonne",
      "year" : 1915
    }, {
      "title" : "Freebase: a collaboratively created graph database for structuring human knowledge",
      "author" : [ "Bollacker", "Kurt", "Evans", "Colin", "Paritosh", "Praveen", "Sturge", "Tim", "Taylor", "Jamie" ],
      "venue" : "Proceedings of the 2008 ACM SIGMOD international conference on Management of data,",
      "citeRegEx" : "Bollacker et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Bollacker et al\\.",
      "year" : 2008
    }, {
      "title" : "Irreflexive and Hierarchical Relations as Translations",
      "author" : [ "Bordes", "Antoine", "Usunier", "Nicolas", "Garcia-Duran", "Alberto", "Weston", "Jason", "Yakhnenko", "Oksana" ],
      "venue" : "In CoRR,",
      "citeRegEx" : "Bordes et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bordes et al\\.",
      "year" : 2013
    }, {
      "title" : "Translating embeddings for modeling multi-relational data",
      "author" : [ "Bordes", "Antoine", "Usunier", "Nicolas", "Garcia-Duran", "Alberto", "Weston", "Jason", "Yakhnenko", "Oksana" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Bordes et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bordes et al\\.",
      "year" : 2013
    }, {
      "title" : "On approximate reasoning capabilities of low-rank vector spaces",
      "author" : [ "Bouchard", "Guillaume", "Singh", "Sameer", "Trouillon", "Théo" ],
      "venue" : "In AAAI Spring Syposium on Knowledge Representation and Reasoning (KRR): Integrating Symbolic and Neural Approaches,",
      "citeRegEx" : "Bouchard et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Bouchard et al\\.",
      "year" : 2015
    }, {
      "title" : "Knowledge vault: A web-scale approach to probabilistic knowledge fusion",
      "author" : [ "Sun", "Shaohua", "Zhang", "Wei" ],
      "venue" : "In Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,",
      "citeRegEx" : "Sun et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Sun et al\\.",
      "year" : 2014
    }, {
      "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
      "author" : [ "Duchi", "John", "Hazan", "Elad", "Singer", "Yoram" ],
      "venue" : "The Journal of Machine Learning Research,",
      "citeRegEx" : "Duchi et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Duchi et al\\.",
      "year" : 2011
    }, {
      "title" : "Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)",
      "author" : [ "Getoor", "Lise", "Taskar", "Ben" ],
      "venue" : null,
      "citeRegEx" : "Getoor et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Getoor et al\\.",
      "year" : 2007
    }, {
      "title" : "The expression of a tensor or a polyadic as a sum of products",
      "author" : [ "F.L. Hitchcock" ],
      "venue" : "J. Math. Phys,",
      "citeRegEx" : "Hitchcock,? \\Q1927\\E",
      "shortCiteRegEx" : "Hitchcock",
      "year" : 1927
    }, {
      "title" : "A Latent Factor Model for Highly Multi-relational Data",
      "author" : [ "Jenatton", "Rodolphe", "Bordes", "Antoine", "Le Roux", "Nicolas", "Obozinski", "Guillaume" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Jenatton et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Jenatton et al\\.",
      "year" : 2012
    }, {
      "title" : "Matrix factorization techniques for recommender systems",
      "author" : [ "Koren", "Yehuda", "Bell", "Robert", "Volinsky", "Chris" ],
      "venue" : null,
      "citeRegEx" : "Koren et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Koren et al\\.",
      "year" : 2009
    }, {
      "title" : "Complexity measures of sign",
      "author" : [ "Linial", "Nati", "Mendelson", "Shahar", "Schechtman", "Gideon", "Shraibman", "Adi" ],
      "venue" : "matrices. Combinatorica,",
      "citeRegEx" : "Linial et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Linial et al\\.",
      "year" : 2007
    }, {
      "title" : "A Three-Way Model for Collective Learning on Multi-Relational Data",
      "author" : [ "Nickel", "Maximilian", "Tresp", "Volker", "Kriegel", "HansPeter" ],
      "venue" : "In 28th International Conference on Machine Learning,",
      "citeRegEx" : "Nickel et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Nickel et al\\.",
      "year" : 2011
    }, {
      "title" : "Reducing the rank in relational factorization models by including observable patterns",
      "author" : [ "Nickel", "Maximilian", "Jiang", "Xueyan", "Tresp", "Volker" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Nickel et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Nickel et al\\.",
      "year" : 2014
    }, {
      "title" : "A review of relational machine learning for knowledge graphs",
      "author" : [ "Nickel", "Maximilian", "Murphy", "Kevin", "Tresp", "Volker", "Gabrilovich", "Evgeniy" ],
      "venue" : "Proceedings of the IEEE,",
      "citeRegEx" : "Nickel et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Nickel et al\\.",
      "year" : 2016
    }, {
      "title" : "Holographic embeddings of knowledge graphs",
      "author" : [ "Nickel", "Maximilian", "Rosasco", "Lorenzo", "Poggio", "Tomaso A" ],
      "venue" : "In Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence,",
      "citeRegEx" : "Nickel et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Nickel et al\\.",
      "year" : 2016
    }, {
      "title" : "Reasoning with neural tensor networks for knowledge base completion",
      "author" : [ "Socher", "Richard", "Chen", "Danqi", "Manning", "Christopher D", "Ng", "Andrew" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Socher et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Socher et al\\.",
      "year" : 2013
    }, {
      "title" : "Modelling Relational Data using Bayesian Clustered Tensor Factorization",
      "author" : [ "Sutskever", "Ilya" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Sutskever and Ilya.,? \\Q2009\\E",
      "shortCiteRegEx" : "Sutskever and Ilya.",
      "year" : 2009
    }, {
      "title" : "Decomposing real square matrices via unitary diagonalization",
      "author" : [ "Trouillon", "Théo", "Dance", "Christopher R", "Gaussier", "Éric", "Bouchard", "Guillaume" ],
      "venue" : null,
      "citeRegEx" : "Trouillon et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Trouillon et al\\.",
      "year" : 2016
    }, {
      "title" : "A factorization machine framework for testing bigram embeddings in knowledgebase completion",
      "author" : [ "Welbl", "Johannes", "Bouchard", "Guillaume", "Riedel", "Sebastian" ],
      "venue" : null,
      "citeRegEx" : "Welbl et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Welbl et al\\.",
      "year" : 2016
    }, {
      "title" : "Embedding entities and relations for learning and inference in knowledge bases",
      "author" : [ "Yang", "Bishan", "Yih", "Wen-tau", "He", "Xiaodong", "Gao", "Jianfeng", "Deng", "Li" ],
      "venue" : "In International Conference on Learning Representations,",
      "citeRegEx" : "Yang et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Yang et al\\.",
      "year" : 2015
    }, {
      "title" : "WN18 embeddings visualization We used principal component analysis (PCA) to visualize embeddings of the relations of the wordnet dataset (WN18)",
      "author" : [ "Bordes" ],
      "venue" : null,
      "citeRegEx" : "Bordes,? \\Q2013\\E",
      "shortCiteRegEx" : "Bordes",
      "year" : 2013
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "Web-scale knowledge bases (KBs) provide a structured representation of world knowledge, with projects such as DBPedia (Auer et al., 2007), Freebase (Bollacker et al.",
      "startOffset" : 118,
      "endOffset" : 137
    }, {
      "referenceID" : 3,
      "context" : ", 2007), Freebase (Bollacker et al., 2008) or the Google Knowledge Vault (Dong et al.",
      "startOffset" : 18,
      "endOffset" : 42
    }, {
      "referenceID" : 12,
      "context" : "Completion based on low-rank factorization or embeddings has been popularized with the Netflix challenge (Koren et al., 2009).",
      "startOffset" : 105,
      "endOffset" : 125
    }, {
      "referenceID" : 4,
      "context" : "As described in Bordes et al. (2013a), a relational model should (a) be able to learn ar X iv :1 60 6.",
      "startOffset" : 16,
      "endOffset" : 38
    }, {
      "referenceID" : 6,
      "context" : "Dot products of embeddings scale well and can naturally handle both symmetry and (ir-)reflexivity of relations; using an appropriate loss function even enables transitivity (Bouchard et al., 2015).",
      "startOffset" : 173,
      "endOffset" : 196
    }, {
      "referenceID" : 14,
      "context" : "However, dealing with antisymmetric relations has so far almost always implied an explosion of the number of parameters (Nickel et al., 2011; Socher et al., 2013) (see Table 1), making models prone to overfitting.",
      "startOffset" : 120,
      "endOffset" : 162
    }, {
      "referenceID" : 18,
      "context" : "However, dealing with antisymmetric relations has so far almost always implied an explosion of the number of parameters (Nickel et al., 2011; Socher et al., 2013) (see Table 1), making models prone to overfitting.",
      "startOffset" : 120,
      "endOffset" : 162
    }, {
      "referenceID" : 14,
      "context" : "It then seems natural to learn joint embeddings of the entities, which entails sharing the embeddings of the left and right factors, as proposed by several authors to solve the link prediction problem (Nickel et al., 2011; Bordes et al., 2013b; Yang et al., 2015).",
      "startOffset" : 201,
      "endOffset" : 263
    }, {
      "referenceID" : 22,
      "context" : "It then seems natural to learn joint embeddings of the entities, which entails sharing the embeddings of the left and right factors, as proposed by several authors to solve the link prediction problem (Nickel et al., 2011; Bordes et al., 2013b; Yang et al., 2015).",
      "startOffset" : 201,
      "endOffset" : 263
    }, {
      "referenceID" : 14,
      "context" : "RESCAL (Nickel et al., 2011) es Wreo Wr ∈ R 2 O(K) O(K)",
      "startOffset" : 7,
      "endOffset" : 28
    }, {
      "referenceID" : 18,
      "context" : "NTN (Socher et al., 2013) ur f(esW [1.",
      "startOffset" : 4,
      "endOffset" : 25
    }, {
      "referenceID" : 22,
      "context" : "DistMult (Yang et al., 2015) < wr, es, eo > wr ∈ R O(K) O(K) HolE (Nickel et al.",
      "startOffset" : 9,
      "endOffset" : 28
    }, {
      "referenceID" : 20,
      "context" : "In fact, performing this projection on the real subspace allows the exact decomposition of any real square matrix X and not only normal ones, as shown by Trouillon et al. (2016).",
      "startOffset" : 154,
      "endOffset" : 178
    }, {
      "referenceID" : 13,
      "context" : "This is theoretically justified by the fact that the signrank is a natural complexity measure of sign matrices (Linial et al., 2007) and is linked to learnability (Alon et al.",
      "startOffset" : 111,
      "endOffset" : 132
    }, {
      "referenceID" : 0,
      "context" : ", 2007) and is linked to learnability (Alon et al., 2015), and empirically confirmed by the wide success of factorization models (Nickel et al.",
      "startOffset" : 38,
      "endOffset" : 57
    }, {
      "referenceID" : 20,
      "context" : "That is, for any Y ∈ {−1, 1}n×n, there always exists a matrix X = Re(EWĒ ) with the same sign pattern sign(X) = Y , where the rank of EWĒ is at most twice the sign-rank of Y (Trouillon et al., 2016).",
      "startOffset" : 174,
      "endOffset" : 198
    }, {
      "referenceID" : 0,
      "context" : "For example, the rank of the n × n identity matrix I is n, but rank±(I) = 3 (Alon et al., 2015).",
      "startOffset" : 76,
      "endOffset" : 95
    }, {
      "referenceID" : 15,
      "context" : "By permutation of the columns 2j and 2j + 1, the I matrix corresponds to the relation marriedTo, a relation known to be hard to factorize (Nickel et al., 2014).",
      "startOffset" : 138,
      "endOffset" : 159
    }, {
      "referenceID" : 8,
      "context" : "Models were trained using Stochastic Gradient Descent with mini-batches and AdaGrad for tuning the learning rate (Duchi et al., 2011), by minimizing the negative log-likelihood of the logistic model with L regularization on the parameters Θ of the considered model:",
      "startOffset" : 113,
      "endOffset" : 133
    }, {
      "referenceID" : 22,
      "context" : "As expected, DistMult (Yang et al., 2015) is not able to model antisymmetry and only predicts the symmetric relations correctly.",
      "startOffset" : 22,
      "endOffset" : 41
    }, {
      "referenceID" : 14,
      "context" : "RESCAL (Nickel et al., 2011), with its large number of parameters, quickly overfits as the rank grows.",
      "startOffset" : 7,
      "endOffset" : 28
    }, {
      "referenceID" : 10,
      "context" : "Canonical Polyadic (CP) decomposition (Hitchcock, 1927) fails Figure 2.",
      "startOffset" : 38,
      "endOffset" : 55
    }, {
      "referenceID" : 4,
      "context" : "We use original training, validation and test set splits as provided by Bordes et al. (2013b). Table 3 summarizes the metadata of the two datasets.",
      "startOffset" : 72,
      "endOffset" : 94
    }, {
      "referenceID" : 4,
      "context" : "As in Bordes et al. (2013b), we generated negatives using the local closed world assumption.",
      "startOffset" : 6,
      "endOffset" : 28
    }, {
      "referenceID" : 6,
      "context" : "We chose to use the negative log-likelihood of the logistic model, as it is a continuous surrogate of the sign-rank, and has been shown to learn compact representations for several important relations, especially for transitive relations (Bouchard et al., 2015).",
      "startOffset" : 238,
      "endOffset" : 261
    }, {
      "referenceID" : 22,
      "context" : "Furthermore, we chose TransE, DistMult and HolE as baselines since they are the best performing models on those datasets to the best of our knowledge (Nickel et al., 2016b; Yang et al., 2015).",
      "startOffset" : 150,
      "endOffset" : 191
    }, {
      "referenceID" : 14,
      "context" : "Furthermore, we chose TransE, DistMult and HolE as baselines since they are the best performing models on those datasets to the best of our knowledge (Nickel et al., 2016b; Yang et al., 2015). We also compare with the CP model to emphasize empirically the importance of learning unique embeddings for entities. For experimental fairness, we reimplemented these methods within the same framework as the ComplEx model, using theano (Bergstra et al., 2010). However, due to time constraints and the complexity of an efficient implementation of HolE, we record the original results for HolE as reported in Nickel et al. (2016b).",
      "startOffset" : 151,
      "endOffset" : 624
    }, {
      "referenceID" : 22,
      "context" : "We think this may also explain the large gap of improvement our model provides on this dataset compared to previously published results – as DistMult results are also better than those previously reported (Yang et al., 2015) – along with the use of the log-likelihood objective.",
      "startOffset" : 205,
      "endOffset" : 224
    }, {
      "referenceID" : 2,
      "context" : "The eigen-decomposition in the complex domain as taught today in linear algebra courses came 40 years later (Autonne, 1915).",
      "startOffset" : 108,
      "endOffset" : 123
    }, {
      "referenceID" : 10,
      "context" : "Similarly, most of the existing approaches for tensor factorization were based on decompositions in the real domain, such as the Canonical Polyadic (CP) decomposition (Hitchcock, 1927).",
      "startOffset" : 167,
      "endOffset" : 184
    }, {
      "referenceID" : 14,
      "context" : "But in the link prediction problem, antisymmetry of relations was quickly seen as a problem and asymmetric extensions of tensors were studied, mostly by either considering independent embeddings (Sutskever, 2009) or considering relations as matrices instead of vectors in the RESCAL model (Nickel et al., 2011).",
      "startOffset" : 289,
      "endOffset" : 310
    }, {
      "referenceID" : 11,
      "context" : "Direct extensions were based on uni-,bi- and trigram latent factors for triple data, as well as a low-rank relation matrix (Jenatton et al., 2012).",
      "startOffset" : 123,
      "endOffset" : 146
    }, {
      "referenceID" : 21,
      "context" : "relations) while Welbl et al. (2016) extend this also to other pairs.",
      "startOffset" : 17,
      "endOffset" : 37
    }, {
      "referenceID" : 18,
      "context" : "In the Neural Tensor Network (NTN) model, Socher et al. (2013) combine linear transformations and multiple bilinear forms of subject and object embeddings to jointly feed them into a nonlinear neural layer.",
      "startOffset" : 42,
      "endOffset" : 63
    }, {
      "referenceID" : 22,
      "context" : "The original multi-linear DistMult model is symmetric in subject and object for every relation (Yang et al., 2015) and achieves good performance, presumably due to its simplicity.",
      "startOffset" : 95,
      "endOffset" : 114
    }, {
      "referenceID" : 4,
      "context" : "The TransE model from Bordes et al. (2013b) also embeds entities and relations in the same space and imposes a geometrical structural bias into the model: the subject entity vector should be close to the object entity vector once translated by the relation vector.",
      "startOffset" : 22,
      "endOffset" : 44
    } ],
    "year" : 2016,
    "abstractText" : "In statistical relational learning, the link prediction problem is key to automatically understand the structure of large knowledge bases. As in previous studies, we propose to solve this problem through latent factorization. However, here we make use of complex valued embeddings. The composition of complex embeddings can handle a large variety of binary relations, among them symmetric and antisymmetric relations. Compared to state-of-the-art models such as Neural Tensor Network and Holographic Embeddings, our approach based on complex embeddings is arguably simpler, as it only uses the Hermitian dot product, the complex counterpart of the standard dot product between real vectors. Our approach is scalable to large datasets as it remains linear in both space and time, while consistently outperforming alternative approaches on standard link prediction benchmarks.1",
    "creator" : "LaTeX with hyperref package"
  }
}