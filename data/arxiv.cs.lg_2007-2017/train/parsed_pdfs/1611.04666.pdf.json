{
  "name" : "1611.04666.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "A Generic Coordinate Descent Framework for Learning from Implicit Feedback",
    "authors" : [ "Immanuel Bayer", "Xiangnan He", "Bhargav Kanagal", "Steffen Rendle" ],
    "emails" : [ "immanuel.bayer@uni-", "xiangnan@comp.nus.edu.sg", "bhargav@google.com", "srendle@google.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "In this paper, we provide a new framework for deriving efficient CD algorithms for complex recommender models. We identify and introduce the property of k-separable models. We show that k-separability is a sufficient property to allow efficient optimization of implicit recommender problems with CD. We illustrate this framework on a variety of state-of-the-art models including factorization machines and Tucker decomposition. To summarize, our work provides the theory and building blocks to derive efficient implicit CD algorithms for complex recommender models."
    }, {
      "heading" : "1. INTRODUCTION",
      "text" : "In recent years, the focus of recommender system research has shifted from explicit feedback problems such as rating prediction to implicit feedback problems. Most of the signal that a user provides about her preferences is implicit. Examples for implicit feedback are: a user watches a video, clicks on a link, etc. Implicit feedback data is much cheaper to obtain than explicit feedback, because it comes with no extra cost for the user and thus is available on a much larger scale. However, learning a recommender system from implicit feedback is computationally expensive because the observed actions of a user need to be contrasted against all the non-observed actions [5, 13].\nStochastic gradient descent (SGD) and coordinate descent (CD) are two widely used algorithms for large scale machine learning. Both algorithms are considered state-of-the-art for learning matrix factorization models from implicit feedback and have been studied extensively. SGD and CD have shown different strengths and weaknesses on various data sets [4,\n∗Work done at Google.\n17, 16, 8, 25, 15, 22, 26]. While SGD is available as a general framework to optimize a broad class of models [13], CD is only available for a few simple models [5, 10]. In fact, it is even unknown if CD can be used to efficiently optimize complex recommender models. Our work closes this gap and identifies a model property called k-separability, that is a sufficient condition to allow efficient learning from implicit feedback. Based on k-separability, we provide a general framework to derive efficient implicit CD solvers.\nOur paper is organized as follows: First, we introduce the problem of learning from implicit feedback and show that the number of implicit training examples makes the application of standard algorithms challenging. Next, we provide our general framework for efficient implicit learning with CD. We identify k-separability of a model as a sufficient property to make efficient learning feasible and introduce iCD, a generic learning algorithm for k-separable models. In Section 5, we show how to apply iCD to a diverse set of models, including, matrix factorization (MF), factorization machines (FM) and tensor factorization. This section serves both as solutions to popular models as well as a guide for applying the framework to other complex recommender models.\nTo summarize, our contributions are:\n• We identify a basic property of recommender models that allows efficient CD learning from implicit data.\n• We provide iCD, a framework to derive efficient implicit CD algorithms.\n• We apply the framework and derive algorithms for MF, MF with side information, FM, PARAFAC and Tucker Decomposition."
    }, {
      "heading" : "2. RELATED WORK",
      "text" : "Since several years, matrix factorization (MF) is regarded as the most effective, basic recommender system model. Two optimization strategies dominate the research on MF from implicit feedback data. The first one is Bayesian Personalized Ranking (BPR) [13], a stochastic gradient descent (SGD) framework, that contrasts pairs of consumed to nonconsumed items. The second one is coordinate descent (CD) also known as alternating least squares on an elementwise loss over both the consumed and non-consumed items [5]. In terms of the loss formulation, BPR’s pairwise classification\nar X\niv :1\n61 1.\n04 66\n6v 1\n[ cs\n.I R\n] 1\n5 N\nov 2\nloss is better suited for ranking whereas CD loss is better suited for numerical data. With regard to the optimization task, both techniques face the same challenge of learning over a very large number of training examples. BPR tackles this issue by sampling negative items, but it has been shown that BPR has convergence problems when the number of items is large [7, 12]. It requires more complex, nonuniform, sampling strategies for dealing with this problem [12, 6]. On the other hand, for CD-MF, Hu et al. [5] have derived an efficient algorithm that allows to optimize over the large number of non-consumed items without any cost. This computational trick is exact and does not involve sampling. Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26]. This large body of results indicates that the advantages of CD and BPR are orthogonal and both approaches have their merits.\nOur discussion so far was focused on learning matrix factorization models from implicit data. Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24]. However, work on complex factorization models relies almost exclusively on SGD optimization using the generic BPR framework. Our work, provides the theory as well as a practical framework for deriving CD learners for such complex models. Like CD for MF, our generic algorithm is able to optimize on all nonconsumed items without explicitly iterating over them. To summarize, our paper enables researchers and practitioners to apply CD in their work and gives them a choice between the advantages of BPR and CD."
    }, {
      "heading" : "3. PROBLEM STATEMENT",
      "text" : "Let I be a set of items and C a set of contexts. Let S be a set of observed feedback where a tuple (c, i, y, α) ∈ S indicates that in context c, a score y has been assigned to item i with confidence α. See Figure 1 for an illustration. We use a general notation of context which can include for instance user, time, location, attributes, history, etc. Section 5 and Section 6 show more examples for context."
    }, {
      "heading" : "3.1 Recommender Model",
      "text" : "A recommender model ŷ : C × I → R is a function that assigns a score to every context-item pair. The model ŷ is parameterized by a set of model parameters Θ. The model ŷ is typically used to decide which items to present in a given context.\nThe learning task is to find the values of the model parameters that minimize a loss over the data S, e.g., a squared loss\nL(Θ|S) = ∑\n(c,i,y,α)∈S α (ŷ(c, i)− y)2 + ∑ θ∈Θ λθθ 2 (1)\nwhere λθ is an regularization constant for parameter θ."
    }, {
      "heading" : "3.2 Coordinate Descent Algorithm",
      "text" : "Objective (1) can be minimized by coordinate descent (CD). CD iterates through the model parameters and updates one parameter at a time. For a selected parameter θ ∈ Θ, CD computes the first L′ and second derivative L′′ of L with respect to the selected coordinate θ:\nL′(θ|S) = 2 ∑\n(c,i,y,α)∈S\nα (ŷ(c, i)− y)ŷ′(c, i) + 2λθ θ (2)\nL′′(θ|S) = 2 ∑\n(c,i,y,α)∈S\nα [(ŷ(c, i)− y)ŷ′′(c, i) + ŷ′(c, i)2] + 2λθ\n(3)\nand performs a Newton update step:\nθ ← θ − η L ′(θ|S)\nL′′(θ|S) (4)\nwhere η ∈ (0, 1] is the step size. For multilinear models, a full step, i.e., η = 1, can be chosen without risking divergence [11]. All models in Section 5 fall into this category.\nSuch CD algorithms have been well studied and the runtime complexity is typically linear in the complexity of the training examples and embedding dimension. For MF, [23] shows a complexity of O(|S| k) and for FM, [11] derives a complexity of O(NZ(X) k) where NZ(X) is the number of non-zero entries in the design matrix X. The linear runtime complexity in the number of training examples makes these algorithms well suited for explicit recommendation settings, however, they become infeasible for implicit problems."
    }, {
      "heading" : "3.3 Learning from Implicit Feedback",
      "text" : "In an implicit recommendation problem, the non-consumed items are meaningful and cannot be ignored. For instance, in Figure 1 (right), the data depicts how often each item was consumed in a context in the past. The non-consumed items, i.e., the ones with a count of zero, are useful to learn user preferences. To formalize, the training data Simpl of an implicit problem consists of a set S+ of observed feedback and all the non-consumed tuples S0\nSimpl = S + ∪ S0, |Simpl| = |C| |I| (5)\nwith\n∀(c, i, y, α) ∈ S0 : y = 0, α = α0. (6)\nS+ contains the observed feedback and is of much smaller scale than Simpl, usually |S+| |C| |I|.\nThe implicit learning problem can be stated as minimizing the objective in eq. (1) over the implicit data Simpl. While possible in theory, in practice, it is infeasible to apply the learning algorithms of Section 3.2 to this problem due to their linear computational runtime in the size of the training data which is |Simpl| = |C||I| for implicit problems. Our paper shows how to derive efficient CD algorithms for optimizing eq. (1) over implicit data."
    }, {
      "heading" : "4. GENERIC COORDINATE DESCENT ALGORITHM FOR IMPLICIT FEEDBACK",
      "text" : ""
    }, {
      "heading" : "4.1 Implicit Regularizer",
      "text" : "As discussed in Section 3.3, the reason why training on implicit data is challenging is the large number of implicit examples S0 which is typically |S0| ∈ O(|C||I|). Note that S0 includes all context-item pairs that are not in S+. We show now that we can rephrase the optimization criterion to sum over all context-item pairs. This reformulation is a prerequisite to later allow the decomposition of the loss in Section 4.2. Moreover it allows to study implicit optimization without having to consider S+.\nLemma 1. Implicit learning can be rephrased as a combination of learning on a small positive set and minimizing the scoring function on any context-item pair.\nargmin Θ L(Θ|Simpl) = argmin Θ\n( L(Θ|S) + α0 ∑ c∈C ∑ i∈I\nŷ(c, i)2︸ ︷︷ ︸ =:R(Θ)\n)\n(7)\nwhere the observed feedback is rescaled\nS := {( c, i, α\nα− α0 y, α− α0\n) : (c, i, y, α) ∈ S+ } . (8)\nProof. Per definition of the loss (eq. 1) and the implicit training set Simpl (eq. 5)\nL(Θ|Simpl) = L(Θ|S+) + α0 ∑\n(c,i)∈S0 ŷ(c, i)2\n=L(Θ|S+)− L(Θ|{(c, i, 0, α0) : (c, i, y, α) ∈ S+}) + α0R(Θ)\nWe further can collapse each pair of examples into a single one. We show this for the pair (c, i, y, α) ∈ S and its counterpart (c, i, 0,−α0).\nL(Θ|{(c, i, y, α)}) + L(Θ|{(c, i, 0,−α0)}) =α (ŷ(c, i)− y)2 − α0 ŷ(c, i)2\n=(α− α0) ( ŷ(c, i)2 − 2 α\nα− α0 y ŷ(c, i) +\nα α− α0 y2 )\n=(α− α0) ( ŷ(c, i)− α\nα− α0 y\n)2 + const\n=L ( Θ| {( c, i, α\nα− α0 y, α− α0\n)}) + const\nThe additional constant does not change the optimum for Θ, so rescaling of examples as in eq. (8) preserves the optimum.\nThe lemma allows an interesting interpretation of implicit learning tasks. Implicit problems can be seen as explicit or one-class problems with an additional implicit regularizer or bias R(Θ) for predicting zeros. Compared to a common regularizer such as L2, the implicit regularizer is aware of the model ŷ. L2 penalizes non-zero model parameters Θ whereas the implicit regularizer penalizes non-zero predictions ŷ. Consequently, the implicit regularizer is less restrictive than L2 because small predictions can be achieved even with large model parameters.\n4.2 iCD Algorithm for k-separable Models As shown in eq. (7), implicit learning can be formulated as explicit learning on a small set S with an expensive implicit regularizer R. Learning models over an explicit loss is already well studied [23, 11], so we focus now on the implicit regularizer\nR(Θ) = ∑ c∈C ∑ i∈I ŷ(c, i)2 (9)\nThe general computational complexity is O(|C||I|). In this section, we introduce the concept of a k-separable model. We will provide an efficient implicit CD solver for any k-separable model. In Section 5, we show that many common models are k-separable, including matrix factorization, feature-based approaches such as factorization machines, but also higher-order tensor factorization such as PARAFAC or Tucker decomposition. The iCD framework that we derive in this section is not limited to the models described above but can serve as a blueprint for other k-separable models as well.\nDefinition 1 (k-separable). A model ŷ(c, i) is called k-separable iff the model can be rewritten as\nŷ(c, i) = 〈φ(c),ψ(i)〉 = k∑ f=1 φf (c)ψf (i) (10)\nwith functions\nφ : C → Rk, ψ : I → Rk (11)\nwhere φ is parameterized by ΘC and ψ is parameterized by ΘI with ΘC ∩ΘI = ∅.\nLemma 2. The implicit regularizer of any k-separable model can be decomposed to:\nR(Θ) = k∑ f=1 k∑ f ′=1 ∑ c∈C\nφf (c)φf ′(c)︸ ︷︷ ︸ =:JC(f,f ′)\n∑ i∈I\nψf (i)ψf ′(i)︸ ︷︷ ︸ =:JI (f,f ′)\n(12)\nProof. The lemma follows from inserting the k-separable model (eq. 10) into the implicit regularizer (eq. 9) and rearranging the summations.\nR(Θ) = ∑ c∈C ∑ i∈I k∑ f=1 φf (c)ψf (i) k∑ f ′=1 φf ′(c)ψf ′(i)\n= k∑ f=1 k∑ f ′=1 (∑ c∈C φf (c)φf ′(c) )(∑ i∈I φf (i)φf ′(i) )\nThis lemma is key to efficient learning algorithms from implicit data. It shows that the context and item sides can be computed independently, which drops the computational complexity from O(|C| |I|) to O((|C| + |I|) k2). Next, we show how this can be used for gradient computation which is required for the update step in CD (see eq. 4).\nLemma 3. The implicit regularizer gradients of any kseparable model with respect to any model parameter θ ∈ ΘC (or analogously θ ∈ ΘI), can be simplified to\nR′(θ) = 2 k∑ f=1 k∑ f ′=1 JI(f, f ′) ∑ c∈C φf (c)φ ′ f ′(c) (13)\nAlgorithm 1 Generic Implicit CD\n1: procedure iCD-Generic(S,C, I) 2: Θ← N (0, σ) 3: repeat 4: Compute Φ and Ψ if necessary 5: Compute JI 6: for θ ∈ ΘC do 7: Compute L′(θ|S), L′′(θ|S) 8: Compute R′(θ), R′′(θ) 9: θ ← θ − η L ′(θ|S)+α0 R′(θ)\nL′′(θ|S)+α0 R′′(θ) 10: Update Φ if necessary 11: end for 12: Apply step 5 to 11 to the items. 13: until converged 14: return Θ 15: end procedure\nR′′(θ) = 2 k∑ f=1 k∑ f ′=1 JI(f, f ′) ∑ c∈C [ φf (c)φ ′′ f ′(c) + φ ′ f (c)φ ′ f ′(c) ] (14)\nProof. The lemma follows from deriving eq. (12).\nThis lemma shows that computing R′ and R′′ of any context parameter is independent of |I|.\nFrom the analysis follows the recipe to derive an efficient iCD learning algorithm for a model ŷ. First, rewrite the model as a dot product of φ and ψ. Second, construct the first and second derivative of φ and ψ with respect to any model parameter θ ∈ Θ. These results allow to compute R′(θ) and R′′(θ) for any model parameter θ ∈ Θ efficiently. With these gradients for the expensive implicit regularizer, a Newton step can be applied. Algorithm 1 shows a generic iCD algorithm using the ideas of this section.\nMost models allow some further optimizations: (i) When the gradients of φ or ψ are sparse, some of the summands of eqs. (13, 14) drop. (ii) The model parameters usually have some structure which can be used for traversing the model parameters more systematically. We will show both of these steps in the next section for a variety of models."
    }, {
      "heading" : "5. APPLICATIONS",
      "text" : "In this section, we apply iCD to two classes of complex factorization models, namely feature-based factorization models and tensor factorization models. We have chosen these two classes because they are very powerful and frequently used. Moreover each of them has some interesting properties with respect to deriving iCD algorithms. The provided algorithms can be directly applied to many common recommender system tasks. This section also serves as a guide for deriving iCD algorithms in general."
    }, {
      "heading" : "5.1 Matrix Factorization (MF)",
      "text" : "We start by applying our framework to matrix factorization (see Figure 2). For MF, the scoring function is\nŷ(c, i) := 〈wc,hi〉 = k∑ f=1 wc,f hi,f (15)\nwith model parameters Θ = {W,H} where W ∈ RC×k and H ∈ RI×k.\nAlgorithm 2 Implicit CD for MF\n1: procedure iCD-MF(S,C, I) 2: W,H ← N (0, σ) 3: repeat 4: for f∗ ∈ {1, . . . , k} do 5: for f ∈ {1, . . . , k} do 6: Compute JI(f\n∗, f) 7: end for 8: for c∗ ∈ C do 9: Compute L′(wc∗,f∗ |S), L′′(wc∗,f∗ |S)\n10: Compute R′(wc∗,f∗), R ′′(wc∗,f∗) 11: wc∗,f∗←wc∗,f∗− L′(wc∗,f∗ |S)+αR ′(wc∗,f∗ ) L′′(wc∗,f∗ |S)+αR′′(wc∗,f∗ ) 12: end for 13: Apply step 5 to 12 to the items. 14: end for 15: until converged 16: return W,H 17: end procedure\nA MF model is trivially k-separable with\nφf (c) = wc,f , ψf (i) = hi,f . (16)\nFurthermore, the gradients are sparse\n∂φf (c) ∂wc∗,f∗ =\n{ 1, if c = c∗ ∧ f = f∗\n0, else (17)\nand all second derivatives are 0. Thus, the regularizer derivatives simplify to\nR′(wc∗,f∗) = 2 k∑ f=1 JI(f, f ∗)wc∗,f (18)\nR′′(wc∗,f∗) = 2 JI(f ∗, f∗) (19)\nThe derivation is symmetric for the item side. As MF associates each model parameter with an embedding dimension f , we can traverse the parameters one dimension at a time. A full step η = 1 can be taken because MF is bilinear. Algorithm 2 shows the full procedure.\nThe computation of JI(f ∗, ·) is trivially in O(|I| k). Gradient computation of the implicit regularizer is O(k) per parameter and for the explicit part O(|S|) for all parameters. Overall, the algorithm has a complexity of O((|I| + |C|) k2 + |S| k) per iteration."
    }, {
      "heading" : "5.2 Feature-Based Factorization Models",
      "text" : "One of the most powerful extension of MF is feature based modeling for the context and item. Feature-based factorization models are strictly more powerful than MF and have shown large improvements in many applications (e.g. [2, 11]). For instance, the cold-start problem is commonly solved by replacing or complementing user and item ids with user and item attributes [2]. Another example is context-aware recommendation, where the context is represented by several variables, e.g. location or time in addition to the user id. Also sequential models can be represented by feature based modeling [6].\nLearning general feature-based models on implicit feedback was restricted to BPR so far. This is the first work that provides an implicit CD algorithm for this important model class.\nTo formalize the problem, assume each c ∈ C is represented by a feature vector xc ∈ Rp and each i ∈ I by a feature vector zi ∈ Rp. See Figure 3 for an illustration.\n5.2.1 MF with Side Information (MFSI) We start with a feature based extension of matrix factor-\nization similar to [2]:\nŷ(c, i) = xcW (ziH) t = k∑ f=1 ( p∑ l=1 xc,l wl,f )( p∑ l=1 zi,l hl,f ) (20)\nwith Θ = {W,H}. MFSI is k-separable using\nφf (c) = p∑ l=1 xc,l wl,f , ψf (i) = p∑ l=1 zi,l hl,f (21)\nand the gradients are sparse\n∂φf (c) ∂wl∗,f∗ =\n{ xc,l∗ , if f = f ∗\n0, else (22)\nDue to sparse gradients of φ and ψ, the first and second\nAlgorithm 3 Implicit CD for MF with Side Information\n1: procedure iCD-MFSide(S,C, I) 2: W,H ← N (0, σ) 3: repeat 4: Compute Φ and Ψ 5: for f∗ ∈ {1, . . . , k} do 6: for f ∈ {1, . . . , k} do 7: Compute JI(f\n∗, f) 8: end for 9: for l∗ ∈ {1, . . . , p} do\n10: Compute L′(wl∗,f∗ |S), L′′(wl∗,f∗ |S) 11: Compute R′(wl∗,f∗), R ′′(wl∗,f∗) 12: wl∗,f∗←wl∗,f∗− L′(wl∗,f∗ |S)+αR ′(wl∗,f∗ ) L′′(wl∗,f∗ |S)+αR′′(wl∗,f∗ ) 13: Update Φ 14: end for 15: Apply step 6 to 14 to the items. 16: end for 17: until converged 18: end procedure\nregularizer derivatives simplify to:\nR′(wl∗,f∗) = 2 k∑ f=1 JI(f, f ∗) ∑ c∈C xc,l∗ φf (c) (23)\nR′′(wl∗,f∗) = 2 JI(f ∗, f∗) ∑ c∈C x2c,l∗ (24)\nNote that the sums over the context variable depend only on context where xc,l∗ 6= 0, so with a sparse iterator, the computation is O(kNZ(X)) for optimizing all of the context variables in a given embedding layer f∗.\nThis computation assumes that Φ and Ψ are given. Obviously, while optimizing W , Ψ does not change and while optimizing H, Φ does not change. However, while optimizing W , Φ changes but can be kept in sync with changes in W by updating:\nφf∗(c)← φf∗(c) + xc,l∗(wnewl∗,f∗ − woldl∗,f∗) (25)\nThe item side can be derived analogously. The total runtime of Algorithm 3 for one epoch over all variables isO(k2 (NZ(X)+ NZ(Z))) for the implicit regularizer.\n5.2.2 Factorization Machines The Factorization Machine (FM) model [11] is a more\ncomplex factorized model that includes biases and interactions between all variables. In general, the FM for a feature vector x ∈ Rp is defined as\nŷ(x) = b+ p∑ l=1 xl w̃l + ∑ l=1 ∑ l′>l 〈wl,wl′〉xlx′l (26)\nwhere b is a global bias parameter, w̃ are feature biases and W are the embeddings. In our case, for a context-item pair (c, i), we set the input feature vector x as the concatenation of the context and item feature vectors: x := (xc,zi).\nThe FM model is (k + 2)-separable, with\nφf (c) = p∑ l=1 xc,l wl,f , ψf (i) = p∑ l=1 zi,l hl,f , (27)\nφk+1(c) = b+ p∑ l=1 xc,l w̃l + ∑ l=1 ∑ l′>l 〈wl,wl′〉xc,lxc,l′ , (28)\nψk+1(i) = 1, (29)\nφk+2(c) = 1, (30)\nψk+2(c) = p∑ l=1 zi,l h̃l + ∑ l=1 ∑ l′>l 〈hl,hl′〉zi,lzi,l′ . (31)\nwhere for the context, φ is parameterized by w̃ ∈ Rp for the linear part and W ∈ Rp×k for the factors. And analogously for items, ψ is parameterized by h̃ ∈ Rp for the linear part and H ∈ Rp×k for the factors.\nThe gradients are sparse:\n∂φf (c)\n∂w̃l∗ =\n{ xc,l∗ , if f = k + 1\n0, else (32)\n∂φf (c) ∂wl∗,f∗ =  xc,l∗ , if f = f ∗\nxc,l∗(φf∗(c)− xc,l∗wl∗,f∗), if f = k + 1 0, else\n(33)\nSimilar to MFSI, due to the sparsity in gradients, one of the nested loops drops for the first regularizer derivative R′ and both nested sums drop for the second regularizer derivative R′′. Consequently, the flow and runtime analysis for FM is the same as for MFSI."
    }, {
      "heading" : "5.3 Tensor Factorization",
      "text" : "Tensor factorization generalizes matrix factorization and deals with problems that involve more than two categorical variables. For instance, in personalized recommendation of tags for bookmarks [20], the context consists of two variables, the user C1 and the bookmark C2, and the item I corresponds to the tag. For personalized web search [19], the context consists of the user C1 and the query C2 and the item I to the web page. The data can be seen as a three mode tensor over C1, C2 and I. Figure 4 shows an example of how observations over context C ⊆ C1 × C2 and items I translate to a tensor. A tensor factorization model tries to approximate the tensor with a low rank decomposition (see Figure 5). Although tensor factorization models are multilinear, we show that they fit well into our framework.\nAdditionally, we want to highlight, that existing tensor factorization learning algorithms [19, 20, 10] require that the\ntensor data is dense, i.e., the empty parts in the tensor in Figure 4 are filled with zeros. This would imply that context combinations that never have been observed, are used for training as well, i.e., C = C1 × C2. In some applications, this might not make sense, for instance if C1 encodes a device type and C2 encodes an operating system version. Our iCD framework works for both sparse and dense context. We will point out the differences when necessary.\n5.3.1 Parallel Factor Analysis (PARAFAC) We first discuss the Parallel Factor Analysis (PARAFAC) [3]\nmodel which is a 3-mode extension of matrix factorization.\nŷ(c1, c2, i) := k∑ f=1 uc1,f vc2,f wi,f (34)\nwith Θ = {U, V,W} where U ∈ RC1×k, V ∈ RC2×k and W ∈ RI×k. PARAFAC is k-separable with\nφf (c1, c2) = uc1,f vc2,f , ψf (i) = wi,f (35)\nAgain, gradients are sparse:\n∂φf (c1, c2)\n∂uc∗1 ,f∗ =\n{ vc2,f , if c1 = c ∗ 1 ∧ f = f∗\n0, else (36)\nand the loss derivatives simplify to\nR′(uc∗1 ,f∗) = 2 k∑ f=1 JI(f, f ∗)uc∗,f ∑ c2:(c ∗ 1 ,c2)∈C vc2,f vc2,f∗\n(37)\nR′′(uc∗1 ,f∗) = 2 JI(f ∗, f∗) ∑ c2:(c ∗ 1 ,c2)∈C vc2,f∗ vc2,f∗ (38)\nThe item side is equivalent to matrix factorization. If the context is dense and includes all possible combinations of context variables, i.e., if C = C1 × C2, then the computation of JC(f, f ′), can be decomposed to:\nJC(f, f ′) = ∑ c1∈C\nuc1,f uc1,f ′︸ ︷︷ ︸ =:JC1 (f,f ′)\n∑ c2∈C\nvc2,f vc2,f ′︸ ︷︷ ︸ =:JC2 (f,f ′)\n(39)\nThis means, the computation is in O(|C1|+ |C2|) instead of O(|C1| |C2|). On the other hand if C is sparse and contains only the subset of the observed context combinations, i.e., C ⊂ C1 × C2, then there is no need for decomposing this sum. The same applies to the loss derivatives of eqs. (37,38): Again, if all possible context is modeled, then {c2 : (c∗1, c2) ∈ C} = C2 and thus JC2(f, f ′) can replace the sum over C2.\nThe overall runtime for PARAFAC’s implicit regularizer is O((|C|+ |I|) k2) for sparse context and O((|C1|+ |C2|+ |I|) k2) for dense context. The traversal over model parameters can be arranged as in the MF algorithm.\n5.3.2 Tucker Decomposition Tucker Decomposition (TD) [21] is a generalization of\nPARAFAC which computes all interactions between the factor matrices. The strength of each interaction is given by a core tensor B. For our running example with two context variables c1, c2 and one item variable i, TD is defined as\nŷ(c1, c2, i) = k1∑ f1=1 k2∑ f2=1 k3∑ f3=1 bf1,f2,f3uc1,f1 vc2,f2 wi,f3 (40)\nwith Θ = {B,U, V,W} where B ∈ Rk1×k2×k3 is the core tensor and U ∈ R|C1|×k1 , V ∈ R|C2|×k2 andW ∈ R|I|×k3 . TD is much more computationally expensive than PARAFAC, requiring O(k1 k2 k3) operations just for evaluating the model on one data point.\nEven though Tucker decomposition contains nested sums, it is k3-separable with\nφf (c1, c2) = k1∑ f1=1 k2∑ f2=1 bf1,f2,fuc1,f1 vc2,f2 , ψf (i) = wi,f\nThe derivatives of these functions are:\n∂φf (c1, c2)\n∂uc1,f∗1 =\n{∑k2 f2=1 bf∗1 ,f2,f vc2,f2 , if c1 = c ∗ 1\n0, else (41)\n∂φf (c1, c2)\n∂vc2,f∗2 =\n{∑k1 f1=1 bf1,f∗2 ,f uc1,f1 , if c2 = c ∗ 2\n0, else (42)\n∂φf (c1, c2) ∂bf∗1 ,f∗2 ,f∗3 =\n{ uc1,f∗1 vc2,f∗2 , if f = f ∗ 3\n0, else (43)\n∂ψf (i) ∂wi∗,f∗3 =\n{ 1, if f = f∗3 ∧ i = i∗\n0, else (44)\nUnlike all the other models we have presented so far, the gradients for φ are non-zero for any factor index f ∈ {1, . . . , k}. Consequently, the nested loops over factors of the loss gradient (eq. 13) cannot be improved further. However, for ψ, which is sparse, the same optimization as in the other models can be applied.\nLike for PARAFAC, if C is dense, i.e., C = C1 × C2, we can precompute intermediate matrices for C1 and C2 and the computation of JC(f, f ′) simplifies to\nk1∑ f1=1 k1∑ f ′1=1 k2∑ f2=1 k2∑ f ′2=1 bf1,f2,f bf ′1,f ′2,f ′JC1(f1, f ′ 1)JC2(f2, f ′ 2)\nIf C is sparse, there is no need for this optimization and we can use a straightforward computation of JC . The overall runtime complexities are O(k21 k22 k23 (|C1| + |C2| + |I|)) for dense context and O(k21 k22 k23 (|C|+ |I|)) for sparse context."
    }, {
      "heading" : "6. EXPERIMENTS",
      "text" : "The main objective of the experiments is to illustrate the generality of the iCD framework. We show how iCD can be applied to a variety of recommender problems that cannot be solved with MF alone. For MF models, efficient coordinate\ndescent algorithms (CD) have been previously proposed [5] and its performance compared against gradient descent algorithms such as BPR [13]. Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8]. The purpose of our experiments is not to compare BPR and CD on yet another dataset, but rather to demonstrate the versatility of the iCD framework and illustrate how it can serve as a building block for future research on complex recommender models. As with MF, it is likely that both iCD and BPR will show strengths in different applications."
    }, {
      "heading" : "6.1 Experimental Setup",
      "text" : "We evaluate on a dataset of 200, 000 users interacting with YouTube. Our subset contains |I| = 68, 000 videos. The dataset also contains side information about age, country, gender and device info. We apply iCD to three popular recommendation problems – Cold-Start, Offline Recommendation, and Instant Recommendation (see Section 6.2). We compare the following algorithms:\n• Popularity: a static recommender that returns the most popular videos.\n• Coview: returns based on the previously watched video, the most commonly chosen next video.\n• iCD-MF: user-item matrix factorization using iCD for optimization, similar to [5].\n• iCD-FM: a factorization machine with varying features for the context (Section 5.2). We report results for different feature choices.\nWe measure the recall and NDCG for the top 100 returned videos. Note that we report relative improvements over the Popularity recommender. All hyperparameters are tuned on a separate tuning holdout set."
    }, {
      "heading" : "6.2 Results",
      "text" : "6.2.1 Cold-Start Recommendation In the Cold-Start recommendation [2] scenario, we assume\nthat a user interacts with the recommender system for the first time. To simulate this scenario, we select a random subset of users and hold out all their events for evaluation purposes; we train on the remaining users.\nThe common approach for dealing with cold-start is to represent a user by side information [2]. Here, we use the feature-based FM model (iCD-FM) with the user’s age, gender, country and device info as context features. Figure 7 shows that attribute-aware FM achieves a 2x improvement over the baselines. As expected, neither MF nor Coview can do any better than most-popular recommendation.\n6.2.2 Offline Recommendation In the Offline Recommendation scenario, we hold out the\nlast feedback of each user and use all the previous feedback for training. This is the most commonly used protocol to evaluate the performance of a recommender algorithm. We experiment with multiple FM models: (1) iCD-FM A: an FM with user attributes, (2) iCD-FM P: a sequential FM that only uses the previously watched video (similar to FPMC [14] or Coview) and (3) iCD-FM A+P+U: an FM\nthat uses all signals: attributes, previously watched video and user id (similar to FPMC [14] with user attributes). As shown in Figure 6a, the complex FM model with all features achieves the best quality, illustrating the flexibility of feature engineering with iCD.\n6.2.3 Instant Recommendation In large-scale industrial applications, online training is of-\nten not feasible due to complex serving stacks. Commonly, models are periodically trained offline (e.g., every day or week) and applied on a stream of user interactions. When the model is queried to generate recommendations for a user, all feedback until the current time is taken into account for prediction. We simulate this setting by choosing a global cutoff time where all the events before the cutoff are used for training and all the remaining ones for evaluation.\nIn such settings, models relying on user ids, such as MF, cannot capture recent feedback. Instead, describing a user by the sequence of previously watched videos allows for instant personalization. Such a model can be configured using a feature-based FM model (Section 5.2) and we experiment with four configurations (1) iCD-FM A: FM using user attributes, (2) iCD-FM P: a sequential FM based on the previously watched video, (3) iCD-FM H: a FM based on all previously watched videos, (4) iCD-FM A+P+H: an FM combining all signals. As expected, the complex FM model with all features achieves the best quality. Again, we would like to note the generality of the iCD framework, which enables flexible feature engineering."
    }, {
      "heading" : "6.3 Computational Costs",
      "text" : "As stated in Section 3.3, any conventional CD solver, e.g. [11], could solve the implicit feedback problem. Now, we substantiate that this is infeasible because of the large number of implicit examples. Figure 8 compares the computational cost for learning an FM with a conventional CD to the costs of iCD on our dataset with 70k items. We use three different context features from Figure 6. The plot shows relative costs to iCD-FM P. For all three context choices, conventional CD shows four orders of magnitude higher compuational costs than iCD. The empirical measured runtime for iCD was in the order of minutes; consequently, CD’s four order of magnitude increase in runtime translates to weeks of training for each iteration. Clearly, using a conventional CD solver to optimize the implicit loss directly is infeasible."
    }, {
      "heading" : "7. CONCLUSION",
      "text" : "In this work, we have presented a general, efficient framework for learning recommender system models from implicit feedback. First, we have shown that learning from implicit feedback can be reformulated as optimizing a cheap explicit loss and an expensive implicit regularizer. Then we have introduced the concept of k-separable models. We have shown that the implicit regularizer of any k-separable model can be computed efficiently without iterating over all context-item pairs. Finally, we have shown that many popular recommender models are k-separable, including matrix factorization, factorization machines and tensor factorization. Moreover, we have provided efficient learning algorithms for these models based on our framework. Our framework is not limited to the models discussed in the paper but designed to serve as a general blueprint for deriving learning algorithms for recommender systems."
    }, {
      "heading" : "8. REFERENCES",
      "text" : "[1] C. Cheng, H. Yang, M. R. Lyu, and I. King. Where\nYou Like to Go Next: Successive Point-of-Interest Recommendation. In IJCAI, volume 13, pages 2605–2611, 2013.\n[2] Z. Gantner, L. Drumond, C. Freudenthaler, S. Rendle, and L. Schmidt-Thieme. Learning attribute-to-feature mappings for cold-start recommendations. In 2010 IEEE International Conference on Data Mining, pages 176–185. IEEE, 2010.\n[3] R. A. Harshman. Foundations of the PARAFAC procedure: Models and conditions for an ”explanatory” multi-modal factor analysis. UCLA Working Papers in Phonetics, 16(1):84, 1970.\n[4] R. He and J. McAuley. VBPR: Visual bayesian personalized ranking from implicit feedback. In D. Schuurmans and M. P. Wellman, editors, AAAI, pages 144–150. AAAI Press, 2016.\n[5] Y. Hu, Y. Koren, and C. Volinsky. Collaborative filtering for implicit feedback datasets. In Proceedings of the 2008 Eighth IEEE International Conference on Data Mining, ICDM ’08, pages 263–272, 2008.\n[6] B. Kanagal, A. Ahmed, S. Pandey, V. Josifovski, J. Yuan, and L. Garcia-Pueyo. Supercharging recommender systems using taxonomies for learning user purchase behavior. Proc. VLDB Endow., 5(10):956–967, June 2012.\n[7] B. McFee, T. Bertin-Mahieux, D. P. Ellis, and G. R. Lanckriet. The million song dataset challenge. In Proceedings of the 21st International Conference on World Wide Web, WWW ’12 Companion, pages 909–916, New York, NY, USA, 2012. ACM.\n[8] X. Ning and G. Karypis. Slim: Sparse linear methods for top-n recommender systems. In 2011 IEEE 11th International Conference on Data Mining, pages 497–506. IEEE, 2011.\n[9] W. Pan and L. Chen. GBPR: Group Preference Based Bayesian Personalized Ranking for One-Class Collaborative Filtering. In IJCAI, volume 13, pages 2691–2697, 2013.\n[10] I. Pilászy, D. Zibriczky, and D. Tikk. Fast als-based matrix factorization for explicit and implicit feedback datasets. In Proceedings of the fourth ACM conference on Recommender systems, pages 71–78. ACM, 2010.\n[11] S. Rendle. Factorization machines with libfm. ACM Trans. Intell. Syst. Technol., 3(3):57:1–57:22, may 2012.\n[12] S. Rendle and C. Freudenthaler. Improving pairwise learning for item recommendation from implicit feedback. In Proceedings of the 7th ACM International Conference on Web Search and Data Mining, WSDM ’14, pages 273–282, New York, NY, USA, 2014. ACM.\n[13] S. Rendle, C. Freudenthaler, Z. Gantner, and L. Schmidt-Thieme. BPR: Bayesian personalized ranking from implicit feedback. In Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence, UAI ’09, pages 452–461, Arlington, Virginia, United States, 2009. AUAI Press.\n[14] S. Rendle, C. Freudenthaler, and L. Schmidt-Thieme. Factorizing personalized markov chains for next-basket recommendation. In Proceedings of the 19th International Conference on World Wide Web,\nWWW ’10, pages 811–820. ACM, 2010.\n[15] S. Sedhain, A. K. Menon, S. Sanner, and D. Braziunas. On the effectiveness of linear models for one-class collaborative filtering. In Proceedings of the 30th Conference on Artificial Intelligence (AAAI-16), 2016.\n[16] Y. Shi, A. Karatzoglou, L. Baltrunas, M. Larson, A. Hanjalic, and N. Oliver. TFMAP: optimizing MAP for top-n context-aware recommendation. In Proceedings of the 35th international ACM SIGIR conference on Research and development in information retrieval, pages 155–164. ACM, 2012.\n[17] Y. Shi, A. Karatzoglou, L. Baltrunas, M. Larson, N. Oliver, and A. Hanjalic. CLiMF: learning to maximize reciprocal rank with collaborative less-is-more filtering. In Proceedings of the sixth ACM conference on Recommender systems, pages 139–146. ACM, 2012.\n[18] E. Shmueli, A. Kagian, Y. Koren, and R. Lempel. Care to comment?: recommendations for commenting on news stories. In Proceedings of the 21st international conference on World Wide Web, pages 429–438. ACM, 2012.\n[19] J.-T. Sun, H.-J. Zeng, H. Liu, Y. Lu, and Z. Chen. Cubesvd: A novel approach to personalized web search. In Proceedings of the 14th International Conference on World Wide Web, WWW ’05, pages 382–390, New York, NY, USA, 2005. ACM.\n[20] P. Symeonidis, A. Nanopoulos, and Y. Manolopoulos. A unified framework for providing recommendations in social tagging systems based on ternary semantic analysis. IEEE Trans. on Knowl. and Data Eng., 22(2):179–192, Feb. 2010.\n[21] L. R. Tucker. Some mathematical notes on three-mode factor analysis. Psychometrika, 31:279–311, 1966.\n[22] M. Volkovs and G. W. Yu. Effective latent models for binary feedback in recommender systems. In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 313–322. ACM, 2015.\n[23] H.-F. Yu, C.-J. Hsieh, S. Si, and I. Dhillon. Scalable coordinate descent approaches to parallel matrix factorization for recommender systems. In Proceedings of the 12th International Conference on Data Mining, ICDM ’12, pages 765–774, 2012.\n[24] X. Yu, X. Ren, Y. Sun, Q. Gu, B. Sturt, U. Khandelwal, B. Norick, and J. Han. Personalized entity recommendation: A heterogeneous information network approach. In Proceedings of the 7th ACM International Conference on Web Search and Data Mining, WSDM ’14, pages 283–292. ACM, 2014.\n[25] T. Zhao, J. McAuley, and I. King. Leveraging social connections to improve personalized ranking for collaborative filtering. In Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management, CIKM ’14, pages 261–270, New York, NY, USA, 2014. ACM.\n[26] T. Zhao, J. McAuley, and I. King. Improving latent factor models via personalized feature projection for one class recommendation. In Proceedings of the 24th ACM International on Conference on Information and Knowledge Management, pages 821–830. ACM, 2015."
    } ],
    "references" : [ {
      "title" : "Where You Like to Go Next: Successive Point-of-Interest Recommendation",
      "author" : [ "C. Cheng", "H. Yang", "M.R. Lyu", "I. King" ],
      "venue" : "In IJCAI,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2013
    }, {
      "title" : "Learning attribute-to-feature mappings for cold-start recommendations",
      "author" : [ "Z. Gantner", "L. Drumond", "C. Freudenthaler", "S. Rendle", "L. Schmidt-Thieme" ],
      "venue" : "In 2010 IEEE International Conference on Data Mining,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2010
    }, {
      "title" : "Foundations of the PARAFAC procedure: Models and conditions for an ”explanatory” multi-modal factor analysis",
      "author" : [ "R.A. Harshman" ],
      "venue" : "UCLA Working Papers in Phonetics,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 1970
    }, {
      "title" : "VBPR: Visual bayesian personalized ranking from implicit feedback",
      "author" : [ "R. He", "J. McAuley" ],
      "venue" : null,
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2016
    }, {
      "title" : "Collaborative filtering for implicit feedback datasets",
      "author" : [ "Y. Hu", "Y. Koren", "C. Volinsky" ],
      "venue" : "In Proceedings of the 2008 Eighth IEEE International Conference on Data Mining,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2008
    }, {
      "title" : "Supercharging recommender systems using taxonomies for learning user purchase behavior",
      "author" : [ "B. Kanagal", "A. Ahmed", "S. Pandey", "V. Josifovski", "J. Yuan", "L. Garcia-Pueyo" ],
      "venue" : "Proc. VLDB Endow.,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2012
    }, {
      "title" : "The million song dataset challenge",
      "author" : [ "B. McFee", "T. Bertin-Mahieux", "D.P. Ellis", "G.R. Lanckriet" ],
      "venue" : "In Proceedings of the 21st International Conference on World Wide Web, WWW ’12 Companion,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2012
    }, {
      "title" : "Sparse linear methods for top-n recommender systems",
      "author" : [ "X. Ning", "G. Karypis. Slim" ],
      "venue" : "In 2011 IEEE 11th International Conference on Data Mining,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2011
    }, {
      "title" : "GBPR: Group Preference Based Bayesian Personalized Ranking for One-Class Collaborative Filtering",
      "author" : [ "W. Pan", "L. Chen" ],
      "venue" : "In IJCAI,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2013
    }, {
      "title" : "Fast als-based matrix factorization for explicit and implicit feedback datasets",
      "author" : [ "I. Pilászy", "D. Zibriczky", "D. Tikk" ],
      "venue" : "In Proceedings of the fourth ACM conference on Recommender systems,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2010
    }, {
      "title" : "Factorization machines with libfm",
      "author" : [ "S. Rendle" ],
      "venue" : "ACM Trans. Intell. Syst. Technol.,",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2012
    }, {
      "title" : "Improving pairwise learning for item recommendation from implicit feedback",
      "author" : [ "S. Rendle", "C. Freudenthaler" ],
      "venue" : "In Proceedings of the 7th ACM International Conference on Web Search and Data Mining,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2014
    }, {
      "title" : "BPR: Bayesian personalized ranking from implicit feedback",
      "author" : [ "S. Rendle", "C. Freudenthaler", "Z. Gantner", "L. Schmidt-Thieme" ],
      "venue" : "In Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 2009
    }, {
      "title" : "Factorizing personalized markov chains for next-basket recommendation",
      "author" : [ "S. Rendle", "C. Freudenthaler", "L. Schmidt-Thieme" ],
      "venue" : "In Proceedings of the 19th International Conference on World Wide Web,  WWW",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2010
    }, {
      "title" : "On the effectiveness of linear models for one-class collaborative filtering",
      "author" : [ "S. Sedhain", "A.K. Menon", "S. Sanner", "D. Braziunas" ],
      "venue" : "In Proceedings of the 30th Conference on Artificial Intelligence",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2016
    }, {
      "title" : "TFMAP: optimizing MAP for top-n context-aware recommendation",
      "author" : [ "Y. Shi", "A. Karatzoglou", "L. Baltrunas", "M. Larson", "A. Hanjalic", "N. Oliver" ],
      "venue" : "In Proceedings of the 35th international ACM SIGIR conference on Research and development in information retrieval,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2012
    }, {
      "title" : "CLiMF: learning to maximize reciprocal rank with collaborative less-is-more filtering",
      "author" : [ "Y. Shi", "A. Karatzoglou", "L. Baltrunas", "M. Larson", "N. Oliver", "A. Hanjalic" ],
      "venue" : "In Proceedings of the sixth ACM conference on Recommender systems,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2012
    }, {
      "title" : "Care to comment?: recommendations for commenting on news stories",
      "author" : [ "E. Shmueli", "A. Kagian", "Y. Koren", "R. Lempel" ],
      "venue" : "In Proceedings of the 21st international conference on World Wide Web,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2012
    }, {
      "title" : "Cubesvd: A novel approach to personalized web search",
      "author" : [ "J.-T. Sun", "H.-J. Zeng", "H. Liu", "Y. Lu", "Z. Chen" ],
      "venue" : "In Proceedings of the 14th International Conference on World Wide Web, WWW",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2005
    }, {
      "title" : "A unified framework for providing recommendations in social tagging systems based on ternary semantic analysis",
      "author" : [ "P. Symeonidis", "A. Nanopoulos", "Y. Manolopoulos" ],
      "venue" : "IEEE Trans. on Knowl. and Data Eng.,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2010
    }, {
      "title" : "Some mathematical notes on three-mode factor analysis",
      "author" : [ "L.R. Tucker" ],
      "venue" : "Psychometrika, 31:279–311,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 1966
    }, {
      "title" : "Effective latent models for binary feedback in recommender systems",
      "author" : [ "M. Volkovs", "G.W. Yu" ],
      "venue" : "In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2015
    }, {
      "title" : "Scalable coordinate descent approaches to parallel matrix factorization for recommender systems",
      "author" : [ "H.-F. Yu", "C.-J. Hsieh", "S. Si", "I. Dhillon" ],
      "venue" : "In Proceedings of the 12th International Conference on Data Mining,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2012
    }, {
      "title" : "Personalized entity recommendation: A heterogeneous information network approach",
      "author" : [ "X. Yu", "X. Ren", "Y. Sun", "Q. Gu", "B. Sturt", "U. Khandelwal", "B. Norick", "J. Han" ],
      "venue" : "In Proceedings of the 7th ACM International Conference on Web Search and Data Mining,",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2014
    }, {
      "title" : "Leveraging social connections to improve personalized ranking for collaborative filtering",
      "author" : [ "T. Zhao", "J. McAuley", "I. King" ],
      "venue" : "In Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2014
    }, {
      "title" : "Improving latent factor models via personalized feature projection for one class recommendation",
      "author" : [ "T. Zhao", "J. McAuley", "I. King" ],
      "venue" : "In Proceedings of the 24th ACM International on Conference on Information and Knowledge Management,",
      "citeRegEx" : "26",
      "shortCiteRegEx" : "26",
      "year" : 2015
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "However, learning a recommender system from implicit feedback is computationally expensive because the observed actions of a user need to be contrasted against all the non-observed actions [5, 13].",
      "startOffset" : 189,
      "endOffset" : 196
    }, {
      "referenceID" : 12,
      "context" : "However, learning a recommender system from implicit feedback is computationally expensive because the observed actions of a user need to be contrasted against all the non-observed actions [5, 13].",
      "startOffset" : 189,
      "endOffset" : 196
    }, {
      "referenceID" : 12,
      "context" : "While SGD is available as a general framework to optimize a broad class of models [13], CD is only available for a few simple models [5, 10].",
      "startOffset" : 82,
      "endOffset" : 86
    }, {
      "referenceID" : 4,
      "context" : "While SGD is available as a general framework to optimize a broad class of models [13], CD is only available for a few simple models [5, 10].",
      "startOffset" : 133,
      "endOffset" : 140
    }, {
      "referenceID" : 9,
      "context" : "While SGD is available as a general framework to optimize a broad class of models [13], CD is only available for a few simple models [5, 10].",
      "startOffset" : 133,
      "endOffset" : 140
    }, {
      "referenceID" : 12,
      "context" : "The first one is Bayesian Personalized Ranking (BPR) [13], a stochastic gradient descent (SGD) framework, that contrasts pairs of consumed to nonconsumed items.",
      "startOffset" : 53,
      "endOffset" : 57
    }, {
      "referenceID" : 4,
      "context" : "The second one is coordinate descent (CD) also known as alternating least squares on an elementwise loss over both the consumed and non-consumed items [5].",
      "startOffset" : 151,
      "endOffset" : 154
    }, {
      "referenceID" : 6,
      "context" : "BPR tackles this issue by sampling negative items, but it has been shown that BPR has convergence problems when the number of items is large [7, 12].",
      "startOffset" : 141,
      "endOffset" : 148
    }, {
      "referenceID" : 11,
      "context" : "BPR tackles this issue by sampling negative items, but it has been shown that BPR has convergence problems when the number of items is large [7, 12].",
      "startOffset" : 141,
      "endOffset" : 148
    }, {
      "referenceID" : 11,
      "context" : "It requires more complex, nonuniform, sampling strategies for dealing with this problem [12, 6].",
      "startOffset" : 88,
      "endOffset" : 95
    }, {
      "referenceID" : 5,
      "context" : "It requires more complex, nonuniform, sampling strategies for dealing with this problem [12, 6].",
      "startOffset" : 88,
      "endOffset" : 95
    }, {
      "referenceID" : 4,
      "context" : "[5] have derived an efficient algorithm that allows to optimize over the large number of non-consumed items without any cost.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 122,
      "endOffset" : 136
    }, {
      "referenceID" : 16,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 122,
      "endOffset" : 136
    }, {
      "referenceID" : 15,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 122,
      "endOffset" : 136
    }, {
      "referenceID" : 7,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 122,
      "endOffset" : 136
    }, {
      "referenceID" : 7,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 183,
      "endOffset" : 202
    }, {
      "referenceID" : 24,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 183,
      "endOffset" : 202
    }, {
      "referenceID" : 14,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 183,
      "endOffset" : 202
    }, {
      "referenceID" : 21,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 183,
      "endOffset" : 202
    }, {
      "referenceID" : 25,
      "context" : "Many authors have compared both CD-MF and BPR-MF on a variety of datasets and some work reports better quality for BPR-MF [4, 17, 16, 8] whereas for other problems CD-MF works better [8, 25, 15, 22, 26].",
      "startOffset" : 183,
      "endOffset" : 202
    }, {
      "referenceID" : 1,
      "context" : "Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24].",
      "startOffset" : 144,
      "endOffset" : 164
    }, {
      "referenceID" : 3,
      "context" : "Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24].",
      "startOffset" : 144,
      "endOffset" : 164
    }, {
      "referenceID" : 17,
      "context" : "Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24].",
      "startOffset" : 144,
      "endOffset" : 164
    }, {
      "referenceID" : 0,
      "context" : "Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24].",
      "startOffset" : 144,
      "endOffset" : 164
    }, {
      "referenceID" : 8,
      "context" : "Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24].",
      "startOffset" : 144,
      "endOffset" : 164
    }, {
      "referenceID" : 23,
      "context" : "Shifting from simple matrix factorization to more complex factorization models has shown large success in many implicit recommendation problems [2, 4, 18, 1, 9, 24].",
      "startOffset" : 144,
      "endOffset" : 164
    }, {
      "referenceID" : 10,
      "context" : ", η = 1, can be chosen without risking divergence [11].",
      "startOffset" : 50,
      "endOffset" : 54
    }, {
      "referenceID" : 22,
      "context" : "For MF, [23] shows a complexity of O(|S| k) and for FM, [11] derives a complexity of O(NZ(X) k) where NZ(X) is the number of non-zero entries in the design matrix X.",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 10,
      "context" : "For MF, [23] shows a complexity of O(|S| k) and for FM, [11] derives a complexity of O(NZ(X) k) where NZ(X) is the number of non-zero entries in the design matrix X.",
      "startOffset" : 56,
      "endOffset" : 60
    }, {
      "referenceID" : 22,
      "context" : "Learning models over an explicit loss is already well studied [23, 11], so we focus now on the implicit regularizer",
      "startOffset" : 62,
      "endOffset" : 70
    }, {
      "referenceID" : 10,
      "context" : "Learning models over an explicit loss is already well studied [23, 11], so we focus now on the implicit regularizer",
      "startOffset" : 62,
      "endOffset" : 70
    }, {
      "referenceID" : 1,
      "context" : "[2, 11]).",
      "startOffset" : 0,
      "endOffset" : 7
    }, {
      "referenceID" : 10,
      "context" : "[2, 11]).",
      "startOffset" : 0,
      "endOffset" : 7
    }, {
      "referenceID" : 1,
      "context" : "For instance, the cold-start problem is commonly solved by replacing or complementing user and item ids with user and item attributes [2].",
      "startOffset" : 134,
      "endOffset" : 137
    }, {
      "referenceID" : 5,
      "context" : "Also sequential models can be represented by feature based modeling [6].",
      "startOffset" : 68,
      "endOffset" : 71
    }, {
      "referenceID" : 1,
      "context" : "1 MF with Side Information (MFSI) We start with a feature based extension of matrix factorization similar to [2]:",
      "startOffset" : 109,
      "endOffset" : 112
    }, {
      "referenceID" : 10,
      "context" : "2 Factorization Machines The Factorization Machine (FM) model [11] is a more complex factorized model that includes biases and interactions between all variables.",
      "startOffset" : 62,
      "endOffset" : 66
    }, {
      "referenceID" : 19,
      "context" : "For instance, in personalized recommendation of tags for bookmarks [20], the context consists of two variables, the user C1 and the bookmark C2, and the item I corresponds to the tag.",
      "startOffset" : 67,
      "endOffset" : 71
    }, {
      "referenceID" : 18,
      "context" : "For personalized web search [19], the context consists of the user C1 and the query C2 and the item I to the web page.",
      "startOffset" : 28,
      "endOffset" : 32
    }, {
      "referenceID" : 18,
      "context" : "Additionally, we want to highlight, that existing tensor factorization learning algorithms [19, 20, 10] require that the k3",
      "startOffset" : 91,
      "endOffset" : 103
    }, {
      "referenceID" : 19,
      "context" : "Additionally, we want to highlight, that existing tensor factorization learning algorithms [19, 20, 10] require that the k3",
      "startOffset" : 91,
      "endOffset" : 103
    }, {
      "referenceID" : 9,
      "context" : "Additionally, we want to highlight, that existing tensor factorization learning algorithms [19, 20, 10] require that the k3",
      "startOffset" : 91,
      "endOffset" : 103
    }, {
      "referenceID" : 2,
      "context" : "1 Parallel Factor Analysis (PARAFAC) We first discuss the Parallel Factor Analysis (PARAFAC) [3] model which is a 3-mode extension of matrix factorization.",
      "startOffset" : 93,
      "endOffset" : 96
    }, {
      "referenceID" : 20,
      "context" : "2 Tucker Decomposition Tucker Decomposition (TD) [21] is a generalization of PARAFAC which computes all interactions between the factor matrices.",
      "startOffset" : 49,
      "endOffset" : 53
    }, {
      "referenceID" : 4,
      "context" : "For MF models, efficient coordinate descent algorithms (CD) have been previously proposed [5] and its performance compared against gradient descent algorithms such as BPR [13].",
      "startOffset" : 90,
      "endOffset" : 93
    }, {
      "referenceID" : 12,
      "context" : "For MF models, efficient coordinate descent algorithms (CD) have been previously proposed [5] and its performance compared against gradient descent algorithms such as BPR [13].",
      "startOffset" : 171,
      "endOffset" : 175
    }, {
      "referenceID" : 7,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 97,
      "endOffset" : 116
    }, {
      "referenceID" : 24,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 97,
      "endOffset" : 116
    }, {
      "referenceID" : 14,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 97,
      "endOffset" : 116
    }, {
      "referenceID" : 21,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 97,
      "endOffset" : 116
    }, {
      "referenceID" : 25,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 97,
      "endOffset" : 116
    }, {
      "referenceID" : 3,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 162,
      "endOffset" : 176
    }, {
      "referenceID" : 16,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 162,
      "endOffset" : 176
    }, {
      "referenceID" : 15,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 162,
      "endOffset" : 176
    }, {
      "referenceID" : 7,
      "context" : "Both approaches are considered state-of-the-art and while CD outperforms BPR on certain datasets [8, 25, 15, 22, 26], BPR has been shown to work better on others [4, 17, 16, 8].",
      "startOffset" : 162,
      "endOffset" : 176
    }, {
      "referenceID" : 4,
      "context" : "• iCD-MF: user-item matrix factorization using iCD for optimization, similar to [5].",
      "startOffset" : 80,
      "endOffset" : 83
    }, {
      "referenceID" : 1,
      "context" : "1 Cold-Start Recommendation In the Cold-Start recommendation [2] scenario, we assume that a user interacts with the recommender system for the first time.",
      "startOffset" : 61,
      "endOffset" : 64
    }, {
      "referenceID" : 1,
      "context" : "The common approach for dealing with cold-start is to represent a user by side information [2].",
      "startOffset" : 91,
      "endOffset" : 94
    }, {
      "referenceID" : 13,
      "context" : "We experiment with multiple FM models: (1) iCD-FM A: an FM with user attributes, (2) iCD-FM P: a sequential FM that only uses the previously watched video (similar to FPMC [14] or Coview) and (3) iCD-FM A+P+U: an FM",
      "startOffset" : 172,
      "endOffset" : 176
    }, {
      "referenceID" : 13,
      "context" : "that uses all signals: attributes, previously watched video and user id (similar to FPMC [14] with user attributes).",
      "startOffset" : 89,
      "endOffset" : 93
    }, {
      "referenceID" : 10,
      "context" : "[11], could solve the implicit feedback problem.",
      "startOffset" : 0,
      "endOffset" : 4
    } ],
    "year" : 2016,
    "abstractText" : "In recent years, interest in recommender research has shifted from explicit feedback towards implicit feedback data. A diversity of complex models has been proposed for a wide variety of applications. Despite this, learning from implicit feedback is still computationally challenging. So far, most work relies on stochastic gradient descent (SGD) solvers which are easy to derive, but in practice challenging to apply, especially for tasks with many items. For the simple matrix factorization model, an efficient coordinate descent (CD) solver has been previously proposed. However, efficient CD approaches have not been derived for more complex models. In this paper, we provide a new framework for deriving efficient CD algorithms for complex recommender models. We identify and introduce the property of k-separable models. We show that k-separability is a sufficient property to allow efficient optimization of implicit recommender problems with CD. We illustrate this framework on a variety of state-of-the-art models including factorization machines and Tucker decomposition. To summarize, our work provides the theory and building blocks to derive efficient implicit CD algorithms for complex recommender models.",
    "creator" : "LaTeX with hyperref package"
  }
}