{
  "name" : "1311.6396.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "A Unified Approach to Universal Prediction: Generalized Upper and Lower Bounds",
    "authors" : [ "N. Denizcan Vanli" ],
    "emails" : [ "vanli@ee.bilkent.edu.tr,", "kozat@ee.bilkent.edu.tr)." ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n31 1.\n63 96\nv2 [\ncs .L\nG ]\n2 2\nJa n\n20 14\nIndex Terms—Sequential prediction, online learning, worstcase performance.\nI. INTRODUCTION\nIn this brief paper, we investigate the generic sequential (online) prediction problem from an individual sequence perspective using tools of computational learning theory, where we refrain from any statistical assumptions either in modeling or on signals [1]–[4]. In this approach we have an arbitrary, deterministic, bounded and unknown signal {x[t]}t≥1, where |x[t]| < A < ∞, and x[t] ∈ R. Since we do not impose any statistical assumptions on the underlying data, we, motivated by recent results from sequential learning [1]–[4], define the performance of a sequential algorithm with respect to a comparison class, where the predictors of the comparison class are formed by observing the the entire sequence in hindsight, under the squared error loss, i.e.,\nn∑\nt=1\n(x[t] − x̂s[t]) 2 − inf\nc∈C\nn∑\nt=1\n(x[t]− x̂c[t]) 2 ,\nfor an arbitrary length of data n, and for any possible sequence {x[t]}t≥1, where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t− 1] for prediction, and x̂c[t] is the prediction at time t of\nThis work is supported in part by IBM Faculty Award and TUBITAK, Contract no: 112E161.\nThe authors are with the Department of Electrical and Electronics Engineering, Bilkent University, Bilkent, Ankara 06800, Turkey (e-mail: vanli@ee.bilkent.edu.tr, kozat@ee.bilkent.edu.tr).\nthe predictor c such that c ∈ C, where C represents the class of predictors we “compete” against. We emphasize that since the predictors x̂c[t], c ∈ C have the access to the entire sequence before the processing starts, the minimum squared prediction error that can be achieved with a sequential predictor x̂s[t] is equal to the squared prediction error of the optimal batch predictor x̂c[t], c ∈ C. Here, we call the difference in the squared prediction error of the sequential algorithm x̂s[t] and the optimal batch predictor x̂c[t], c ∈ C as the “regret” of not using the optimal predictor (or equivalently, not knowing the future). Therefore, we seek for sequential algorithms x̂s[t] that minimize this “regret” or loss for any possible {x[t]}t≥1. We emphasize that this regret definition is for the accumulated sequential cost, instead of the batch cost.\nInstead of fixing a comparison class of predictors, we parameterize the comparison classes such that the parameter set and functional form of these classes can be chosen as desired. In this sense, in this paper, we consider the most general class of parametric predictors as our class of predictors C such that the “regret” for an arbitrary length of data n is given by\nn∑\nt=1\n(x[t]− x̂s[t]) 2 − inf\nw∈Rm\nn∑\nt=1\n( x[t]− f(w, xt−1t−a) )2 , (1)\nwhere f(w, xt−1t−a) is a parametric function whose parameters w = [w1, . . . , wm]\nT can be set prior to prediction, and this function uses the data xt−1t−a, t − a ≥ 1 for prediction for some arbitrary integer a, which can be viewed as the tap size of the predictor.1 Although the parameters of the parametric prediction function f(w, xt−1t−a) can be set arbitrarily, even by observing all the data {x[t]}t≥1 a priori, the function is naturally restricted to use only the sequential data xt−11 in prediction [5]–[7].\nSince we have no statistical assumptions on the underlying data, the corresponding lower and upper bounds on the regret in (1) in this sense provide the “ultimate” measure of the learning performance for any sequential predictor. We emphasize that lower bounds not only provide the worst-case performance of an algorithm, but also quantify the prediction power of the parametric class. As such, a positive lower bound guarantees the existence of a data sequence having an arbitrary length such that no matter how “smart” the learning algorithm is, the performance of this smart algorithm on this sequence will be worse than the class of parametric predictors by at least an order of the “lower bound”. Hence if an algorithm is\n1All vectors are column vectors and denoted by boldface lower case letters. For a vector u, uT is the ordinary transpose. We denote xba , {x[t]} b t=a .\n2 found such that the upper bound of the regret of that algorithm matches with the lower bound, then that algorithm is optimal in a strong minimax sense such that the actual convergence performance cannot be further improved [7]. To this end, the minimax sense optimality of different parametric learning algorithms such as the well-known prediction algorithms, least mean squares (LMS) [8], recursive least squares (RLS) [8], and online sequential extreme learning machine (OS-ELM) of [1] can be determined using the lower bounds provided in this paper. In this sense, the “rates” of the corresponding upper and lower bounds are analogous to the VC dimension [9] of classifiers and can be used to quantify the learning performance [1]–[3], [10].\nThe mixture of experts framework is previously used in order to derive such upper and lower bounds for the performance of an algorithm. As an example, linear prediction [5], [7], [11], nonlinear models based on locally linear approximations [6], and the learning of an individual noise-corrupted deterministic sequence [12] is studied. These results are then extended to the filtering problems [13], [14]. In this paper on the other hand, we consider a holistic approach and provide upper and lower bounds for the general framework, which was previously missing in the literature.\nOur main contribution in this paper is to obtain the generalized lower bounds for a variety of prediction frameworks by transforming the prediction problem to a well-known and studied statistical parameter learning problem [1], [4]–[7]. By doing so, we prove that for any sequential algorithm there always exist some data sequence over any length such that the regret of the sequential algorithm is lower bounded by zero. We further derive lower bounds for important classes of predictors heavily investigated in machine learning literature including univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15]. We also provide a universal sequential prediction algorithm and calculate upper bounds on the regret of this algorithm, and show that we obtain matching lower and upper bounds in some scenarios. As an interesting result we also show that given the regret in (1) as the performance measure, there is no additional gain achieved by using randomized algorithms in the worst-case scenario.\nIn Section II, we first present general lower bounds, and then analyze couple of specific scenarios. We then introduce a universal prediction algorithm and calculate the upper bounds on its regret in Section III. In Section IV, we show that in the worst-case scenario, the performance of randomized algorithms can be achieved by sequential algorithms. We finalize our paper by pointing out several concluding remarks."
    }, {
      "heading" : "II. LOWER BOUNDS",
      "text" : "In this section, we investigate the worst case performance of sequential algorithms to obtain guaranteed lower bounds on the regret. Hence for any arbitrary length of data n, {x[t]}t≥1, we are trying to find a lower bound on the following\nsup xn 1\n{ n∑\nt=1\n(x[t] − x̂s[t]) 2 − inf\nw∈Rm\nn∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n}\n.\n(2) For this regret, we have the following theorem which relates the performance of any sequential algorithm to the general\nclass of parametric predictors. While proving this theorem we also provide a generic procedure to find lower bounds on the regret in (2) and later use this method to derive lower bounds for parametric classes including the classes of univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].\nTheorem 1: There is no “best” sequential algorithm for all sequences for any class in the parametric form f(w, xt−1t−a), where w ∈ Rm. Given a parametric class there exist always a sequence such that the regret in (2) is always lower bounded by some nonnegative value.\nThis theorem implies that no matter how smart a sequential algorithm is or how naive the competition class is, it is not possible to outperform the competition class for all sequences. As an example, this result demonstrates that even competing against the class of constant predictors, i.e., the most naive competition class, where x̂c[t] always predicts a constant value, any sequential algorithm, no matter how smart, cannot outperform this class of constant predictors for all sequences. We emphasize that in this sense, the lower bounds provide the prediction and modeling power of the parametric class.\nProof of Theorem 1: We begin our proof by pointing out that finding the “best” sequential predictor for an arbitrary and unknown sequence of xn1 is not straightforward. Yet, for a specific distribution on xn1 , the best predictor is the conditional mean on xn1 under the squared error [16]. Therefore, by this clever transformation, we are able to calculate the regret in (2) in the expectation sense and prove this theorem.\nSince the supremum in (2) is taken over all xn1 , for any distribution xn1 , the regret is lower bounded by\nsup xn 1\n( n∑\nt=1\n(x[t] − x̂s[t]) 2 − inf\nw∈Rm\nn∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n)\n≥ Exn 1\n[ n∑\nt=1\n(x[t]− x̂s[t]) 2 − inf\nw∈Rm\nn∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n]\n︸ ︷︷ ︸\n,L(n)\n,\nwhere expectation is taken with respect to this particular distribution. Hence it is enough to lower bound L(n) to get a final lower bound. By the linearity of the expectation\nL(n) = Exn 1\n[ n∑\nt=1\n(x[t]− x̂s[t]) 2\n]\n− Exn 1\n[\ninf w∈Rm\nn∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n]\n. (3)\nThe squared-error loss E [ (x[t]−x̂s[t]) 2 ]\nis minimized with the well-known minimum mean squared error (MMSE) predictor given by [16]\nx̂s[t] = E [ x[t] ∣ ∣x[t− 1], . . . , x[1] ] = E [ x[t] ∣ ∣xt−11 ] , (4)\nwhere we drop the explicit xn1 -dependence of the expectation to simplify the presentation.\nSuppose we select a parametric distribution for xn1 with parameter vector θ = [θ1, . . . , θm]. Then for\nExn 1\n[\ninf w∈Rm\nn∑\nt=1\n(x[t] − f(w, xt−1t−a)) 2\n]\n3 in (3), we use the following inequality\nEθ\n[\nE xn 1 ∣ ∣θ\n[\ninf w∈Rm\nn∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n]]\n≤ Eθ\n[\ninf w∈Rm E xn 1 ∣ ∣θ\n[ n∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n]]\n.(5)\nBy using (4)-(5), and expanding the expectation we can lower bound L(n) as\nL(n) ≥ Eθ\n[\nE xn 1 ∣ ∣θ\n[ n∑\nt=1\n( x[t]− E [ x[t] ∣ ∣xt−11 ])2\n]]\n− Eθ\n[\ninf w∈Rm E xn 1 ∣ ∣θ\n[ n∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n]]\n.\n(6)\nThe inequality in (6) is true for any distribution on xn1 . Hence for a distribution on xn1 such that\nE [ x[t] ∣ ∣xt−11 , θ ] = h(θ, xt−1t−a), (7)\nwith some function h, if we can find a vector function g(θ) satisfying f(g(θ), xt−1t−a) = h(θ, x t−1 t−a) then the last term in (6) yields\nEθ\n[\ninf w∈Rm E xn 1 ∣ ∣θ\n[ n∑\nt=1\n(x[t]− f(w, xt−1t−a)) 2\n]]\n= Eθ\n[\nE xn 1 ∣ ∣θ\n[ n∑\nt=1\n(x[t]− h(θ, xt−1t−a)) 2\n]]\n.\nThus (6) can be written as\nL(n) ≥ Eθ\n[\nE xn 1 ∣ ∣θ\n[ n∑\nt=1\n( x[t]− E [ x[t] ∣ ∣xt−11 ])2\n]]\n−Eθ\n[\nE xn 1 ∣ ∣θ\n[ n∑\nt=1\n( x[t]− E [ x[t] ∣ ∣xt−11 , θ ])2\n]]\n,\nwhich is by definition of the MMSE estimator is always lower bounded by zero, i.e.,\nL(n) ≥ 0.\nBy this inequality we conclude that for predictors of the form f(w, xt−1t−a) for which this special parametric distribution, i.e., w = g(θ) exists, the best sequential predictor will be always outperformed by some predictor in this class for some sequence xn1 . Hence there is no “best” algorithm for all sequences for any class in this parametric form. The question arises if a suitable distribution on xn1 can be found for a given f(w, xt−1t−a) such that f(g(θ), x t−1 t−a) = h(θ, x t−1 t−a) with a suitable transformation g(θ). Suppose f(w, xt−1t−a) is bounded by some M ∈ R\n+ with M < ∞ for all |x[t]| ≤ A, i.e., |f(w, xt−1t−a)| ≤ M . Then, given θ from a beta distribution with parameters (C,C), C ∈ R+, we generate a sequence xn1 such that x[t] = A M f(w, xt−1t−a) with probability θ and x[t] = − A M f(w, xt−1t−a) with probability (1− θ). Then\nE [ x[t] ∣ ∣xt−11 , θ ] = A M (2θ − 1)f(w, xt−1t−a).\nHence, this concludes the proof of the Theorem 1. As an important special case, if we use the restricted functional form f(w, xt−1t−a) so that f(w, x t−1 t−a) is separable,\nthen the prediction problem is transformed to a parameter estimation problem. The separable form is given by\nf(w, xt−1t−a) = fw(w) T fx(x t−1 t−a),\nwhere fw(w) and fx(x t−1 t−a) are vector functions of size m×1 for some integer m. Then (7) can be written as\nE [ x[t] ∣ ∣xt−11 , θ ] = fw(g(θ)) T fx(x t−1 t−a),\nwhere fw(g(θ)) = A M (2θ − 1)fw(w). Denoting fn(w) , A M fw(w) as the normalized prediction function, and after some algebra (6) is obtained as\nL(n) ≥\nEθ\n[\nE xn 1 ∣ ∣θ\n[ n∑\nt=1\n(\nx[t]−E [ (2θ−1) ∣ ∣xt−11 ]T fn(w) Tfx(x t−1 t−a)\n)2 ]]\n− Eθ\n[\nE xn 1 ∣ ∣θ\n[ n∑\nt=1\n( x[t]− (2θ − 1)fn(w) Tfx(x t−1 t−a) )2\n]]\n,\nso that the regret of the sequential algorithm over the best prediction function is due to the regret attained by the sequential algorithm while learning the parameters of the prediction function, i.e, the parameters of the underlying distribution. To illustrate this procedure, we investigate the regret given in (2) for three candidate function classes that are widely studied in computational learning theory.\nA. mth-order Univariate Polynomial Prediction\nFor a mth order polynomial in x[t− 1] the regret is given by\nsup xn 1\n \n\nn∑\nt=1\n(x[t]− x̂s[t]) 2− inf w∈Rm\nn∑\nt=1\n(\nx[t]−\np ∑\ni=1\nwix i[t− 1]\n)2 \n  ,\n(8) where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t − 1] for prediction, w = [w1, . . . , wm]T is the parameter vector, xi[t− 1] is the ith power of x[t− 1].\nSince ∑m\ni=1 wix i[t − 1] = w1x[t − 1] with appropriate\nselection of w, considering the following distribution on xn1 , we can lower bound the regret in (8). Given θ from a beta distribution with parameters (C,C), C ∈ R+, we generate a sequence xn1 having only two values, A and −A such that x[t] = x[t − 1] with probability θ and x[t] = −x[t − 1] with probability (1− θ). Then\nE [ x[t] ∣ ∣xt−11 , θ ] = (2θ − 1)x[t− 1],\ngiving h(θ, xt−1t−a) = (2θ− 1)x[t− 1]. Since the MMSE given θ is linear in x[t−1], the optimum w that minimizes the accumulated error for this distribution is w = [(2θ−1), 0, . . . , 0]T . After following the lines in [5], we obtain a lower bound of the form O(ln(n))."
    }, {
      "heading" : "B. Multivariate Polynomial Prediction",
      "text" : "Suppose the prediction function is given by wTfx(x t−1 t−a) = ∑m k=1 wkfk(x t−1 t−r), where each fk(x t−1 t−r) is a multivariate polynomial function (as an example fk(x t−1 t−r) = x[t−1]x2[t−2] x[t−3] ), and regret is taken over all w = [w1, . . . , wm] T ∈ Rm, i.e.,\nsup xn 1\n{ n∑\nt=1\n(x[t] − x̂s[t]) 2 − inf\nw∈Rm\nn∑\nt=1\n( x[t]−wTfx(x t−1 t−a) )2\n}\n,\n4 where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t − 1] for prediction, and w is the parameter for prediction.\nWe emphasize that this class of predictors are not only the super set of univariate polynomial predictors, but also widely used in many signal processing applications to model nonlinearity such as Volterra filters [15]. This filtering technique is attractive when linear filtering techniques do not provide satisfactory results, and includes cross products of the input signals.\nSince ∑m k=1 wkfk(x t−1 t−r) = w1f1(x t−1 t−r) with an appropriate selection of w and redefinition of f1(x t−1 t−r), we define the following parametric distribution on xn1 to obtain a lower bound. Given θ from a beta distribution with parameters (C,C), C ∈ R+, we generate a sequence xn1 having only two values, A and −A, such that x[t] = fn(x t−1 t−a) with probability θ and x[t] = −fn(x t−1 t−a) with probability (1 − θ), where fn(x t−1 t−a) = Af1(x t−1 t−r ) M , i.e. normalized version of f1(x t−1 t−r). Thus, given θ, xn1 forms a two-state Markov chain with transition probability (1− θ). Then\nE [ x[t] ∣ ∣xt−11 , θ ] = (2θ − 1)fn(x t−1 t−a).\nThe lower bound for the regret is given by\nL(n) = E [\n(x[t] − (2θ̂ − 1)fn(x t−1 t−a))\n2 ]\n− E [ (x[t]− (2θ − 1)fn(x t−1 t−a)) 2 ] ,\nwhere θ̂ = E[θ|xt−11 ]. After some algebra we achieve\nL(n) = −4E[θ̂x[t]fn(x t−1 t−a)] + 4E[θx[t]fn(x t−1 t−a)]\n+ E[(2θ̂ − 1)2]− E[(2θ − 1)2].\nIt can be deduced that\nθ̂ = E[θ|xt−11 ] = t− 2− Ft−2 + C\nt− 2 + 2C ,\nwhere Ft−2 is the total number of transitions between the two states in a sequence of length (t−1), i.e., θ̂ is ratio of number of transitions to time period. Hence,\nE[θ̂x[t]fn(x t−1 t−a)] = E\n[ t− 2− Ft−2 + C\nt− 2 + 2C x[t]fn(x\nt−1 t−a)\n]\n= (t− 2 + C)E[x[t]fn(x\nt−1 t−a)]− E[Ft−2x[t]fn(x t−1 t−a)]\nt− 2 + 2C\n= − 1\nt− 2 + 2C E[(1− θ)(t− 2)x[t]fn(x\nt−1 t−a)]\n= t− 2\nt− 2 + 2C E[θx[t]fn(x\nt−1 t−a)],\nwhere the third line follows from\nE[x[t]fn(x t−1 t−a)] = E[(2θ − 1)A 2] = 0,\nand E[Ft−2|x[t]fn(x t−1 t−a)] = (t − 2)(1 − θ) since Ft−2 is a binomial random variable with parameters (1 − θ) and size (t− 2). Thus we obtain\nL(n)=−4 t− 2\nt− 2 + 2C E[θx(t)fn(x\nt−1 t−a)]+4E[θx(t)fn(x t−1 t−a)]\n+ E[(2θ̂ − 1)2]− E[(2θ − 1)2].\nAfter this line the derivation follows similar lines to [7], giving a lower bound of the form O(ln(n)) for the regret.\nC. k-ahead mth-order Linear Prediction\nThe regret in (2) for k-ahead mth-order linear prediction is given by\nsup xn 1\n{ n∑\nt=1\n(x[t] − x̂s[t]) 2 − inf\nw∈Rm\nn∑\nt=1\n( x[t]−wTx[t− k] )2\n}\n,\n(9) where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t−k] for prediction for some integer k, w = [w1, . . . , wm]T is the parameter vector, and x[t− k] = [x[t− k], . . . , x[t− k −m+ 1]]T .\nWe first find a lower bound for k-ahead first-order prediction where wTx[t − k] = wx[t − k]. For this purpose we define the following parametric distribution on xn1 as in [5]. Given θ from a beta distribution with parameters (C,C), C ∈ R+, we generate a sequence xn1 having only two values, A and −A, such that x[t] = x[t−k] with probability θ and x[t] = −x[t−k] with probability (1− θ). Thus, given θ, xn1 forms a two-state Markov chain with transition probability (1 − θ). Then,\nE [ x[t] ∣ ∣xt−k1 , θ ] = (2θ − 1)x[t− k]\ngiving h(θ, xt−1t−a) = (2θ − 1)x[t − k] and g(θ) = (2θ − 1). After this point the derivation exactly follows the lines in [5] resulting a lower bound of the form O(ln(n)).\nFor k-ahead mth-order prediction, we generalize the lower bound obtained for k-ahead first-order prediction and following the lines in [5], we obtain a lower bound of the form O(m ln(n)).\nWe next derive upper bounds for a universal sequential prediction algorithm."
    }, {
      "heading" : "III. A COMPREHENSIVE APPROACH TO REGRET MINIMIZATION",
      "text" : "In this section, we introduce a method which can be used to predict a bounded, arbitrary, and unknown sequence. We derive the upper bounds of this algorithm such that for any sequence xn1 , our algorithm will not perform worse than the presented upper bounds. In some cases, by achieving matching upper and lower bounds, we prove that this algorithm is optimal in a strong minimax sense such that the worst-case performance cannot be further improved.\nWe restrict the prediction functions to be separable, i.e., f(w, xt−1t−a) = fw(w) T fx(x t−1 t−a), where fw(w) and fx(x t−1 t−a) are vector functions of size m × 1 for some m integer. To avoid any confusion we simply denote β , fw(w), where β ∈ Rm. Hence, the same prediction function can be written as f(w, xt−1t−a) = β Tfx(x t−1 t−a).\nIf the parameter vector β is selected such that the total squared prediction error is minimized over a batch of data of length n, then the coefficients are given by\nβ∗[n] = argmin β∈Rm\nn∑\nt=1\n(\nx[t]− βTfx(x t−1 t−a)\n)2\n.\nThe well-known least-squares solution to this problem is given by β∗[n] = (Rn\nff )−1rn xf , where\nRnff ,\nn∑\nt=1\nfx(x t−1 t−a)fx(x t−1 t−a) T\n5 is invertible and\nrn xf ,\nn∑\nt=1\nx[t]fx(x t−1 t−a).\nWhen Rn ff is singular, the solution is no longer unique, however a suitable choice can be made using, e.g. pseudoinverses.\nWe also consider the more general least-squares (ridge regression) problem that arises in many signal processing problems, and whose total squared prediction error is minimized over a batch of data of length n with\nβ∗[n] = argmin β∈Rm\n{ n∑\nt=1\n(\nx[t]− βTfx(x t−1 t−a)\n)2 + δ ||β||2 } ,\n= [ Rnff + δI ]−1 rn xf .\nWe define a universal predictor x̃u[n], as\nx̃u[n] = βu[n− 1] Tf(xn−1n−a),\nwhere βu[n] = β ∗[n] = [ Rnff + δI ]−1 rn xf , and δ > 0 is a positive constant. Theorem 2: The total squared prediction error of the mthorder universal predictor for any bounded arbitrary sequence of {x[t]}t≥1, |x[t]| ≤ A, having an arbitrary length of n satisfies n∑\nt=1\n(x[t]− x̃u[t]) 2≤ min\nβ∈Rm\n{ n∑\nt=1\n(x[t]−βTfx(x t−1 t−a)) 2+δ ||β|| 2\n}\n+A2 ln ∣ ∣I +Rnff δ −1∣∣.\nTheorem 2 indicates that the total squared prediction error of the mth-order universal predictor is within O(m ln(n)) of the best batch mth-order parametric predictor for any individual sequence of {x[t]}t≥1. This result implies that in order to learn m parameters, the universal algorithm pays a regret of O(m ln(n)), which can be viewed as the parameter regret. After we prove Theorem 2, we apply Theorem 2 to the competition classes discussed in Section II.\nProof of Theorem 2: We prove this result for a scalar prediction function such that fx(x t−1 t−a) = fx(x t−1 t−a) to avoid any confusions. Yet for a vector prediction function of fx(x t−1 t−a), one can follow the exact same steps in this proof with vector extensions of the Gaussian mixture.\nThe derivations follow similar lines to [5], [10], hence only main points are presented. We first define a function of the loss, namely the “probability” for a predictor having parameter β as follows\nPβ(x n 1 ) = exp\n(\n− 1\n2h\nn∑\nk=1\n(x[k] − βfx(x t−1 t−a)) 2\n)\n,\nwhich can be viewed as a probability assignment of the predictor with parameter β to the data x[t], for 1 ≤ t ≤ n, induced by performance of β on the sequence xn1 . We then construct a universal estimate of the probability of the sequence xn1 , as an a-priori weighted mixture among all of the probabilities, i.e., Pu(xn1 ) = ∫∞ −∞ p(β)Pβ(x n 1 )dβ, where p(β) is an apriori weight assigned to the parameter β, and is selected as Gaussian in order to obtain a closed form bounds, i.e., p(β) = 1√\n2πσ exp\n{\n− β 2\n2σ2\n}\n.\nFollowing similar lines to [7] with a predictor of βfx(x t−1 t−a)\nwe obtain\nPu(xn|x n−1) = γ exp\n{ −1\n2h γ2\n( x[n]− β[n− 1]f(xn−1n−a)\n)2 }\n,\nwhere γ , √\n(Rn−2ff + δ)/(R n−1 ff + δ). If we could find\nanother Gaussian satisfying P̃u(xn) ≥ Pu(xn), then it would complete the proof of the theorem.\nAfter some algebra we find that the universal predictor is given by\nx̃u[n] = γ 2β∗[n− 1]f(xn−1n−a) =\nrn−1xf\nRn−1ff + δ f(xn−1n−a).\nNow we can select the smallest value of h over the region [−A,A], P̃u(xn|xn−1) is larger than Pu(xn|xn−1), i.e.,\nA ≤\n√\n2h ln(γ)(γ2 − 1) + γ2x̂u[n]2(1 − γ2)\n(1− γ2)\nh ≥ A2(1− γ2)− γ2x̂u[n] 2\n−2 ln(γ) ,\nwhich must hold for all values of x̂u[n] ∈ [−A,A]. Therefore h ≥ A2 (1−γ\n2) −2 ln(γ) , where γ < 1. Note that for 0 < γ < 1\nwe have 0 < (1−γ 2)\n−2 ln γ < 1, which implies that we must have\nh ≥ A2 to ensure that P̃u ≥ Pu. In fact, since this bound on the value of h depends upon the value of γ and x̂u[n], and is only tight for γ → 1, and x̂u[n] = 0, then the restriction that |x[n]| < A can actually be occasionally violated, as long as P̃u ≥ Pu still holds.\nTo illustrate this procedure, we investigate the upper bound for the regret in (2) for the same candidate function classes as we also investigated in Section II.\nA. mth-order Univariate Polynomial Predictor\nFor a mth order polynomial in x[t−1], the prediction function is given by f(w, xt−1t−a) = β Tfx(x t−1 t−a) = β\nTm[t − 1] where m[t − 1] = [x[t − 1], . . . , xm[t − 1]]T , i.e. the vector of powers of x[t − 1]. After replacing Rn\nff = Rnmm =\n∑n t=1 m[t−1]m[t−1] T and rn xf = rnxm = ∑n t=1 x[t]m[t− 1], we obtain an upper bound n∑\nt=1\n(x[t]− x̃u[t]) 2≤ min\nβ∈Rm\n{ n∑\nt=1\n(x[t]−βTm[t− 1])2+δ ||β|| 2\n}\n+A2 ln ∣ ∣I +Rnmmδ −1∣∣,\nwhich implies that n∑\nt=1\n(x[t]− x̃u[t]) 2≤ min\nβ∈Rm\n{ n∑\nt=1\n(x[t]−βTm[t− 1])2+δ ||β||2 }\n+A2m ln\n(\n1 + A2n\nδ\n)\n."
    }, {
      "heading" : "B. Multivariate Polynomial Prediction",
      "text" : "The upper bound for a multivariate polynomial prediction function fx(x t−1 t−a) exactly follows the upper bound derivation of mth order univariate polynomial predictor giving an upper bound n∑\nt=1\n(x[t]− x̃u[t]) 2≤ min\nβ∈Rm\n{ n∑\nt=1\n(x[t]−βTfx(x t−1 t−a)) 2+δ ||β|| 2\n}\n+A2m ln\n(\n1 + A2n\nδ\n)\n.\n6 C. k-ahead mth-order Linear Prediction\nFor k-ahead mth-order prediction, the prediction class is given by f(w, xt−1t−a) = β Tfx(x t−1 t−a) = β\nTx[t − k] where x[t− k] = [x[t− k], . . . , x[t− k −m+ 1]]T as before. After replacing Rn\nff = Rnxx = ∑n t=1 x[t−k]x[t−k] T and rn xf =\nrnxx = ∑n\nt=1 x[t]x[t − k] with suitable limits we obtain an upper bound n∑\nt=1\n(x[t]− x̃u[t]) 2≤ min\nβ∈Rm\n{ n∑\nt=1\n(x[t]−βTx[t− k])2+δ ||β|| 2\n}\n+ A2m ln\n(\n1 + A2n\nδ\n)\n."
    }, {
      "heading" : "IV. RANDOMIZED OUTPUT PREDICTIONS",
      "text" : "In this section, we investigate the performance of randomized output algorithms for the worst-case scenario with respect to linear predictors with using the same regret measure in (2). We emphasize that the randomized output algorithms are a super set of the deterministic sequential predictors and the derivations here can be readily generalized to include any prediction class. Particularly, we consider randomized output algorithms f ( θ(xt−11 ), x t−1 1 ) such that the randomization parameters θ ∈ Rm can be a function of the whole past. Hence, a randomized sequential algorithm introduce randomization or uncertainty in its output such that the output also depends on a random element. Note that such methods are widely used in applications involving security considerations. As an example, suppose there are m prediction algorithms running in parallel to predict the observation sequence {x[t]}t≥1 sequentially. At each time t, the randomized output algorithm selects one of the constituent algorithms randomly such that the algorithm k is selected with probability pk[t]. By definition ∑m k=1 pk[t] = 1 and pk[t] may be generated as the combination of the past observation samples xt−11 and a seed independent from the observations.\nFor such randomized output prediction algorithms we consider the following time-accumulated prediction error over a deterministic sequence {x[t]}t≥1 as the prediction error,\nPrand(n) = n∑\nt=1\nEθ\n[( x[t]− f ( θ(xt−11 ), x t−1 1 ))2 ] . (10)\nThis expectation is taken over all the randomization due to independent or dependent seeds. Hence our general regret can be extended to include this performance measure\nsup xn 1\n{\nPrand(n)− min w∈Rm\nn∑\nt=1\n( x[t]−wTx[t− 1] )2\n}\n. (11)\nExpanding (10) we obtain\nPrand(n) = n∑\nt=1\n{ ( x[t]− Eθ [ f ( θ(xt−11 ), x t−1 1 )])2\n+ Varθ ( f ( θ(xt−11 ), x t−1 1\n)) }\n,\nnoting that x[t] is independent of the randomization. Since Eθ [ f ( θ(xt−11 ), x t−1 1 )] is a sequential function of xt−11 and Varθ ( f ( θ(xt−11 ), x t−1 1 )) is always nonnegative, the performance of a randomized output algorithm can be reached by a deterministic sequential algorithm.\nSince deterministic algorithms are subclass of randomized output algorithms, upper bounds we derived for k-ahead mthorder prediction in (9) also hold for (11). Since we also proved that the lower bound for such linear predictions of mth order are in the form of O(m ln(n)), the lower and upper bounds are tight and of the form O(m ln(n)).\nV. CONCLUDING REMARKS In this paper, we consider the problem of sequential prediction from a mixture of experts perspective. We have introduced comprehensive lower bounds on the sequential learning framework by proving that for any sequential algorithm, there always exists a sequence for which the sequential predictor cannot outperform the class of parametric predictors, whose parameters are set non-casually. The lower bounds for important parametric classes such as univariate polynomial, multivariate polynomial, and linear predictor classes are derived in detail. We then introduced a universal sequential prediction algorithm and investigated the upper bound on the regret of this algorithm. We also derived the upper bounds in detail for the same important classes that we discussed for lower bounds, where we further showed that this algorithm is optimal in a strong minimax sense for some scenarios. Finally, we have proven that for the worst-case scenario, randomized algorithms cannot provide any improvement in the performance compared to the sequential algorithms.\nREFERENCES [1] N.-Y. Liang, G.-B. Huang, P. Saratchandran, and N. Sundararajan, “A\nfast and accurate online sequential learning algorithm for feedforward networks,” IEEE Transactions on Neural Networks, vol. 17, no. 6, pp. 1411–1423, 2006. [2] L. Devroye, T. Linder, and G. Lugosi, “Nonparametric estimation and classification using radial basis function nets and empirical risk minimization,” IEEE Transactions on Neural Networks, vol. 7, no. 2, pp. 475–487, 1996. [3] A. Krzyzak and T. Linder, “Radial basis function networks and complexity regularization in function learning,” IEEE Transactions on Neural Networks, vol. 9, no. 2, pp. 247–256, 1998. [4] N. Cesa-Bianchi, P. Long, and M. Warmuth, “Worst-case quadratic loss bounds for prediction using linear functions and gradient descent,” IEEE Transactions on Neural Networks, vol. 7, no. 3, pp. 604–619, 1996. [5] A. Singer and M. Feder, “Universal linear prediction by model order weighting,” IEEE Transactions on Signal Processing, vol. 47, no. 10, pp. 2685–2699, 1999. [6] G. C. Zeitler and A. Singer, “Universal linear least-squares prediction in the presence of noise,” in IEEE/SP 14th Workshop on Statistical Signal Processing, 2007. SSP ’07, 2007, pp. 611–614. [7] A. Singer, S. Kozat, and M. Feder, “Universal linear least squares prediction: upper and lower bounds,” IEEE Transactions on Information Theory, vol. 48, no. 8, pp. 2354–2362, 2002. [8] T. Kailath, A. H. Sayed, and B. Hassibi, Linear Estimation. Prentice Hall, 2000. [9] V. Cherkassky, X. Shao, F. Mulier, and V. Vapnik, “Model complexity control for regression using VC generalization bounds,” IEEE Transactions on Neural Networks, vol. 10, no. 5, pp. 1075–1089, 1999. [10] J. Kivinen and M. K. Warmuth, “Exponentiated gradient versus gradient descent for linear predictors,” Journal of Information and Computation, vol. 132, no. 1, pp. 1–62, 1997. [11] V. Vovk, “Competitive on-line statistics,” International Statistical Review, vol. 69, pp. 213–248, 2001. [12] T. Weissman and N. Merhav, “Universal prediction of individual binary sequences in the presence of noise,” IEEE Transactions on Information Theory, vol. 47, no. 6, pp. 2151–2173, 2001. [13] T. Moon and T. Weissman, “Universal FIR MMSE filtering,” IEEE Transactions on Signal Processing, vol. 57, no. 3, pp. 1068–1083, 2009. [14] ——, “Competitive on-line linear FIR MMSE filtering,” in IEEE International Symposium on Information Theory, 2007. ISIT 2007., 2007, pp. 1126–1130. [15] V. Mathews, “Adaptive polynomial filters,” Signal Processing Magazine, IEEE, vol. 8, no. 3, pp. 10–26, 1991. [16] H. Stark and J. Woods, Probability, Random Processes, and Estimation Theory for Engineers. Upper Saddle River, NJ: Prentice-Hall, 1994."
    } ],
    "references" : [ {
      "title" : "A fast and accurate online sequential learning algorithm for feedforward networks",
      "author" : [ "N.-Y. Liang", "G.-B. Huang", "P. Saratchandran", "N. Sundararajan" ],
      "venue" : "IEEE Transactions on Neural Networks, vol. 17, no. 6, pp. 1411–1423, 2006.",
      "citeRegEx" : "1",
      "shortCiteRegEx" : null,
      "year" : 2006
    }, {
      "title" : "Nonparametric estimation and classification using radial basis function nets and empirical risk minimization",
      "author" : [ "L. Devroye", "T. Linder", "G. Lugosi" ],
      "venue" : "IEEE Transactions on Neural Networks, vol. 7, no. 2, pp. 475–487, 1996.",
      "citeRegEx" : "2",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Radial basis function networks and complexity regularization in function learning",
      "author" : [ "A. Krzyzak", "T. Linder" ],
      "venue" : "IEEE Transactions on Neural Networks, vol. 9, no. 2, pp. 247–256, 1998.",
      "citeRegEx" : "3",
      "shortCiteRegEx" : null,
      "year" : 1998
    }, {
      "title" : "Worst-case quadratic loss bounds for prediction using linear functions and gradient descent",
      "author" : [ "N. Cesa-Bianchi", "P. Long", "M. Warmuth" ],
      "venue" : "IEEE Transactions on Neural Networks, vol. 7, no. 3, pp. 604–619, 1996.",
      "citeRegEx" : "4",
      "shortCiteRegEx" : null,
      "year" : 1996
    }, {
      "title" : "Universal linear prediction by model order weighting",
      "author" : [ "A. Singer", "M. Feder" ],
      "venue" : "IEEE Transactions on Signal Processing, vol. 47, no. 10, pp. 2685–2699, 1999.",
      "citeRegEx" : "5",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "Universal linear least-squares prediction in the presence of noise",
      "author" : [ "G.C. Zeitler", "A. Singer" ],
      "venue" : "IEEE/SP 14th Workshop on Statistical Signal Processing, 2007. SSP ’07, 2007, pp. 611–614.",
      "citeRegEx" : "6",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "Universal linear least squares prediction: upper and lower bounds",
      "author" : [ "A. Singer", "S. Kozat", "M. Feder" ],
      "venue" : "IEEE Transactions on Information Theory, vol. 48, no. 8, pp. 2354–2362, 2002.",
      "citeRegEx" : "7",
      "shortCiteRegEx" : null,
      "year" : 2002
    }, {
      "title" : "Model complexity control for regression using VC generalization bounds",
      "author" : [ "V. Cherkassky", "X. Shao", "F. Mulier", "V. Vapnik" ],
      "venue" : "IEEE Transactions on Neural Networks, vol. 10, no. 5, pp. 1075–1089, 1999.",
      "citeRegEx" : "9",
      "shortCiteRegEx" : null,
      "year" : 1999
    }, {
      "title" : "Exponentiated gradient versus gradient descent for linear predictors",
      "author" : [ "J. Kivinen", "M.K. Warmuth" ],
      "venue" : "Journal of Information and Computation, vol. 132, no. 1, pp. 1–62, 1997.",
      "citeRegEx" : "10",
      "shortCiteRegEx" : null,
      "year" : 1997
    }, {
      "title" : "Competitive on-line statistics",
      "author" : [ "V. Vovk" ],
      "venue" : "International Statistical Review, vol. 69, pp. 213–248, 2001.",
      "citeRegEx" : "11",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Universal prediction of individual binary sequences in the presence of noise",
      "author" : [ "T. Weissman", "N. Merhav" ],
      "venue" : "IEEE Transactions on Information Theory, vol. 47, no. 6, pp. 2151–2173, 2001.",
      "citeRegEx" : "12",
      "shortCiteRegEx" : null,
      "year" : 2001
    }, {
      "title" : "Universal FIR MMSE filtering",
      "author" : [ "T. Moon", "T. Weissman" ],
      "venue" : "IEEE Transactions on Signal Processing, vol. 57, no. 3, pp. 1068–1083, 2009.",
      "citeRegEx" : "13",
      "shortCiteRegEx" : null,
      "year" : 2009
    }, {
      "title" : "Competitive on-line linear FIR MMSE filtering",
      "author" : [ "——" ],
      "venue" : "IEEE International Symposium on Information Theory, 2007. ISIT 2007., 2007, pp. 1126–1130.",
      "citeRegEx" : "14",
      "shortCiteRegEx" : null,
      "year" : 2007
    }, {
      "title" : "Adaptive polynomial filters",
      "author" : [ "V. Mathews" ],
      "venue" : "Signal Processing Magazine, IEEE, vol. 8, no. 3, pp. 10–26, 1991.",
      "citeRegEx" : "15",
      "shortCiteRegEx" : null,
      "year" : 1991
    }, {
      "title" : "Probability, Random Processes, and Estimation Theory for Engineers",
      "author" : [ "H. Stark", "J. Woods" ],
      "venue" : "Upper Saddle River, NJ: Prentice-Hall,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 1994
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "INTRODUCTION In this brief paper, we investigate the generic sequential (online) prediction problem from an individual sequence perspective using tools of computational learning theory, where we refrain from any statistical assumptions either in modeling or on signals [1]–[4].",
      "startOffset" : 269,
      "endOffset" : 272
    }, {
      "referenceID" : 3,
      "context" : "INTRODUCTION In this brief paper, we investigate the generic sequential (online) prediction problem from an individual sequence perspective using tools of computational learning theory, where we refrain from any statistical assumptions either in modeling or on signals [1]–[4].",
      "startOffset" : 273,
      "endOffset" : 276
    }, {
      "referenceID" : 0,
      "context" : "Since we do not impose any statistical assumptions on the underlying data, we, motivated by recent results from sequential learning [1]–[4], define the performance of a sequential algorithm with respect to a comparison class, where the predictors of the comparison class are formed by observing the the entire sequence in hindsight, under the squared error loss, i.",
      "startOffset" : 132,
      "endOffset" : 135
    }, {
      "referenceID" : 3,
      "context" : "Since we do not impose any statistical assumptions on the underlying data, we, motivated by recent results from sequential learning [1]–[4], define the performance of a sequential algorithm with respect to a comparison class, where the predictors of the comparison class are formed by observing the the entire sequence in hindsight, under the squared error loss, i.",
      "startOffset" : 136,
      "endOffset" : 139
    }, {
      "referenceID" : 0,
      "context" : "for an arbitrary length of data n, and for any possible sequence {x[t]}t≥1, where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t− 1] for prediction, and x̂c[t] is the prediction at time t of",
      "startOffset" : 172,
      "endOffset" : 175
    }, {
      "referenceID" : 4,
      "context" : "1 Although the parameters of the parametric prediction function f(w, xt−1 t−a) can be set arbitrarily, even by observing all the data {x[t]}t≥1 a priori, the function is naturally restricted to use only the sequential data xt−1 1 in prediction [5]–[7].",
      "startOffset" : 244,
      "endOffset" : 247
    }, {
      "referenceID" : 6,
      "context" : "1 Although the parameters of the parametric prediction function f(w, xt−1 t−a) can be set arbitrarily, even by observing all the data {x[t]}t≥1 a priori, the function is naturally restricted to use only the sequential data xt−1 1 in prediction [5]–[7].",
      "startOffset" : 248,
      "endOffset" : 251
    }, {
      "referenceID" : 6,
      "context" : "found such that the upper bound of the regret of that algorithm matches with the lower bound, then that algorithm is optimal in a strong minimax sense such that the actual convergence performance cannot be further improved [7].",
      "startOffset" : 223,
      "endOffset" : 226
    }, {
      "referenceID" : 0,
      "context" : "To this end, the minimax sense optimality of different parametric learning algorithms such as the well-known prediction algorithms, least mean squares (LMS) [8], recursive least squares (RLS) [8], and online sequential extreme learning machine (OS-ELM) of [1] can be determined using the lower bounds provided in this paper.",
      "startOffset" : 256,
      "endOffset" : 259
    }, {
      "referenceID" : 7,
      "context" : "In this sense, the “rates” of the corresponding upper and lower bounds are analogous to the VC dimension [9] of classifiers and can be used to quantify the learning performance [1]–[3], [10].",
      "startOffset" : 105,
      "endOffset" : 108
    }, {
      "referenceID" : 0,
      "context" : "In this sense, the “rates” of the corresponding upper and lower bounds are analogous to the VC dimension [9] of classifiers and can be used to quantify the learning performance [1]–[3], [10].",
      "startOffset" : 177,
      "endOffset" : 180
    }, {
      "referenceID" : 2,
      "context" : "In this sense, the “rates” of the corresponding upper and lower bounds are analogous to the VC dimension [9] of classifiers and can be used to quantify the learning performance [1]–[3], [10].",
      "startOffset" : 181,
      "endOffset" : 184
    }, {
      "referenceID" : 8,
      "context" : "In this sense, the “rates” of the corresponding upper and lower bounds are analogous to the VC dimension [9] of classifiers and can be used to quantify the learning performance [1]–[3], [10].",
      "startOffset" : 186,
      "endOffset" : 190
    }, {
      "referenceID" : 4,
      "context" : "As an example, linear prediction [5], [7], [11], nonlinear models based on locally linear approximations [6], and the learning of an individual noise-corrupted deterministic sequence [12] is studied.",
      "startOffset" : 33,
      "endOffset" : 36
    }, {
      "referenceID" : 6,
      "context" : "As an example, linear prediction [5], [7], [11], nonlinear models based on locally linear approximations [6], and the learning of an individual noise-corrupted deterministic sequence [12] is studied.",
      "startOffset" : 38,
      "endOffset" : 41
    }, {
      "referenceID" : 9,
      "context" : "As an example, linear prediction [5], [7], [11], nonlinear models based on locally linear approximations [6], and the learning of an individual noise-corrupted deterministic sequence [12] is studied.",
      "startOffset" : 43,
      "endOffset" : 47
    }, {
      "referenceID" : 5,
      "context" : "As an example, linear prediction [5], [7], [11], nonlinear models based on locally linear approximations [6], and the learning of an individual noise-corrupted deterministic sequence [12] is studied.",
      "startOffset" : 105,
      "endOffset" : 108
    }, {
      "referenceID" : 10,
      "context" : "As an example, linear prediction [5], [7], [11], nonlinear models based on locally linear approximations [6], and the learning of an individual noise-corrupted deterministic sequence [12] is studied.",
      "startOffset" : 183,
      "endOffset" : 187
    }, {
      "referenceID" : 11,
      "context" : "These results are then extended to the filtering problems [13], [14].",
      "startOffset" : 58,
      "endOffset" : 62
    }, {
      "referenceID" : 12,
      "context" : "These results are then extended to the filtering problems [13], [14].",
      "startOffset" : 64,
      "endOffset" : 68
    }, {
      "referenceID" : 0,
      "context" : "Our main contribution in this paper is to obtain the generalized lower bounds for a variety of prediction frameworks by transforming the prediction problem to a well-known and studied statistical parameter learning problem [1], [4]–[7].",
      "startOffset" : 223,
      "endOffset" : 226
    }, {
      "referenceID" : 3,
      "context" : "Our main contribution in this paper is to obtain the generalized lower bounds for a variety of prediction frameworks by transforming the prediction problem to a well-known and studied statistical parameter learning problem [1], [4]–[7].",
      "startOffset" : 228,
      "endOffset" : 231
    }, {
      "referenceID" : 6,
      "context" : "Our main contribution in this paper is to obtain the generalized lower bounds for a variety of prediction frameworks by transforming the prediction problem to a well-known and studied statistical parameter learning problem [1], [4]–[7].",
      "startOffset" : 232,
      "endOffset" : 235
    }, {
      "referenceID" : 3,
      "context" : "We further derive lower bounds for important classes of predictors heavily investigated in machine learning literature including univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 199,
      "endOffset" : 202
    }, {
      "referenceID" : 6,
      "context" : "We further derive lower bounds for important classes of predictors heavily investigated in machine learning literature including univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 203,
      "endOffset" : 206
    }, {
      "referenceID" : 8,
      "context" : "We further derive lower bounds for important classes of predictors heavily investigated in machine learning literature including univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 208,
      "endOffset" : 212
    }, {
      "referenceID" : 10,
      "context" : "We further derive lower bounds for important classes of predictors heavily investigated in machine learning literature including univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 213,
      "endOffset" : 217
    }, {
      "referenceID" : 13,
      "context" : "We further derive lower bounds for important classes of predictors heavily investigated in machine learning literature including univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 219,
      "endOffset" : 223
    }, {
      "referenceID" : 3,
      "context" : "While proving this theorem we also provide a generic procedure to find lower bounds on the regret in (2) and later use this method to derive lower bounds for parametric classes including the classes of univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 272,
      "endOffset" : 275
    }, {
      "referenceID" : 6,
      "context" : "While proving this theorem we also provide a generic procedure to find lower bounds on the regret in (2) and later use this method to derive lower bounds for parametric classes including the classes of univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 276,
      "endOffset" : 279
    }, {
      "referenceID" : 8,
      "context" : "While proving this theorem we also provide a generic procedure to find lower bounds on the regret in (2) and later use this method to derive lower bounds for parametric classes including the classes of univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 281,
      "endOffset" : 285
    }, {
      "referenceID" : 10,
      "context" : "While proving this theorem we also provide a generic procedure to find lower bounds on the regret in (2) and later use this method to derive lower bounds for parametric classes including the classes of univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 286,
      "endOffset" : 290
    }, {
      "referenceID" : 13,
      "context" : "While proving this theorem we also provide a generic procedure to find lower bounds on the regret in (2) and later use this method to derive lower bounds for parametric classes including the classes of univariate polynomial, multivariate polynomial, and linear predictors [4]–[7], [10]–[12], [15].",
      "startOffset" : 292,
      "endOffset" : 296
    }, {
      "referenceID" : 14,
      "context" : "Yet, for a specific distribution on x1 , the best predictor is the conditional mean on x1 under the squared error [16].",
      "startOffset" : 114,
      "endOffset" : 118
    }, {
      "referenceID" : 14,
      "context" : "The squared-error loss E [ (x[t]−x̂s[t]) 2 ] is minimized with the well-known minimum mean squared error (MMSE) predictor given by [16]",
      "startOffset" : 131,
      "endOffset" : 135
    }, {
      "referenceID" : 0,
      "context" : ", x[1] ] = E [ x[t] ∣ ∣xt−1 1 ] , (4)",
      "startOffset" : 3,
      "endOffset" : 6
    }, {
      "referenceID" : 0,
      "context" : "(8) where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t − 1] for prediction, w = [w1, .",
      "startOffset" : 100,
      "endOffset" : 103
    }, {
      "referenceID" : 4,
      "context" : "After following the lines in [5], we obtain a lower bound of the form O(ln(n)).",
      "startOffset" : 29,
      "endOffset" : 32
    }, {
      "referenceID" : 0,
      "context" : "where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t − 1] for prediction, and w is the parameter for prediction.",
      "startOffset" : 96,
      "endOffset" : 99
    }, {
      "referenceID" : 13,
      "context" : "We emphasize that this class of predictors are not only the super set of univariate polynomial predictors, but also widely used in many signal processing applications to model nonlinearity such as Volterra filters [15].",
      "startOffset" : 214,
      "endOffset" : 218
    }, {
      "referenceID" : 6,
      "context" : "After this line the derivation follows similar lines to [7], giving a lower bound of the form O(ln(n)) for the regret.",
      "startOffset" : 56,
      "endOffset" : 59
    }, {
      "referenceID" : 0,
      "context" : "(9) where x̂s[t] is the prediction at time t of any sequential algorithm that has access data from x[1] up to x[t−k] for prediction for some integer k, w = [w1, .",
      "startOffset" : 100,
      "endOffset" : 103
    }, {
      "referenceID" : 4,
      "context" : "For this purpose we define the following parametric distribution on x1 as in [5].",
      "startOffset" : 77,
      "endOffset" : 80
    }, {
      "referenceID" : 4,
      "context" : "After this point the derivation exactly follows the lines in [5] resulting a lower bound of the form O(ln(n)).",
      "startOffset" : 61,
      "endOffset" : 64
    }, {
      "referenceID" : 4,
      "context" : "For k-ahead mth-order prediction, we generalize the lower bound obtained for k-ahead first-order prediction and following the lines in [5], we obtain a lower bound of the form O(m ln(n)).",
      "startOffset" : 135,
      "endOffset" : 138
    }, {
      "referenceID" : 4,
      "context" : "The derivations follow similar lines to [5], [10], hence only main points are presented.",
      "startOffset" : 40,
      "endOffset" : 43
    }, {
      "referenceID" : 8,
      "context" : "The derivations follow similar lines to [5], [10], hence only main points are presented.",
      "startOffset" : 45,
      "endOffset" : 49
    }, {
      "referenceID" : 6,
      "context" : "Following similar lines to [7] with a predictor of βfx(x t−1 t−a) we obtain",
      "startOffset" : 27,
      "endOffset" : 30
    } ],
    "year" : 2014,
    "abstractText" : "We study sequential prediction of real-valued, arbitrary and unknown sequences under the squared error loss as well as the best parametric predictor out of a large, continuous class of predictors. Inspired by recent results from computational learning theory, we refrain from any statistical assumptions and define the performance with respect to the class of general parametric predictors. In particular, we present generic lower and upper bounds on this relative performance by transforming the prediction task into a parameter learning problem. We first introduce the lower bounds on this relative performance in the mixture of experts framework, where we show that for any sequential algorithm, there always exists a sequence for which the performance of the sequential algorithm is lower bounded by zero. We then introduce a sequential learning algorithm to predict such arbitrary and unknown sequences, and calculate upper bounds on its total squared prediction error for every bounded sequence. We further show that in some scenarios we achieve matching lower and upper bounds demonstrating that our algorithms are optimal in a strong minimax sense such that their performances cannot be improved further. As an interesting result we also prove that for the worst case scenario, the performance of randomized algorithms can be achieved by sequential algorithms so that randomized algorithms does not improve the performance.",
    "creator" : "LaTeX with hyperref package"
  }
}