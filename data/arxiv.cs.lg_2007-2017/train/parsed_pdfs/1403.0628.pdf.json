{
  "name" : "1403.0628.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Unconstrained Online Linear Learning in Hilbert Spaces: Minimax Algorithms and Normal Approximations",
    "authors" : [ "H. Brendan McMahan", "Francesco Orabona" ],
    "emails" : [ "mcmahan@google.com", "orabona@ttic.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 3.\n06 28\nv2 [\ncs .L\nG ]\nan algorithm that provides a regret bound of O ( U\n√ T log(U √ T log2 T + 1) ) ,\nwhere U is the L2 norm of an arbitrary comparator and both T and U are unknown to the player. This bound is optimal up to √ log log T terms. When T is known, we derive an algorithm with an optimal regret bound (up to constant factors). For both the known and unknown T case, a Normal approximation to the conditional value of the game proves to be the key analysis tool."
    }, {
      "heading" : "1 Introduction",
      "text" : "The online learning framework provides a scalable and flexible approach for modeling a wide range of prediction problems, including classification, regression, ranking, and portfolio management. Online algorithms work in rounds, where at each round a new instance is given and the algorithm makes a prediction. Then the environment reveals the label of the instance, and the learning algorithm updates its internal hypothesis. The aim of the learner is to minimize the cumulative loss it suffers due to its prediction error.\nResearch in this area has mainly focused on designing new prediction strategies and proving theoretical guarantees for them. However, recently, minimax analysis has been proposed as a general tool to design optimal prediction strategies [Rakhlin et al., 2012, 2013, McMahan and Abernethy, 2013]. The problem is cast as a sequential multi-stage zero-sum game between the player (the learner) and an adversary (the environment), providing the optimal strategies for both. In some cases the value of the game can be calculated exactly in an efficient way [Abernethy et al., 2008a], in others upper bounds on the value of the game (often based on the sequential Rademacher complexity) are used to construct efficient algorithms with theoretical guarantees [Rakhlin et al., 2012].\nWhile most of the work in this area has focused on the setting where the player is constrained to a bounded convex set [Abernethy et al., 2008a] (with the notable exception of McMahan and Abernethy [2013]), in this work we are interested in the general setting of unconstrained online learning with\n∗Both authors thank Jacob Abernethy for insightful feedback on this work.\nlinear losses in Hilbert spaces. In Section 4, extending the work of McMahan and Abernethy [2013], we provide novel and general sufficient conditions to be able to compute the exact minimax strategy for both the player and the adversary, as well as the value of the game. In particular, we show that under these conditions the optimal play of the adversary is always orthogonal or always parallel to the sum of his previous plays, while the optimal play of the player is always parallel. On the other hand, for some cases where the exact minimax strategy is hard to characterize, we introduce a new relaxation procedure based on a Normal approximation. In the particular application of interest, we show the relaxation is strong enough to yield an optimal regret bound, up to constant factors.\nIn Section 5, we use our new tools to recover and extend previous results on minimax strategies for linear online learning, including results for bounded domains. In fact, we show how to obtain a family of minimax strategies that smoothly interpolates between the minimax algorithm for a bounded feasible set and a minimax optimal algorithm in fact equivalent to unconstrained gradient descent. We emphasize that all the algorithms from this family are exactly minimax optimal,1 in a sense we will make precise in the next section. Moreover, if you are allowed to play outside of the comparator set, we show that some members of this family have a non-vacuous regret bound for the unconstrained setting, while remaining optimal for the constrained one.\nWhen studying unconstrained problems, a natural question is how small we can make the dependence of the regret bound on U , the L2 norm of an arbitrary comparator point, while still maintaining a √ T dependency on the time horizon. The best algorithm from the above family achieves Regret(U) ≤ 12 (U2 + 1) √ T . Streeter and McMahan [2012] and Orabona [2013] show it is possible to reduce the dependence on U to O(U logUT ). In order to improve on this, in Section 6 we apply our techniques to analyze a strategy, based on a Normal potential function, that gives a regret bound of O ( U √ T log(U √ T log2 T + 1) )\nwhere U is the L2 norm of a comparator, and both T and U are\nunknown. This bound is optimal up to √ log logT terms. Moreover, when T is known, we propose an algorithm based on a similar potential function that is optimal up to constant terms. This solves the open problem posed in those papers, matching the lower bound for this problem. Table 1 summarizes the regret bounds we prove, along with those for related algorithms.\nOur analysis tools for both known-T and unknown horizon algorithms rest heavily on the relationship between the reward (negative loss) achieved by the algorithm, potential functions that provide a benchmark for the amount of reward the algorithm should have, the regret of the algorithm with respect to a post-hoc comparator u, and the conditional value of the game. These are familiar concepts from the literature, but we summarize these relationships and provide some modest generalizations in Section 3."
    }, {
      "heading" : "2 Notation and Problem Formulation",
      "text" : "Let H be a Hilbert space with inner product 〈·, ·〉. The associated norm is denoted by ‖ · ‖, i.e. ‖x‖ = √\n〈x, x〉. Given a closed and convex function f with domain S ⊆ H, we will denote its Fenchel conjugate by f∗ : H → R where f∗(u) = supv∈S ( 〈v, u〉 − f(v) ) .\nWe consider a version of online linear optimization, a standard game for studying repeated decision making. On each of a sequence of rounds, a player chooses an action wt ∈ H, an adversary chooses a linear cost function gt ∈ G ⊆ H, and the player suffers loss 〈wt, gt〉. For any sequence of plays\n1In this work, we use the term “minimax” to refer to the exact minimax solution to the zero sum game, as opposed to algorithms that only achieve the minimax optimal rate up to say constant factors.\nw1, . . . wT and g1, . . . , gT , we define the regret against a comparator u in the standard way:\nRegret(u) ≡ T∑\nt=1\n〈gt, wt − u〉 .\nThis setting is general enough to cover the cases of online learning in, for example, Rd, in the vector space of matrices, and in a RKHS. We also define the reward of the algorithm, which is the earnings (or negative losses) of the player throughout the game:\nReward ≡ T∑\nt=1\n〈−gt, wt〉 .\nWe write θt ≡ −g1:t, where we use the compressed summation notation g1:t ≡ ∑T s=1 gs.\nThe Minimax View It will be useful to consider a full game-theoretic characterization of the above interaction when the number of rounds T is known to both players. This approach that has received significant recent interest [Abernethy et al., 2008a, 2007, Abernethy and Warmuth, 2010, Abernethy et al., 2008b, Streeter and McMahan, 2012].\nIn the constrained setting, where the comparator vector u ∈ W , we have that the value of the game,\nthat is the regret when both the player and the adversary play optimally, is\nV ≡ min w1∈H max g1∈G · · · min wT∈H max gT∈G\n(\nsup u∈W\nT∑\nt=1\n〈wt − u, gt〉 )\n= min w1∈H max g1∈G · · · min wT∈H max gT∈G\n( T∑\nt=1\n〈wt, gt〉+ sup u∈W\n〈u, θT 〉 )\n= min w1∈H max g1∈G · · · min wT∈H max gT∈G\n( T∑\nt=1\n〈wt, gt〉+B(θT ) ) ,\nwhere B(θ) = sup\nw∈W 〈w, θ〉 . (1)\nFollowing McMahan and Abernethy [2013], we generalize the game in terms of a generic convex benchmark function B : H → R, instead of using the definition (1). This allows us to analyze the constrained and unconstrained setting in a unified way. Hence, the value of the game is the difference between the benchmark reward B(θT ) and the actual reward achieved by the player (under optimal play by both parties). Intuitively, viewing the units of loss/reward as dollars, V is the amount of starting capital we need (equivalently, the amount we need to borrow) to ensure we end the game with B(θT ) dollars. The motivation for defining the game in terms of an arbitrary B is made clear in the next section: It will allow us to derive Regret bounds in terms of the Fenchel conjugate of B.\nWe define inductively the conditional value of the game after g1, . . . , gt have been played by\nVt(θt) = min w∈H max g∈G\n(〈g, w〉+ Vt+1(θt − g)) with VT (θT ) = B(θT ) .\nThus, we can view the notation V for the value of the game as shorthand for V0(0). Under minimax play by both players, unrolling the previous equality, we have\n∑t s=1〈gs, ws〉+ Vt(−g1:t) = V, or for\nt = T ,\nReward =\nT∑\nt=1\n〈−gt, wt〉 = B(θT )− V . (2)\nWe also have that, given the conditional value of the game, a minimax-optimal strategy is\nwt+1 = argmin w max g∈G\n〈g, w〉+ Vt+1(θt − g) . (3)\nMcMahan and Abernethy [2013, Cor. 2] showed that in the unconstrained case, Vt is a smoothed version of B, where the smoothing comes from an expectation over future plays of the adversary. In this work, we show that in some cases (Theorem 4) we can find a closed form for Vt in terms of B, and in fact the solution to (3) will simply be the gradient of Vt, or equivalently, an FTRL algorithm with regularizer V ∗t . On the other hand, to derive our main results, we face a case (Theorem 6) where Vt is generally not expressible in closed form, and the resulting algorithm does not look like FTRL. We solve the first problem by using a Normal approximation to the adversary’s future moves, and we solve the second by showing (3) can still be solved in closed form with respect to this approximation to Vt."
    }, {
      "heading" : "3 Potential Functions and the Duality of Reward and Regret",
      "text" : "In the present section we will review some existing results in online learning theory as well as provide a number of mild generalizations for our purposes. Potential functions play a major role in the design\nand analysis of online learning algorithms [Cesa-Bianchi and Lugosi, 2006]. We will use q : H → R to describe the potential, and the key assumptions are that q should depend solely on the cumulative gradients g1:T and that q is convex in this argument.2 Since our aim is adaptive algorithms, we often look at a sequence of changing potential functions q1, . . . , qT , each of which takes as argument −g1:t and is convex. These functions have appeared with different interpretations in many papers, with different emphasis. They can be viewed as 1) the conjugate of an (implicit) time-varying regularizer in a Mirror Descent or Follow-the-Regularized-Leader (FTRL) algorithm [Cesa-Bianchi and Lugosi, 2006, Shalev-Shwartz, 2007, Rakhlin, 2009], 2) as proxy for the conditional value of the game in a minimax setting [Rakhlin et al., 2012], or 3) a potential giving a bound on the amount of reward we want the algorithm to have obtained at the end of round t [Streeter and McMahan, 2012, McMahan and Abernethy, 2013].\nThese views are of course closely connected, but can lead to somewhat different analysis techniques. Following the last view, suppose we interpret qt(θt) as the desired reward at the end of round t, given the adversary has played θt = −g1:t so far. Then, if we can bound our actual final reward in terms of qT (θT ), we also immediately get a regret bound stated in terms of the Fenchel conjugate q∗T . Generalizing Streeter and McMahan [2012, Thm. 1], we have the following result (all omitted proofs can be found in the Appendix).\nTheorem 1. Let Ψ : H → R be a convex function. An algorithm for the player guarantees\nReward ≥ Ψ(−g1:T )− ǫ̂ for any g1, . . . , gT (4)\nfor a constant ǫ̂ ∈ R if and only if it guarantees\nRegret(u) ≤ Ψ∗(u) + ǫ̂ for all u ∈ H . (5)\nFirst we consider the minimax setting, where we define the game in terms of a convex benchmark B. Then, (2) gives us an immediate lower bound on the reward of the minimax strategy for the player (against any adversary), and so applying Theorem 1 with Ψ = B gives\n∀u ∈ H, Regret(u) ≤ B∗(u) + V . (6)\nThe fundamental point, of which we will make much use, is this: even if one only cares about the traditional definition of regret, the study of the minimax game defined in terms of a general comparator benchmark B may be interesting, as the minimax algorithm for the player may then give novel bounds on regret. Note when B is defined as in (1), the theorem implies ∀u ∈ W , Regret(u) ≤ V . More generally, even for non-minimax algorithms, Theorem 1 states that understanding the reward (equivalently, loss) of an algorithm as a function of the sum of gradients chosen by the adversary is both necessary and sufficient for understanding the regret of the algorithm.\nNow we consider the potential function view. The following general bound for any sequence of plays wt against gradients gt, for an arbitrary sequence of potential functions qt, has been used numerous times (see Orabona [2013, Lemma 1] and references therein). The claim is that\nRegret(u) ≤ q∗T (u) + T∑\nt=1\n(qt(θt)− qt−1(θt−1) + 〈wt, gt〉) , (7)\nwhere we take θ0 = ~0, and assume q0(~0) = 0. In fact, this statement is essentially equivalent to the argument of (4) and (5). For intuition, we can view qt(θt) as the amount of money we wish to have available at the end of round t. Suppose at the end of each round t, we borrow an additional sum ǫt\n2It is sometimes possible to generalize to potentials qt(g1, . . . , gt) that are functions of each gradient individually.\nas needed to ensure we actually have qt(θt) on hand. Then, based on this invariant, the amount of reward we actually have after playing on round t is qt−1(θt−1) + 〈wt,−gt〉, the money we had at the beginning of the round, plus the reward we get for playing wt. Thus, the additional amount we need to borrow at the end of round t in order to maintain the invariant is exactly\nǫt(θt−1, gt) ≡ qt(θt) ︸ ︷︷ ︸\nReward desired\n− ( qt−1(θt−1) + 〈wt,−gt〉 )\n︸ ︷︷ ︸\nReward achieved\n, (8)\nrecalling θt = θt−1 − gt. Thus, if we can find bounds ǫ̂t such that for all t, θt−1, and g ∈ G,\nǫ̂t ≥ ǫt(θt−1, gt) (9)\nwe can re-state (7) as exactly (5) with Ψ = qT and ǫ̂ = ǫ̂1:T . Further, solving (8) for the per-round reward 〈wt,−gt〉, summing from t = 1 to T and canceling telescoping terms gives exactly (4). Not surprisingly, both Theorem 1 and (7) can be proved in terms of the Fenchel-Young inequality.\nWhen T is known, and the qt are chosen carefully, it is possible to obtain ǫ̂t = 0. On the other hand, when T is unknown to the players, typically we will need bounds ǫ̂t > 0. For example, in both Streeter and McMahan [2012, Thm. 6] and Orabona [2013], the key is showing the sum of these ǫ̂t terms is always bounded by a constant. For completeness, we also state standard results where we interpret q∗t as a regularizer.\nThe conjugate regularizer and Bregman divergences The updates of many algorithms are based on a time-varying version of the FTRL strategy,\nwt+1 = ∇qt(θt) = argmin w 〈g1:t, w〉 + q∗t (w), (10)\nwhere we view q∗t as a time-varying regularizer (see Orabona et al. [2013] and references therein). Regret bounds can be easily obtained using (7) when the regularizers q∗t (w) are increasing with t, and they are strongly convex w.r.t. a norm ‖ · ‖∗, using the fact that the potential functions qt will be strongly smooth. Then strong smoothness and particular choice of wt implies\nqt−1(θt) ≤ qt−1(θt−1)− 〈wt, gt〉+ 1\n2 ‖gt‖2, (11)\nwhich leads to the bound\nǫt(θt, gt) = qt(θt)− qt−1(θt−1) + 〈wt, gt〉 ≤ qt(θt)− qt−1(θt) + 1\n2 ‖gt‖2 ≤\n1 2 ‖gt‖2,\nwhere the last inequality follows from the fact that if f(x) ≤ g(x), then f∗(y) ≥ g∗(y) (immediate from the definition of the conjugate).\nWhen the regularizer q∗ is fixed, that is, qt = q for all t for some convex function q, we get the approach pioneered by Grove et al. [2001] and Kivinen and Warmuth [2001]:\nǫt(θt, gt) = q(θt)− q(θt−1) + 〈wt, gt〉 = q(θt)− ( q(θt−1) + 〈∇q(θt−1), gt〉 ) = Dq(θt, θt−1),\nwhere Dq is the Bregman Divergence with respect to q, and we predict with wt = ∇q(θt−1).\nAdmissible relaxations and potentials We extend the notion of relaxations of the conditional value of the game of Rakhlin et al. [2012] to the present setting. We say vt with corresponding strategy wt is a relaxation of Vt if\n∀θ, vT (θ) ≥ B(θ) and (12) ∀t ∈ {0, . . . , T − 1}, g ∈ G, θ ∈ H, vt(θ) + ǫ̂t+1 ≥ 〈g, wt+1〉+ vt+1(θ − g), (13)\nfor constants ǫ̂t ≥ 0. This definition matches Eq. (4) of Rakhlin et al. [2012] if we force all ǫ̂t = 0, but if we allow some slack ǫ̂t, (13) corresponds exactly to (8) and (9).\nNote that (13) is invariant to adding a constant to all vt. In particular, given an admissible vt, we can define qt(θ) = vt(θ)− v0(~0) so qt(~0) = 0 and q satisfies (9) with the same ǫ̂t values for which vt satisfies (13). Or we could define q0(~0) = 0 and qt(θ) = vt(θ) for t ≥ 1, and take ǫ̂1 ← ǫ̂1+ v0(~0) (or any other way of distributing the v0(~0) into the ǫ̂). Generally, when T is known we will find working with admissible relaxations vt to be most useful, while for unknown horizons T , potential functions with q0(~0) = 0 will be more natural.\nFor our admissible relaxations, we have a result that closely mirrors Theorem 1:\nCorollary 2. Let v0, . . . , vT be an admissible relaxation for a benchmark B. Then, for any sequence g1, . . . , gT , for any wt chosen so (13) and (12) are satisfied, we have\nReward ≥ B(θT )− v0(0)− ǫ̂1:T and Regret(u) ≤ B∗(u) + v0(0) + ǫ̂1:T .\nProof. For the first statement, re-arranging and summing (13) shows Rewardt ≥ vt(θt)− ǫ̂1:t− v0(0) and so final Reward ≥ B(θ)− v0(0)− ǫ̂1:T ; the second result then follows from Theorem 1.\nThe regret bound corresponds to (6); in particular, if we take vt to be the conditional value of the game, then (12) and (13) hold with equality with all ǫ̂t = 0. Note if we define B as in (1), the regret guarantee becomes ∀u ∈ W , Regret(u) ≤ v0(0) + ǫ̂1:T , analogous to [Rakhlin et al., 2012, Prop. 1] when ǫ̂1:T = 0.\nDeriving algorithms Consider an admissible relaxation vt. Given the form of the regret bounds we have proved, a natural strategy is to choose wt+1 so as to minimize ǫ̂t+1, that is,\nwt+1 = argmin w max g∈G vt+1(θt − g)− vt(θt) + 〈g, w〉 = argmin w max g∈G 〈g, w〉+ vt+1(θt − g), (14)\nfollowing Rakhlin et al. [2012, Eq. (5)], Rakhlin et al. [2013], and Streeter and McMahan [2012, Eq. (8)]. We see that vt+1 is standing in for the conditional value of the game in (3). Since additive constants do not impact the argmin, we could also replace vt with a potential qt, say qt(θ) = vt(θ) − v0(0)."
    }, {
      "heading" : "4 Minimax Analysis Approaches for Known-Horizon Games",
      "text" : "In general, the problem of calculating the conditional value of a game Vt(θ) is hard. And even for a known potential, deriving an optimal solution via (14) is also in general a hard problem. When the player is unconstrained, we can simplify the computation of Vt and the derivation of optimal strategies. For example, following ideas from McMahan and Abernethy [2013],\nǫt(θt) = max p∈∆(G),Eg∼p[g]=0 E g∼p\n[qt+1(θt − g)]− qt(θt),\nwhere ∆(G) is the set of probability distributions on G. McMahan and Abernethy [2013] shows that in some cases is possible to easily calculate this maximum, in particular when G = [−G,G]d and qt decomposes on a per-coordinate spaces (that is, when the problem is essentially d independent, one-dimensional problems).\nIn this section we will state two quite general cases where we can obtain the exact value of the game, even though the problem does not decompose on a per coordinate basis. Note that in both cases the optimal strategy for wt+1 will be in the direction of θt.\nWe study the game when the horizon T is known, with a benchmark function of the form B(θ) = f(‖θ‖) for an increasing convex function f : [0,+∞] → R (which ensures B is convex). Note this form for B is particularly natural given our desire to prove results that hold for general Hilbert spaces. We will then be able to derive regret bounds using Theorem 1, and the following technical lemma:\nLemma 3. Let B(θ) = f(‖θ‖) for f : R → (−∞,+∞] even. Then, B∗(u) = f∗(‖u‖). Recall that f is even if f(x) = f(−x). Our key tool will be a careful study of the one-round version of this game. For this section, we let h :R → R be an even convex function that is increasing on [0,∞], G = {g : ‖g‖ ≤ G}, and d the dimension of H. We consider the one-round game\nH ≡ min w max g∈G 〈w, g〉+ h(‖θ − g‖) , (15)\nwhere θ ∈ H is a fixed parameter. For results regarding this game, we let H(w, g) = 〈w, g〉 + h(‖θ − g‖), w∗ = argminw maxg∈G H(w, g), and g∗ = argmaxg∈G H(w∗, g). Also, let θ̂ = θ‖θ‖ if ‖θ‖ 6= 0, and ~0 otherwise."
    }, {
      "heading" : "4.1 The case of the orthogonal adversary",
      "text" : "Let B(θ) = f(‖θ‖) for an increasing convex function f : [0,∞] → R, and define\nft(x) = f( √ x2 +G2(T − t)) .\nNote that ft(‖θ‖) can be viewed as a smoothed version of B(θ), since √\n‖θ‖2 + C is a smoothed version of ‖θ‖ for a constant C > 0. Moreover, f0(‖θ‖) = B(θ).\nOur first key result is the following:\nTheorem 4. Let the adversary play from G = {g : ‖g‖ ≤ G} and assume all the ft satisfy\nmin w max g∈G\n〈w, g〉+ ft+1(‖θ − g‖) = ft+1 (√ ‖θ‖2 +G2 ) . (16)\nThen the value of the game is f(G √ T ), the conditional value is Vt(θ) = ft(‖θ‖) = ft+1( √\n‖θ‖2 +G2), and the optimal strategy can be found using (14) on Vt.\nFurther, a sufficient condition for (16) is that d > 1, f is twice differentiable, and f ′′(x) ≤ f ′(x)/x, for all x > 0. In this case we also have that the minimax optimal strategy is\nwt+1 = ∇Vt(θt) = θt f ′(\n√\n‖θt‖2 +G2(T − t)) √\n‖θt‖2 +G2(T − t) . (17)\nIn this case, the minimax optimal strategy (20) is equivalent to the FTRL strategy in (10) with the time varying regularizer V ∗t (w). The key lemma needed for the proof is the following: Lemma 5. Consider the game of (15). Then, if d > 1, h is twice differentiable, and h′′(x) ≤ h ′(x) x for x > 0, we have:\nH = h (√ ‖θ‖2 +G2 )\nand w∗ = θ √ ‖θ‖2 +G2 h′\n(√ ‖θ‖2 +G2 ) .\nAny g∗ such that 〈θ, g∗〉 = 0 and ‖g∗‖ = G is a minimax play for the adversary. We defer the proofs to the Appendix (of the proofs in the appendix, the proof of Lemmas 5 and 8 are perhaps the most important and instructive). Since the best response of the adversary is always to play a g∗ orthogonal to θ, we call this the case of the orthogonal adversary."
    }, {
      "heading" : "4.2 The case of the parallel adversary, and Normal approximations",
      "text" : "We analyze a second case where (15) has closed-form solution, and hence derive a class of games where we can cleanly state the value of the game and the minimax optimal strategy. The results of McMahan and Abernethy [2013] can be viewed as a special case of the results in this section.\nFirst, we introduce some notation. We write τ ≡ T − t when T and t are clear from context. We write r ∼ {−1, 1} to indicate r is a Rademacher random variable, and rτ ∼ {−1, 1}τ to indicate rτ is the sum of τ IID Rademacher random variables. Let σ = √\nπ/2. We write φ for a random variable with distribution N(0, σ2), and similarly define φτ ∼ N(0, (T − t)σ2). Then, define\nft(x) = E rτ∼{−1,1}τ [f (|x+ rτG|)] and f̂t(x) = E φτ∼N(0,τσ2) [f (|x+ φτG|)] , (18)\nand note B(θ) = fT (‖θ‖) = f̂T (‖θ‖) since φ0 and r0 are always zero. These functions are exactly smoothed version of the function f used to define B. With these definitions, we can now state:\nTheorem 6. Let B(θ) = f(‖θ‖) for an increasing convex function f : [0,∞] → R, and let the adversary play from G = {g : ‖g‖ ≤ G}. Assume ft and f̂t as in (18) for all t. If all the ft satisfy\nmin w max g∈G 〈w, g〉+ ft+1(‖θ − g‖) = E r∼{−1,1}\n[ ft+1 (‖θ‖+ rG) ] , (19)\nthen Vt(θ) = ft(‖θ‖) is exactly the conditional value of the game, and (14) gives the minimax optimal strategy:\nwt+1 = θ̂ ft+1 (‖θ‖+G)− ft+1 (‖θ‖ −G)\n2G . (20)\nSimilarly, suppose the f̂t satisfy the equality (19) (with f̂t replacing ft). Then qt(θ) = f̂t(‖θ‖) is an admissible relaxation of Vt, satisfying (13) with ǫ̂t = 0, using wt+1 based on (14). Further, a sufficient condition for (19) is that d = 1, or d > 1, the ft (or f̂t, respectively) are twice differentiable, and satisfy and f ′′t (x) ≥ f ′t(x)/x for all x > 0.\nContrary to the case of the orthogonal adversary, the strategy in (20) cannot easily be interpreted as an FTRL algorithm. The proof is based on two lemmas. The first provides the key tool in supporting the Normal relaxation:\nLemma 7. Let f : R → R be a convex function and σ2 = π/2. Then,\nE g∼{−1,1} [f(g)] ≤ E φ∼N(0,σ2) [f(φ)] .\nProof. First observe that E[(φ − 1)1{φ > 0}] = 0 and E[(φ + 1)1{φ < 0}] = 0 by our choice of σ. We will use two lower bounds on the function f , which follow from convexity:\nf(x) ≥ f(1) + f ′(1)(x− 1) and f(x) ≥ f(−1) + f ′(−1)(x+ 1) .\nWriting out the value of E[f(φ)] explicitly we have\nE[f(φ)] = E[f(φ)1{φ < 0}] + E[f(φ)1{φ > 0}] ≥ E[(f(−1) + f ′(−1)(φ+ 1))1{φ < 0}] + E[(f(1) + f ′(1)(φ− 1))1{φ > 0}]\n= f(−1) + f(1)\n2 + f ′(−1)E[(φ+ 1)1{φ < 0}] + f ′(1)E[(φ − 1)1{φ < 0}] .\nThe latter two terms vanish, giving the stated inequality.\nThe second lemma is used to prove the sufficient condition by solving the one-round game; again, the proof is deferred to the Appendix. Note that functions of the form h(x) = g(x2), with g convex always satisfies the conditions of the following Lemma.\nLemma 8. Consider the game of (15). Then, if d = 1, or if d > 1, h is twice differentiable, and h′′(x) > h\n′(x) x for x > 0, then\nH = h (‖θ‖+G) + h (‖θ‖ −G)\n2 and w∗ = θ̂ h (‖θ‖+G)− h (‖θ‖ −G) 2G .\nAny g∗ that satisfies |〈θ, g∗〉| = G‖θ‖ and ‖g∗‖ =G is a minimax play for the adversary.\nThe adversary can always play g∗ = G θ‖θ‖ when θ 6= 0, and so we describe this as the case of the parallel adversary. In fact, inductively this means that all the adversary’s plays gt can be on the same line, providing intuition for the fact that this lemma also applies in the 1-dimensional case.\nTheorem 6 provides a recipe to produce suitable relaxations qt which may, in certain cases, exhibit nice closed form solutions. The interpretation here is that a “Gaussian adversary” is stronger than one playing from the set [−1, 1] which leads to IID Rademacher behavior, and this allows us to generate such potential functions via Gaussian smoothing. In this view, note that our choice of σ2 gives Eφ[|φ|] = 1."
    }, {
      "heading" : "5 A Power Family of Minimax Algorithms",
      "text" : "We analyze a family of algorithms based on potentials B(θ) = f(‖θ‖) where f(x) = Wp |x|p for parameters W > 0 and p ∈ [1, 2], when the dimension is at least two. This is reminiscent of p-norm algorithms [Gentile, 2003], but the connection is superficial—the norm we use to measure θ is always the norm of our Hilbert space. Our main result is:\nCorollary 9. Let d > 1 and W > 0, and let f and B be defined as above. Define ft(x) = Wp ( x2 + (T − t)G )p/2\n. Then, ft(‖θ‖) is the conditional value of the game, and the optimal strategy is as in Theorem 4. If p ∈ (1, 2], letting q ≥ 2 such that 1/p+ 1/q = 1, we have a bound\nRegret(u) ≤ 1 W q−1q ‖u‖q + W p\n( G √ T )p ≤ ( 1 p + 1 q ‖u‖ q ) G √ T ,\nwhere the second inequality comes by takingW = (G √ T )1−p. For all u, the bound\n( 1 p+ 1 q ‖u‖q\n) G √ T\nis minimized by taking p = 2. For p = 1, we have\n∀u : ‖u‖ ≤ W, Regret(u) ≤ WG √ T .\nProof. Let f(x) = Wp |x|p for p ∈ [1, 2], Then, f ′′(x) ≤ f ′(x)/x, in fact basic calculations show f ′(x)/x f ′′(x) = 1 p−1 ≥ 1 when p ≤ 2. Hence, we can apply Theorem 4, proving the claim on the ft. The regret bounds can then be derived from Corollary 2, which gives Regret(u) ≤ f∗(u) + f(G √ T ), noting f∗(u) = Wq | uW |q when p > 1. The fact that p = 2 is an optimal choice in the first bound follows from the fact that ddp ( 1 p + 1 q ‖u‖q ) ≤ 0 for p ∈ (1, 2] with q = pp−1 .\nThe p = 1 case in fact exactly recaptures the result of Abernethy et al. [2008a] for linear functions, extending it also to spaces of dimension equal to two. The optimal update is wt+1 = ▽ft(‖θt‖) =\nWθt/ √\n‖θt‖2 +G2(T − t). In addition to providing a regret bound for the comparator set W = {u : ‖u‖ ≤ W}, the algorithm will in fact only play points from this set.\nFor p = q = 2, writing W = η, we have\nRegret(u) ≤ 1 2η ‖u‖2 + η 2 G2T,\nfor any u. In this case we see W = η is behaving not like the radius of a comparator set, but rather as a learning rate. In fact, we have wt+1 = ∇Vt(θt) = ηθt = −ηg1:t, and so we see this minimax-optimal algorithm is in fact constant-step-size gradient descent. Taking η = 1\nG √ T yields 12 (‖u‖2 + 1)G √ T .\nThis result complements McMahan and Abernethy [2013, Thm. 7], which covers the d = 1 case, or d > 1 when the adversary plays from G = [−1, 1]d.\nComparing the p = 1 and p > 1 algorithms reveals an interesting fact. For simplicity, take G = 1. Then, the p = 1 algorithm with W = 1 is exactly the minimax optimal algorithm for minimizing regret against comparators in the L2 ball (for d > 1): the value of this game is √ T and we can do no better (even by playing outside of the comparator set). However, picking p > 1 gives us algorithms that will play outside of the comparator set. While they cannot do better than √ T , taking G = 1 and ‖u‖ = 1 shows that all algorithms in this family in fact achieve Regret(u) ≤ √ T when ‖u‖ ≤ 1, matching the exact minimax optimal value. Further, the algorithms with p > 1 provide much stronger guarantees, since they also give non-vacuous guarantees for ‖u‖ > 1, and tighter bounds when ‖u‖ < 1. This suggests that the p = 2 algorithm will be the most useful algorithm in practice, something that indeed has been observed empirically (given the prevalence of gradient descent in real applications). This result also clearly demonstrates the value of studying minimax-optimal algorithms for different choices of the benchmark B, as this can produce algorithms that are no worse and in some cases significantly better than minimax algorithms defined in terms of regret minimization directly (i.e., via (1)).\nThe key difference in these algorithms is not how they play against a minimax optimal adversary for the regret game, but how they play against non-worst-case adversaries. In fact, a simple induction based on Lemma 5 shows that any minimax-optimal adversary will play so that √\n‖θt‖2 +G2(T − t) = G √ T . Against such an adversary, the p = 1 algorithm is identical to the p = 2 algorithm with learning rate η = 1 G √ T\n. In fact, using the choice of W from Corollary 9, all of these algorithms play identically against a minimax adversary for the regret game."
    }, {
      "heading" : "6 Tight Bounds for Unconstrained Learning",
      "text" : "In this section we analyze algorithms based on benchmarks and potentials of the form exp(‖θ‖2/t), and show they lead to a minimal dependence on ‖u‖ in the corresponding regret bounds for a given upper bound on regret against the origin (equal to the loss of the algorithm).\nFirst, we derive a lower bound for the known T game. Using Lemma 14 in the Appendix, we can show that the B(θ) = exp(‖θ‖2/T ) benchmark approximately corresponds to a regularizer of the form ‖u‖ √ T log( √ T‖u‖+ 1); there is actually some technical challenge here, as the conjugate B∗ cannot be computed in closed form—the given regularizer is an upper bound. This kind of regularizer is particularly interesting because it is related to parameter-free sub-gradient descent algorithms [Orabona, 2013]; a similar potential function was used for a parameter-free algorithm by [Chaudhuri et al., 2009]. The lower bound for this game was proven in Streeter and McMahan [2012] for 1-dimensional spaces, and Orabona [2013] extended it to Hilbert spaces and improved the leading constant. We report it here for completeness.\nTheorem 10. Fix a non-trivial Hilbert space H and a specific online learning algorithm. If the algorithm guarantees a zero regret against the competitor with zero norm, then there exists a sequence\nof T cost vectors in H, such that the regret against any other competitor is Ω(T ). On the other hand, if the algorithm guarantees a regret at most of ǫ > 0 against the competitor with zero norm, then, for any 0 < η < 1, there exists a T0 and a sequence of T ≥ T0 unitary norm vectors gt ∈ H, and a vector u ∈ H such that\nRegret(u) ≥ (1 − η)‖u‖ √ 1\nlog 2\n√\nT log η‖u‖\n√ T\n3ǫ − 2 .\n6.1 Deriving a known-T algorithm with minimax rates via the Normal approximation\nConsider the game with fixed known T , an adversary that plays from G = {g ∈ H | ‖g‖ ≤ G}, and\nB(θ) = ǫ exp (‖θ‖2 2aT ) ,\nfor constants a > 1 and ǫ > 0. We will show that we are in the case of the parallel adversary, Section 4.2. Both computing the ft based on Rademacher expectations and evaluating the sufficient condition for those ft appear quite difficult, so we turn to the Normal approximation. We then have\nf̂t(x) = E φτ\n[\nǫ exp\n( (x+ φτG) 2\n2at\n)]\n= ǫ\n(\n1− πG 2(T − t) 2aT\n)− 1 2\nexp\n( x2\n2aT − πG2(T − t)\n)\n,\nwhere we have computed the expectation in a closed form for the second equality. One can quickly verify that it satisfies the hypothesis of Theorem 6 for a > G2π/2, hence qt(θ) = f̂t(‖θ‖) will be an admissible relaxation. Thus, by Corollary 2, we immediately have\nRegret(u) ≤ B∗(θT ) + ǫ ( 1− πG 2\n2a\n)− 1 2\n,\nand so by Lemma 14 in the Appendix, we can state the following Theorem, that matches the lower bound up to a constant multiplicative factor.\nTheorem 11. Let a > G2π/2, and G = {g : ‖g‖ ≤ G}. Denote by θ̂ = θ‖θ‖ if ‖θ‖ 6= 0, and ~0 otherwise. Fix the number of rounds T of the game, and consider the strategy\nwt+1 = ǫθ̂t exp\n( (‖θt‖+G)2\n2aT−πG2(T−t−1)\n) − exp (\n(‖θt‖−G)2 2aT−πG2(T−t−1)\n)\n2G √ 1− πG2(T−t−1)2aT .\nThen, for any sequence of linear costs {gt}Tt=1, and any u ∈ H, we have\nRegret(u) ≤ ‖u‖ √ √ √ √2aT log (√ aT‖u‖ ǫ + 1 ) + ǫ (( 1− πG 2 2a )− 1 2 − 1 ) ."
    }, {
      "heading" : "6.2 AdaptiveNormal: an adaptive algorithm for unknown T",
      "text" : "Our techniques suggest the following recipe for developing adaptive algorithms: analyze the known T case, define a potential qt(θ) ≈ VT (θ), and then analyze the incrementally-optimal algorithm for this\npotential (14) via Theorem 1. We follow this recipe in the current section. Again consider the game where an adversary that plays from G = {g ∈ H | ‖g‖ ≤ G}. Define the function ft as\nft(x) = βt exp ( x\n2at\n)\n,\nwhere a > 3πG 2\n4 , and the βt is a decreasing sequence that will be specified in the following. From this, we define the potential qt(θ) = ft(‖θ‖2). Suppose we play the incrementally-optimal algorithm of (14). Using Lemma 8 we can write the minimax value for the one-round game,\nǫt(θt) = E r∼{−1,1}\n[ft+1((‖θt‖+ rG)2)]− qt(θt)\n≤ E φ∼N(0,σ2) [ft+1((‖θt‖+ φG)2)]− qt(θt) . Lemma 7.\nUsing Lemma 17 in the Appendix and our hypothesis on a, we have that the RHS of this inequality is maximized for ‖θt‖ = 0. Hence, using the inequality √ a+ b ≤ √a+ b\n2 √ a , ∀a, b > 0, we get\nǫt(θt) ≤ βt+1\n√\n1 + πG2 2a (t+ 1)− πG2 − βt ≤ βt 2\nπG2 2a (t+ 1)− πG2 ≤ πG2βt 4a t .\nThus, choosing βt = ǫ/ log 2(t + 1), for example, is sufficient to prove that ǫ1:T is bounded by ǫπG 2\na [Baxley, 1992]. Hence, again using Corollary 2 and Lemma 14 in the Appendix, we can state the following Theorem.\nTheorem 12. Let a > 3G2π/4, and G = {g : ‖g‖ ≤ G}. Denote by θ̂ = θ‖θ‖ if ‖θ‖ 6= 0, and ~0 otherwise. Consider the strategy\nwt+1 = ǫθ̂t\n(\nexp ( (‖θt‖+G)2 2a(t+ 1) ) − exp ( (‖θt‖ −G)2 2a(t+ 1) )) ( 2G log2(t+ 2) )−1 .\nThen, for any sequence of linear costs {gt}Tt=1, and any u ∈ H, we have\nRegret(u) ≤ ‖u‖ √ √ √ √2aT log (√ aT‖u‖ log2(T + 1)\nǫ + 1\n)\n+ ǫ\n( πG2\na − 1\n)\n."
    }, {
      "heading" : "A Proofs",
      "text" : ""
    }, {
      "heading" : "A.1 Proof of Theorem 1",
      "text" : "Proof. Suppose the algorithm provides the reward guarantee (4). First, note that for any comparator u, by definition we have Regret(u) = −Reward−〈g1:T , u〉 . (21) Then, applying the definitions of Reward, Regret, and the Fenchel conjugate, we have\nRegret(u) = θT · u− Reward By (21) ≤ θT · u− qT (θT ) + ǫ̂1:T By assumption (4) ≤ max\nθ\n( θ · u− qT (θ) + ǫ̂1:T )\n= q∗T (u) + ǫ̂1:T .\nFor the other direction, assuming (5), we have for any comparator u,\nReward = θT · u− Regret(u) By (21) = max\nv\n( θ · v − Regret(v) )\n≥ max v\n( θ · v − q∗T (v)− ǫ̂1:T ) By assumption (5)\n= qT (θ) − ǫ̂1:T .\nAlternatively, one can prove this from the Fenchel-Young inequality."
    }, {
      "heading" : "A.2 Proof of Lemma 3",
      "text" : "Proof. We have B∗(u) = supθ 〈u, θ〉 − f(‖θ‖). If ‖u‖ = 0, the stated equality is correct, in fact\nB∗(u) = sup θ −f(‖θ‖) = sup α≥0 −f(α) = sup α∈R −f(α) = f∗(0) .\nHence we can assume ‖u‖ 6= 0, and by inspection we can take θ = αu/‖u‖, with α ≥ 0, and so\nB∗(u) = sup α≥0 α‖u‖ − f(α) = sup α∈R α‖u‖ − f(α) = f∗(‖u‖) ."
    }, {
      "heading" : "A.3 Proof of Theorem 4",
      "text" : "Proof. First we show that if f satisfies the condition on the derivatives, the same conditions is satisfied by ft, for all t. We have that all the ft have the form h(x) = f( √ x2 + a), where a ≥ 0. Hence we have to prove that xh ′′(x)\nh′(x) ≤ 1. We have that h′(x) = xf ′(\n√ x2+a)√\nx2+a , and h′′(x) =\nx2f ′′( √ x2+a)+ a√\nx2+a f ′(\n√ x2+a)\nx2+a , so\nxh′′(x)\nh′(x) =\nx2f ′′( √ x2 + a) √ x2 + a\nf ′( √ x2 + a)(x2 + a)\n+ a x2 + a ≤ x\n2\nx2 + a +\na\nx2 + a = 1,\nwhere in the inequality we used the hypothesis on the derivatives of f .\nWe show Vt has the stated form by induction from T down to 0. The base case for t = T is immediate. For the induction step, we have\nVt(θ) = min w max g\n〈w, g〉+ Vt+1(θ − g) Defn.\n= min w max g\n〈w, g〉+ ft+1 (‖θ − g‖) (IH)\n= ft+1\n(√ ‖θ‖2 +G2 )\nAssumption (16)\n= f (√ ‖θ‖2 +G2(T − t) ) .\nThe sufficient condition for (16) follow immediately from Lemma 5."
    }, {
      "heading" : "A.4 Proof of Theorem 6",
      "text" : "Proof. First, we need to show the functions ft and f̂t of (18) are even. Let r be a random variable draw from any symmetric distribution. Then, we have\nft(x) = E[f(|x+ r|)] = E[f(| − x− r|)] = E[f(| − x+ r|)] = ft(−x),\nwhere we have used the fact that | · | is even and the symmetry of r. We show ft(‖θ‖) = Vt(θ) inductively from t = T down to t = 0. The base case T = t follows from the definition of ft. Then, suppose the result holds for t+ 1. We have\nVt(θ) = min w max g∈G\n〈w, g〉+ Vt+1(θ − g) Defn.\n= min w max g∈G\n〈w, g〉+ ft+1(‖θ − g‖) IH\n= E r∼{−1,1}\n[ ft+1(‖θ‖+ rG) ] Lemma 8\n= E r∼{−1,1}\n[\nE rτ−1∼{−1,1}τ−1\n[ f(‖θ‖+ rG + rτ−1G)\n] ]\n= ft(‖θ‖),\nwhere the last two lines follow from the definition of ft and ft+1. The case for f̂t is similar, using the hypothesis of the Theorem we have\nmin w max g∈G\n〈g, w〉+ f̂t+1(‖θ − g‖) = Er∼{−1,1}[f̂t+1(‖θ‖+ rG)] ≤ Er∼N(0,σ2)[f̂t+1(‖θ‖+ φG)]\n= f̂t(‖θ‖),\nwhere in the inequality we used Lemma 7, and in the second equality the definition of f̂t. Hence, qt(θ) = f̂t(‖θ‖) satisfy (13) with ǫ̂t = 0. Finally, the sufficient conditions come immediately from Lemma 8.\nA.5 Analysis of the one-round game: Proofs of Lemmas 5 and 8\nIn the process of proving these lemmas, we also show the following general lower bound:\nLemma 13. Under the same definitions as in Lemma 5, if d > 1, we have\nH ≥ h (√ ‖θ‖2 +G2 ) .\nWe now proceed with the proofs. The d = 1 case for Lemma 8 was was proved in McMahan and Abernethy [2013].\nBefore proving the other results, we simplify a bit the formulation of the minimax problem. For the other results, the maximization wrt g of a convex function is always attained when ‖g‖ = G. Moreover, in the case of ‖θ‖ = 0 the other results are true, in fact\nmin w max g∈G 〈w, g〉+ h(‖θ − g‖) = min w max ‖g‖=G 〈w, g〉+ h(‖g‖) = min w G‖w‖ + h(G) = h(G) .\nHence, without loss of generality, in the following we can write w = α θ‖θ‖ + ŵ, where 〈ŵ, θ〉 = 0. It is easy to see that in all the cases the optimal choice of g turns out to be g = β θ‖θ‖ + γŵ, where γ ≥ 0. With these settings, the minimax problem is equivalent to\nmin w max g∈G 〈w, g〉 + h(‖θ − g‖) = min α,ŵ max β2+‖ŵ‖2γ2=G2\nαβ + γ‖ŵ‖2 + h( √ ‖θ‖2 − 2β‖θ‖+G2) .\nBy inspection, the player can always choose ŵ = 0 so γ‖ŵ‖2 = 0. Hence we have a simplified and equivalent form of our optimization problem\nmin w max g∈G 〈w, g〉+ h(‖θ − g‖) = min α max β2≤G2\nαβ + h( √ ‖θ‖2 − 2β‖θ‖+G2) . (22)\nFor Lemma 13, it is enough to set β = 0 in (22). For Lemma 5, we upper bound the minimum wrt to α with the specific choice of α. In particular,\nwe set α = ‖θ‖√ ‖θ‖2+G2\nh′ (√ ‖θ‖2 +G2 ) in (22), and get\nmin w max g∈G 〈w, g〉+ h(‖θ − g‖) ≤ max β2≤G2\nβ‖θ‖h′( √\n‖θ‖2 +G2) √\n‖θ‖2 +G2 + h(\n√\n‖θ‖2 − 2β‖θ‖+G2) .\nThe derivative of argument of the max wrt β is\n‖θ‖h′ (√ ‖θ‖2 +G2 )\n√ ‖θ‖2 +G2 −\n‖θ‖h′ (√ ‖θ‖2 − 2β‖θ‖+G2 )\n√ ‖θ‖2 − 2β‖θ‖+G2 . (23)\nWe have that if β = 0 the first derivative is 0. Using the hypothesis on the first and second derivative of h, we have that the second term in (23) increases in β. Hence β = 0 is the maximum. Comparing the obtained upper bound with the lower bound in Lemma 13, we get the stated equality.\nFor Lemma 8, the second derivative wrt β of the argument of the minimax problem in (22) is\n−‖θ‖ −‖θ‖h′′(\n√ ‖θ‖+G2 − 2β‖θ‖) + h′( √ ‖θ‖+G2 − 2β‖θ‖) ‖θ‖√ ‖θ‖+G2−2β‖θ‖\n‖θ‖+G2 − 2β‖θ‖\nthat is non negative, for our hypothesis on the derivatives of h. Hence, the argument of the minimax problem is convex wrt β, hence the maximum is achieved at the boundary of the domains, that is β2 = G2. So, we have\nmin w max g∈G\n〈w, g〉 + h(‖θ − g‖) = max (−Gα+ h(‖θ‖+G), Gα + h(|‖θ‖ −G|)) .\nThe argmin of this quantity wrt to α is obtained when the the two terms in the max are equal, so we obtained the stated equality."
    }, {
      "heading" : "A.6 Lemma 14",
      "text" : "Lemma 14. Define f(θ) = β exp ‖θ‖ 2\n2α , for α, β > 0. Then\nf∗(w) ≤ ‖w‖ √ 2α log (√ α‖w‖ β + 1 ) − β .\nProof. From the definition of Fenchel dual, we have\nf∗(w) = max θ 〈θ, w〉 − f(θ) ≤ 〈θ∗, w〉 − β .\nwhere θ∗ = argmaxθ〈θ, w〉 − f(θ). We now use the fact that θ∗ satisfies w = ∇f(θ∗), that is\nw = θ∗ β\nα exp (‖θ∗‖2 2α ) ,\nin other words we have that θ∗ and w are in the same direction. Hence we can set θ∗ = qw, so that f∗(w) ≤ q‖w‖2 − β. We now need to look for q > 0, solving\nqβ\nα exp (‖w‖2q2 2α ) = 1 ⇔ ‖w‖ 2q2 2α + log βq α = 0\n⇔ q = √ 2α\n‖w‖2 log α qβ =\n√ √ √ √ √ 2α\n‖w‖2 log\n\n\n√ α‖w‖\nβ √\n2 log αqβ\n\n .\nUsing the elementary inequality log x ≤ me x 1 m , ∀m > 0, we have\nq2 = 2α ‖w‖2 log α qβ ≤ 2mα e‖w‖2 ( α qβ ) 1 m\n⇒ q 2m+1m ≤ 2mα m+1 m\ne‖w‖2β 1m ⇒ q ≤\n( 2m e‖w‖2 ) m 2m+1 α m+1 2m+1 β− 1 2m+1\n⇒ α βq ≥ ( e‖w‖2 2m ) m 2m+1 α1− m+1 2m+1β 1 2m+1 −1 = α βq ≥ (√ e 2m ‖w‖√α β ) 2m 2m+1 .\nHence we have\nq ≤ √ √ √ √ √ 2α\n‖w‖2 log\n\n\n√ α‖w‖\nβ √\n4m 2m+1 log\n√ e 2m ‖w‖√α β\n\n .\nWe set m such that √\ne 2m ‖w‖√α β = √ e, that is 12 ( ‖w‖√α β )2 = m. Hence we have log √ e 2m ‖w‖√α β =\n1 2 and ‖w‖√α β√ 2m = 1, and obtain\nf∗(w) ≤ ‖w‖ √ √ √ √ √2α log   √ (√\nα‖w‖ β\n)2\n+ 1\n − β ≤ ‖w‖ √ 2α log (√ α‖w‖ β + 1 ) − β ."
    }, {
      "heading" : "A.7 Lemma 17",
      "text" : "Lemma 15. Let f(x) = b exp ( x2\na\n) − exp ( x2\nc\n)\n. If a ≥ c > 0, b ≥ 0, and b c ≤ a, then the function f(x) is decreasing for x ≥ 0.\nProof. The proof is immediate from the study of the first derivative.\nLemma 16. Let f(t) = a 3 2 t\n√ t+1\n(a (t+1)−b) 3 2\n, with a ≥ 3/2b > 0. Then f(t) ≤ 1 for any t ≥ 0.\nProof. The sign of the first derivative of the function has the same sign of\n(2 a− 3b)(t+ 1) + b,\nhence from the hypothesis on a and b the function is strictly increasing. Moreover the asymptote for t → ∞ is 1, hence we have the stated upper bound.\nLemma 17. Let ft(x) = βt exp ( x 2at ) , βt+1 ≤ βt, ∀t. If a ≥ 3πG 2 4 , then\nargmax x E φ∼N(0,σ2)\n[ft+1(x+ φG)]− ft(x) = 0,\nwhere σ2 = π2 .\nProof. We have\nE φ∼N(0,σ2)\n[ft+1(x+ φG)] = βt+1\n√\na (t+ 1) a (t+ 1)− σ2G2 exp (\nx2\n2 [a (t+ 1)− σ2G2]\n)\n,\nso we have to study the max of\nβt+1\n√\na (t+ 1) a (t+ 1)− σ2G2 exp (\nx2\n2 [a (t+ 1)− σ2G2]\n) − βt exp ( x2\n2 a t\n)\n.\nThe function is even, so we have a maximum in zero iff the function is decreasing for x > 0. Observe that, from Lemma 16, for any t ≥ 0\n√\na (t+ 1) a (t+ 1)− σ2G2 a t a (t+ 1)− σ2G2 ≤ 1 .\nHence, using Lemma 15, we obtain that the stated result."
    } ],
    "references" : [ {
      "title" : "Repeated games against budgeted adversaries",
      "author" : [ "J. Abernethy", "M.K. Warmuth" ],
      "venue" : "Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Abernethy and Warmuth.,? \\Q2010\\E",
      "shortCiteRegEx" : "Abernethy and Warmuth.",
      "year" : 2010
    }, {
      "title" : "Continuous experts and the Binning algorithm",
      "author" : [ "J. Abernethy", "J. Langford", "M.K. Warmuth" ],
      "venue" : "In Proceedings of the 19th Annual Conference on Learning Theory (COLT06),",
      "citeRegEx" : "Abernethy et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Abernethy et al\\.",
      "year" : 2007
    }, {
      "title" : "Optimal strategies and minimax lower bounds for online convex games",
      "author" : [ "J. Abernethy", "P.L. Bartlett", "A. Rakhlin", "A. Tewari" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Abernethy et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Abernethy et al\\.",
      "year" : 2008
    }, {
      "title" : "Optimal strategies from random walks",
      "author" : [ "J. Abernethy", "M.K. Warmuth", "J. Yellin" ],
      "venue" : "In Proceedings of the 21st Annual Conference on Learning Theory (COLT",
      "citeRegEx" : "Abernethy et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Abernethy et al\\.",
      "year" : 2008
    }, {
      "title" : "Euler’s constant, Taylor’s formula, and slowly converging series",
      "author" : [ "J.V. Baxley" ],
      "venue" : "Mathematics Magazine,",
      "citeRegEx" : "Baxley.,? \\Q1992\\E",
      "shortCiteRegEx" : "Baxley.",
      "year" : 1992
    }, {
      "title" : "Prediction, learning, and games",
      "author" : [ "N. Cesa-Bianchi", "G. Lugosi" ],
      "venue" : null,
      "citeRegEx" : "Cesa.Bianchi and Lugosi.,? \\Q2006\\E",
      "shortCiteRegEx" : "Cesa.Bianchi and Lugosi.",
      "year" : 2006
    }, {
      "title" : "A parameter-free hedging algorithm",
      "author" : [ "K. Chaudhuri", "Y. Freund", "D. Hsu" ],
      "venue" : "Advances in Neural Information Processing Systems",
      "citeRegEx" : "Chaudhuri et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Chaudhuri et al\\.",
      "year" : 2009
    }, {
      "title" : "The robustness of the p-norm algorithms",
      "author" : [ "C. Gentile" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Gentile.,? \\Q2003\\E",
      "shortCiteRegEx" : "Gentile.",
      "year" : 2003
    }, {
      "title" : "General convergence results for linear discriminant updates",
      "author" : [ "A.J. Grove", "N. Littlestone", "D. Schuurmans" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Grove et al\\.,? \\Q2001\\E",
      "shortCiteRegEx" : "Grove et al\\.",
      "year" : 2001
    }, {
      "title" : "Relative loss bounds for multidimensional regression problems",
      "author" : [ "J. Kivinen", "M.K. Warmuth" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Kivinen and Warmuth.,? \\Q2001\\E",
      "shortCiteRegEx" : "Kivinen and Warmuth.",
      "year" : 2001
    }, {
      "title" : "Minimax optimal algorithms for unconstrained linear optimization",
      "author" : [ "H.B. McMahan", "J. Abernethy" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "McMahan and Abernethy.,? \\Q2013\\E",
      "shortCiteRegEx" : "McMahan and Abernethy.",
      "year" : 2013
    }, {
      "title" : "Dimension-free exponentiated gradient",
      "author" : [ "F. Orabona" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Orabona.,? \\Q2013\\E",
      "shortCiteRegEx" : "Orabona.",
      "year" : 2013
    }, {
      "title" : "A generalized online mirror descent with applications to classification and regression",
      "author" : [ "F. Orabona", "K. Crammer", "N. Cesa-Bianchi" ],
      "venue" : null,
      "citeRegEx" : "Orabona et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Orabona et al\\.",
      "year" : 2013
    }, {
      "title" : "Lecture notes on online learning",
      "author" : [ "A. Rakhlin" ],
      "venue" : "Technical report,",
      "citeRegEx" : "Rakhlin.,? \\Q2009\\E",
      "shortCiteRegEx" : "Rakhlin.",
      "year" : 2009
    }, {
      "title" : "Localization and adaptation in online learning",
      "author" : [ "A. Rakhlin", "O. Shamir", "K. Sridharan" ],
      "venue" : "In AISTATS,",
      "citeRegEx" : "Rakhlin et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Rakhlin et al\\.",
      "year" : 2013
    }, {
      "title" : "Relax and randomize: From value to algorithms",
      "author" : [ "S. Rakhlin", "O. Shamir", "K. Sridharan" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Rakhlin et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Rakhlin et al\\.",
      "year" : 2012
    }, {
      "title" : "Online learning: Theory, algorithms, and applications",
      "author" : [ "S. Shalev-Shwartz" ],
      "venue" : "Technical report, The Hebrew University,",
      "citeRegEx" : "Shalev.Shwartz.,? \\Q2007\\E",
      "shortCiteRegEx" : "Shalev.Shwartz.",
      "year" : 2007
    }, {
      "title" : "Online learning and online convex optimization",
      "author" : [ "S. Shalev-Shwartz" ],
      "venue" : "Foundations and Trends in Machine Learning,",
      "citeRegEx" : "Shalev.Shwartz.,? \\Q2012\\E",
      "shortCiteRegEx" : "Shalev.Shwartz.",
      "year" : 2012
    }, {
      "title" : "No-regret algorithms for unconstrained online convex optimization",
      "author" : [ "M. Streeter", "H.B. McMahan" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Streeter and McMahan.,? \\Q2012\\E",
      "shortCiteRegEx" : "Streeter and McMahan.",
      "year" : 2012
    }, {
      "title" : "Dual averaging method for regularized stochastic learning and online optimization",
      "author" : [ "L. Xiao" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Xiao.,? \\Q2009\\E",
      "shortCiteRegEx" : "Xiao.",
      "year" : 2009
    } ],
    "referenceMentions" : [ {
      "referenceID" : 15,
      "context" : ", 2008a], in others upper bounds on the value of the game (often based on the sequential Rademacher complexity) are used to construct efficient algorithms with theoretical guarantees [Rakhlin et al., 2012].",
      "startOffset" : 183,
      "endOffset" : 205
    }, {
      "referenceID" : 1,
      "context" : "In some cases the value of the game can be calculated exactly in an efficient way [Abernethy et al., 2008a], in others upper bounds on the value of the game (often based on the sequential Rademacher complexity) are used to construct efficient algorithms with theoretical guarantees [Rakhlin et al., 2012]. While most of the work in this area has focused on the setting where the player is constrained to a bounded convex set [Abernethy et al., 2008a] (with the notable exception of McMahan and Abernethy [2013]), in this work we are interested in the general setting of unconstrained online learning with",
      "startOffset" : 83,
      "endOffset" : 511
    }, {
      "referenceID" : 10,
      "context" : "In Section 4, extending the work of McMahan and Abernethy [2013], we provide novel and general sufficient conditions to be able to compute the exact minimax strategy for both the player and the adversary, as well as the value of the game.",
      "startOffset" : 36,
      "endOffset" : 65
    }, {
      "referenceID" : 10,
      "context" : "In Section 4, extending the work of McMahan and Abernethy [2013], we provide novel and general sufficient conditions to be able to compute the exact minimax strategy for both the player and the adversary, as well as the value of the game. In particular, we show that under these conditions the optimal play of the adversary is always orthogonal or always parallel to the sum of his previous plays, while the optimal play of the player is always parallel. On the other hand, for some cases where the exact minimax strategy is hard to characterize, we introduce a new relaxation procedure based on a Normal approximation. In the particular application of interest, we show the relaxation is strong enough to yield an optimal regret bound, up to constant factors. In Section 5, we use our new tools to recover and extend previous results on minimax strategies for linear online learning, including results for bounded domains. In fact, we show how to obtain a family of minimax strategies that smoothly interpolates between the minimax algorithm for a bounded feasible set and a minimax optimal algorithm in fact equivalent to unconstrained gradient descent. We emphasize that all the algorithms from this family are exactly minimax optimal,1 in a sense we will make precise in the next section. Moreover, if you are allowed to play outside of the comparator set, we show that some members of this family have a non-vacuous regret bound for the unconstrained setting, while remaining optimal for the constrained one. When studying unconstrained problems, a natural question is how small we can make the dependence of the regret bound on U , the L2 norm of an arbitrary comparator point, while still maintaining a √ T dependency on the time horizon. The best algorithm from the above family achieves Regret(U) ≤ 1 2 (U + 1) √ T . Streeter and McMahan [2012] and Orabona [2013] show it is possible to reduce the dependence on U to O(U logUT ).",
      "startOffset" : 36,
      "endOffset" : 1854
    }, {
      "referenceID" : 10,
      "context" : "In Section 4, extending the work of McMahan and Abernethy [2013], we provide novel and general sufficient conditions to be able to compute the exact minimax strategy for both the player and the adversary, as well as the value of the game. In particular, we show that under these conditions the optimal play of the adversary is always orthogonal or always parallel to the sum of his previous plays, while the optimal play of the player is always parallel. On the other hand, for some cases where the exact minimax strategy is hard to characterize, we introduce a new relaxation procedure based on a Normal approximation. In the particular application of interest, we show the relaxation is strong enough to yield an optimal regret bound, up to constant factors. In Section 5, we use our new tools to recover and extend previous results on minimax strategies for linear online learning, including results for bounded domains. In fact, we show how to obtain a family of minimax strategies that smoothly interpolates between the minimax algorithm for a bounded feasible set and a minimax optimal algorithm in fact equivalent to unconstrained gradient descent. We emphasize that all the algorithms from this family are exactly minimax optimal,1 in a sense we will make precise in the next section. Moreover, if you are allowed to play outside of the comparator set, we show that some members of this family have a non-vacuous regret bound for the unconstrained setting, while remaining optimal for the constrained one. When studying unconstrained problems, a natural question is how small we can make the dependence of the regret bound on U , the L2 norm of an arbitrary comparator point, while still maintaining a √ T dependency on the time horizon. The best algorithm from the above family achieves Regret(U) ≤ 1 2 (U + 1) √ T . Streeter and McMahan [2012] and Orabona [2013] show it is possible to reduce the dependence on U to O(U logUT ).",
      "startOffset" : 36,
      "endOffset" : 1873
    }, {
      "referenceID" : 1,
      "context" : "Regret bounds for known-T algorithms (A) Minimax Regret √ T for u ∈ W , O(T ) otherwise Abernethy et al. [2008a] (B) OGD, fixed η 1 2 (1 + U) √ T E.",
      "startOffset" : 88,
      "endOffset" : 113
    }, {
      "referenceID" : 1,
      "context" : "Regret bounds for known-T algorithms (A) Minimax Regret √ T for u ∈ W , O(T ) otherwise Abernethy et al. [2008a] (B) OGD, fixed η 1 2 (1 + U) √ T E.g., Shalev-Shwartz [2012] (C) pq-Algorithm (",
      "startOffset" : 88,
      "endOffset" : 174
    }, {
      "referenceID" : 16,
      "context" : "Theorem 11 Regret bounds for adaptive algorithms for unknown T (G) Adaptive FTRL/RDA (1 + 1 2 U) √ T Shalev-Shwartz [2007], Xiao [2009] (H) Dim.",
      "startOffset" : 101,
      "endOffset" : 123
    }, {
      "referenceID" : 16,
      "context" : "Theorem 11 Regret bounds for adaptive algorithms for unknown T (G) Adaptive FTRL/RDA (1 + 1 2 U) √ T Shalev-Shwartz [2007], Xiao [2009] (H) Dim.",
      "startOffset" : 101,
      "endOffset" : 136
    }, {
      "referenceID" : 10,
      "context" : "Following McMahan and Abernethy [2013], we generalize the game in terms of a generic convex benchmark function B : H → R, instead of using the definition (1).",
      "startOffset" : 10,
      "endOffset" : 39
    }, {
      "referenceID" : 5,
      "context" : "and analysis of online learning algorithms [Cesa-Bianchi and Lugosi, 2006].",
      "startOffset" : 43,
      "endOffset" : 74
    }, {
      "referenceID" : 15,
      "context" : "They can be viewed as 1) the conjugate of an (implicit) time-varying regularizer in a Mirror Descent or Follow-the-Regularized-Leader (FTRL) algorithm [Cesa-Bianchi and Lugosi, 2006, Shalev-Shwartz, 2007, Rakhlin, 2009], 2) as proxy for the conditional value of the game in a minimax setting [Rakhlin et al., 2012], or 3) a potential giving a bound on the amount of reward we want the algorithm to have obtained at the end of round t [Streeter and McMahan, 2012, McMahan and Abernethy, 2013].",
      "startOffset" : 292,
      "endOffset" : 314
    }, {
      "referenceID" : 11,
      "context" : "6] and Orabona [2013], the key is showing the sum of these ǫ̂t terms is always bounded by a constant.",
      "startOffset" : 7,
      "endOffset" : 22
    }, {
      "referenceID" : 11,
      "context" : "where we view q∗ t as a time-varying regularizer (see Orabona et al. [2013] and references therein).",
      "startOffset" : 54,
      "endOffset" : 76
    }, {
      "referenceID" : 8,
      "context" : "When the regularizer q∗ is fixed, that is, qt = q for all t for some convex function q, we get the approach pioneered by Grove et al. [2001] and Kivinen and Warmuth [2001]: ǫt(θt, gt) = q(θt)− q(θt−1) + 〈wt, gt〉 = q(θt)− ( q(θt−1) + 〈∇q(θt−1), gt〉 ) = Dq(θt, θt−1), where Dq is the Bregman Divergence with respect to q, and we predict with wt = ∇q(θt−1).",
      "startOffset" : 121,
      "endOffset" : 141
    }, {
      "referenceID" : 8,
      "context" : "When the regularizer q∗ is fixed, that is, qt = q for all t for some convex function q, we get the approach pioneered by Grove et al. [2001] and Kivinen and Warmuth [2001]: ǫt(θt, gt) = q(θt)− q(θt−1) + 〈wt, gt〉 = q(θt)− ( q(θt−1) + 〈∇q(θt−1), gt〉 ) = Dq(θt, θt−1), where Dq is the Bregman Divergence with respect to q, and we predict with wt = ∇q(θt−1).",
      "startOffset" : 121,
      "endOffset" : 172
    }, {
      "referenceID" : 13,
      "context" : "Admissible relaxations and potentials We extend the notion of relaxations of the conditional value of the game of Rakhlin et al. [2012] to the present setting.",
      "startOffset" : 114,
      "endOffset" : 136
    }, {
      "referenceID" : 13,
      "context" : "(4) of Rakhlin et al. [2012] if we force all ǫ̂t = 0, but if we allow some slack ǫ̂t, (13) corresponds exactly to (8) and (9).",
      "startOffset" : 7,
      "endOffset" : 29
    }, {
      "referenceID" : 13,
      "context" : "following Rakhlin et al. [2012, Eq. (5)], Rakhlin et al. [2013], and Streeter and McMahan [2012, Eq.",
      "startOffset" : 10,
      "endOffset" : 64
    }, {
      "referenceID" : 10,
      "context" : "For example, following ideas from McMahan and Abernethy [2013],",
      "startOffset" : 34,
      "endOffset" : 63
    }, {
      "referenceID" : 10,
      "context" : "McMahan and Abernethy [2013] shows that in some cases is possible to easily calculate this maximum, in particular when G = [−G,G]d and qt decomposes on a per-coordinate spaces (that is, when the problem is essentially d independent, one-dimensional problems).",
      "startOffset" : 0,
      "endOffset" : 29
    }, {
      "referenceID" : 10,
      "context" : "The results of McMahan and Abernethy [2013] can be viewed as a special case of the results in this section.",
      "startOffset" : 15,
      "endOffset" : 44
    }, {
      "referenceID" : 7,
      "context" : "This is reminiscent of p-norm algorithms [Gentile, 2003], but the connection is superficial—the norm we use to measure θ is always the norm of our Hilbert space.",
      "startOffset" : 41,
      "endOffset" : 56
    }, {
      "referenceID" : 1,
      "context" : "The p = 1 case in fact exactly recaptures the result of Abernethy et al. [2008a] for linear functions, extending it also to spaces of dimension equal to two.",
      "startOffset" : 56,
      "endOffset" : 81
    }, {
      "referenceID" : 11,
      "context" : "This kind of regularizer is particularly interesting because it is related to parameter-free sub-gradient descent algorithms [Orabona, 2013]; a similar potential function was used for a parameter-free algorithm by [Chaudhuri et al.",
      "startOffset" : 125,
      "endOffset" : 140
    }, {
      "referenceID" : 6,
      "context" : "This kind of regularizer is particularly interesting because it is related to parameter-free sub-gradient descent algorithms [Orabona, 2013]; a similar potential function was used for a parameter-free algorithm by [Chaudhuri et al., 2009].",
      "startOffset" : 214,
      "endOffset" : 238
    }, {
      "referenceID" : 6,
      "context" : "This kind of regularizer is particularly interesting because it is related to parameter-free sub-gradient descent algorithms [Orabona, 2013]; a similar potential function was used for a parameter-free algorithm by [Chaudhuri et al., 2009]. The lower bound for this game was proven in Streeter and McMahan [2012] for 1-dimensional spaces, and Orabona [2013] extended it to Hilbert spaces and improved the leading constant.",
      "startOffset" : 215,
      "endOffset" : 312
    }, {
      "referenceID" : 6,
      "context" : "This kind of regularizer is particularly interesting because it is related to parameter-free sub-gradient descent algorithms [Orabona, 2013]; a similar potential function was used for a parameter-free algorithm by [Chaudhuri et al., 2009]. The lower bound for this game was proven in Streeter and McMahan [2012] for 1-dimensional spaces, and Orabona [2013] extended it to Hilbert spaces and improved the leading constant.",
      "startOffset" : 215,
      "endOffset" : 357
    }, {
      "referenceID" : 4,
      "context" : "Thus, choosing βt = ǫ/ log (t + 1), for example, is sufficient to prove that ǫ1:T is bounded by ǫ 2 a [Baxley, 1992].",
      "startOffset" : 102,
      "endOffset" : 116
    } ],
    "year" : 2014,
    "abstractText" : "We study algorithms for online linear optimization in Hilbert spaces, focusing on the case where the player is unconstrained. We develop a novel characterization of a large class of minimax algorithms, recovering, and even improving, several previous results as immediate corollaries. Moreover, using our tools, we develop an algorithm that provides a regret bound of O (",
    "creator" : "dvips(k) 5.991 Copyright 2011 Radical Eye Software"
  }
}