{
  "name" : "1405.1535.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Learning Boolean Halfspaces with Small Weights from Membership Queries",
    "authors" : [ "Hasan Abasi", "Ali Z. Abdi" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n40 5.\n15 35\nv1 [\n5) membership queries where the best lower bound for the number of membership queries is nt [4].\nIn this paper we close this gap and give an adaptive proper learning algorithm with two rounds that asks nO(t) membership queries. We also give a non-adaptive proper learning algorithm that asks nO(t 3) membership queries."
    }, {
      "heading" : "1 Introduction",
      "text" : "We study the problem of learnability of boolean halfspace functions from membership queries [2, 1]. Boolean halfspace is a function f = [w1x1 + · · ·+wnxn ≥ u] from {0, 1}\nn to {0, 1} where the weights w1, . . . , wn and the threshold u are integers. The function is 1 if the arithmetic sum w1x1 + · · · + wnxn is greater or equal to u and zero otherwise. In the membership query model [2, 1] the learning algorithm has access to a membership oracle Of , for some target function f , that receives an assignment a ∈ {0, 1}\nn and returns f(a). A proper learning algorithm for a class of functions C is an algorithm that has access to Of where f ∈ C asks membership queries and returns a function g in C that is equivalent to f .\nThe problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].\nAnother scenario that motivate the problem of learning Halfspaces is the following. Given a set of n similar looking objects of unknown weights (or any other measure), but from some class of weights W . Suppose we have a scale (or a measure instrument) that can only indicate whether the weight of any set of objects exceeds some unknown fixed threshold (or capacity). How many weighing do one needs in order to find the weights (or all possible weights) of the objects.\nIn this paper we study the problem of proper learnability of boolean halfspace functions with t+ 1 different non-negative weights W = {0, 1, . . . , t} from membership queries. The best known algorithm for this problem is an adaptive algorithm that asks nO(t\n5) membership queries where the best lower bound for the number of membership queries is nt [4].\nIn this paper we close the above gap and give an adaptive proper learning algorithm with two rounds that asks nO(t) membership queries. We also give a non-adaptive proper learning algorithm that asks nO(t\n3) membership queries. All the algorithms in this paper runs in time that is linear in the membership query complexity.\nExtending such result to non-positive weights is impossible. In [4] Abboud et. al. showed that in order to learn boolean Halfspace functions with weights W = {−1, 0, 1}, we need at least O(2n−o(n)) membership queries. Therefore the algorithm that asks all the 2n queries in {0, 1}n is optimal for this case. Shevchenko and Zolotykh [14] studied halfspace function over the domain {0, 1, . . . , k − 1}n and no constraints on the coefficients. They gave the lower bound Ω(logn−2 k) lower bound for learning this class from membership queries. Hegedüs [12] prove the upper bound O(logn k/ log log n). For fixed n Shevchenko and Zolotykh [15] gave a polynomial time algorithm (in log k) for this class.\nThis paper is organized as follows. In Section 2 we give some definitions and preliminary results. In Section 3 we show that any boolean halfspace with polynomially bounded coefficients can be expressed by an Automaton of polynomial size. A result that will be used in Section 4. In Section 4 we give the two round learning algorithm and the non-adaptive algorithm."
    }, {
      "heading" : "2 Definitions and Preliminary Results",
      "text" : "In this section we give some definitions and preliminary results that will be used throughout the paper"
    }, {
      "heading" : "2.1 Main Lemma",
      "text" : "In this subsection we prove two main results that will be frequently used in this paper\nFor integers t < r we denote [t] := {1, 2, . . . , t}, [t]0 = {0, 1, . . . , t} and [t, r] = {t, t+ 1, . . . , r}.\nWe first prove the following\nLemma 1. Let w1, . . . , wm ∈ [−t, t] where at least one wj 6∈ {−t, 0, t} and\nm ∑\ni=1\nwi = r ∈ [−t+ 1, t− 1].\nThere is a permutation φ : [m] → [m] such that for every j ∈ [m], Wj := ∑j\ni=1 wφ(i) ∈ [−t+ 1, t− 1].\nProof. Since there is j such that wj ∈ [−t+1, t−1]\\{0} we can take φ(1) = j. Then W1 = wj ∈ [−t + 1, t − 1]. If there is j1, j2 such that wj1 = t and wj2 = −t we set φ(2) = j1, φ(3) = j2 if W1 < 0 and φ(2) = j2, φ(3) = j1 if W1 > 0. We repeat the latter until there are either no more t or no more −t in the rest of the elements.\nAssume that we have chosen φ(1), . . . , φ(k−1) such that Wj ∈ [−t+1, t− 1] for j ∈ [k − 1]. We now show how to determine φ(k) so that Wk ∈ [−t+ 1, t−1]. If Wk−1 = ∑k−1 i=1 wφ(i) > 0 and there is q 6∈ {φ(1), . . . , φ(k−1)} such that wq < 0 then we take φ(k) := q. Then Wk = Wk−1+wq ∈ [−t+1, t−1]. If Wk−1 < 0 and there is q 6∈ {φ(1), . . . , φ(k − 1)} such that wq > 0 then we take φ(k) := q. Then Wk = Wk−1 + wq ∈ [−t + 1, t − 1]. If for every q 6∈ {φ(1), . . . , φ(k−1)}, wq > 0 (resp. wq < 0) then we can take an arbitrary order of the other elements and we get Wk−1 < Wk < Wk+1 < · · · < Wm = r (resp. Wk−1 > Wk > Wk+1 > · · · > Wm = r). If Wk−1 = 0 then there must be q 6∈ {φ(1), . . . , φ(k − 1)} such that wq ∈ [−t + 1, t − 1]. This is because not both t and −t exist in the elements that are not assigned yet. We then take φ(k) := q.\nThis completes the proof.\nWe now prove the first main lemma\nLemma 2. Let w1, . . . , wm ∈ [−t, t] and\nm ∑\ni=1\nwi = r ∈ [−t+ 1, t− 1].\nThere is a partition S1, S2, . . . , Sq of [m] such that\n1. For every j ∈ [q − 1], ∑\ni∈Sj wi = 0.\n2. ∑\ni∈Sq wi = r.\n3. For every j ∈ [q], |Sj | ≤ 2t− 1.\n4. If r 6= 0 then |Sq| ≤ 2t− 2.\nProof. If w1, . . . , wm ∈ {−t, 0, t} then r must be zero, and the number of non-zero elements is even and half of them are equal to t and the other half are equal to −t. Then we can take Si = {−t, t} or Si = {0} for all i. Therefore we may assume that at least one wj 6∈ {−t, 0, t}.\nBy Lemma 1 we may assume w.l.o.g (by reordering the elements) that such that Wj := ∑j i=1wi ∈ [−t + 1, t − 1] for all j ∈ [m]. Let W0 = 0. Consider W0,W1,W2, . . . ,W2t−1. By the pigeonhole principle there is 0 ≤ j1 < j2 ≤ 2t−1 such that Wj2 = Wj1 and then Wj2−Wj1 = ∑j2 i=j1+1\nwi = 0. We then take S1 = {j1 + 1, . . . , j2}. Notice that |S1| = j2 − j1 ≤ 2t− 1.\nSince ∑\ni 6∈S1 wi = r we can repeat the above to find S2, S3, · · · . This can\nbe repeated as long as |[m]\\(S1 ∪S2 ∪ · · · ∪Sh)| ≥ 2t− 1. This proves 1− 3. We now prove 4. If g := |[m]\\(S1 ∪ S2 ∪ · · · ∪ Sh)| < 2t − 1 then define Sh+1 = [m]\\(S1 ∪ S2 ∪ · · · ∪ Sh) and we get 4 for q = h + 1. If g = 2t − 1 then W0 = 0,W1,W2, . . . ,W2t−1 = r and since r 6= 0 we must have 0 ≤ j1 < j2 ≤ 2t − 1 and j2 − j1 < 2t − 1 such that Wj2 = Wj1 . Then define Sh+1 = {j1 + 1, . . . , j2}, Sh+2 = [m]\\(S1 ∪ S2 ∪ · · · ∪ Sh+1) and q = h + 2. Then |Sh+2| ≤ 2t − 2, ∑\ni∈Sh+1 wi = Wj2 − Wj1 = 0 and\n∑\ni∈Sh+2 wi = r.\nThe following example shows that the bound 2t− 2 for the size of set in Lemma 2 is tight. Consider the 2t − 2 elements w1 = w2 = · · · = wt−1 = t and wt = wt+1 = · · · = w2t−2 = −(t−1). The sum of any subset of elements is distinct. By adding the element w2t−1 = −(t− 1) it is easy to show that the bound 2t− 1 in the lemma is also tight.\nLemma 3. Let (w1, v1), . . . , (wm, vm) ∈ [−t, t] 2 and\nm ∑\ni=1\n(wi, vi) = (r, s) ∈ [−t+ 1, t− 1] 2.\nThere is M ⊆ [m] such that\n1. ∑\ni∈M (wi, vi) = (r, s).\n2. |M | ≤ 8t3 − 4t2 − 2t+ 1.\nProof. Since w1, . . . , wm ∈ [−t, t] and ∑m\ni=1 wi = r ∈ [−t + 1, t − 1], by Lemma 2, there is a partition S1, . . . , Sq of [m] that satisfies the conditions 1− 4 given in the lemma. Let Vj = ∑\ni∈Sj vi for j = 1, . . . , q. We have\nVj ∈ [−t|Sj|, t|Sj |] ⊆ [−t(2t− 1), t(2t − 1)] ⊂ [−2t 2, 2t2]\nfor j = 1, . . . , q and\nq−1 ∑\ni=1\nVi = s− Vq ∈ [−2t 2 + 1, 2t2 − 1].\nIf s− Vq = 0 then for M = Sq we have |M | = |Sq| ≤ 2t− 1 ≤ 8t 3 − 4t2 −\n2t+ 1 and ∑\ni∈M\n(wi, vi) = ∑\ni∈Sq\n(wi, vi) = (r, Vq) = (r, s).\nTherefore we may assume that s− Vq 6= 0. Consider V1, V2, . . . , Vq−1. By 4 in Lemma 2 there is a set Q ⊆ [q − 1] of size at most 2(2t2)− 2 = 4t2 − 2 such that ∑\ni∈Q Vi = s− Vq. Then for\nM = Sq ∪ ⋃\ni∈Q\nSi\nwe have\n|M | ≤ (2t− 1) + (4t2 − 2)(2t − 1) = 8t3 − 4t2 − 2t+ 1\nand ∑\ni∈M\n(wi, vi) = ∑\ni∈Sq\n(wi, vi) + ∑\nj∈Q\n∑\ni∈Sj\n(wi, vi)\n= (r, Vq) + ∑\nj∈Q\n(0, Vj)\n= (r, Vq) + (0, s − Vq) = (r, s)."
    }, {
      "heading" : "2.2 Boolean Functions",
      "text" : "For a boolean function f(x1, . . . , xn) : {0, 1} n → {0, 1}, 1 ≤ i1 < i2 < · · · < ik ≤ n and σ1, . . . , σk ∈ {0, 1} we denote by\nf |xi1=σ1,xi2=σ2,··· ,xik=σk\nthe function f when fixing the variables xij to σj for all j ∈ [k]. For a ∈ {0, 1}n we denote by a|xi1=σ1,xi2=σ2,··· ,xik=σk the assignment a where each aij is replaced by σj for all j ∈ [k]. We note here (and throughout the paper) that f |xi1=σ1,xi2=σ2,··· ,xik=σk is a function from {0, 1}\nn → {0, 1} with same variables x1, . . . , xn of f . Obviously\nf |xi1=σ1,xi2=σ2,··· ,xik=σk(a) = f(a|xi1=σ1,xi2=σ2,··· ,xik=σk).\nWhen σ1 = · · · = σk = ξ and S = {xi1 , . . . , xik} we denote\nf |S←ξ = f |xi1=ξ,xi2=ξ,··· ,xik=ξ.\nIn the same way we define a|S←ξ. We denote by 0 n = (0, 0, . . . , 0) ∈ {0, 1}n and 1n = (1, 1, . . . , 1) ∈ {0, 1}n. For two assignments a ∈ {0, 1}k and b ∈ {0, 1}j we denote by ab ∈ {0, 1}k+j the concatenation of the two assignments.\nFor two assignments a, b ∈ {0, 1}n we write a ≤ b if for every i, ai ≤ bi. A boolean function f : {0, 1}n → {0, 1} is monotone if for every two assignments a, b ∈ {0, 1}n, if a ≤ b then f(a) ≤ f(b). Recall that every monotone boolean function f has a unique representation as a reduced monotone DNF. That is, f = M1 ∨M2 ∨ · · · ∨Ms where each monomial Mi is an ANDs of input variables and for every monomial Mi there is a unique assignment a(i) ∈ {0, 1}n such that f(a(i)) = 1 and for every j ∈ [n] where a (i) j = 1 we have f(a(i)|xj=0) = 0. We call such assignment a minterm of the function f . Notice that every monotone DNF can be uniquely determined by its minterms.\nWe say that xi is relevant in f if f |xi=0 6≡ f |xi=1. Obviously, if f is monotone then xi is relevant in f if there is an assignment a such that f(a|xi=0) = 0 and f(a|xi=1) = 1. We say that a is a semiminterm of f if for every ai = 1 either f(a|xi=0) = 0 or xi is not relevant in f .\nFor two assignments a, b ∈ {0, 1}n we define the distance between a and b as wt(a+b) where wt is the Hamming weight and + is the bitwise exclusive or of assignments. The set B(a; d) is the set of all assignments that are of distance at most d from a ∈ {0, 1}n."
    }, {
      "heading" : "2.3 Symmetric and Nonsymmetric",
      "text" : "We say that a boolean function f is symmetric in xi and xj if for any ξ1, ξ2 ∈ {0, 1} we have f |xi=ξ1,xj=ξ2 ≡ f |xi=ξ2,xj=ξ1 . Obviously, this is equivalent to f |xi=0,xj=1 ≡ f |xi=1,xj=0. We say that f is nonsymmetric in xi and xj if it is not symmetric in xi and xj . This is equivalent to f |xi=0,xj=1 6≡ f |xi=1,xj=0. We now prove\nLemma 4. Let f be a monotone function. Then f is nonsymmetric in xi and xj if and only if there is a minterm a of f such that ai + aj = 1 (one is 0 and the other is 1) where f(a|xi=0,xj=1) 6= f(a|xi=1,xj=0).\nProof. Since f is nonsymmetric in xi and xj we have f |xi=0,xj=1 6≡ f |xi=1,xj=0 and therefore there is an assignment a′ such that f |xi=0,xj=1(a ′) 6= f |xi=1,xj=0(a ′). Suppose w.l.o.g. f |xi=0,xj=1(a ′) = 0 and f |xi=1,xj=0(a\n′) = 1. Take a minterm a ≤ a′ of f |xi=1,xj=0. Notice that ai = aj = 0. Otherwise we can flip them to 0 without changing the value of the function f |xi=1,xj=0 and then a is not a minterm. Then f |xi=1,xj=0(a) = 1 and since a ≤ a\n′, f |xi=0,xj=1(a) = 0. We now prove that b = a|xi=1,xj=0 is a minterm of f . Since b|xi=0 =\na|xi=0,xj=0 < a|xi=0,xj=1 we have f(b|xi=0) < f(a|xi=0,xj=1) = f |xi=0,xj=1(a) = 0 and therefore f(b|xi=0) = 0. For any bk = 1 where k 6= i, since a is a minterm for f |xi=1,xj=0, we have f(b|xk=0) = f |xi=1,xj=0(a|xk=0) = 0. Therefore b is a minterm of f .\nWe write xi ∼f xj when f is symmetric in xi and xj and call ∼f the symmetric relation of f . The following folklore result is proved for completeness\nLemma 5. The relation ∼f is an equivalence relation.\nProof. Obviously, xi ∼f xi and if xi ∼f xj then xj ∼f xi. Now if xi ∼f xj and xj ∼f xk then f |xi=ξ1,xj=ξ2,xk=ξ3 ≡ f |xi=ξ2,xj=ξ1,xk=ξ3 ≡ f |xi=ξ2,xj=ξ3,xk=ξ1 ≡ f |xi=ξ3,xj=ξ2,xk=ξ1 and therefore xi ∼f xk."
    }, {
      "heading" : "2.4 Properties of Boolean Halfspaces",
      "text" : "A Boolean Halfspace function is a boolean function f : {0, 1}n → {0, 1}, f = [w1x1+w2x2+ · · ·+wnxn ≥ u] where w1, . . . , wn, u are integers, defined as f(x1, . . . , xn) = 1 if w1x1 +w2x2 + · · ·+wnxn ≥ u and 0 otherwise. The numbers wi, i ∈ [n] are called the weights and u is called the threshold. The class HS is the class of all Boolean Halfspace functions. The class HSt is the class of all Boolean Halfspace functions with weights wi ∈ [t]0 and the\nclass HS[−t,t] is the class of all Boolean Halfspace functions with weights wi ∈ [−t, t]. The representation of the above Boolean Halfspaces are not unique. For example, [3x1 +2x2 ≥ 2] is equivalent to [x1 + x2 ≥ 1]. We will assume that\nThere is an assignment a ∈ {0, 1}n such that w1a1 + · · ·+ wnan = b (1)\nOtherwise we can replace b by the minimum integer w1a1+ · · ·+wnan where f(a) = 1 and get an equivalent function. Such a is called a strong assignment of f . If in addition a is a minterm then it is called a strong minterm.\nThe following lemma follows from the above definitions\nLemma 6. Let f ∈ HSt. We have\n1. If a is strong assignment of f then a is semiminterm of f .\n2. If all the variables in f are relevant then any semiminterm of f is a minterm of f .\nWe now prove\nLemma 7. Let f = [w1x1 + w2x2 + · · ·+ wnxn ≥ u] ∈ HSt. Then\n1. If w1 = w2 then f is symmetric in x1 and x2.\n2. If f is symmetric in x1 and x2 then there are w ′ 1 and w ′ 2 such that\n|w′1 −w ′ 2| ≤ 1 and f ≡ [w ′ 1x1 + w ′ 2x2 + w3x3 · · ·+ wnxn ≥ u] ∈ HSt.\nProof. If w1 = w2 then for any assignment z = (z1, z2, . . . , zn) we have w1z1+w2z2+· · ·+wnzn = w1z2+w2z1+· · ·+wnzn. Therefore, f(0, 1, x3, . . . , xn) ≡ f(1, 0, x3, . . . , xn).\nSuppose w1 > w2. It is enough to show that f ≡ g := [(w1−1)x1+(w2+ 1)x2 + w3x3 · · · + wnxn ≥ u]. Obviously, f(x) = g(x) when x1 = x2 = 1 or x1 = x2 = 0. If f(0, 1, x3, . . . , xn) ≡ f(1, 0, x3, . . . , xn) then w1 + w3x3 + w4x4+ · · ·+wnxn ≥ u if and only if w2+w3x3+w4x4+ · · ·+wnxn ≥ u and therefore w1+w3x3+w4x4+ · · ·+wnxn ≥ u if and only if (w1−1)+w3x3+ w4x4 + · · ·+wnxn ≥ u if and only if (w2 +1)+w3x3 +w4x4 + · · ·+wnxn ≥ u.\nWe now prove\nLemma 8. Let f ∈ HSt. Let a be any assignment such that f(a) = 1 and f(a|xi=0) = 0 for some i ∈ [n]. There is a strong assignment of f in B(a, 2t− 2).\nProof. Let f = [w1x1 + · · · + wnxn ≥ u]. Since f(a) = 1 and f |xi=0(a) = 0, ai = 1 and we have w1a1 +w2a2 + · · ·+wnan = u+u\n′ where t− 1 ≥ u′ ≥ 0. If u′ = 0 then a ∈ B(a, 2t − 2) is a strong assignment. So we may assume that u′ 6= 0.\nBy (1) there is an assignment b where w1b1 + w2b2 + · · · + wnbn = u. Therefore w1(b1 − a1) + w2(b2 − a2) + · · · + wn(bn − an) = −u\n′. Since wi(bi − ai) ∈ [−t, t], by Lemma 2 there is S ⊆ [n] of size at most 2t− 2 such that ∑\ni∈S wi(bi − ai) = −u ′. Therefore\nu = −u′ + (u+ u′) = ∑\ni∈S\nwi(bi − ai) + n ∑\ni=1\nwiai = ∑\ni∈S\nwibi + ∑\ni 6∈S\nwiai.\nThus the assignment c where ci = bi for i ∈ S and ci = ai for i 6∈ S is a strong assignment of f and c ∈ B(a, 2t− 2).\nThe following will be used to find the relevant variables\nLemma 9. Let f ∈ HSt. Suppose xk is relevant in f . Let a be any assignment such that ak = 1, f(a) = 1 and f(a|xj=0) = 0 for some j, k ∈ [n]. There is c ∈ B(a, 2t− 2) such that ck = 1, f(c) = 1 and f(c|xk=0) = 0.\nProof. Let f = [w1x1 + · · · + wnxn ≥ u]. Since f(a) = 1 and f(a|xj=0) = 0 we have aj = 1 and w1a1+w2a2+ · · ·+wnan = u+u\n′ where t− 1 ≥ u′ ≥ 0. Let b a minterm of f such that bk = 1. Since b is a minterm we have w1b1+w2b2+· · ·+wnbn = u+u\n′′ where t−1 ≥ u′′ ≥ 0 and since f(b|xk=0) = 0 we also have u′′ −wk < 0. If u\n′′ = u′ then we may take c = a. Therefore we may assume that u′′ 6= u′.\nHence ∑n i=1,i 6=k wi(bi − ai) = u ′′ − u′ ∈ [−t+1, t− 1]\\{0}. By Lemma 2\nthere is S ⊆ [n]\\{k} of size at most 2t−2 such that ∑ i∈S wi(bi−ai) = u ′′−u′. Therefore\nu+ u′′ = ∑\ni∈S\nwi(bi − ai) + n ∑\ni=1\nwiai = ∑\ni∈S\nwibi + ∑\ni 6∈S\nwiai.\nThus the assignment c where ci = bi for i ∈ S and ci = ai for i 6∈ S satisfies ck = ak = 1 and c ∈ B(a, 2t− 2). Since ∑n i=1,i 6=k wici = u+ u\n′′ − bk < u we have f(c|xk=0) = 0.\nThe following will be used to find the order of the weights\nLemma 10. Let f ∈ HSt be antisymmetric in x1 and x2. For any minterm a of f of weight at least 2 there is b ∈ B(a, 2t+1) such that b1 + b2 = 1 and f |x1=0,x2=1(b) 6= f |x1=1,x2=0(b).\nProof. Let f = [w1x1 + · · · + wnxn ≥ u]. Assume w.l.o.g w1 > w2. By Lemma 4 there is a minterm c = (1, 0, c3, . . . , cn) such that f(c) = 1 and f(0, 1, c3, . . . , cn) = 0. Then W1 := w1 + w3c3 + · · · + wncn = u + v where 0 ≤ v ≤ t − 1 and W2 := w2 + w3c3 + · · · + wncn = u − z where 1 ≤ z ≤ t − 1. In fact −z = v − w1 + w2. Since a is a minterm we have W3 := w1a1 + · · ·+wnan = u+ h where 0 ≤ h ≤ t− 1. It is now enough to find b ∈ B(a, 2t− 2) such that either\n1. b1 = 1, b2 = 0 and w1b1 + · · ·+ wnbn = u+ v, or\n2. b1 = 0, b2 = 1 and w1b1 + · · ·+ wnbn = u− z.\nThis is because if b1 = 1, b2 = 0 and w1b1 + · · · + wnbn = u + v (the other case is similar) then f(1, 0, b2, . . . , bn) = 1 and since w1 · 0 + w2 · 1 + w3 · a3 · · ·+ wnan = u+ v − w1 + w2 = u− z we have f(0, 1, b2, . . . , bn) = 0.\nWe now have four cases Case I. a1 = 1 and a2 = 0: ThenW1−W3 = w3(c3−a3)+· · ·+wn(cn−an) = v − h ∈ [−t+ 1, t − 1]\\{0}. By Lemma 2 there is S ⊆ [3, n] of size at most 2t− 1 such that ∑\ni∈S wi(ci − ai) = v − h. Therefore\nu+ v = v − h+W3 = ∑\ni∈S\nwi(ci − ai) + n ∑\ni=1\nwiai = ∑\ni∈S\nwici + n ∑\ni 6∈S\nwiai.\nNow define b to be bi = ci for i ∈ S and bi = ai for i 6∈ S. Since 1, 2 6∈ S b1 = a1 = 1 and b2 = a2 = 0. Since b ∈ B(a, 2t − 1) ⊂ B(a, 2t + 1) and b satisfies 1. the result follows for this case. Case II. a1 = 0 and a2 = 1: Since a is of weight at least 2, we may assume w.l.o.g that a3 = 1. Since a is a minterm f(a) = 1 and f(a|x3=0) = 0 and therefore for a′ = a|x3=0 we have W4 := w1a ′ 1 +w2a ′ 2 + · · ·+ wna ′ n = u− h ′ where 1 ≤ h′ ≤ t − 1. Then W2 − W4 = ∑n i=3 wi(ci − a ′ i) = h\n′ − z ∈ [−t + 1, t − 1]. By Lemma 2 there is S ⊆ [3, n] of size at most 2t − 1 such that ∑\ni∈S wi(ci − a ′ i) = h ′ − z. Therefore\nu− z = h′ − z +W4 = ∑\ni∈S\nwi(ci − a ′ i) +\nn ∑\ni=1\nwia ′ i =\n∑\ni∈S\nwici + n ∑\ni 6∈S\nwia ′ i.\nNow define b to be bi = ci for i ∈ S and bi = a ′ i for i 6∈ S. Since 1, 2 6∈ S b1 = a ′ 1 = 0 and b2 = a ′ 2 = 1. Since b ∈ B(a\n′, 2t − 1) ⊂ B(a, 2t + 1) and b satisfies 2. the result follows for this case. Case III. a1 = 1 and a2 = 1: Since a is a minterm f(a) = 1 and f(a|x1=0) = 0 and therefore for a′ = a|x1=0 we have W4 := w1a ′ 1 + w2a ′ 2 + · · ·+ wna ′ n = u− h′ where 1 ≤ h′ ≤ t− 1. We now proceed exactly as in Case II.\nCase IV. a1 = 0 and a2 = 0: Since a is of weight at least 2 we may assume w.l.o.g that a3 = 1. Since a is a minterm f(a) = 1 and f(a|x3=0) = 0 and therefore for a′ = a|x3=0 we have W4 := a ′ 1w1 + a ′ 2w2 + · · ·+ a ′ nwn = u− h ′ where 1 ≤ h′ ≤ t − 1. If f(a′|x2=1) = 0 then proceed as in Case II to get b ∈ B(a, 2t+1) that satisfies 2. If f(a′|x1=1) = 1 then proceed as in Case I. Now the case where f(a′|x2=1) = 1 and f(a\n′|x1=1) = 0 cannot happen since w1 > w2.\nThe following will be used for the non-adaptive algorithm\nLemma 11. Let f, g ∈ HSt be such that f 6⇒ g. For any minterm b of f there is c ∈ B(b, 8t3 +O(t2)) such that f(c) + g(c) = 1.\nProof. Let f = [w1x1 + · · · + wnxn ≥ u] and g = [w ′ 1x1 + · · · + w ′ nxn ≥ u ′]. Since f 6⇒ g, there is a′ ∈ {0, 1}n such that f(a′) = 1 and g(a′) = 0. Let a ≤ a′ be a minterm of f . Then f(a) = 1 and since a ≤ a′ we also have g(a) = 0. Therefore w1a1 + · · · + wnan = u + r where 0 ≤ r ≤ t − 1 and w′1a1 + · · · + w ′ nan = u\n′ − s for some integer s ≥ 1. Since b is a minterm of f we have w1b1 + · · · + wnbn = u + r\n′ where 0 ≤ r′ ≤ t − 1. If g(b) = 0 then take c = b. Otherwise, if for some bi = 1, g(b|xi=0) = 1 then take c = b|xi=0. Therefore we may assume that b is also a minterm of g. Thus w′1b1 + · · · + w ′ nbn = u+ s\n′ where 0 ≤ s′ ≤ t− 1. Consider the sequence Zi, i = 1, . . . , n + s − 1 where Zi = (wi(ai − bi), w ′ i(ai − bi)) for i = 1, . . . , n and Zi = (0, 1) for i = n+ 1, . . . , n + s − 1. Then n+s−1 ∑\ni=1\nZi = (r − r ′,−1− s′) ∈ [−t, t]2.\nBy Lemma 3 there is a set S ⊆ [n + s − 1] of size 8t3 + O(t2) such that ∑\ni∈S Zi = (r − r ′,−1 − s′). Therefore, there is a set T ⊆ [n] of size at\nmost 8t3 + O(t2) such that ∑ i∈T Zi = (r − r ′,−ℓ − 1 − s′) for some ℓ > 0. Therefore\n∑\ni∈T\nwi(ai − bi) = r − r ′ and\n∑\ni∈T\nw′i(ai − bi) = −ℓ− 1− s ′.\nDefine c such that ci = ai for i ∈ T and ci = bi for i 6∈ T . Then\nn ∑\ni=1\nwici = u+ r ≥ u and n ∑\ni=1\nw′ici = u ′ − ℓ− 1 < u′.\nTherefore f(c) = 1 and g(c) = 0. This gives the result."
    }, {
      "heading" : "3 Boolean Halfspace and Automata",
      "text" : "In this section we show that functions in HS[−t,t] has an automaton representation of poly(n, t) size.\nLemma 12. Let f1, f2, . . . , fk ∈ HS[−t,t] and g : {0, 1} k → {0, 1}. Then g(f1, . . . , fk) can be represented with an Automaton of size (2t) knk+1.\nProof. Let fi = [wi,1x1 + · · · + wi,nxn ≥ ui], i = 1, . . . , k. Define the following automaton: The alphabet of the automaton is {0, 1}. The states are S ⊆ [n]0 × [−tn, tn]\nk. The automaton has n + 1 levels. States in level i are connected only to states in level i + 1 for all i ∈ [n]0. We denote by Si the states in level i. We also have Si ⊆ {i} × [−tn, tn]\nk so the first entry of the state indicates the level that the state belongs to. The state (0, (0, 0, . . . , 0)) is the initial state and is the only state in level 0. That is S0 = {(0, (0, 0, . . . , 0))}. We now show how to connect states in level i to states in level i+1. Given a state s = (i, (W1,W2, . . . ,Wk)) in Si. Then the transition function for this state is\nδ((i, (W1,W2, . . . ,Wk)), 0) = (i+ 1, (W1,W2, . . . ,Wk))\nand\nδ((i, (W1,W2, . . . ,Wk)), 1) = (i+1, (W1+w1,i+1,W2+w2,i+1, . . . ,Wk+wk,i+1)).\nThe accept states (where the output of the automaton is 1) are all the states (n, (W1, . . . ,Wk)) where g([W1 ≥ u1], [W2 ≥ u2], . . . , [Wn ≥ un]) = 1. Here [Wi ≥ ui] = 1 if Wi ≥ ui and zero otherwise. All other states are nonaccept states (output 0).\nWe now claim that the above automaton is equivalent to g(f1, . . . , fk). The proof is by induction on n. The claim we want to prove is that the subautomaton that starts from state s = (i, (W1,W2, . . . ,Wk)) computes a function gs that is equivalent to the function g(f i 1, . . . , f i k) where f i j = [wj,i+1xi+1 + · · · + wj,nxn ≥ uj − Wj]. This immediately follows from the fact that\ngs|xi+1=0 ≡ gδ(s,0), and gs|xi+1=1 ≡ gδ(s,1).\nIt remains to prove the result for level n. The claim is true for the states at level n because\ng(fn1 , . . . , f n k ) = g([0 ≥ u1 −W1], . . . , [0 ≥ un −Wn])\n= g([W1 ≥ u1], [W2 ≥ u2], . . . , [Wn ≥ un]).\nThis completes the proof.\nNow the following will be used in the sequel\nLemma 13. Let f1, f2 ∈ HS[−t,t]. There is an algorithm that runs in time t2n3 and decides whether f1 ≡ f2. If f1 6≡ f2 then the algorithm finds an assignment a such that f1(a) 6= f2(a).\nProof. We build an automaton for f1 + f2. If there is no accept state then f1 ≡ f2. If there is, then any path from the start state to an accept state defines an assignment a such that f1(a) 6= f2(a)."
    }, {
      "heading" : "4 Two Rounds and Non-adaptive Algorithm",
      "text" : "In this section we give a two rounds algorithm for learning HSt that uses n O(t) membership queries. Let f = [w1x1+ . . .+wnxn ≥ u]. If there is a minterm of weight one then 0 ≤ u ≤ t and then all the minterms of f are of weight at most t. In this case we can find all the minterms in one round by asking all the assignments in B(0, t) (all other assignments gives 0), finding all the relevant variables and the antisymmetric variables and move to the second round. Therefore we may assume that all the minterms of f are of weight at least two.\nConsider the set\nAm = n ⋃\ni,j=0\nB(0i1n−i−j0j,m).\nwe now prove\nLemma 14. Let f ∈ HSt. The variable xk is relevant in f if and only if there is a ∈ A2t−2 such that ak = 1, a|xk=0 ∈ A2t−1 and f(a) 6= f(a|xk=0).\nProof. If xk is relevant in f then f 6≡ 0, 1 and therefore f(0 n) = 0 and f(1n) = 1. Therefore there is an element a in the following sequence\n0n, 0k−110n−k, 0k−1120n−k−1, . . . , 0k−11n−k+1, 0k−21n−k+2, . . . , 01n−1, 1n\nand j ∈ [n] such that f(a) = 1 and f(a|xj=0) = 0. Notice that ak = 1 and therefore by Lemma 9 there is c ∈ B(a, 2t − 2) such that ck = 1, f(c) = 1 and f(c|xk=0) = 0. Since c|xk=0 ∈ B(a, 2t− 1), the result follows.\nTherefore from the assignments in A2t−1 one can determine the relevant variables in f . This implies that we may assume w.l.o.g that all the variables are relevant. This can be done by just ignoring all the nonrelevant variables and projecting the relevant variables to new distinct variables y1, . . . , ym.\nWe now show\nLemma 15. If all the variables in f ∈ HSt are relevant then there is a strong minterm a ∈ A2t−2 of f .\nProof. Follows from Lemma 8 and Lemma 6.\nLemma 16. Let f ∈ HSt and suppose all the variables in f are relevant. Suppose f is antisymmetric in xj and xk. There is b ∈ B(a, 4t − 1) such that b1 + b2 = 1 and f |xj=0,xk=1(b) 6= f |xj=1,xk=0(b).\nProof. By Lemma 15 there is a minterm a ∈ A2t−2 of f . Since wt(a) > 1, by Lemma 10 there is b ∈ B(a, 2t−1) such that b1+b2 = 1 and f |xj=0,xk=1(b) 6= f |xj=1,xk=0(b). Since b ∈ B(a, 2t+ 1) ⊆ A4t−1 the result follows.\nTherefore from the assignments in A4t−3 one can find a permutation φ of the variables in f such that fφ = [w′1x1 + w ′ 2x2 + · · · + w ′ nxn ≥ u] and w′1 ≤ w ′ 2 ≤ · · · ≤ w ′ n.\nThis completes the first round. We now may assume w.l.o.g that f = [w1x1 + · · · + wnxn ≥ u] and 1 ≤ w1 ≤ w2 ≤ · · · ≤ wn ≤ t and all the variables are relevant. The goal of the second round is to find wi ∈ [1, t] and u ∈ [0, nt]. Since we know that 1 ≤ w1 ≤ w2 ≤ · · · ≤ wn ≤ t we have\n(\nn+ t− 1\nt− 1\n)\nnt ≤ nt+1\nchoices. That is at most nt+1 possible functions in HSt. For every two such functions f1, f2 we use Lemma 13 to find out if f1 ≡ f2 and if not to find an assignment a such that f1(a) 6= f2(a). This takes time\n(\nnt+1\n2\n)\nt2n3 ≤ n2t+7.\nLet B the set of all such assignments. Then |B| ≤ n2t+2. In the second round we ask membership queries with all the assignments in B.\nNow notice that if f1(a) 6= f2(a) then either f(a) 6= f1(a) or f(a) 6= f2(a). This shows that the assignments in B eliminates all the functions that are not equivalent to the target and all the remaining functions are equivalent to the target.\nNow using Lemma 11 one can replace the set B by B(b, 8t3 +O(t2)) for any minterm b of f . This change the algorithm to a non-adaptive algorithm."
    } ],
    "references" : [ {
      "title" : "Combinatorial Search",
      "author" : [ "M. Aigner" ],
      "venue" : "Wiley Teubner Series on Applicable Theory in Computer Science. Teubner, Stuttgart",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 1988
    }, {
      "title" : "Queries and Concept Learning",
      "author" : [ "D. Angluin" ],
      "venue" : "Machine Learning",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 1987
    }, {
      "title" : "Learning a Hidden Subgraph",
      "author" : [ "A. Alon", "V. Asodi" ],
      "venue" : "SIAM J. Discrete Math",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2005
    }, {
      "title" : "Learning Threshold Functions with Small Weights Using Membership Queries",
      "author" : [ "E. Abboud", "N. Agha", "N.H. Bshouty", "N. Radwan", "F. Saleh" ],
      "venue" : "COLT",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 1999
    }, {
      "title" : "Learning a Hidden Matching",
      "author" : [ "N. Alon", "R. Beigel", "S. Kasif", "S. Rudich", "B. Sudakov" ],
      "venue" : "SIAM J. Comput",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2004
    }, {
      "title" : "Learning a Hidden Hypergraph",
      "author" : [ "D. Angluin", "J. Chen" ],
      "venue" : "Journal of Machine Learning Research",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2006
    }, {
      "title" : "Learning a hidden graph using O(log n) queries per edge",
      "author" : [ "D. Angluin", "J. Chen" ],
      "venue" : "J. Comput. Syst. Sci",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2008
    }, {
      "title" : "An optimal procedure for gap closing in whole genome shotgun sequencing",
      "author" : [ "R. Beigel", "N. Alon", "S. Kasif", "M. Serkan Apaydin", "L. Fortnow" ],
      "venue" : "RECOMB",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 2001
    }, {
      "title" : "Multiple Access Channels: Theory and Practice",
      "author" : [ "E. Biglieri", "L. Gyorfi" ],
      "venue" : null,
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2007
    }, {
      "title" : "Optimal query complexity bounds for finding graphs",
      "author" : [ "S-S. Choi", "J.H. Kim" ],
      "venue" : "Artif. Intell",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2010
    }, {
      "title" : "Reconstructing a Hamiltonian Cycle by Querying the Graph: Application to DNA Physical Mapping",
      "author" : [ "V. Grebinski", "G. Kucherov" ],
      "venue" : "Discrete Applied Mathematics",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 1998
    }, {
      "title" : "Generalized teaching dimensions and the query complexity of learning",
      "author" : [ "T. Hegedüs" ],
      "venue" : "Proceedings of the 8th Annual ACM Conference on Computational Learning Theory (COLT’95). ACM Press New York,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 1995
    }, {
      "title" : "Lower Bounds for the Complexity of Learning Half-Spaces with Membership Queries",
      "author" : [ "V.N. Shevchenko", "N. Yu. Zolotykh" ],
      "venue" : "ALT",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 1998
    }, {
      "title" : "Deciphering threshold functions of k-valued logic. Discrete Analysis and Operations Research. Novosibirsk",
      "author" : [ "N.Yu. Zolotykh", "V.N. Shevchenko" ],
      "venue" : "Operations Research and Discrete Analysis. Kluwer Ac. Publ. Netherlands",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 1995
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : "The best known algorithm for this problem is an adaptive algorithm that asks n ) membership queries where the best lower bound for the number of membership queries is n [4].",
      "startOffset" : 169,
      "endOffset" : 172
    }, {
      "referenceID" : 1,
      "context" : "We study the problem of learnability of boolean halfspace functions from membership queries [2, 1].",
      "startOffset" : 92,
      "endOffset" : 98
    }, {
      "referenceID" : 0,
      "context" : "We study the problem of learnability of boolean halfspace functions from membership queries [2, 1].",
      "startOffset" : 92,
      "endOffset" : 98
    }, {
      "referenceID" : 1,
      "context" : "In the membership query model [2, 1] the learning algorithm has access to a membership oracle Of , for some target function f , that receives an assignment a ∈ {0, 1} n and returns f(a).",
      "startOffset" : 30,
      "endOffset" : 36
    }, {
      "referenceID" : 0,
      "context" : "In the membership query model [2, 1] the learning algorithm has access to a membership oracle Of , for some target function f , that receives an assignment a ∈ {0, 1} n and returns f(a).",
      "startOffset" : 30,
      "endOffset" : 36
    }, {
      "referenceID" : 7,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 197,
      "endOffset" : 207
    }, {
      "referenceID" : 4,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 197,
      "endOffset" : 207
    }, {
      "referenceID" : 9,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 197,
      "endOffset" : 207
    }, {
      "referenceID" : 10,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 285,
      "endOffset" : 289
    }, {
      "referenceID" : 9,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 345,
      "endOffset" : 349
    }, {
      "referenceID" : 2,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 377,
      "endOffset" : 386
    }, {
      "referenceID" : 5,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 377,
      "endOffset" : 386
    }, {
      "referenceID" : 6,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 377,
      "endOffset" : 386
    }, {
      "referenceID" : 8,
      "context" : "The problem of learning classes from membership queries only were motivated from many problems in different areas such as computational biology that arises in whole-genome (DNA) shotgun sequencing [8, 5, 10], DNA library screening [13], multiplex PCR method of genome physical mapping [11], linkage discovery problems of artificial intelligence [10], chemical reaction problem [3, 6, 7] and signature coding problem for the multiple access adder channels [9].",
      "startOffset" : 455,
      "endOffset" : 458
    }, {
      "referenceID" : 3,
      "context" : "The best known algorithm for this problem is an adaptive algorithm that asks nO(t ) membership queries where the best lower bound for the number of membership queries is n [4].",
      "startOffset" : 172,
      "endOffset" : 175
    }, {
      "referenceID" : 3,
      "context" : "In [4] Abboud et.",
      "startOffset" : 3,
      "endOffset" : 6
    }, {
      "referenceID" : 12,
      "context" : "Shevchenko and Zolotykh [14] studied halfspace function over the domain {0, 1, .",
      "startOffset" : 24,
      "endOffset" : 28
    }, {
      "referenceID" : 11,
      "context" : "Hegedüs [12] prove the upper bound O(log k/ log log n).",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 13,
      "context" : "For fixed n Shevchenko and Zolotykh [15] gave a polynomial time algorithm (in log k) for this class.",
      "startOffset" : 36,
      "endOffset" : 40
    } ],
    "year" : 2014,
    "abstractText" : "We consider the problem of proper learning a Boolean Halfspace with integer weights {0, 1, . . . , t} from membership queries only. The best known algorithm for this problem is an adaptive algorithm that asks n ) membership queries where the best lower bound for the number of membership queries is n [4]. In this paper we close this gap and give an adaptive proper learning algorithm with two rounds that asks n membership queries. We also give a non-adaptive proper learning algorithm that asks n ) membership queries.",
    "creator" : "LaTeX with hyperref package"
  }
}