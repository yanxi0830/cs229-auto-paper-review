{
  "name" : "1604.03348.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Optimal Margin Distribution Machine",
    "authors" : [ "Teng Zhang", "Zhi-Hua Zhou" ],
    "emails" : [ "zhouzh@lamda.nju.edu.cn" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n60 4.\n03 34\n8v 1\n[ cs\n.L G\n] 1\n2 A\nSupport vector machine (SVM) has been one of the most popular learning algorithms, with the central idea of maximizing the minimum margin, i.e., the smallest distance from the instances to the classification boundary. Recent theoretical results, however, disclosed that maximizing the minimum margin does not necessarily lead to better generalization performances, and instead, the margin distribution has been proven to be more crucial. Based on this idea, we propose a new method, named Optimal margin Distribution Machine (ODM), which tries to achieve a better generalization performance by optimizing the margin distribution. We characterize the margin distribution by the first- and second-order statistics, i.e., the margin mean and variance. The proposed method is a general learning approach which can be used in any place where SVM can be applied, and their superiority is verified both theoretically and empirically in this paper.\nKeywords: margin, margin distribution, minimum margin, classification"
    }, {
      "heading" : "1. Introduction",
      "text" : "Support Vector Machine (SVM) (Cortes and Vapnik, 1995; Vapnik, 1995) has always been one of the most successful learning algorithms. The basic idea is to identify a classification boundary having a large margin for all the training examples, and the resultant optimization can be accomplished by a quadratic programming (QP) problem. Although SVMs have a long history of literatures, there are still great efforts (Lacoste-julien et al., 2013;\n∗Email: zhouzh@lamda.nju.edu.cn\nPreprint submitted to Artificial Intelligence Journal April 13, 2016\nCotter et al., 2013; Takac et al., 2013; Jose et al., 2013; Do and Alexandre, 2013) on improving SVMs.\nIt is well known that SVMs can be viewed as a learning approach trying to maximize the minimum margin of training examples, i.e., the smallest distance from the examples to the classification boundary, and the margin theory (Vapnik, 1995) provided a good support to the generalization performance of SVMs. It is noteworthy that the margin theory not only plays an important role for SVMs, but also has been extended to interpret the good generalization of many other learning approaches, such as AdaBoost (Freund and Schapire, 1995), a major representative of ensemble methods (Zhou, 2012). Specifically, Schapire et al. (Schapire et al., 1998) first suggested margin theory to explain the phenomenon that AdaBoost seems resistant to overfitting; soon after, Breiman (Breiman, 1999) indicated that the minimum margin is crucial and developed a boosting-style algorithm, named Arc-gv, which is able to maximize the minimum margin but with a poor generalization performance. Later, Reyzin et al. (Reyzin and Schapire, 2006) found that although Arc-gv tends to produce larger minimum margin, it suffers from a poor margin distribution; they conjectured that the margin distribution, rather than the minimum margin, is more crucial to the generalization performance. Such a conjecture has been theoretically studied (Wang et al., 2011; Gao and Zhou, 2013), and it was recently proven by Gao and Zhou (Gao and Zhou, 2013). Moreover, it was disclosed that rather than simply considering a single-point margin, both the margin mean and variance are important (Gao and Zhou, 2013; Zhou, 2014). All these theoretical studies, however, focused on boosting-style algorithms, whereas the influence of the margin distribution for SVMs in practice has not been well exploited.\nIn this paper, we propose a new method, named Optimal margin Distribution Machine (ODM), which tries to achieve strong generalization performance by optimizing the margin distribution. Inspired by the recent theoretical result (Gao and Zhou, 2013), we characterize the margin distribution by the first- and second-order statistics, and try to maximize the margin mean and minimize the margin variance simultaneously. For optimization, we propose a dual coordinate descent method for kernel ODM, and a stochastic gradient descent with variance reduction for large scale linear kernel ODM. Comprehensive experiments on thirty two regular scale data sets and ten large scale data sets show the superiority of our method to SVM and some other state-of-the-art methods, verifying that the margin distribution is more\ncrucial for SVM-style learning approaches than minimum margin. A preliminary version of this work appeared in a conference paper (Zhang and Zhou, 2014). Compared with the original version, the new approach has a simpler formulation and is more comprehensible. In addition, it avoids the operation of matrix inverse, so it can be more efficient when nonlinear kernels are applied. We also give a new theoretical analysis for the proposed algorithm, and present better empirical performance. The preliminary version was called LDM (large margin distribution machine), but it is not proper to call a better margin distribution as a “larger” one; thus we now call it ODM (optimal margin distribution learning machine), and the algorithm described in (Zhang and Zhou, 2014) is called as ODML in this paper.\nThe rest of this paper is organized as follows. Section 2 introduces some preliminaries. Section 3 and 4 present the formulation and optimization of ODML and ODM respectively. Section 5 present the theoretical analysis. Section 6 reports on our experiments. Section 7 discusses about some related works. Finally, Section 8 concludes."
    }, {
      "heading" : "2. Preliminaries",
      "text" : "We denote by X ∈ Rd the instance space and Y = {+1,−1} the label set. Let D be an unknown (underlying) distribution over X ×Y . A training set of size m\nS = {(x1, y1), (x2, y2), . . . , (xm, ym)},\nis drawn identically and independently (i.i.d.) according to the distribution D. Our goal is to learn a function which is used to predict the labels for future unseen instances.\nFor SVMs, f is regarded as a linear model, i.e., f(x) = w⊤φ(x) where w is a linear predictor, φ(x) is a feature mapping of x induced by some kernel k, i.e., k(xi,xj) = φ(xi)\n⊤φ(xj). According to (Cortes and Vapnik, 1995; Vapnik, 1995), the margin of instance (xi, yi) is formulated as\nγi = yiw ⊤φ(xi), ∀i = 1, . . . , m. (1)\nIt can be found that in separable cases where the training examples can be separated with the zero error, all the γi will be non-negative. By scaling it with 1/‖w‖, we can get the geometric distance from (xi, yi) to w ⊤φ(x),\ni.e.,\nγ̂i = yi w⊤\n‖w‖ φ(xi), ∀i = 1, . . . , m.\nFrom (Cristianini and Shawe-Taylor, 2000), it is shown that SVM with hardmargin (or Hard-margin SVM) is regarded as the maximization of the minimum distance,\nmax w γ̂\ns.t. yi w⊤\n‖w‖ φ(xi) ≥ γ̂, i = 1, . . . , m.\nIt can be rewritten as\nmax w\nγ\n‖w‖\ns.t. yiw ⊤φ(xi) ≥ γ, i = 1, . . . , m.\nSince the value of γ doesn’t have influence on the optimization, we can simply set it as 1. Note that maximizing 1/‖w‖ is equivalent to minimizing ‖w‖2/2, we can get the classic formulation of Hard-margin SVM as follows:\nmin w\n1 2 w⊤w\ns.t. yiw ⊤φ(xi) ≥ 1, i = 1, . . . , m.\nIn non-separable cases where the training examples cannot be separated with the zero error, SVM with soft-margin (or Soft-margin SVM) is posed,\nmin w,ξi\n1 2 w⊤w + C m\nm ∑\ni=1\nξi\ns.t. yiw ⊤φ(xi) ≥ 1− ξi,\nξi ≥ 0, i = 1, . . . , m.\n(2)\nwhere ξi = [ξ1, . . . , ξm] ⊤ are slack variables which measure the losses of instances, and C is a trading-off parameter. There exists a constant C̄ such that (2) can be equivalently reformulated as,\nmax w\nγ0 − C̄\nm\n∑m\ni=1 ξi\ns.t. γi ≥ γ0 − ξi,\nξi ≥ 0, i = 1, . . . , m.\nwhere γ0 is a relaxed minimum margin, and C̄ is the trading-off parameter. Note that γ0 indeed characterizes the top-pminimum margin (Gao and Zhou, 2013); hence, SVMs (with both hard-margin and soft-margin) consider only a single-point margin and have not exploited the whole margin distribution."
    }, {
      "heading" : "3. Formulation",
      "text" : "The two most straightforward statistics for characterizing the margin distribution are the first- and second-order statistics, that is, the mean and the variance of the margin. Formally, denote X as the matrix whose i-th column is φ(xi), i.e., X = [φ(x1), . . . , φ(xm)], y = [y1, . . . , ym]\n⊤ is a column vector, and Y is a m×m diagonal matrix with y1, . . . , ym as the diagonal elements. According to the definition in (1), the margin mean is\nγ̄ = 1\nm\nm ∑\ni=1\nyiw ⊤φ(xi) =\n1\nm (Xy)⊤w, (3)\nand the margin variance is\nγ̂ = 1\nm\nm ∑\ni=1\n(yiw ⊤φ(xi)− γ̄) 2\n= 1\nm w⊤\nm ∑\ni=1\nφ(xi)φ(xi) ⊤w −\n2\nm\nm ∑\ni=1\nyiw ⊤φ(xi)γ̄ + γ̄ 2\n= 1\nm w⊤XX⊤w −\n1\nm2 w⊤Xyy⊤X⊤w\n= w⊤X mI − yy⊤\nm2 X⊤w\n(4)\nwhere I is the identity matrix. Inspired by the recent theoretical result (Gao and Zhou, 2013), we attempt to maximize the margin mean and minimize the margin variance simultaneously.\n3.1. ODML\nFirst consider a simpler way, i.e., adding the margin mean γ̄ and the margin variance γ̂ to the objective function of SVM explicitly. Then in the separable cases where the training examples can be separated with the zero\nerror, the maximization of the margin mean and the minimization of the margin variance leads to the following hard-margin ODML,\nmin w\n1 2 w⊤w + λ1γ̂ − λ2γ̄\ns.t. yiw ⊤φ(xi) ≥ 1, i = 1, . . . , m,\nwhere λ1 and λ2 are the parameters for trading-off the margin variance, the margin mean and the model complexity. It’s evident that the hard-margin ODML subsumes the hard-margin SVM when λ1 and λ2 equal 0.\nFor the non-separable cases, similar to soft-margin SVM, the soft-margin ODML leads to\nmin w,ξi\n1 2 w⊤w + λ1γ̂ − λ2γ̄ + C m\nm ∑\ni=1\nξi\ns.t. yiw ⊤φ(xi) ≥ 1− ξi,\nξi ≥ 0, i = 1, . . . , m.\n(5)\nSimilarly, soft-margin ODML subsumes the soft-margin SVM if λ1 and λ2 both equal 0. Because the soft-margin SVM often performs much better than the hard-margin one, in the following we will focus on soft-margin ODML and if without clarification, ODML is referred to the soft-margin ODML."
    }, {
      "heading" : "3.2. ODM",
      "text" : "The idea of ODML is quite straightforward, however, the final formulation is a little complex. In this section, we try to propose a simpler one.\nNote that SVM set the minimum margin as 1 by scaling ‖w‖, following the similar way, we can also fix the margin mean as 1. Then the deviation of the margin of (xi, yi) to the margin mean is |yiw\n⊤φ(xi)− 1|. By minimizing the margin variance, we arrive at the following formulation,\nmin w,ξi,ǫi\n1 2 w⊤w + C m\nm ∑\ni=1\n(ξ2i + ǫ 2 i )\ns.t. yiw ⊤φ(xi) ≥ 1− ξi,\nyiw ⊤φ(xi) ≤ 1 + ǫi, i = 1, . . . , m.\n(6)\nSince the margin of (xi, yi) is either smaller or greater than the margin mean, so at most one of ξi and ǫi can be positive. In addition, if one is positive, the\nother must be zero (otherwise if it’s negative, we can set it as zero without violating any constraint but decrease the objective function value), so the second term of the objective function is the margin variance.\nThe hyperplane yiw ⊤φ(xi) = 1 divides the space into two subspaces. For each example, no matter which space it lies in, it will suffer a loss which is quadratic with the deviation. However, the examples lie in the space corresponding to yiw\n⊤φ(xi) < 1 are much easier to be misclassified than the other. So it is more reasonable to set different weights for the loss of examples in different spaces, i.e., the second term of (6) can be modified as\n1\nm\nm ∑\ni=1\n(C1ξ 2 i + C2ǫ 2 i ),\nwhere C1 and C2 are the trading-off parameters. According to the representer theorem (Schölkopf and Smola, 2001), the optimal solution will be spanned by the support vectors. Unfortunately, for ODM, almost all training examples are support vectors. To make the solution sparse, we introduce a D-insensitive loss like SVR, i.e., the examples whose deviation is smaller than D are tolerated and only those whose deviation is larger than D will suffer a loss. Finally, we obtain the formulation of ODM,\nmin w,ξi,ǫi\n1 2 w⊤w + 1 m\nm ∑\ni=1\n(C1ξ 2 i + C2ǫ 2 i )\ns.t. yiw ⊤φ(xi) ≥ 1−D − ξi,\nyiw ⊤φ(xi) ≤ 1 +D + ǫi, i = 1, . . . , m.\n(7)\nwhere C1 and C2 are described previously, D is a parameter for controling the number of support vectors (sparsity of the solution)."
    }, {
      "heading" : "4. Optimization",
      "text" : "We first propose a dual coordinate descent method for kernel ODML and ODM, and then propose a stochastic gradient descent with variance reduction for large scale linear kernel ODML and ODM.\n4.1. ODMdcd In this section we show that the dual of kernel ODML and ODM are both convex quadratic optimization with only simple decoupled box constraints, and then present a dual coordinate descent method ODMdcd to solve them uniformly.\n4.1.1. Kernel ODML\nBy substituting (3)-(4), (5) leads to the following quadratic programming problem,\nmin w,ξ\n1 2 w⊤w +w⊤X\nλ1(mI − yy ⊤)\nm2 X⊤w − λ2 m (Xy)⊤w + C m e⊤ξ\ns.t. Y X⊤w ≥ e− ξ,\nξ ≥ 0.\n(8)\nwhere e stands for the all-one vector. Introduce the lagrange multipliers α ≥ 0 and β ≥ 0 for the first and the second constraints respectively, the Lagrangian of (8) leads to\nL(w, ξ,α,β) = 1\n2 w⊤w +w⊤X\nλ1(mI − yy ⊤)\nm2 X⊤w − λ2 m (Xy)⊤w\n+ C\nm e⊤ξ −α⊤(Y X⊤w − e+ ξ)− β⊤ξ\n= 1\n2 w⊤Qw −w⊤XY\n(\nλ2 m e+α\n)\n+α⊤e\n+ ξ⊤ ( C\nm e−α− β\n) (9)\nwhereQ = I+X 2λ1(mI−yy ⊤)\nm2 X⊤. By setting the partial derivations of {w, ξ}\nto zero, we have\n∂L ∂w = Qw −XY\n(\nλ2 m e+α\n)\n=⇒ w = Q−1XY\n(\nλ2 m e+α\n)\n, (10)\n∂L ∂ξ = C m e−α− β =⇒ 0 ≤ α ≤ C m e. (11)\nBy substituting (10) and (11) into (9), the dual of (8) can be cast as:\nmin α\nf(α) = 1\n2\n(\nλ2 m e+α\n)⊤\nY X⊤Q−1XY\n(\nλ2 m e+α\n)\n− e⊤α\ns.t. 0 ≤ α ≤ C\nm e.\n(12)\nNote that the dimension of Q depends on the feature mapping φ(x) and may not be calculated if φ(x) maps an instance into an infinite dimension space. Fortunately, X⊤Q−1X is a m×m square matrix, next we show how to calculate this matrix.\nLemma 1. For any matrix X and A, it holds that (I + XAX⊤)−1 = I −X(A−1 +X⊤X)−1X⊤.\nProof. By multiplying the right side with I +XAX⊤, we have\n(I −X(A−1 +X⊤X)−1X⊤)(I +XAX⊤)\n= I −X(A−1 +X⊤X)−1X⊤ +XAX⊤ −X(A−1 +X⊤X)−1X⊤XAX⊤\n= I −X(A−1 +X⊤X)−1X⊤ +XAX⊤\n−X(A−1 +X⊤X)−1(X⊤X +A−1 −A−1)AX⊤\n= I −X(A−1 +X⊤X)−1X⊤ +XAX⊤ −XAX⊤\n+X(A−1 +X⊤X)−1X⊤\n= I\nIt is shown that\n(I +XAX⊤)−1 = I −X(A−1 +X⊤X)−1X⊤.\nAccording to Lemma 1, we have\nQ−1X = (I −X(A−1 +X⊤X)−1X⊤)X\n= X(I − (A−1 +G)−1G) = X(I − (A−1 +G)−1(A−1 +G−A−1)) = X(I − I + (A−1 +G)−1A−1) = X(I +AG)−1\n(13)\nwhere A = 2λ1(mI−yy ⊤)\nm2 and G = X⊤X is the kernel matrix. Then\nX⊤Q−1X = G(I +AG)−1.\nBy denoting H = Y G(I +AG)−1Y , the objective function of (12) can be written as\nf(α) = 1\n2\n(\nλ2 m e+α\n)⊤\nH\n(\nλ2 m e+α\n)\n− e⊤α\n= 1\n2 α⊤Hα+ λ2 m e⊤Hα− e⊤α+ const\n= 1\n2 α⊤Hα+\n(\nλ2 m He− e\n)⊤\nα+ const\nNegelect the const term which doesn’t have influence on the optimization, we arrive at the final formulation of the dual kernel ODML,\nmin α\n1 2 α⊤Hα+\n(\nλ2 m He− e\n)⊤\nα\ns.t. 0 ≤ α ≤ C\nm e.\n(14)\nFor prediction, according to (10) and (13), one can obtain the coefficients w from the optimal α∗ as\nw = X(I +AG)−1Y\n(\nλ2 m e+α∗ ) = Xθ,\nwhere θ = (I +AG)−1Y (λ2 m e + α∗). Hence for testing instance z, its label can be obtained by\nsgn ( w⊤φ(z) ) = sgn\n(\nm ∑\ni=1\nθik(xi, z)\n)\n."
    }, {
      "heading" : "4.1.2. Kernel ODM",
      "text" : "Introduce the lagrange multipliers ζ ≥ 0 and β ≥ 0 for the two constraints respectively, the Lagrangian of (7) leads to\nL(w, ξ, ǫ, ζ,β) = 1\n2 w⊤w + C1 m ξ⊤ξ + C2 m ǫ⊤ǫ− ζ⊤(Y X⊤w − (1−D)e+ ξ)\n+ β⊤(Y X⊤w − (1 +D)e− ξ).\n(15)\nBy setting the partial derivations of w, ξ, ǫ to zero, we have\n∂L ∂w = w −XY ζ +XY β =⇒ w = XY (ζ − β) (16)\n∂L ∂ξ = 2C1 m ξ − ζ =⇒ ξ = m 2C1 ζ (17) ∂L ∂ǫ = 2C2 m ǫ− β =⇒ ǫ = m 2C2 β (18)\nBy substituting (16), (17) and (18) into (15), we have\nL(ζ,β) = − 1\n2 (ζ − β)⊤Y X⊤XY (ζ − β) + C1 m\nm2\n4C21 ζ⊤ζ + C2 m\nm2\n4C22 β⊤β\n− m\n2C1 ζ⊤ζ −\nm\n2C2 β⊤β + (1−D)ζ⊤e− (1 +D)β⊤e\n= − 1\n2 (ζ − β)⊤Q(ζ − β)−\nm\n4C1 ζ⊤ζ −\nm\n4C2 β⊤β\n+ (1−D)ζ⊤e− (1 +D)β⊤e\nwhere Q = Y X⊤XY . Denote α⊤ = [ζ⊤,β⊤], then ζ = [I, 0]α, β = [0, I]α and ζ − β = [I,−I]α. The Lagrangian can be rewritten as\nL(ζ,β) = − 1\n2 α⊤[I,−I]⊤Q[I,−I]α−\nm\n4C1 α⊤[I, 0]⊤[I, 0]α\n− m\n4C2 α⊤[0, I]⊤[0, I]α+ (1−D)e⊤[I, 0]α− (1 +D)e⊤[0, I]α\n= − 1 2 α⊤ [ Q −Q −Q Q ] α− 1 2 α⊤ [ m 2C1 I 0\n0 m 2C2 I\n]\nα+\n[\n(1−D)e −(1 +D)e\n]⊤\nα\nwhere e stands for the all-one vector. Thus the dual of (7) can be cast as:\nmin α\n1 2 α⊤ [ Q+ m 2C1 I −Q\n−Q Q+ m 2C2 I\n]\nα+\n[\n(D − 1)e (D + 1)e\n]⊤\nα\ns.t. α ≥ 0.\n(19)\nFor prediction, according to (16), one can obtain the coefficients w from the optimal α∗ as\nw = XY (ζ − β) = XY [I,−I]α∗ = Xθ,\nwhere θ = Y [I,−I]α∗. Hence for testing instance z, its label can be obtained by\nsgn ( w⊤φ(z) ) = sgn\n(\nm ∑\ni=1\nθik(xi, z)\n)\n."
    }, {
      "heading" : "4.1.3. Dual Coordinate Descent",
      "text" : "Note that (14) and (19) are both the special cases of the following form, which has convex quadratic objective function and simple decoupled box constraints,\nmin α\nf(α) = 1\n2 α⊤Hα+ q⊤α\ns.t. 0 ≤ α ≤ u.\nwhere u = ∞ for ODM. As suggested by (Yuan et al., 2012), it can be efficiently solved by the dual coordinate descent method. In dual coordinate descent method (Hsieh et al., 2008), one of the variables is selected to minimize while the other variables are kept as constants at each iteration, and a closed-form solution can be achieved at each iteration. Specifically, to minimize αi by keeping the other αj 6=i’s as constants, one needs to solve the following subproblem,\nmin t f(α+ tei)\ns.t. 0 ≤ αi + t ≤ ui, (20)\nwhere ei denotes the vector with 1 in the i-th coordinate and 0’s elsewhere. Let H = [hij ]i,j=1,...,m, we have\nf(α+ tei) = 1\n2 hiit\n2 + [∇f(α)]it + f(α),\nwhere [∇f(α)]i is the i-th component of the gradient ∇f(α). Note that f(α) is independent of t and thus can be dropped. Considering that f(α + tei) is a simple quadratic function of t, and further note the box constraint 0 ≤ αi ≤ ui, the minimizer of (20) leads to a closed-form solution,\nαnewi = min\n(\nmax\n(\nαi − [∇f(α)]i\nhii , 0\n)\n, ui\n)\n.\nAlgorithm 1 summarizes the pseudo-code of ODMdcd for kernel ODM L and ODM.\n4.2. ODMsvrg In section 4.1.3, the proposed method can efficiently deal with kernel ODML and ODM. However, the inherent computational cost for the kernel matrix takes O(m2) time, which might be computational prohibitive for\nAlgorithm 1 ODMdcd Input: Data set X. Output: α. Initialize α = 0, calculate H and q. while α not converge do for i = 1, . . .m do [∇f(α)]i ← [Hα+ q]i.\nαi ← min ( max ( αi − [∇f(α)]i hii , 0 ) , ui ) .\nend for\nend while\nlarge scale problems. To make them more useful, in the following, we present a fast linear kernel ODML and ODM for large scale problems by adopting the stochastic gradient descent with variance reduction (SVRG) (Polyak and Juditsky, 1992; Johnson and Zhang, 2013).\nFor linear kernel ODML, (5) can be reformulated as the following form,\nmin w\nfL(w) = 1\n2 w⊤w + λ1 m w⊤XX⊤w − λ1 m2 w⊤Xyy⊤X⊤w\n− λ2 m (Xy)⊤w + C m\nm ∑\ni=1\nmax{0, 1− yiw ⊤xi},\n(21)\nwhere X = [x1, . . . ,xm], y = [y1, . . . , ym] ⊤ is a column vector. For linear kernel ODM, (7) can be reformulated as the following form,\nmin w\nfO(w) = 1\n2 w⊤w + C1 m\nm ∑\ni=1\nmax{0, 1−D − yiw ⊤xi} 2\n+ C2 m\nm ∑\ni=1\nmax{0, yiw ⊤xi − 1−D} 2.\n(22)\nFor large scale problems, computing the gradient of (21) and (22) is expensive because its computation involves all the training examples. Stochastic gradient descent (SGD) works by computing a noisy unbiased estimation of the gradient via sampling a subset of the training examples. Theoretically, when the objective is convex, it can be shown that in expectation, SGD converges to the global optimal solution (Kushner and Yin, 2003; Bottou, 2010). During the past decade, SGD has been applied to various\nmachine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).\nThe following theorem presents an approach to obtain an unbiased estimation of the gradient ∇fL(w) and ∇fO(w).\nTheorem 1. If two examples (xi, yi) and (xj, yj) are randomly sampled from the training set independently, then\n∇fL(w,xi,xj) = w + 2λ1xix ⊤ i w − 2λ1yiyjxix ⊤ j w − λ2yixi\n− CyixiI(i ∈ I1) (23)\nand\n∇fO(w,xi) = w + 2C1(yiw ⊤xi +D − 1)yixiI(i ∈ I2)\n+ 2C2(yiw ⊤xi −D − 1)yixiI(i ∈ I3)\n(24)\nare the unbiased estimation of ∇fL(w) and ∇fO(w) respectively, where I(·) is the indicator function that returns 1 when the argument holds, and 0 otherwise. I1, I2, I3 are the index sets defined as\nI1 ≡ {i | yiw ⊤xi < 1}, I2 ≡ {i | yiw ⊤xi < 1−D}, I3 ≡ {i | yiw ⊤xi > 1 +D}.\nProof. Note that the gradient of fL(w) is\n∇fL(w) = w + 2λ1 m XX⊤w − 2λ1 m2 Xyy⊤X⊤w − λ2 m Xy\n− C\nm\nm ∑\ni=1\nyixiI(i ∈ I1).\nFurther note that\nE[xix ⊤ i ] =\n1\nm\nm ∑\ni=1\nxix ⊤ i =\n1\nm XX⊤, E[yixi] =\n1\nm\nm ∑\ni=1\nyixi = 1\nm Xy. (25)\nAccording to the linearity of expectation, the independence between xi and xj, and with (25), we have\nE[∇fL(w,xi,xj)] = w + 2λ1E[xix ⊤ i ]w − 2λ1E[yixi]E[yjxj] ⊤w\n− λ2E[yixi]− CE[yixiI(i ∈ I1)]\n= w + 2λ1 m XX⊤w − 2λ1 m2 Xyy⊤X⊤w\n− λ2 m Xy − C m\nm ∑\ni=1\nyixiI(i ∈ I1)\n= ∇fL(w)\nIt is shown that ∇fL(w,xi,xj) is a noisy unbiased gradient of fL(w). Again the gradient of fO(w) is\n∇fO(w) = w + 2C1 m\nm ∑\ni=1\n(yiw ⊤xi +D − 1)yixiI(i ∈ I2)\n+ 2C2 m\nm ∑\ni=1\n(yiw ⊤xi −D − 1)yixiI(i ∈ I3).\nAccording to the linearity of expectation, and with (25), we have\nE[∇fO(w,xi)] = w + 2C1E[(yiw ⊤xi +D − 1)yixiI(i ∈ I2)]\n+ 2C2E[(yiw ⊤xi −D − 1)yixiI(i ∈ I3)]\n= w + 2C1 m\nm ∑\ni=1\n(yiw ⊤xi +D − 1)yixiI(i ∈ I2)\n+ 2C2 m\nm ∑\ni=1\n(yiw ⊤xi −D − 1)yixiI(i ∈ I3)\n= ∇fO(w)\nIt is shown that ∇fO(w,xi) is a noisy unbiased gradient of fO(w).\nWith Theorem 1, the stochastic gradient update can be formed as\nwt+1 = wt − ηtgt, (26)\nwhere gt = ∇fL(wt,xi,xj) for ODM L and gt = ∇fO(wt,xi) for ODM, ηt is a suitably chosen step-size parameter in the t-th iteration.\nSince the objective function of ODM is differentiable, in practice we use the stochastic gradient descent with variance reduction (SVRG) which is more robust than SGD (Johnson and Zhang, 2013). Besides performing the normal stochastic gradient update (26) at each iteration, it also occasionally compute full gradient, which can be used to reduce the variance of the stochastic gradient estimation.\nAlgorithm 2 summarizes the pseudo-code of ODMsvrg.\nAlgorithm 2 ODMsvrg Input: Data set X. Output: w̄\nInitialize w̄0 = 0. for s = 1, 2, . . . do w̄ = w̄s−1. Compute full gradient µ̄ w0 = w̄ for t = 1, 2, . . . , m do Randomly sample training example (xi, yi). Compute gt as in (24). wt = wt−1 − η(∇fO(wt−1,xi)−∇fO(w̄,xi) + µ̄).\nend for\nSet w̄s = wt for randomly chosen t ∈ {1, 2, . . . , m}. end for"
    }, {
      "heading" : "5. Analysis",
      "text" : "In this section, we study the statistical property of ODML and ODM. Here we only consider the linear case for simplicity, however, the results are also applicable to any other feature mapping φ. As indicated in Section 4.1, the dual problem both take the following form,\nmin α\nf(α) = 1\n2 α⊤Hα+ q⊤α,\ns.t. 0 ≤ αi ≤ ui, i = 1, . . . , m. (27)\nLemma 2. Let α denote the optimal solution of (27), and suppose\nα∗ = argmin 0≤α≤u f(α), αi = argmin 0≤α≤u,αi=0 f(α), i = 1, . . . , m, (28)\nthen we have\n[Hαi + q]2i 2hii ≤ α∗i 2 2 hii − α ∗ i [Hα ∗ + q]i,\nwhere [·]i denotes the i-th component of a vector and hii is the (i, i)-th entry of the matrix H.\nProof. According to the definition in (28), we have\nf(αi)−min t f(αi + tei) ≤ f(α i)− f(α∗) ≤ f(α∗ − α∗iei)− f(α ∗), (29)\nwhere ei denotes a vector with 1 in the i-th coordinate and 0’s elsewhere. Note that\nf(αi)−min t f(αi + tei) = f(α i)−min t\n{\nf(αi) + t2\n2 hii + tα\ni⊤Hei + tq ⊤ei\n}\n= −min t\n{\nt2 2 hii + t(Hα i + q)⊤ei\n}\n= [Hαi + q]2i\n2hii\nand\nf(α∗ − α∗i ei)− f(α ∗) =\nα∗i 2\n2 hii − α\n∗ i (Hα ∗ + q)⊤ei = α∗i\n2\n2 hii − α\n∗ i [Hα ∗ + q]i\ncombine with (29), it is shown that\n[Hαi + q]2i 2hii ≤ α∗i 2 2 hii − α ∗ i [Hα ∗ + q]i.\nBased Lemma 2, we derive the following two bounds for ODML and ODM on the expectation of error according to the leave-one-out cross-validation estimate, which is an unbiased estimate of the probability of test error. As shown in (Luntz and Brailovsky, 1969),\nE[R(α)] = E[L((x1, y1), . . . , (xm, ym))]\nm , (30)\nwhere L((x1, y1), . . . , (xm, ym)) is the number of errors in the leave-one-out procedure.\nTheorem 2. Let α denote the optimal solution of the dual problem of ODML, then we have\nE[R(α)] ≤ E[ ∑ i∈I1 α∗ihii + |I2|]\nm , (31)\nwhere I1 ≡ {i | 0 < α ∗ i < C/m}, I2 ≡ {i | α ∗ i = C/m}.\nProof. According to the derivation in Section 4.1.1, for ODML we have\n[Hα + q]i =\n[\nHα+ λ2 m He− e\n]\ni\n=\n[\nY X⊤X(I +AG)−1Y\n(\nα+ λ2 m e\n)\n− e\n]\ni\n,\nfurther note that\nw = X(I +AG)−1Y\n(\nα+ λ2 m e\n)\n,\nso it is shown that\n[Hα+ q]i = [Y X ⊤w − e]i = yix ⊤ i w − 1.\nSuppose the corresponding solution of α∗ and αi for the primal problem of ODML are w∗ and wi, respectively. According to Lemma 2 we have\n(yix ⊤ i w i − 1)2\n2hii ≤\nα∗i 2\n2 hii − α\n∗ i (yix ⊤ i w ∗ − 1).\n1) α∗i = 0. The right-hand side equals 0, which indicates that the lefthand side must equal 0, i.e., all these examples will be correctly classified by wi.\n2) 0 < α∗i < C/m. According to the complementary slackness conditions, in this case we have yix ⊤ i w\n∗ = 1. For any misclassified example (xi, yi), i.e., yix ⊤ i w\ni < 0, we have 1 ≤ α∗ihii. 3) α∗i = C/m. All these examples may be misclassified in the leave-one-\nout procedure. So we have\nL((x1, y1), . . . , (xm, ym)) ≤ ∑\ni∈I1\nα∗ihii + |I2|,\nwhere I1 ≡ {i | 0 < α ∗ i < C/m}, I2 ≡ {i | α ∗ i = C/m}. Take expectation on both side and with (30), we get that (31) holds.\nTheorem 3. Let α denote the optimal solution of the dual problem of ODM, then we have\nE[R(α)] ≤ E[ ∑ i∈I1 α∗i ( ‖xi‖ 2 + m 2C1 ) + ∑ i∈I2 α∗i ( ‖xi‖ 2 + m 2C2 ) +D(|I1| − |I2|)]\nm ,\n(32)\nwhere I1 ≡ {i | α ∗ i > 0 and 1 ≤ i ≤ m}, I2 ≡ {i | α ∗ i > 0 and m + 1 ≤ i ≤ 2m}.\nProof. Denote α⊤ = [ζ⊤,β⊤], according to the derivation in Section 4.1.2 we have\n[Hα+ q]i =\n[\nQ(ζ − β) + 2C1 m\nζ + (D − 1)e −Q(ζ − β) + 2C2\nm β + (D + 1)e\n]\ni\n=\n[\nY X⊤XY (ζ − β) + 2C1 m\nζ + (D − 1)e −Y X⊤XY (ζ − β) + 2C2\nm β + (D + 1)e\n]\ni\n,\nfurther note that w = XY (ζ − β) and the definition in (28), so it is shown that\n[Hαi + q]i =\n{\nyix ⊤ i w i − (1−D), 1 ≤ i ≤ m. −yix ⊤ i w i + (1 +D), m+ 1 ≤ i ≤ 2m.\nand\n[Hα∗ + q]i =\n{\nyix ⊤ i w ∗ + ξi − (1−D), 1 ≤ i ≤ m. −yix ⊤ i w ∗ + ǫi + (1 +D), m+ 1 ≤ i ≤ 2m.\naccording to Lemma 2 we have\n((1−D)− yix ⊤ i w i)2\n2(‖xi‖2 + m 2C1\n) ≤\nα∗i 2\n2\n(\n‖xi‖ 2 +\nm\n2C1\n)\n− α∗i (yix ⊤ i w ∗ + ξi − (1−D)), 1 ≤ i ≤ m.\n((1 +D)− yix ⊤ i w i)2\n2(‖xi‖2 + m 2C2\n) ≤\nα∗i 2\n2\n(\n‖xi‖ 2 +\nm\n2C2\n)\n− α∗i (−yix ⊤ i w ∗ + ǫi + (1 +D)), m+ 1 ≤ i ≤ 2m.\n1) α∗i = 0. The right-hand side equals 0, which indicates that the lefthand side must equal 0, i.e., all these examples will be correctly classified by wi.\n2) α∗i > 0. According to the complementary slackness conditions, in this case the second term of the right-hand side must equal 0. For any misclassified example (xi, yi), i.e., yix ⊤ i w i < 0, we have\n1 ≤ α∗i\n(\n‖xi‖ 2 +\nm\n2C1\n)\n+D, 1 ≤ i ≤ m.\n1 ≤ α∗i\n(\n‖xi‖ 2 +\nm\n2C2\n)\n−D, m+ 1 ≤ i ≤ 2m.\nSo we have\nL((x1, y1), . . . , (xm, ym)) ≤ ∑\ni∈I1\nα∗i\n(\n‖xi‖ 2 +\nm\n2C1\n)\n+ ∑\ni∈I2\nα∗i\n(\n‖xi‖ 2 +\nm\n2C2\n)\n+D(|I1| − |I2|),\nwhere I1 ≡ {i | α ∗ i > 0 and 1 ≤ i ≤ m}, I2 ≡ {i | α ∗ i > 0 and m+1 ≤ i ≤ 2m}. Take expectation on both side and with (30), we get that (32) holds."
    }, {
      "heading" : "6. Empirical Study",
      "text" : "In this section, we empirically evaluate the effectiveness of our methods on a broad range of data sets. We first introduce the experimental settings in Section 6.1, and then compare ODML and ODM with SVM and Linear Discriminant Analysis (LDA) in Section 6.2 and Section 6.3. In addition, we also study the cumulative margin distribution produced by ODML, ODM and SVM in Section 6.4. The computational cost is presented in Section 6.5."
    }, {
      "heading" : "6.1. Experimental Setup",
      "text" : "We evaluate the effectiveness of our proposed methods on thirty two regular scale data sets and ten large scale data sets, including both UCI data sets and real-world data sets like KDD20101. Table 1 summarizes the statistics of these data sets. The data set size is ranged from 62 to more than 8,000,000, and the dimensionality is ranged from 2 to more than 20,000,000, covering a broad range of properties. All features are normalized into the interval [0, 1]. For each data set, half of examples are randomly selected as the training data, and the remaining examples are used as the testing data. For regular scale data sets, both linear and RBF kernels are evaluated. Experiments are repeated for 30 times with random data partitions, and the average accuracies as well as the standard deviations are recorded. For large scale data sets, linear kernel is evaluated. Experiments are repeated for 10 times with random data partitions, and the average accuracies (with standard deviations) are recorded.\n1https://pslcdatashop.web.cmu.edu/KDDCup/downloads.jsp\nODML and ODM are compared with standard SVM which ignores the margin distribution, and Linear Discriminant Analysis (LDA) (Fisher, 1936).\nFor SVM and ODML, the regularization parameter C is selected by 5-fold cross validation from [10, 50, 100]. In addition, the regularization parameters\nλ1, λ2 are selected from the set of [2 −8, . . . , 2−2]. For ODM, the regularization parameter C1 and C2 are selected from the set of [2 0, . . . , 210], while the parameter D is selected from the set of [0, 0.1, . . . , 0.5]. The parameters η used for ODMsvrg are set with the same setup in (Johnson and Zhang, 2013). The width of the RBF kernel for SVM, LDA, ODML and ODM are selected by 5-fold cross validation from the set of [2−2δ, . . . , 22δ], where δ is the average distance between instances. All selections are performed on training sets."
    }, {
      "heading" : "6.2. Results on Regular Scale Data Sets",
      "text" : "Tables 2 and 3 summarize the results on thirty two regular scale data sets. As can be seen, the overall performance of our methods are superior or highly competitive to SVM. Specifically, for linear kernel, ODML/ODM performs significantly better than SVM on 17/24 over 32 data sets, respectively, and achieves the best accuracy on 31 data sets; for RBF kernel, ODML/ODM performs significantly better than SVM on 15/25 over 32 data sets, respectively, and achieves the best accuracy on 31 data sets. In addition, as can be seen, in comparing with standard SVM which does not consider margin distribution, the win/tie/loss counts show that ODML and ODM are always better or comparable, never worse than SVM."
    }, {
      "heading" : "6.3. Results on Large Scale Data Sets",
      "text" : "Table 4 summarizes the results on ten large scale data sets. LDA did not return results on some data sets due to the high computational cost. As can be seen, the overall performance of our methods are superior or highly competitive to SVM. Specifically, ODML/ODM performs significantly better than SVM on 6/7 over 10 data sets, respectively, and achieves the best accuracy on almost all data sets.\n6.4. Margin Distributions\nFigure 1 plots the cumulative margin distribution of SVM, ODML and ODM on some representative regular scale data sets. The curves for other data sets are more or less similar. The point where a curve and the x-axis\ncrosses is the corresponding minimum margin. As can be seen, our methods usually have a little bit smaller minimum margin than SVM, whereas the curve of ODML and ODM generally lies on the right side, showing that the margin distribution of ODML and ODM are generally better than that of SVM. In other words, for most examples, our methods generally produce a larger margin than SVM."
    }, {
      "heading" : "6.5. Time Cost",
      "text" : "We compare the time cost of our methods and SVM on the ten large scale data sets. All the experiments are performed with MATLAB 2012b on a machine with 8×2.60 GHz CPUs and 32GB main memory. The average CPU time (in seconds) on each data set is shown in Figure 2. We denote SVM implemented by the LIBLINEAR (Fan et al., 2008) package as SVMl and SVM implemented by SGD2 as SVMs, respectively. It can be seen that, both SVMs and our methods are faster than SVMl, owing to the use of SGD. ODML and ODM are just slightly slower than SVMs on three data sets (adult-a, w8a and mini-boo-ne) but highly competitive with SVMs on the rest data sets. Note that both SVMl and SVMs are very fast implementations of SVMs; this shows that ODML and ODM are also computationally efficient.\n2http://leon.bottou.org/projects/sgd"
    }, {
      "heading" : "7. Related Work",
      "text" : "There are a few studies considered margin distribution in SVM-like algorithms (Garg and Roth, 2003; Pelckmans et al., 2008; Aiolli et al., 2008). Garg et al. (Garg and Roth, 2003) proposed the Margin Distribution Optimization (MDO) algorithm which minimizes the sum of the cost of each instance, where the cost is a function which assigns larger values to instances with smaller margins. MDO can be viewed as a method of optimizing weighted margin combination, where the weights are related to the margins. The objective function optimized by MDO, however, is non-convex, and thus, it may get stuck in local minima. In addition, MDO can only be used for linear kernel.\nPelckmans et al. (Pelckmans et al., 2008) proposed the Maximal Average Margin for Classifiers (MAMC) and it can be viewed as a special case of ODML assuming that the margin variance is zero. MAMC has a closed-form solution, however, it will degenerate to a trivial solution when the classes are not with equal sizes.\nAiolli et al. (Aiolli et al., 2008) proposed a Kernel Method for the direct Optimization of the Margin Distribution (KM-OMD) from a game theoretical perspective. Similar to MDO, this method also directly optimizes a weighted combination of margins over the training data, ignoring the influence of margin variances. Besides, this method considers hard-margin only, which may be another reason why it can’t work well. It is noteworthy that the computational cost prohibits KM-OMD to be applied to large scale data.\nThe superiority of ODML to the above methods have been presented in (Zhang and Zhou, 2014), so we don’t choose them as compared methods in Section 6."
    }, {
      "heading" : "8. Conclusions",
      "text" : "Support vector machines work by maximizing the minimum margin. Recent theoretical results suggested that the margin distribution, rather than a single-point margin such as the minimum margin, is more crucial to the generalization performance. In this paper, we propose a new method, named Optimal margin Distribution Machine (ODM), which try to optimize the margin distribution by considering the margin mean and the margin variance simultaneously. Our method is a general learning approach which can be used in any place where SVM can be applied. Comprehensive experiments\non thirty two regular scale data sets and ten large scale data sets validate the superiority of our method to SVM. In the future it will be interesting to generalize the idea of optimal margin distribution to other learning settings."
    } ],
    "references" : [ {
      "title" : "A kernel method for the optimization of the margin distribution",
      "author" : [ "F. Aiolli", "G. San Martino", "A. Sperduti" ],
      "venue" : "Proceedings of the 18th International Conference on Artificial Neural Networks. Prague,",
      "citeRegEx" : "Aiolli et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Aiolli et al\\.",
      "year" : 2008
    }, {
      "title" : "Sgd-qn: Careful quasi-newton stochastic gradient descent",
      "author" : [ "A. Bordes", "L. Bottou", "P. Gallinari" ],
      "venue" : "Journal of Machine Learning Research",
      "citeRegEx" : "Bordes et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Bordes et al\\.",
      "year" : 2009
    }, {
      "title" : "Large-scale machine learning with stochastic gradient descent",
      "author" : [ "L. Bottou" ],
      "venue" : "Proceedings of the 19th International Conference on Computational Statistics. Paris,",
      "citeRegEx" : "Bottou,? \\Q2010\\E",
      "shortCiteRegEx" : "Bottou",
      "year" : 2010
    }, {
      "title" : "Prediction games and arcing classifiers",
      "author" : [ "L. Breiman" ],
      "venue" : "Neural Computation",
      "citeRegEx" : "Breiman,? \\Q1999\\E",
      "shortCiteRegEx" : "Breiman",
      "year" : 1999
    }, {
      "title" : "Learning optimally sparse support vector machines",
      "author" : [ "A. Cotter", "S. Shalev-shwartz", "N. Srebro" ],
      "venue" : "Proceedings of the 30th International Conference on Machine Learning",
      "citeRegEx" : "Cotter et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Cotter et al\\.",
      "year" : 2013
    }, {
      "title" : "An Introduction to Support Vector Machines and Other Kernel-based Learning Methods",
      "author" : [ "N. Cristianini", "J. Shawe-Taylor" ],
      "venue" : null,
      "citeRegEx" : "Cristianini and Shawe.Taylor,? \\Q2000\\E",
      "shortCiteRegEx" : "Cristianini and Shawe.Taylor",
      "year" : 2000
    }, {
      "title" : "Convex formulations of radius-margin based support vector machines",
      "author" : [ "H. Do", "K. Alexandre" ],
      "venue" : "Proceedings of the 30th International Conference on Machine Learning",
      "citeRegEx" : "Do and Alexandre,? \\Q2013\\E",
      "shortCiteRegEx" : "Do and Alexandre",
      "year" : 2013
    }, {
      "title" : "Liblinear: A library for large linear classification",
      "author" : [ "R.E. Fan", "K.W. Chang", "C.J. Hsieh", "X.R. Wang", "C.J. Lin" ],
      "venue" : "Journal of Machine Learning Research 9,",
      "citeRegEx" : "Fan et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Fan et al\\.",
      "year" : 2008
    }, {
      "title" : "The use of multiple measurements in taxonomic",
      "author" : [ "R.A. Fisher" ],
      "venue" : null,
      "citeRegEx" : "Fisher,? \\Q1936\\E",
      "shortCiteRegEx" : "Fisher",
      "year" : 1936
    }, {
      "title" : "On the doubt about margin explanation",
      "author" : [ "W. pp. 23–37. Gao", "Zhou", "Z.-H" ],
      "venue" : null,
      "citeRegEx" : "Gao et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Gao et al\\.",
      "year" : 2013
    }, {
      "title" : "Margin distribution and learning",
      "author" : [ "A. Garg", "D. Roth" ],
      "venue" : "boosting. Artificial Intelligence",
      "citeRegEx" : "Garg and Roth,? \\Q2003\\E",
      "shortCiteRegEx" : "Garg and Roth",
      "year" : 2003
    }, {
      "title" : "Accelerating stochastic gradient descent using",
      "author" : [ "R. Johnson", "T. Zhang" ],
      "venue" : "Helsinki, Finland,",
      "citeRegEx" : "Johnson and Zhang,? \\Q2013\\E",
      "shortCiteRegEx" : "Johnson and Zhang",
      "year" : 2013
    }, {
      "title" : "Stochastic approximation and recursive",
      "author" : [ "H.J. Kushner", "G.G. Yin" ],
      "venue" : "International Conference on Machine Learning. Atlanta,",
      "citeRegEx" : "Kushner and Yin,? \\Q2003\\E",
      "shortCiteRegEx" : "Kushner and Yin",
      "year" : 2003
    }, {
      "title" : "On estimation of characters",
      "author" : [ "A. pp. 53–61. Luntz", "V. Brailovsky" ],
      "venue" : null,
      "citeRegEx" : "Luntz and Brailovsky,? \\Q1969\\E",
      "shortCiteRegEx" : "Luntz and Brailovsky",
      "year" : 1969
    }, {
      "title" : "A risk minimization principle for a class of parzen estimators",
      "author" : [ "K. Pelckmans", "J. Suykens", "B.D. Moor" ],
      "venue" : "Advances in Neural Information Processing Systems",
      "citeRegEx" : "Pelckmans et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Pelckmans et al\\.",
      "year" : 2008
    }, {
      "title" : "Acceleration of stochastic approximation by averaging",
      "author" : [ "B.T. Polyak", "A.B. Juditsky" ],
      "venue" : "SIAM Journal on Control and Optimization",
      "citeRegEx" : "Polyak and Juditsky,? \\Q1992\\E",
      "shortCiteRegEx" : "Polyak and Juditsky",
      "year" : 1992
    }, {
      "title" : "On variance reduction in stochastic gradient descent and its asynchronous variants",
      "author" : [ "S.J. Reddi", "A. Hefny", "S. Sra", "B. Poczos", "A. Smola" ],
      "venue" : "Advances in Neural Information Processing Systems",
      "citeRegEx" : "Reddi et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Reddi et al\\.",
      "year" : 2015
    }, {
      "title" : "How boosting the margin can also boost classifier complexity",
      "author" : [ "L. Reyzin", "R.E. Schapire" ],
      "venue" : "Proceedings of 23rd International Conference on Machine Learning",
      "citeRegEx" : "Reyzin and Schapire,? \\Q2006\\E",
      "shortCiteRegEx" : "Reyzin and Schapire",
      "year" : 2006
    }, {
      "title" : "Boosting the margin: a new explanation for the effectives of voting methods",
      "author" : [ "R.E. Schapire", "Y. Freund", "P.L. Bartlett", "W.S. Lee" ],
      "venue" : "Annuals of Statistics",
      "citeRegEx" : "Schapire et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Schapire et al\\.",
      "year" : 1998
    }, {
      "title" : "Learning with kernels: support vector machines, regularization, optimization, and beyond",
      "author" : [ "B. Schölkopf", "A. Smola" ],
      "venue" : null,
      "citeRegEx" : "Schölkopf and Smola,? \\Q2001\\E",
      "shortCiteRegEx" : "Schölkopf and Smola",
      "year" : 2001
    }, {
      "title" : "Pegasos: Primal estimated sub-gradient solver for svm",
      "author" : [ "S. Shalev-Shwartz", "Y. Singer", "N. Srebro" ],
      "venue" : "Proceedings of the 24th International Conference on Machine Learning. Helsinki,",
      "citeRegEx" : "Shalev.Shwartz et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Shalev.Shwartz et al\\.",
      "year" : 2007
    }, {
      "title" : "Stochastic gradient descent for non-smooth optimization: Convergence results and optimal averaging schemes",
      "author" : [ "O. Shamir", "T. Zhang" ],
      "venue" : "Proceedings of the 30th International Conference on Machine Learning",
      "citeRegEx" : "Shamir and Zhang,? \\Q2013\\E",
      "shortCiteRegEx" : "Shamir and Zhang",
      "year" : 2013
    }, {
      "title" : "Mini-batch primal and dual methods for svms",
      "author" : [ "M. Takac", "A. Bijral", "P. Richtarik", "N. Srebro" ],
      "venue" : "Proceedings of the 30th International Conference on Machine Learning",
      "citeRegEx" : "Takac et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Takac et al\\.",
      "year" : 2013
    }, {
      "title" : "The Nature of Statistical Learning Theory. Springer-Verlag, New York",
      "author" : [ "V. Vapnik" ],
      "venue" : null,
      "citeRegEx" : "Vapnik,? \\Q1995\\E",
      "shortCiteRegEx" : "Vapnik",
      "year" : 1995
    }, {
      "title" : "A refined margin analysis for boosting algorithms via equilibrium margin",
      "author" : [ "L.W. Wang", "M. Sugiyama", "C. Yang", "Zhou", "Z.-H", "J. Feng" ],
      "venue" : "Journal of Machine Learning Research",
      "citeRegEx" : "Wang et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2011
    }, {
      "title" : "Towards optimal one pass large scale learning with averaged stochastic gradient descent. CoRR, abs/1107.2490",
      "author" : [ "W. Xu" ],
      "venue" : null,
      "citeRegEx" : "Xu,? \\Q2011\\E",
      "shortCiteRegEx" : "Xu",
      "year" : 2011
    }, {
      "title" : "Recent advances of large-scale linear classification",
      "author" : [ "G.X. Yuan", "C.H. Ho", "C.J. Lin" ],
      "venue" : "Proceedings of the IEEE",
      "citeRegEx" : "Yuan et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Yuan et al\\.",
      "year" : 2012
    }, {
      "title" : "Solving large scale linear prediction problems using stochastic gradient descent algorithms",
      "author" : [ "T. Zhang" ],
      "venue" : "Proceedings of the 21st International Conference on Machine learning. Banff,",
      "citeRegEx" : "Zhang,? \\Q2004\\E",
      "shortCiteRegEx" : "Zhang",
      "year" : 2004
    }, {
      "title" : "Large margin distribution machine",
      "author" : [ "T. Zhang", "Zhou", "Z.-H" ],
      "venue" : "Proceedings of the 20th ACM SIGKDD Conference on Knowledge Discovery and Data Mining",
      "citeRegEx" : "Zhang et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Zhang et al\\.",
      "year" : 2014
    }, {
      "title" : "Stochastic optimization with importance sampling for regularized loss minimization",
      "author" : [ "Zhao", "P.-L", "T. Zhang" ],
      "venue" : "Proceedings of the 32nd International Conference on Machine Learning",
      "citeRegEx" : "Zhao et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Zhao et al\\.",
      "year" : 2015
    }, {
      "title" : "Ensemble Methods: Foundations and Algorithms",
      "author" : [ "Zhou", "Z.-H" ],
      "venue" : null,
      "citeRegEx" : "Zhou and Z..H.,? \\Q2012\\E",
      "shortCiteRegEx" : "Zhou and Z..H.",
      "year" : 2012
    }, {
      "title" : "Large margin distribution learning",
      "author" : [ "Zhou", "Z.-H" ],
      "venue" : "Proceedings of the 6th IAPR International Workshop on Artificial Neural Networks in Pattern Recognition (ANNPR’14). Montreal, Canada,",
      "citeRegEx" : "Zhou and Z..H.,? \\Q2014\\E",
      "shortCiteRegEx" : "Zhou and Z..H.",
      "year" : 2014
    } ],
    "referenceMentions" : [ {
      "referenceID" : 23,
      "context" : "Introduction Support Vector Machine (SVM) (Cortes and Vapnik, 1995; Vapnik, 1995) has always been one of the most successful learning algorithms.",
      "startOffset" : 42,
      "endOffset" : 81
    }, {
      "referenceID" : 23,
      "context" : ", the smallest distance from the examples to the classification boundary, and the margin theory (Vapnik, 1995) provided a good support to the generalization performance of SVMs.",
      "startOffset" : 96,
      "endOffset" : 110
    }, {
      "referenceID" : 18,
      "context" : "(Schapire et al., 1998) first suggested margin theory to explain the phenomenon that AdaBoost seems resistant to overfitting; soon after, Breiman (Breiman, 1999) indicated that the minimum margin is crucial and developed a boosting-style algorithm, named Arc-gv, which is able to maximize the minimum margin but with a poor generalization performance.",
      "startOffset" : 0,
      "endOffset" : 23
    }, {
      "referenceID" : 3,
      "context" : ", 1998) first suggested margin theory to explain the phenomenon that AdaBoost seems resistant to overfitting; soon after, Breiman (Breiman, 1999) indicated that the minimum margin is crucial and developed a boosting-style algorithm, named Arc-gv, which is able to maximize the minimum margin but with a poor generalization performance.",
      "startOffset" : 130,
      "endOffset" : 145
    }, {
      "referenceID" : 17,
      "context" : "(Reyzin and Schapire, 2006) found that although Arc-gv tends to produce larger minimum margin, it suffers from a poor margin distribution; they conjectured that the margin distribution, rather than the minimum margin, is more crucial to the generalization performance.",
      "startOffset" : 0,
      "endOffset" : 27
    }, {
      "referenceID" : 24,
      "context" : "Such a conjecture has been theoretically studied (Wang et al., 2011; Gao and Zhou, 2013), and it was recently proven by Gao and Zhou (Gao and Zhou, 2013).",
      "startOffset" : 49,
      "endOffset" : 88
    }, {
      "referenceID" : 23,
      "context" : "According to (Cortes and Vapnik, 1995; Vapnik, 1995), the margin of instance (xi, yi) is formulated as γi = yiw φ(xi), ∀i = 1, .",
      "startOffset" : 13,
      "endOffset" : 52
    }, {
      "referenceID" : 5,
      "context" : "From (Cristianini and Shawe-Taylor, 2000), it is shown that SVM with hardmargin (or Hard-margin SVM) is regarded as the maximization of the minimum distance, max w γ̂",
      "startOffset" : 5,
      "endOffset" : 41
    }, {
      "referenceID" : 19,
      "context" : "According to the representer theorem (Schölkopf and Smola, 2001), the optimal solution will be spanned by the support vectors.",
      "startOffset" : 37,
      "endOffset" : 64
    }, {
      "referenceID" : 26,
      "context" : "As suggested by (Yuan et al., 2012), it can be efficiently solved by the dual coordinate descent method.",
      "startOffset" : 16,
      "endOffset" : 35
    }, {
      "referenceID" : 15,
      "context" : "To make them more useful, in the following, we present a fast linear kernel ODM and ODM for large scale problems by adopting the stochastic gradient descent with variance reduction (SVRG) (Polyak and Juditsky, 1992; Johnson and Zhang, 2013).",
      "startOffset" : 188,
      "endOffset" : 240
    }, {
      "referenceID" : 11,
      "context" : "To make them more useful, in the following, we present a fast linear kernel ODM and ODM for large scale problems by adopting the stochastic gradient descent with variance reduction (SVRG) (Polyak and Juditsky, 1992; Johnson and Zhang, 2013).",
      "startOffset" : 188,
      "endOffset" : 240
    }, {
      "referenceID" : 12,
      "context" : "Theoretically, when the objective is convex, it can be shown that in expectation, SGD converges to the global optimal solution (Kushner and Yin, 2003; Bottou, 2010).",
      "startOffset" : 127,
      "endOffset" : 164
    }, {
      "referenceID" : 2,
      "context" : "Theoretically, when the objective is convex, it can be shown that in expectation, SGD converges to the global optimal solution (Kushner and Yin, 2003; Bottou, 2010).",
      "startOffset" : 127,
      "endOffset" : 164
    }, {
      "referenceID" : 27,
      "context" : "machine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).",
      "startOffset" : 62,
      "endOffset" : 216
    }, {
      "referenceID" : 20,
      "context" : "machine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).",
      "startOffset" : 62,
      "endOffset" : 216
    }, {
      "referenceID" : 1,
      "context" : "machine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).",
      "startOffset" : 62,
      "endOffset" : 216
    }, {
      "referenceID" : 21,
      "context" : "machine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).",
      "startOffset" : 62,
      "endOffset" : 216
    }, {
      "referenceID" : 11,
      "context" : "machine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).",
      "startOffset" : 62,
      "endOffset" : 216
    }, {
      "referenceID" : 16,
      "context" : "machine learning problems and achieved promising performances (Zhang, 2004; Shalev-Shwartz et al., 2007; Bordes et al., 2009; Shamir and Zhang, 2013; Johnson and Zhang, 2013; Reddi et al., 2015; Zhao and Zhang, 2015).",
      "startOffset" : 62,
      "endOffset" : 216
    }, {
      "referenceID" : 11,
      "context" : "Since the objective function of ODM is differentiable, in practice we use the stochastic gradient descent with variance reduction (SVRG) which is more robust than SGD (Johnson and Zhang, 2013).",
      "startOffset" : 167,
      "endOffset" : 192
    }, {
      "referenceID" : 13,
      "context" : "As shown in (Luntz and Brailovsky, 1969),",
      "startOffset" : 12,
      "endOffset" : 40
    }, {
      "referenceID" : 8,
      "context" : "ODM and ODM are compared with standard SVM which ignores the margin distribution, and Linear Discriminant Analysis (LDA) (Fisher, 1936).",
      "startOffset" : 121,
      "endOffset" : 135
    }, {
      "referenceID" : 11,
      "context" : "The parameters η used for ODMsvrg are set with the same setup in (Johnson and Zhang, 2013).",
      "startOffset" : 65,
      "endOffset" : 90
    }, {
      "referenceID" : 7,
      "context" : "We denote SVM implemented by the LIBLINEAR (Fan et al., 2008) package as SVMl and SVM implemented by SGD as SVMs, respectively.",
      "startOffset" : 43,
      "endOffset" : 61
    }, {
      "referenceID" : 10,
      "context" : "Related Work There are a few studies considered margin distribution in SVM-like algorithms (Garg and Roth, 2003; Pelckmans et al., 2008; Aiolli et al., 2008).",
      "startOffset" : 91,
      "endOffset" : 157
    }, {
      "referenceID" : 14,
      "context" : "Related Work There are a few studies considered margin distribution in SVM-like algorithms (Garg and Roth, 2003; Pelckmans et al., 2008; Aiolli et al., 2008).",
      "startOffset" : 91,
      "endOffset" : 157
    }, {
      "referenceID" : 0,
      "context" : "Related Work There are a few studies considered margin distribution in SVM-like algorithms (Garg and Roth, 2003; Pelckmans et al., 2008; Aiolli et al., 2008).",
      "startOffset" : 91,
      "endOffset" : 157
    }, {
      "referenceID" : 10,
      "context" : "(Garg and Roth, 2003) proposed the Margin Distribution Optimization (MDO) algorithm which minimizes the sum of the cost of each instance, where the cost is a function which assigns larger values to instances with smaller margins.",
      "startOffset" : 0,
      "endOffset" : 21
    }, {
      "referenceID" : 14,
      "context" : "(Pelckmans et al., 2008) proposed the Maximal Average Margin for Classifiers (MAMC) and it can be viewed as a special case of ODM assuming that the margin variance is zero.",
      "startOffset" : 0,
      "endOffset" : 24
    }, {
      "referenceID" : 0,
      "context" : "(Aiolli et al., 2008) proposed a Kernel Method for the direct Optimization of the Margin Distribution (KM-OMD) from a game theoretical perspective.",
      "startOffset" : 0,
      "endOffset" : 21
    } ],
    "year" : 2016,
    "abstractText" : "Support vector machine (SVM) has been one of the most popular learning algorithms, with the central idea of maximizing the minimum margin, i.e., the smallest distance from the instances to the classification boundary. Recent theoretical results, however, disclosed that maximizing the minimum margin does not necessarily lead to better generalization performances, and instead, the margin distribution has been proven to be more crucial. Based on this idea, we propose a new method, named Optimal margin Distribution Machine (ODM), which tries to achieve a better generalization performance by optimizing the margin distribution. We characterize the margin distribution by the firstand second-order statistics, i.e., the margin mean and variance. The proposed method is a general learning approach which can be used in any place where SVM can be applied, and their superiority is verified both theoretically and empirically in this paper.",
    "creator" : "LaTeX with hyperref package"
  }
}