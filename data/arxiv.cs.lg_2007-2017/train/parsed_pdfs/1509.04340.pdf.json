{
  "name" : "1509.04340.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ ],
    "emails" : [ "corinna@google.com,", "pg1338@nyu.edu,", "vitaly@cims.nyu.edu,", "mohri@cs.nyu.edu." ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n50 9.\n04 34\n0v 1\n[ cs\n.L G\n] 1\n4 Se\np 20\n15"
    }, {
      "heading" : "1. INTRODUCTION",
      "text" : "The hypothesis returned by learning algorithms such as SVMs [Cortes and Vapnik, 1995] and other algorithms for which the representer theorem holds is a linear combination of functions K(x, ·), where K is the kernel function used and x is a training sample. The generalization guarantees for SVMs depend on the sample size and the margin, but also on the complexity of the kernel function K used, measured by its trace [Koltchinskii and Panchenko, 2002].\nThese guarantees suggest that, for a moderate margin, learning with very complex kernels, such as sums of polynomial kernels of degree up to some large d may lead to overfitting, which frequently is observed empirically. Thus, in practice, simpler kernels are typically used, that is small ds for sums of polynomial kernels. On the other hand, to achieve a sufficiently high performance in challenging learning tasks, it may be necessary to augment a linear combination of such functions K(x, ·) with a function K ′(x, ·), where K ′ is possibly a substantially more complex kernel, such as a polynomial kernel of degree d′ ≫ d. This flexibility is not available when using SVMs or other learning algorithms such as kernel Perceptron [Aizerman et al., 1964, Rosenblatt, 1958] with the same solution form: either a complex kernel function K ′ is used and then there is risk of overfitting, or a potentially too simple kernel K is used limiting the performance that could be achieved in some tasks.\nThis paper presents an algorithm, Voted Kernel Regularization , that precisely provides the flexibility of using potentially very complex kernel functions such as predictors based on much higherdegree polynomial kernels, while benefitting from strong learning guarantees. In a series of experiments we demonstrate the improved performance of our algorithm.\nGOOGLE RESEARCH, 111 8TH AVENUE, NEW YORK, NY 10011 COURANT INSTITUTE OF MATHEMATICAL SCIENCES, 251 MERCER STREET, NEW YORK, NY 10012 COURANT INSTITUTE OF MATHEMATICAL SCIENCES, 251 MERCER STREET, NEW YORK, NY 10012 COURANT INSTITUTE AND GOOGLE RESEARCH, 251 MERCER STREET, NEW YORK, NY 10012 E-mail addresses: corinna@google.com, pg1338@nyu.edu, vitaly@cims.nyu.edu,\nmohri@cs.nyu.edu. 1\nWe present data-dependent learning bounds for this algorithm that are expressed in terms of the Rademacher complexities of the reproducing kernel Hilbert spaces (RHKS) of the kernel functions used. These results are based on the framework of Voted Risk Minimization originally introduced by Cortes et al. [2014] for ensemble methods. We further extend these results using local Rademacher complexity analysis to show that faster convergence rates are possible when the spectrum of the kernel matrix is controlled. The success of our algorithm arises from these bounds that suggest a new regularization penalty in terms of the Rademacher complexities of the corresponding families of kernel maps. Therefore, it becomes crucial to have a good estimate of these complexity measures. We provide a thorough theoretical analysis of these complexities for several commonly used kernel classes.\nBesides the improved performance and the theoretical guarantees Voted Kernel Regularization admits a number of additional favorable properties. Our formulation leads to a convex optimization problem that can be solved either via Linear Programming or using Coordinate Descent. Voted Kernel Regularization does not require the kernel functions to be positive-definite or even symmetric. This enables the use of much richer families of kernel functions. In particular, some standard distances known not to be PSD such as the edit-distance and many others can be used with this algorithm.\nYet another advantage of our algorithm is that it produces highly sparse solutions providing greater efficiency and less memory needs. In that respect, Voted Kernel Regularization is similar to so-called norm-1 SVM [Vapnik, 1998, Zhu et al., 2003] and Any-Norm-SVM [Dekel and Singer, 2007] which all use a norm-penalty to reduce the number of support vectors. However, to the best of our knowledge these regularization terms on their own has not led to performance improvement over regular SVMs [Zhu et al., 2003, Dekel and Singer, 2007]. In contrast, our experimental results show that Voted Kernel Regularization algorithm can outperform both regular SVM and norm-1 SVM, and at the same time significantly reduce the number of support vectors. In other work hybrid regularization schemes are combined to obtain a performance improvement [Zou, 2007]. Possibly this technique could be applied to our Voted Kernel Regularization algorithm as well resulting in additional performance improvements.\nSomewhat related algorithms are learning kernels or multiple kernel learning and has been extensively investigated over the last decade by both algorithmic and theoretical studies [Lanckriet et al., 2004, Argyriou et al., 2005, 2006, Srebro and Ben-David, 2006, Lewis et al., 2006, Zien and Ong, 2007, Micchelli and Pontil, 2005, Jebara, 2004, Bach, 2008, Ong et al., 2005, Ying and Campbell, 2009, Cortes et al., 2010]. In learning kernels, training data is used to select a single kernel out of the family of convex combinations of p base kernels and to learn a predictor based on just one kernel. In contrast in Voted SVM, every training point can be thought of as representing a different kernel. Another related approach is Ensemble SVM [Cortes et al., 2011], where a predictor for each base kernel is used and these predictors are combined in to define a single predictor, these two tasks being performed in a single stage or in two subsequent stages. The algorithm where the task is performed in a single stage bears the most resemblance with our Voted Kernel Regularization . However the regularization is different and most importantly not capacity-dependent.\nThe rest of the paper is organized as follows. Some preliminary definitions and notation are introduced in Section 2. The Voted Kernel Regularization algorithm is presented in Section 3 and in Section 4 we provide strong data-dependent learning guarantees for this algorithm showing that it is possible to learn with highly complex kernel classes and yet not overfit. In Section 4, we also prove local complexity bounds that detail how faster convergence rates are possible provided that the spectrum of the kernel matrix is controlled. Section 5 discusses the implementation of the Voted\nKernel Regularization algorithm including optimization procedures and analysis of Rademacher complexities. We conclude with experimental results in Section 6."
    }, {
      "heading" : "2. PRELIMINARIES",
      "text" : "Let X denote the input space. We consider the familiar supervised learning scenario. We assume that training and test points are drawn i.i.d. according to some distribution D over X × {−1,+1} and denote by S = ((x1, y1), . . . , (xm, ym)) a training sample of size m drawn according to Dm.\nLet ρ > 0. For a function f taking values in R, we denote by R(f) its binary classification error, by R̂S(f) its empirical error, and by R̂S,ρ(f) its empirical margin error for the sample S:\nR(f) = E (x,y)∼D [1yf(x)≤0], R̂S(f) = E (x,y)∼S [1yf(x)≤0], and R̂ρ(f) = E (x,y)∼S [1yf(x)≤ρ],\nwhere the notation (x, y) ∼ S indicates that (x, y) is drawn according to the empirical distribution defined by S. We will denote by R̂S(H) the empirical Rademacher complexity of a hypothesis set H on the set S of functions mapping X to R, and by Rm(H) the Rademacher complexity [Koltchinskii and Panchenko, 2002, Bartlett and Mendelson, 2002]:\nR̂S(H) = 1\nm E σ [ sup h∈H m∑\ni=1\nσih(xi) ] Rm(H) = E\nS∼Dm\n[ R̂S(H) ] ,\nwhere the random variables σi are independent and uniformly distributed over {−1,+1}."
    }, {
      "heading" : "3. THE VOTED KERNEL REGULARIZATION ALGORITHM",
      "text" : "In this section, we introduce the Voted Kernel Regularization algorithm. Let K1, . . . , Kp be p positive semi-definite (PSD) kernel functions with κk = supx∈X √ Kk(x, x) for all k ∈ [1, p]. We consider p corresponding families of functions mapping from X to R, H1, . . . , Hp, defined by Hk = {x 7→ ±Kk(x, x′) : x′ ∈ X}, where the sign accounts for two possible ways of classifying a point x′ ∈ X . The general form of a hypothesis f returned by the algorithm is the following:\nf = m∑\nj=1\np∑\nk=1\nαk,jKk(·, xj),\nwhere αk,j ∈ R for all j and k. Thus, f is a linear combination of hypotheses in Hks. This form with many αs per point is distinctly different from that of learning kernels with only one α per point. Since the families Hk are symmetric, this linear combination can be made a non-negative combination. Our algorithm consists of minimizing the Hinge loss on the training sample, as with SVMs, but with a different regularization term that tends to penalize hypotheses drawn from more complex Hks more than those selected from simpler ones and to minimize the norm-1 of the coefficients αk,j. Let rk denote the empirical Rademacher complexity of Hk: rk = R̂S(Hk). Then, the following is the objective function of Voted Kernel Regularization :\nF (α)= 1\nm\nm∑\ni=1\nmax ( 0, 1−yiyj m∑\nj=1\np∑\nk=1\nαk,jKk(xi, xj)\n) + m∑\nj=1\np∑\nk=1\n(λrk + β)|αk,j|, (1)\nwhere λ ≥ 0 and β ≥ 0 are parameters of the algorithm. We will adopt the notation Λk = λrk + β to simplify the presentation in what follows.\nNote that the objective function F is convex: the Hinge loss is convex thus its composition with an affine function is also convex, which shows that the first term is convex; the second term is\nconvex as the absolute value terms with non-negative coefficients; and F is convex as the sum of these two convex terms. Thus, the optimization problem admits a global minimum. Voted Kernel Regularization returns the function f defined by (3) with coefficients α = (αk,j)k,j minimizing F .\nThis formulation admits several benefits. First, it enables us to learn with very complex hypothesis sets and yet not overfit, thanks to Rademacher complexity-based penalties assigned to coefficients associated to different Hks. We will see later that the algorithm thereby defined benefits from strong learning guarantees. Notice further that the penalties assigned are data-dependent, which is a key feature of the algorithm. Second, observe that the objective function (6) does not require the kernels Kk to be positive-definite or even symmetric. Function F is convex regardless of the kernel properties. This is a significant benefit of the algorithm which enables to extend its use beyond what algorithms such as SVMs require. In particular, some standard distances known not to be PSD such as the edit-distance and many others could be used with this algorithm. Another advantage of this algorithm compared to standard SVM and other ℓ2-regularized methods is that ℓ1-norm regularization used for Voted Kernel Regularization leads sparse solutions. The solution α is typically sparse, which significantly reduces prediction time and the memory needs.\nNote that hypotheses h ∈ Hk are defined by h(x) = Kk(x, x′) where x′ is an arbitrary element of the input space X . However, our objective only includes those xj that belong to the observed sample. We show that in the case of a PDS kernel, there is no loss of generality in that as we now show. Indeed, observe that for x′ ∈ X we can write Φk(x′) = w +w⊥, where Φk is a feature map associated with the kernel Kk and where w lies in the span of Φk(x1), . . . ,Φk(xm) and w⊥ is in orthogonal compliment of this subspace. Therefore, for any sample point xi\nKk(xi, x ′) = 〈Φ(xi),Φ(x′)〉Hk = 〈Φ(xi),w〉Hk + 〈Φ(xi),w⊥〉Hk\n=\nm∑\nj=1\nβj〈Φ(xi),Φ(xj)〉Hk = m∑\nj=1\nβjKk(xi, xj),\nwhich leads to objective (1). Note that since selecting −Kk(·, xj) with weight αk,j is equivalent to selecting Kk(·, xj) with −αk,j , which accounts for the absolute value on the αk,js in the regularization term.\nThe Voted Kernel Regularization algorithm has some connections with other algorithms previously described in the literature. In the absence of any regularization, that is λ = 0 and β = 0, it reduces to the minimization of the Hinge loss and is therefore of course close to the SVM algorithm [Cortes and Vapnik, 1995]. For λ = 0, that is when discarding our regularization based on the different complexity of the hypothesis sets, the algorithm coincides with an algorithm originally described by Vapnik [1998][pp. 426-427], later by several other authors starting with [Zhu et al., 2003], and sometimes referred to as the norm-1 SVM."
    }, {
      "heading" : "4. LEARNING GUARANTEES",
      "text" : "In this section, we provide strong data-dependent learning guarantees for the Voted Kernel Regularization algorithm.\nLet F denote conv(⋃pk=1Hk), that is the family of functions f of the form f = ∑T\nt=1 αtht, where α = (α1, . . . , αT ) is in the simplex ∆ and where, for each t ∈ [1, T ], Hkt denotes the hypothesis set containing ht, for some kt ∈ [1, p]. Then, the following learning guarantee holds for all f ∈ F [Cortes et al., 2014]. Theorem 1. Assume p > 1. Fix ρ > 0. Then, for any δ > 0, with probability at least 1 − δ over the choice of a sample S of size m drawn i.i.d. according to Dm, the following inequality holds for\nall f = ∑T\nt=1 αtht ∈ F :\nR(f) ≤ R̂S,ρ(f) + 4\nρ\nT∑\nt=1\nαtRm(Hkt) + 2\nρ\n√ log p\nm +\n√⌈ 4\nρ2 log [ ρ2m log p ]⌉ log p m + log 2 δ 2m .\nThus, R(f) ≤ R̂S,ρ(f) + 4ρ ∑T t=1 αtRm(Hkt) +O (√ log p ρ2m log [ ρ2m log p ]) .\nTheorem 1 can be used to derive VKR objective and we provide full details of this derivation in Appendix B. Furthermore, the results of Theorem 1 can further be improved using local Rademacher complexity analysis showing that faster rates of convergence are possible.\nTheorem 2. Assume p > 1. Fix ρ > 0. Then, for any δ > 0, with probability at least 1 − δ over the choice of a sample S of size m drawn i.i.d. according to Dm, the following inequality holds for all f = ∑T t=1 αtht ∈ F for any K > 1:\nR(f)− K K − 1R̂S,ρ(f) ≤ 6K 1 ρ\nT∑\nt=1\nαtRm(Hkt)\n+ 40 K ρ2 log p m + 5K\nlog 2 δ\nm + 5K\n⌈ 8\nρ2 log\nρ2(1 + K K−1 )m\n40K log p\n⌉ log p\nm .\nThus, for K = 2, R(f) ≤ 2R̂S,ρ(f) + 12ρ ∑T t=1 αtRm(Hkt) +O ( log p ρ2m log ( ρm log p ) + log 1 δ m ) .\nThe proof of this result is given in Appendix A. Note that O(logm/ √ m) in Theorem 1 is replaced with O(logm/m) in Theorem 2. For full hypothesis classes Hks, Rm(Hk) may be on the order of O(1/ √ m) and will dominate the bound. However, if we use localized classes Hk(r) = {h ∈ Hk : E[h2] < r} then for certain values of r∗ local Rademacher complexities Rm(Hk(r∗)) ∈ O(1/m) leading to even stronger learning guarantees. Furthermore, this result leads to an extension of Voted Kernel Regularization objective:\nF (α)= 1\nm\nm∑\ni=1\nmax ( 0, 1−yiyj m∑\nj=1\np∑\nk=1\nαk,jKk(xi, xj)\n) + m∑\nj=1\np∑\nk=1\n(λRm(Hk(s)) + β)|αk,j|, (2)\nwhich is optimized over α and parameter s is set via cross-validation. In Section 5.3, we provide an explicit expression for the local Rademacher complexities of PDS kernel functions."
    }, {
      "heading" : "5. OPTIMIZATION SOLUTIONS",
      "text" : "In this section, we propose two different algorithmic approaches to solve the optimization problem (1): a linear programming (LP) and a coordinate descent (CD) approach.\n5.1. Linear Programming (LP) formulation. This section presents a linear programming approach for solving the Voted Kernel Regularization optimization problem (1). Observe that by introducing slack variables ξi the optimization can be equivalently written as follows:\nmin α,ξ\n1\nm\nm∑\ni=1\nξi +\nm∑\nj=1\np∑\nk=1\nΛk|αk,j| s.t. ξi ≥ 1− m∑\nj=1\np∑\nk=1\nαk,jyiyjKk(xi, xj), ∀i ∈ [1, m].\nNext, we introduce new variables α+k,j ≥ 0 and α−k,j ≥ 0 such that αk,j = α+k,j − α−k,j . Then, for any k and j, |αk,j| can be rewritten as |αk,j| ≤ α+k,j + α−k,j. The optimization problem is therefore equivalent to the following:\nmin α +≥0,α−≥0,ξ\n1\nm\nm∑\ni=1\nξi + m∑\nj=1\np∑\nk=1\nΛk(α + k,j + α − k,j)\ns.t. ξi ≥ 1− m∑\nj=1\np∑\nk=1\n(α+k,j − α−k,j)yiyjKk(xi, xj), ∀i ∈ [1, m],\nsince conversely, a solution with αk,j = α + k,j − α−k,j verifies the condition α+k,j = 0 or α−k,j = 0 for any k and j, thus αk,j = α + k,j when αk,j ≥ 0 and αk,j = α−k,j when αk,j ≤ 0. This is because if δ = min(α+k,j, α − k,j) > 0, then replacing α + k,j with α + k,j − δ and α−k,j with α−k,j − δ would not affect α+k,j − α−k,j but would reduce α+k,j + α−k,j . Note that the resulting optimization problem is an LP problem since the objective function is linear in both ξis and α+, α−, and since the constraints are affine. There is a battery of wellestablished methods to solve this LP problem including interior-point methods and the simplex algorithm. An additional advantage of this formulation of the Voted Kernel Regularization algorithm is that there is a large number of generic software packages for solving LPs making the Voted Kernel Regularization algorithm easier to implement.\n5.2. Coordinate Descent (CD) formulation. An alternative approach for solving the Voted Kernel Regularization optimization problem (1) consists of using a coordinate descent method. The advantage of such a formulation over the LP formulation is that there is no need to explicitly store the whole vector of αs but rather only non-zero entries. This enables learning with very large number of base hypotheses including scenarios in which the number of base hypotheses is infinite. The full description of the algorithm is given in Appendix C.\n5.3. Complexity penalties. An additional benefit of the learning bounds presented in Section 4 is that they are data-dependent. They are based on the Rademacher complexity rks of the base hypothesis sets Hk, which in some cases can be well estimated from the training sample. Our formulation directly inherits this advantage. However, in certain cases computing or estimating complexities r1, . . . , rj may be costly. In this section, we discuss various upper bounds on these complexities that be can used in practice for efficient implementation of the Voted Kernel Regularization algorithm.\nNote that the hypothesis set Hk = {x 7→ ±Kk(x, x′) : x′ ∈ X} is of course distinct from the RKHS Hk of the kernel Kk. Thus, we cannot use the known upper bound on R̂S(Hk) to bound R̂S(Hk). Nevertheless our proof of the upper bound is similar and leads to a similar upper bound.\nLemma 3. Let Kk be the kernel matrix of the PDS kernel function Kk for the sample S and let κk = supx∈X √ Kk(x, x). Then, the following inequality holds:\nR̂S(Hk) ≤ κk √ Tr[Kk]\nm .\nWe present the full proof of this result in Appendix A. Observe that the expression given by the lemma can be precomputed and used as the parameter rk of the optimization procedure.\nThe upper bound just derived is not fine enough to distinguish between different normalized kernels since for any normalized kernel Kk, κ = 1 and Tr[Kk] = m. In that case, finer bounds in\nterms of localized complexities can be used. In particular, local Rademacher complexity of a set of functions H id defined as Rlocm (H, r) = Rm({h ∈ H : E[h2] ≤ r}). If (λi)∞i=1 is a sequence of eigenvalues associated with the kernel Kk then once can show [Mendelson, 2003, Bartlett et al.,\n2005] that for every r > 0,Rlocm (H, r) ≤ √ 2 m minθ≥0 ( θr + ∑ j>θ λj ) = √ 2 m ∑∞ j=1min(r, λj).\nFurthermore, there is an absolute constant c such that if λ1 ≥ 1m , then for every r ≥ 1m , c√ m ∞∑\nj=1\n(r, λj) ≤ Rlocm (H, r).\nNote that taking r = ∞ recovers earlier bound Rm(Hk) ≤ √\nTr[Kk]/m. On the other hand one can show that for instance in the case of Gaussian kernels Rlocm (H, r) = O( √ r m log(1/r)) and using the fixed point of this function leads to Rlocm (H, r) = O( logm m\n). These results can be used in conjunction with the local Rademacher complexity extension of Voted Kernel Regularization discussed in Section 4.\nIf all of the kernels belong to the same family such as, for example, polynomial or Gaussian kernels it may be desirable to use measures of complexity that would account for specific properties of the given family of kernels such polynomial degree or bandwidth of the Gaussian. Below we discuss several additional upper bounds that aim to address these questions.\nFor instance, if Kk is a polynomial kernel of degree k, then we can use an upper bound on the Rademacher complexity of Hk in terms of the square-root of its pseudo-dimension Pdim(Hk), which coincides with the dimension dk of the feature space corresponding to a polynomial kernel of degree k, which is given by\ndk =\n( N + k\nk\n) ≤ (N + k) k\nk! ≤\n( (N + k)e\nk\n)k . (3)\nLemma 4. Let Kk be a polynomial kernel of degree k. Then, the empirical Rademacher complexity\nof Hk can be upper bounded as R̂S(Hk) ≤ 12κ2k √ πdk m .\nThe proof of this result is in Appendix A Thus, in view of the lemma, we can use rk = κ2k √ dk as a complexity penalty in the formulation of the Voted Kernel Regularization algorithm with polynomial kernels, with dk given by the expression (3)."
    }, {
      "heading" : "6. EXPERIMENTS",
      "text" : "We experimented with several benchmark datasets from the UCI repository, specifically breastcancer, climate, diabetes,german(numeric),ionosphere,musk, ocr49, phishing,retinopathy, vertebral and waveform01. Here, ocr49 refers to the subset of the OCR dataset with classes 4 and 9, and similarly waveform01 refers to the subset of waveform dataset with classes 0 and 1. More details on all the datasets are given in Table 2 in Appendix D.\nOur experiments compared Voted Kernel Regularization to regular SVM, that we refer to as L2-SVM, and to norm-1 SVM, called L1-SVM. In all of our experiments, we used lp solve, an off-the-shelf LP solver, to solve the Voted Kernel Regularization and L1-SVM optimization problems. For L2-SVM, we used LibSVM.\nIn each of the experiments, we used standard 5-fold cross-validation for performance evaluation and model selection. In particular, each dataset was randomly partitioned into 5 folds, and each algorithm was run 5 times, with a different assignment of folds to the training set, validation set\nand test set for each run. Specifically, for each i ∈ {0, . . . , 4}, fold i was used for testing, fold i + 1 (mod 5) was used for validation, and the remaining folds were used for training. For each setting of the parameters, we computed the average validation error across the 5 folds, and selected the parameter setting with minimum average validation error. The average error across the 5 folds was then computed for this particular parameter setting.\nIn the first set of experiments we used polynomial kernels of the form Kk(x,y) = (xTy + 1)k. We report the results in Table 6. For Voted Kernel Regularization , we optimized over λ ∈ {10−i : i = 0, . . . , 6} and β ∈ {10−i : i = 0, . . . , 6} The family of kernel functions Hk for k ∈ [1, 10] was chosen to be the set of polynomial kernels of degree k. In our experiments we compared the bounds of both Lemma 3 and Lemma 4 used as an estimate of the Rademacher complexity. For L1-SVM, we cross-validated over degrees in range 1 through 10 and β in the same range as for Voted Kernel Regularization . Cross-validation for L2-SVM was also done over the degree and regularization parameter C ∈ {10i : i = −4, . . . , 7}.\nOn 5 out of 11 datasets Voted Kernel Regularization outperformed L2-SVM and L1-SVM with a considerable improvement on 3 data sets. On the rest of the datasets, there was no statistical difference between these algorithms. Note that our results are also consistent with previous studies that indicated that L1-SVM and L2-SVM often have comparable performance. Observe that solutions obtained by Voted Kernel Regularization are often up to 10 times sparser then those of L2-SVM. In other words, Voted Kernel Regularization has a benefit of sparse solutions and often\nan improved performance, which provides strong empirical evidence in the support of our formulation. In a second set of experiments we used families of Gaussian kernels based on distinct values of the parameter γ ∈ {10i : i = −6, . . . , 0}. We used the bound of Lemma 3 as an estimate of the Rademacher complexity. In our cross-validation we used the same range for λ and β parameters of Voted Kernel Regularization and L1-SVM algorithms. For L2-SVM we increased the range of the regularization parameter: C ∈ {10i : i = −4, . . . , 7}. The results of our experiments are comparable to the results with polynomial kernels, however, improvements obtained by Voted Kernel Regularization are not always as significant in this case. The sparseness of the solutions are comperable to those observed with polynomial kernels."
    }, {
      "heading" : "7. CONCLUSION",
      "text" : "In this paper we presented a new support vector algorithm - Voted Kernel Regularization . Our algorithm benefits from strong data-dependent learning guarantees that enable learning with highly complex feature maps and yet not overfit. We further improved these learning guarantees using local complexity analysis leading to an extension of Voted Kernel Regularization algorithm. The key ingredient of our algorithm is a new regularization term that makes use of the Rademacher complexities of different families of kernel functions used by the Voted Kernel Regularization algorithm. We provide a thorough analysis of several different alternatives that can be used for this approximation. We also provide two practical implementations of our algorithm based on linear programming and coordinate descent. Finally, we presented results of extensive experiments that show that our algorithm always finds solutions that are much sparse than those of the other support vector algorithms and at the same time often outperforms other formulations."
    }, {
      "heading" : "APPENDIX A. PROOFS OF LEARNING GUARANTEES",
      "text" : "Theorem 2. Assume p > 1. Fix ρ > 0. Then, for any δ > 0, with probability at least 1 − δ over the choice of a sample S of size m drawn i.i.d. according to Dm, the following inequality holds for all f = ∑T t=1 αtht ∈ F for any K > 1:\nR(f)− K K − 1R̂S,ρ(f) ≤ 6K 1 ρ\nT∑\nt=1\nαtRm(Hkt)\n+ 40 K ρ2 log p m + 5K\nlog 2 δ\nm + 5K\n⌈ 8\nρ2 log\nρ2(1 + K K−1 )m\n40K log p\n⌉ log p\nm .\nThus, for K = 2, R(f) ≤ 2R̂S,ρ(f) + 12ρ ∑T t=1 αtRm(Hkt) +O ( log p ρ2m log ( ρm log p ) + log 1 δ m ) .\nProof. For a fixed h = (h1, . . . , hT ), any α ∈ ∆ defines a distribution over {h1, . . . , hT}. Sampling from {h1, . . . , hT} according to α and averaging leads to functions g of the form g = 1 n ∑T i=1 ntht for some n = (n1, . . . , nT ), with ∑T t=1 nt = n, and ht ∈ Hkt .\nFor any N = (N1, . . . , Np) with |N| = n, we consider the family of functions\nGF ,N =\n{ 1\nn\np∑\nk=1\nNk∑\nj=1\nhk,j |∀(k, j) ∈ [p]× [Nk], hk,j∈Hk } ,\nand the union of all such families GF ,n = ⋃\n|N|=nGF ,N. Fix ρ > 0. We define a class Φ ◦GF ,N = {Φρ(g) : g ∈ GF ,N} and Gr = GΦ,F ,N,r = {rℓg/max(r,E[ℓg] : ℓg ∈ Φ ◦GF ,N} for r to be chosen later. Observe that for vg ∈ GΦ,F ,N,r Var[vg] ≤ r. Indeed, if r > E[ℓg] then vg = ℓg. Otherwise, Var[vg] = r 2Var[ℓg]/(E[ℓg]) 2 ≤ r(E[ℓ2g])/E[ℓg] ≤ r.\nBy Theorem 2.1 in Bartlett et al. [2005], for any δ > 0 with probability at least 1 − δ, for any 0 < β < 1,\nV ≤ 2(1 + β)Rm(GΦ,F ,N,r) +\n√ 2r log 1\nδ m + (1 3 + 1 β ) log 1 δ m ,\nwhere V = supv∈Gr (E[v]− En[v]) and β is a free parameter. Next we observe that if Rm(GΦ,F ,N,r) ≤ Rm({αℓg : g ∈ Φ◦GF ,N, α ∈ [0, 1]}) = Rm(Φ◦GF ,N). Therefore, using Talagrand’s contraction lemma and convexity we have that Rm(GΦ,F ,N,r) ≤ 1ρ ∑p k=1 Nk n Rm(Hk). It follows that for any δ > 0 with probability at least 1− δ, for all 0 < β < 1\nV ≤ 2(1 + β)1 ρ\np∑\nk=1\nNk n Rm(Hk) +\n√ 2r log 1\nδ m + (1 3 + 1 β ) log 1 δ m .\nSince there are at most pn possible p-tuples N with |N| = n, by the union bound, for any δ > 0, with probability at least 1− δ,\nV ≤ 2(1 + β)1 ρ\np∑\nk=1\nNk n Rm(Hk) +\n√ r log p n\nδ m + (1 3 + 1 β ) log pn δ m .\nThus, with probability at least 1−δ, for all functions g = 1 n ∑T i=1 ntht with ht ∈ Hkt, the following inequality holds\nV ≤ 2(1 + β)1 ρ\nT∑\nt=1\nnt n Rm(Hkt) +\n√ r log p n\nδ m + (1 3 + 1 β ) log pn δ m .\nTaking the expectation with respect to α and using Eα[nt/n] = αt, we obtain that for any δ > 0, with probability at least 1− δ, for all h, we can write\nE α [V ] ≤ 2(1 + β)1 ρ\nT∑\nt=1\nαtRm(Hkt) +\n√ r log p n\nδ m + (1 3 + 1 β ) log pn δ m .\nWe now show that r can be chosen in such a way that Eα[V ] ≤ r/K. The right hand side of the above bound is of the form A √ r + B. Note that solution of r/K = C + A √ r is bounded by K2A2 + 2KC and hence by Lemma 5 in [Bartlett et al., 2002] the following bound holds\nE α\n[Rρ/2(g)− K K − 1R̂S,ρ(g)] ≤ 4K(1 + β) 1 ρ\nT∑\nt=1\nαtRm(Hkt) + ( 2K2 + 2K (1 3 + 1 β )) log 1 δ m .\nSet β = 1/2, then we have that\nE α\n[Rρ/2(g)− K K − 1R̂S,ρ(g)] ≤ 6K 1 ρ\nT∑\nt=1\nαtRm(Hkt) + 5K log 1 δ\nm .\nThen, for any δn > 0, with probability at least 1− δn,\nE α\n[Rρ/2(g)− K K − 1R̂S,ρ(g)] ≤ 6K 1 ρ\nT∑\nt=1\nαtRm(Hkt) + 5K log p\nn\nδn\nm .\nChoose δn = δ2pn−1 for some δ > 0, then for p ≥ 2, ∑ n≥1 δn = δ 2(1−1/p) ≤ δ. Thus, for any δ > 0 and any n ≥ 1, with probability at least 1− δ, the following holds for all h:\nE α\n[Rρ/2(g)− K K − 1R̂S,ρ(g)] ≤ 6K 1 ρ\nT∑\nt=1\nαtRm(Hkt) + 5K log 2p\n2n−1\nδ\nm . (4)\nNow, for any f = ∑T t=1 αtht ∈ F and any g = 1n ∑T\ni=1 ntht, we can upper bound R(f) = Pr(x,y)∼D[yf(x) ≤ 0], the generalization error of f , as follows: R(f) = Pr\n(x,y)∼D [yf(x)− yg(x) + yg(x) ≤ 0] ≤ Pr[yf(x)− yg(x) < −ρ/2] + Pr[yg(x) ≤ ρ/2]\n= Pr[yf(x)− yg(x) < −ρ/2] +Rρ/2(g). We can also write\nR̂ρ(g) = R̂S,ρ(g − f + f) ≤ P̂r[yg(x)− yf(x) < −ρ/2] + R̂S,3ρ/2(f). Combining these inequalities yields\nPr (x,y)∼D [yf(x) ≤ 0]− K K − 1R̂S,3ρ/2(f) ≤ Pr[yf(x)− yg(x) < −ρ/2]\n+ K K − 1P̂r[yg(x)− yf(x) < −ρ/2] +Rρ/2(g)− K K − 1R̂S,ρ(g).\nTaking the expectation with respect to α yields\nR(f)− R̂S,3ρ/2(f) ≤ E x∼D,α [1yf(x)−yg(x)<−ρ/2]\n+ K K − 1 Ex∼D,α[1yg(x)−yf(x)<−ρ/2] + Eα[Rρ/2(g)− K K − 1R̂S,ρ(g)].\nSince f = Eα[g], by Hoeffding’s inequality, for any x,\nE α [1yf(x)−yg(x)<−ρ/2]=Pr α\n[yf(x)−yg(x)<−ρ/2] ≤ e−nρ 2 8\nE α [1yg(x)−yf(x)<−ρ/2]=Pr α\n[yg(x)−yf(x)<−ρ/2] ≤ e−nρ 2 8 .\nThus, for any fixed f ∈ F , we can write\nR(f)− R̂S,3ρ/2(f) ≤ ( 1 + K K − 1 ) e−nρ 2/8 + E α [Rρ/2(g)− K\nK − 1R̂S,ρ(g)]. Thus, the following inequality holds:\nsup f∈F\n( R(f)− K K − 1R̂S,ρ(f) ) ≤ ( 1 + K K − 1 ) e−nρ 2/8 + sup h E α [Rρ/2(g)− K K − 1R̂S,ρ/2(g)].\nTherefore, in view of (4), for any δ > 0 and any n ≥ 1, with probability at least 1−δ, the following holds for all f ∈ F :\nR(f)− K K − 1R̂S,ρ(f) ≤\n( 1 + K K − 1 ) e−nρ 2/8 + 6K 1 ρ T∑\nt=1\nαtRm(Hkt) + 5K log 2p\n2n−1\nδ\nm .\nTo conclude the proof we optimize over n, f : n 7→ v1e−nu+v2n, which leads to n = (1/u) log(uv2/v1). Therefore, we set\nn =\n⌈ 8\nρ2 log\nρ2(1 + K K−1 )m\n40K log p\n⌉\nto obtain that the following bound\nR(f)− K K − 1R̂S,ρ(f) ≤ 6K 1 ρ\nT∑\nt=1\nαtRm(Hkt)\n+ 40 K ρ2 log p m + 5K\nlog 2 δ\nm + 5K\n⌈ 8\nρ2 log\nρ2(1 + K K−1 )m\n40K log p\n⌉ log p\nm .\nThus, taking K = 2, simply yields\nR(f) ≤ 2R̂S,ρ(f) + 12\nρ\nT∑\nt=1\nαtRm(Hkt) +O\n( log p\nρ2m log ( ρm log p ) + log 1 δ m\n)\nand the proof is complete.\nLemma 3. Let Kk be the kernel matrix of the kernel function Kk for the sample S and let κk = supx∈X √ Kk(x, x). Then, the following inequality holds:\nR̂S(Hk) ≤ κk √ Tr[Kk]\nm .\nProof. R̂S(Hk) can be upper bounded as follows using the Cauchy-Schwarz inequality:\nR̂S(Hk) = 1\nm E σ\n[ sup\nx′∈X ,s∈{−1,+1}\nm∑\ni=1\nσisKk(xi, x ′) ] = 1\nm E σ [ sup x′∈X ∣∣∣ m∑\ni=1\nσisKk(xi, x ′) ∣∣∣ ]\n= 1\nm E σ [ sup x′∈X ∣∣∣ m∑\ni=1\nσiΦk(xi) · Φk(x′) ∣∣∣ ] ≤ 1\nm E σ [ sup x′∈X ‖Φk(x′)‖Hk ∥∥∥ m∑\ni=1\nσiΦk(xi) ∥∥∥ Hk\n]\n= κk m E σ\n[∥∥∥ m∑\ni=1\nσiΦk(xi) ∥∥∥ Hk ] ≤ κk m √√√√E σ [ m∑\ni,j=1\nσiσjΦk(xi) · Φk(xj) ] = κk √ Tr[Kk]\nm ,\nwhere we used in the last line Jensen’s inequality.\nLemma 4. Let Kk be a polynomial kernel of degree k. Then, the empirical Rademacher complexity of Hk can be upper bounded as follows:\nR̂S(Hk) ≤ 12κ2k √\nπdk m .\nProof. By the proof of Lemma 3, we can write\nR̂S(Hk) ≤ κk m E σ\n[∥∥∥ m∑\ni=1\nσiΦk(xi) ∥∥∥ Hk ] = 2κ2k R̂S(H 1 k),\nwhere H1k is the family of linear functions H 1 k = {w 7→ w · Φk(x) : ‖w‖Hk ≤ 12κk }. By Dudley’s formula [Dudley, 1989], we can write\nR̂S(H 1 k) ≤ 12\n∫ ∞\n0\n√ logN (ǫ,H1k , L2(D̂))\nm dǫ,\nwhere D̂ is the empirical distribution. Since H1k can be viewed as a subset of a dk-dimensional linear space and since |w ·Φk(x)| ≤ 12 for all x ∈ X and w ∈ H1k , we have logN (ǫ,H1k , L2(D̂)) ≤ log [ (1 ǫ )dk ] . Thus, we can write\nR̂S(H 1 k) ≤ 12\n∫ 1\n0\n√ dk log 1 ǫ\nm dǫ = 12 √ dk m ∫ 1\n0\n√ log 1\nǫ dǫ = 12 √ dk m √ π 2 ,\nwhich completes the proof."
    }, {
      "heading" : "APPENDIX B. OPTIMIZATION PROBLEM",
      "text" : "This section provides the derivation for VKR optimization problem. We will assume that H1, . . . , Hp are p families of functions with increasing Rademacher complexities Rm(Hk), k ∈ [1, p], and, for any hypothesis h ∈ ∪pk=1Hk, denote by d(h) the index of the hypothesis set it belongs to, that is h ∈ Hd(h). The bound of Theorem 1 holds uniformly for all ρ > 0 and functions f ∈ conv(⋃pk=1Hk) at the price of an additional term that is in O (√ log log 2 ρ m ) . The condition ∑T t=1 αt = 1 of Theorem 1 can be relaxed to ∑T t=1 αt ≤ 1. To see this, use for example a null\nhypothesis (ht = 0 for some t). Since the last term of the bound does not depend on α, it suggests selecting α to minimize\nG(α) = 1\nm\nm∑\ni=1\n1yi ∑T t=1 αtht(xi)≤ρ +\n4\nρ\nT∑\nt=1\nαtrt,\nwhere rt = Rm(Hd(ht)). Since for any ρ > 0, f and f/ρ admit the same generalization error, we can instead search for α ≥ 0 with ∑Tt=1 αt ≤ 1/ρ which leads to\nmin α≥0\n1\nm\nm∑\ni=1\n1yi ∑T t=1αtht(xi)≤1 +4\nT∑\nt=1\nαtrt s.t. T∑\nt=1\nαt ≤ 1\nρ .\nThe first term of the objective is not a convex function of α and its minimization is known to be computationally hard. Thus, we will consider instead a convex upper bound based on the Hinge loss: let Φ(−u) = max(0, 1−u), then 1−u ≤ Φ(−u). Using this upper bound yields the following convex optimization problem:\nmin α≥0\n1\nm\nm∑\ni=1\nΦ ( 1− yi T∑\nt=1\nαtht(xi) ) + λ T∑\nt=1\nαtrt s.t. T∑\nt=1\nαt ≤ 1\nρ , (5)\nwhere we introduced a parameter λ ≥ 0 controlling the balance between the magnitude of the values taken by function Φ and the second term. Introducing a Lagrange variable β ≥ 0 associated to the constraint in (5), the problem can be equivalently written as\nmin α≥0\n1\nm\nm∑\ni=1\nΦ ( 1− yi T∑\nt=1\nαtht(xi) ) + T∑\nt=1\n(λrt + β)αt.\nHere, β is a parameter that can be freely selected by the algorithm since any choice of its value is equivalent to a choice of ρ in (5). Let (hk,j)k,j be the set of distinct base functions x 7→ Kk(·, xj). Then, the problem can be rewritten as F be the objective function based on that collection:\nmin α≥0\n1\nm\nm∑\ni=1\nΦ ( 1−yi N∑\nj=1\nαjhj(xi) ) + N∑\nt=1\nΛjαj , (6)\nwith α = (α1, . . . , αN) ∈ RN and Λj = λrj + β, for all j ∈ [1, N ]. This coincides precisely with the optimization problem minα≥0 F (α) defining Voted Kernel Regularization . Since the problem was derived by minimizing a Hinge loss upper bound on the generalization bound, this shows that the solution returned by Voted Kernel Regularization benefits from the strong data-dependent learning guarantees of Theorem 1."
    }, {
      "heading" : "APPENDIX C. COORDINATE DESCENT (CD) FORMULATION",
      "text" : "An alternative approach for solving the Voted Kernel Regularization optimization problem (1) consists of using a coordinate descent method. A coordinate descent method proceeds in rounds. At each round, it maintains a parameter vector α. Let αt = (αt,k,j)⊤k,j denote the vector obtained after t ≥ 1 iterations and let α0 = 0. Let ek,j denote the unit vector in direction (k, j) in Rp×m . Then, the direction ek,j and the step η selected at the tth round are those minimizing F (αt−1 +\nTABLE 2. Dataset statistics.\nData set Examples Features breastcancer 699 9 climate 540 18 diabetes 768 8 german 1000 24 ionosphere 351 34 musk 476 166 ocr49 2000 196 phishing 2456 30 retinopathy 1151 19 vertebral 310 6 waveform01 3304 21\nηek,j), that is\nF (α)= 1\nm\nm∑\ni=1\nmax ( 0, 1−yift−1 − yiyjηKk(xi, xj) ) + m∑\nj=1\np∑\nk=1\nΛk|αt−1,j,k|+ Λk|η + αt−1,k,j|,\nwhere ft−1 = ∑m\nj=1 ∑p k=1 αt−1,j,kyjKk(·, xj). To find the best descent direction, a coordinate\ndescent method computes the sub-gradient in the direction (k, j) for each (k, j) ∈ [1, p] × [1, m]. The sub-gradient is given by\nδF (αt−1, ej) =    1 m ∑m i=1 φt,j,k,i + sgn(αt−1,k,j)Λk if αt−1,k,j 6= 0 0 else if ∣∣∣ 1m ∑m i=1 φt,j,k,i ∣∣∣ ≤ Λk 1 m ∑m i=1 φt,j,k,i − sgn ( 1 m ∑m i=1 φt,j,k,i ) Λk otherwise .\nwhere φt,j,k,i = −yiKk(xi, xj) if ∑p\nk=1 ∑m j=1 αt−1,k,jyiyjK(xi, xj) < 1 and 0 otherwise. Once\nthe optimal direction ek,j is determined, the step size ηt can be found using a line search or other numerical methods.\nThe advantage of the coordinate descent formulation over the LP formulation is that there is no need to explicitly store the whole vector of αs but rather only no-zero entries. This enables learning with very large number of base hypotheses including scenarios in which the number of base hypotheses is infinite."
    }, {
      "heading" : "APPENDIX D. DATASET STATISTICS",
      "text" : "The dataset statistics are provided in Table 2"
    } ],
    "references" : [ {
      "title" : "Ensembles of kernel predictors",
      "author" : [ "C. Cortes", "M. Mohri", "A. Rostamizadeh" ],
      "venue" : "In UAI,",
      "citeRegEx" : "2010",
      "shortCiteRegEx" : "2010",
      "year" : 2011
    }, {
      "title" : "Multi-task feature and kernel selection for SVMs",
      "author" : [ "T. Jebara" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Jebara.,? \\Q2004\\E",
      "shortCiteRegEx" : "Jebara.",
      "year" : 2004
    }, {
      "title" : "Nonstationary kernel combination",
      "author" : [ "D.P. Lewis", "T. Jebara", "W.S. Noble" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Lewis et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Lewis et al\\.",
      "year" : 2004
    }, {
      "title" : "Statistical Learning Theory",
      "author" : [ "V.N. Vapnik" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Vapnik.,? \\Q2006\\E",
      "shortCiteRegEx" : "Vapnik.",
      "year" : 2006
    }, {
      "title" : "Multiclass multiple kernel learning",
      "author" : [ "A. Zien", "C.S. Ong" ],
      "venue" : "ICML",
      "citeRegEx" : "Zien and Ong.,? \\Q2007\\E",
      "shortCiteRegEx" : "Zien and Ong.",
      "year" : 2007
    }, {
      "title" : "2005], for any δ > 0 with probability at least 1 − δ",
      "author" : [ "Bartlett" ],
      "venue" : null,
      "citeRegEx" : "Bartlett,? \\Q2005\\E",
      "shortCiteRegEx" : "Bartlett",
      "year" : 2005
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : "In the absence of any regularization, that is λ = 0 and β = 0, it reduces to the minimization of the Hinge loss and is therefore of course close to the SVM algorithm [Cortes and Vapnik, 1995]. For λ = 0, that is when discarding our regularization based on the different complexity of the hypothesis sets, the algorithm coincides with an algorithm originally described by Vapnik [1998][pp.",
      "startOffset" : 178,
      "endOffset" : 385
    } ],
    "year" : 2015,
    "abstractText" : "This paper presents an algorithm, Voted Kernel Regularization , that provides the flexibility of using potentially very complex kernel functions such as predictors based on much higher-degree polynomial kernels, while benefitting from strong learning guarantees. The success of our algorithm arises from derived bounds that suggest a new regularization penalty in terms of the Rademacher complexities of the corresponding families of kernel maps. In a series of experiments we demonstrate the improved performance of our algorithm as compared to baselines. Furthermore, the algorithm enjoys several favorable properties. The optimization problem is convex, it allows for learning with non-PDS kernels, and the solutions are highly sparse, resulting in improved classification speed and memory requirements.",
    "creator" : "LaTeX with hyperref package"
  }
}