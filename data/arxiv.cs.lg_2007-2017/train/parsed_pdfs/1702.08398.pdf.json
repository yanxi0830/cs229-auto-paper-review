{
  "name" : "1702.08398.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "McGan: Mean and Covariance Feature Matching GAN",
    "authors" : [ "Youssef Mroueh", "Tom Sercu", "Vaibhava Goel" ],
    "emails" : [ "<mroueh@us.ibm.com>." ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "Unsupervised learning of distributions is an important problem, in which we aim to learn underlying features that unveil the hidden the structure in the data. The classic approach to learning distributions is by explicitly parametrizing the data likelihood and fitting this model by maximizing the likelihood of the real data. An alternative recent approach is to learn a generative model of the data without explicit parametrization of the likelihood. Variational AutoEncoders (VAE) (Kingma & Welling, 2013) and Generative Adversarial Networks (GAN) (Goodfellow et al., 2014) fall under this category.\nWe focus on the GAN approach. In a nutshell GANs learn a generator of the data via a min-max game between the generator and a discriminator, which learns to distinguish between “real” and “fake” samples. In this work we focus on the objective function that is being minimized between the learned generator distribution Pθ and the real data distribution Pr.\nThe original work of (Goodfellow et al., 2014) showed that in GAN this objective is the Jensen-Shannon divergence. (Nowozin et al., 2016) showed that otherϕ-divergences can be successfully used. The Maximum Mean Discrepancy objective (MMD) for GAN training was proposed in (Li et al., 2015; Dziugaite et al., 2015). As shown empirically\n*Equal contribution 1Watson Multimodal Algorithms and Engines Group IBM T.J. Watson Research Center, NY, USA. Correspondence to: Youssef Mroueh <mroueh@us.ibm.com>.\nSubmitted to the 34 th International Conference on Machine Learning, Sydney, Australia, 2017. JMLR: W&CP. Copyright 2017 by the author(s).\nin (Salimans et al., 2016), one can train the GAN discriminator using the objective of (Goodfellow et al., 2014) while training the generator using mean feature matching. An energy based objective for GANs was also developed recently (Zhao et al., 2017). Finally, closely related to our paper, the recent work Wasserstein GAN (WGAN) of (Arjovsky et al., 2017) proposed to use the Earth Moving distance (EM) as an objective for training GANs. Furthermore (Arjovsky et al., 2017) show that the EM objective has many advantages as the loss function correlates with the quality of the generated samples and the mode dropping problem is reduced in WGAN.\nIn this paper, inspired by the MMD distance and the kernel mean embedding of distributions (Muandet et al., 2017) we propose to embed distributions in a finite dimensional feature space and to match them based on their mean and covariance feature statistics. Incorporating first and second order statistics has a better chance to capture the various modes of the distribution. While mean matching was empirically used in (Salimans et al., 2016), we show in this work that it is theoretically grounded: similarly to the EM distance in (Arjovsky et al., 2017), mean and covariance feature matching of two distributions can be written as a distance in the framework of Integral Probability Metrics (IPM) (Muller, 1997). To match the means, we can use any `q norm, hence we refer to mean matching IPM, as IPMµ,q . For matching covariances, in this paper we consider the nuclear norm and refer to the corresponding IPM as IPMΣ.\nOur technical contributions can be summarized as follows:\na) We show in Section 3 that the `q mean feature matching IPMµ,q has two equivalent primal and dual formulations and can be used as an objective for GAN training in both formulations.\nb) We show in Section 3.3 that the parametrization used in Wasserstein GAN corresponds to `1 mean feature matching GAN (IPMµ,1 GAN in our framework).\nc) We show in Section 4.2 that the covariance feature matching IPMΣ admits also two dual formulations, and can be used as an objective for GAN training.\nd) Similar to Wasserstein GAN, we show that mean feature matching and covariance matching GANs (McGan) are stable to train, have a reduced mode dropping and the IPM loss\nar X\niv :1\n70 2.\n08 39\n8v 1\n[ cs\n.L G\n] 2\n7 Fe\nb 20\n17\ncorrelates with the quality of the generated samples."
    }, {
      "heading" : "2. Integral Probability Metrics",
      "text" : "We define in this Section IPMs as a distance between distribution. Intuitively each IPM finds a “critic” f (Arjovsky et al., 2017) which maximally discriminates between the distributions."
    }, {
      "heading" : "2.1. IPM Definition",
      "text" : "Consider a compact space X in Rd. Let F be a set of measurable and bounded real valued functions on X . Let P(X ) be the set of measurable probability distributions on X . Given two probability distributions P,Q ∈ P(X ), the Integral probability metric (IPM) indexed by the function space F is defined as follows (Muller, 1997):\ndF (P,Q) = sup f∈F ∣∣∣ E x∼P f(x)− E x∼Q f(x) ∣∣∣.\nIn this paper we are interested in symmetric function spaces F , i.e ∀f ∈ F ,−f ∈ F , hence we can write the IPM in that case without the absolute value:\ndF (P,Q) = sup f∈F { E x∼P f(x)− E x∼Q f(x) } . (1)\nIt is easy to see that dF defines a pseudo-metric over P(X). (dF non-negative, symmetric and satisfies the triangle inequality. A pseudo metric means that dF (P,P) = 0 but dF (P,Q) = 0 does not necessarily imply P = Q).\nBy choosing F appropriately (Sriperumbudur et al., 2012; 2009), various distances between probability measures can be defined. In the next subsection following (Arjovsky et al., 2017; Li et al., 2015; Dziugaite et al., 2015) we show how to use IPM to learn generative models of distributions, we then specify a special set of functions F that makes the learning tractable."
    }, {
      "heading" : "2.2. Learning Generative Models with IPM",
      "text" : "In order to learn a generative model of a distribution Pr ∈ P(X ), we learn a function\ngθ : Z ⊂ Rnz → X , such that for z ∼ pz , the distribution of gθ(z) is close to the real data distribution Pr, where pz is a fixed distribution on Z (for instance z ∼ N (0, Ik)). Let Pθ be the distribution of gθ(z), z ∼ pz . Using an IPM indexed by a function class F we shall solve therefore the following problem:\nmin gθ\ndF (Pr,Pθ) (2)\nHence this amounts to solving the following min-max problem:\nmin gθ sup f∈F E x∼Pr f(x)− E z∼pz f(gθ(z))\nGiven samples {xi, 1 . . . N} from Pr and samples {zi, 1 . . .M} from pz we shall solve the following empirical problem:\nmin gθ sup f∈F\n1\nN\nN∑\ni=1\nf(xi)− 1\nM\nM∑\nj=1\nf(gθ(zj)),\nin the following we consider for simplicity M = N ."
    }, {
      "heading" : "3. Mean Feature Matching GAN",
      "text" : "In this Section we introduce a class of functions F having the form 〈v,Φω(x)〉, where vector v ∈ Rm and Φω : X → Rm a non linear feature map (typically parametrized by a neural network). We show in this Section that the IPM defined by this function class corresponds to the distance between the mean of the distribution in the Φω space."
    }, {
      "heading" : "3.1. IPMµ,q: Mean Matching IPM",
      "text" : "More formally consider the following finite dimensional Hilbert space:\nFv,ω,p = {f(x) = 〈v,Φω(x)〉 ∣∣∣v ∈ Rm, ‖v‖p ≤ 1,\nΦω : X → Rm, ω ∈ Ω},\nwhere ‖.‖p is the `p norm. Fv,ω,p is the space of bounded linear functions defined in the non linear feature space induced by the parametric feature map Φω . Φω is typically a multi-layer neural network. The parameter space Ω is chosen so that the function space F is bounded.\nWe recall here simple definitions on dual norms that will be necessary for the analysis in this Section. Let p, q ∈ [1,∞], such that 1p + 1 q = 1. By duality of norms we have: ‖x‖q =\nmaxv,‖v‖p≤1 〈v, x〉 and the Holder inequality: ∣∣∣ 〈x, y〉 ∣∣∣ ≤ ‖x‖p ‖y‖q . From Holder inequality we obtain the following bound:\n∣∣∣f(x) ∣∣∣ = ∣∣∣ 〈v,Φωx〉 ∣∣∣ ≤ ‖v‖p ‖Φω(x)‖q ≤ ‖Φω(x)‖q .\nTo ensure that f is bounded, it is enough to consider Ω such that ‖Φω(x)‖q ≤ B, ∀ x ∈ X . Given that the space X is bounded it is sufficient to control the norm of the weights and biases of the neural network Φω by regularizing the `∞ (clamping) or `2 norms (weight decay) to ensure the boundedness of Fv,ω,p.\nNow that we ensured the boundedness of Fv,ω,p , we look\nat its corresponding IPM:\ndFv,ω,p(P,Q) = sup f∈Fv,ω,p E x∼P f(x)− E x∼Q f(x)\n= max ω∈Ω,v,||v||p≤1 〈 v, E x∼P Φω(x)− E x∼Q Φω(x) 〉\n= max ω∈Ω\n[ max\nv,||v||p≤1\n〈 v, E x∼P Φω(x)− E x∼Q Φω(x) 〉]\n= max ω∈Ω ‖µω(P)− µω(Q)‖q ,\nwhere we used the linearity of the function class and expectation in the first equality and the definition of the dual norm ‖.‖q in the last equality and our definition of the mean feature embedding of a distribution P ∈P(X ):\nµω(P) = E x∼P\n[ Φω(x) ] ∈ Rm.\nWe see that the IPM indexed by Fv,ω,p, corresponds to the Maximum mean feature Discrepancy between the two distributions. Where the maximum is taken over the parameter set Ω, and the discrepancy is measured in the `q sense between the mean feature embedding of P and Q. In other words this IPM is equal to the worst case `q distance between mean feature embeddings of distributions. We refer in what follows to dFv,ω,p as IPMµ,q ."
    }, {
      "heading" : "3.2. Mean Feature Matching GAN",
      "text" : "We turn now to the problem of learning generative models with IPMµ,q . Setting F to Fv,ω,p in Equation (2) yields to the following min-max problem for learning generative models:\nmin gθ max ω∈Ω max v,||v||p≤1 Lµ(v, ω, θ), (3)\nwhere\nLµ(v, ω, θ) = 〈 v, E x∼Pr Φω(x)− E z∼pz Φω(gθ(z)) 〉 ,\nor equivalently using the dual norm:\nmin gθ max ω∈Ω ‖µω(Pr)− µω(Pθ)‖q , (4)\nwhere µω(Pθ) = E z∼pz Φω(gθ(z)).\nWe refer to formulations (3) and (4) as primal and dual formulation respectively.\nThe dual formulation in Equation (4) has a simple interpretation as an adversarial learning game: while the feature space Φω tries to map the mean feature embeddings of the real distribution Pr and the fake distribution Pθ to be far apart (maximize the `q distance between the mean embeddings), the generator gθ tries to put them close one to another. Hence we refer to this IPM as mean matching IPM.\nWe devise empirical estimates of both formulations in Equations (3) and (4), given samples {xi, i = 1 . . . N} from Pr, and {zi, i = 1 . . . N} from pz . The primal formulation (3) is more amenable to stochastic gradient descent since the expectation operation appears in a linear way in the cost function of Equation (3), while it is non linear in the cost function of the dual formulation (4) (inside the norm). We give here the empirical estimate of the primal formulation by giving empirical estimates L̂µ(v, ω, θ) of the primal cost function:\n(Pµ) : min gθ max ω∈Ω\nv,||v||p≤1\n〈 v, 1\nN\nN∑\ni=1\nΦω(xi)− 1\nN\nN∑\ni=1\nΦω(gθ(zi))\n〉\nAn empirical estimate of the dual formulation can be also given as follows:\n(Dµ) : min gθ max ω∈Ω ∥∥∥∥∥ 1 N N∑\ni=1\nΦω(xi)− 1\nN\nN∑\ni=1\nΦω(gθ(zi)) ∥∥∥∥∥ q\nIn what follows we refer to the problem given in (Pµ) and (Dµ) as `q Mean Feature Matching GAN. Note that while (Pµ) does not need real samples for optimizing the generator, (Dµ) does need samples from real and fake. Furthermore we will need a large minibatch of real data in order to get a good estimate of the expectation. This makes the primal formulation more appealing computationally."
    }, {
      "heading" : "3.3. Related Work",
      "text" : "We show in this Section that several previous works on GAN, can be written within the `q mean feature matching IPM (IPMµ,q) minimization framework:\na) Wasserstein GAN (WGAN): (Arjovsky et al., 2017) recently introduced Wasserstein GAN. While the main motivation of this paper is to consider the IPM indexed by Lipchitz functions on X , we show that the particular parametrization considered in (Arjovsky et al., 2017) corresponds to a mean feature matching IPM. Indeed (Arjovsky et al., 2017) consider the function set parametrized by a convolutional neural network with a linear output layer and weight clipping. Written in our notation, the last linear layer corresponds to v, and the convolutional neural network below corresponds to Φω . Since v and ω are simultaneously clamped, this corresponds to restricting v to be in the `∞ unit ball, and to define in Ω constraints on the `∞ norms of ω. In other words (Arjovsky et al., 2017) consider functions in Fv,ω,p, where p = ∞ . Setting p = ∞ in Equation (3), and q = 1 in Equation (4), we see that in WGAN we are minimizing dFv,ω,∞ , that corresponds to `1 mean feature matching GAN.\nb) MMD GAN: Let H be a Reproducing Kernel Hilbert Space (RKHS) with k its reproducing kernel. For any valid\nPSD kernel k there exists an infinite dimensional feature map Φ : X → H such that: k(x, y) = 〈Φ(x),Φ(y)〉H . For an RKHS Φ is noted usually k(x, .) and satisfies the reproducing proprety:\nf(x) = 〈f,Φ(x)〉H , for all f ∈H .\nSetting F = { f ∣∣ ||f ||H ≤ 1 } in Equation (1) the IPM dF has a simple expression:\ndF (P,Q) = sup f,||f ||H ≤1\n{〈 f, E x∼P Φ(x)− E x∼Q Φ(x) 〉}\n= ∣∣∣ ∣∣∣µ(P)− µ(Q) ∣∣∣ ∣∣∣ H , (5)\nwhere µ(P) = E x∼P Φ(x) ∈H is the so called kernel mean embedding (Muandet et al., 2017). dF in this case is the so called Maximum kernel Mean Discrepancy (MMD) (Gretton et al., 2012) . Using the reproducing property MMD has a closed form in term of the kernel k. Note that IPMµ,2 is a special case of MMD when the feature map is finite dimensional, with the main difference that the feature map is fixed in case of MMD and learned in the case of IPMµ,2. (Li et al., 2015; Dziugaite et al., 2015) showed that GANs can be learned using MMD with a fixed gaussian kernel.\nc) Improved GAN: Building on the pioneering work of (Goodfellow et al., 2014), (Salimans et al., 2016) suggested to learn the discriminator with the binary cross entropy criterium of GAN while learning the generator with `2 mean feature matching. The main difference of our IPMµ,2 GAN is that both “discriminator” and “generator” are learned using the mean feature matching criterium, with additional constraints on Φω ."
    }, {
      "heading" : "4. Covariance Feature Matching GAN",
      "text" : ""
    }, {
      "heading" : "4.1. IPMΣ: Covariance Matching IPM",
      "text" : "As follows from our discussion of mean matching IPM comparing two distributions amounts to comparing a first order statistics, the mean of their feature embeddings. Here we ask the question how to incorporate second order statistics, i.e covariance information of feature embeddings.\nIn this Section we will provide a function space F such that the IPM in Equation (1) captures second order information. Intuitively a distribution of points represented in a feature space can be approximately captured by its mean and its covariance. Commonly in unsupervised learning, this covariance is approximated by its first k principal components (PCA directions), which capture the directions of maximal variance in the data. Similarly, the metric we define in this Section will find k directions that maximize the discrimination between the two covariances. Adding second order information would enrich the discrimination power of the feature space (See Figure 1).\nThis intuition motivates the following function space of bilinear functions in Φω :\nFU,V,ω = {f(x) = k∑\nj=1\n〈uj ,Φω(x)〉 〈vj ,Φω(x)〉\n{uj}, {vj} ∈ Rm orthonormal j = 1 . . . k, ω ∈ Ω}.\nNote that the set FU,V,ω is symmetric and hence the IPM indexed by this set (Equation (1)) is well defined. It is easy to see that FU,V,ω can be written as:\nFU,V,ω = {f(x) = 〈 U>Φω(x), V >Φω(x) 〉 ) ∣∣∣\nU, V ∈ Rm×k, U>U = Ik, V >V = Ik, ω ∈ Ω}\nthe parameter set Ω is such that the function space remains bounded. Let\nΣω(P) = E x∼P\nΦω(x)Φω(x) >,\nbe the uncentered feature covariance embedding of P. It is easy to see that E\nx∼P f(x) can be written in terms of U, V,\nand Σω(P):\nE x∼P f(x) = E x∼P\n〈 U>Φ(x), V >Φ(x) 〉 = Trace(U>Σω(P)V ).\nFor a matrix A ∈ Rm×m, we note by σj(A) the singular value of A, j = 1 . . .m in descending order. The 1- schatten norm or the nuclear norm is defined as the sum of singular values, ‖A‖∗ = ∑m j=1 σj . We note by [A]k the k-th rank approximation of A. We note Om,k = {M ∈ Rm×k|M>M = Ik}. Consider the IPM induced by this function set. Let P,Q ∈P(X ) we have:\ndFU,V,ω (P,Q) = sup f∈FU,V,ω E x∼P f(x)− E x∼Q f(x)\n= max ω∈Ω U,V ∈Om,k E x∼P f(x)− E x∼Q f(x)\n= max ω∈Ω max U,V ∈Om,k\nTrace [ U>(Σω(P)− Σω(Q))V ]\n= max ω∈Ω\nk∑\nj=1\nσj (Σω(P)− Σω(Q))\n= max ω∈Ω ‖[Σω(P)− Σω(Q)]k‖∗ ,\nwhere we used the variational definition of singular values and the definition of the nuclear norm. Note that U, V are the left and right singuular vectors of Σω(P)−Σω(Q). Hence dFU,V,ω measures the worst case distance between the covariance feature embeddings of the two distributions, this distance is measured with the Ky Fan k-norm (nuclear norm of truncated covariance difference). Hence we call this IPM covariance matching IPM, IPMΣ."
    }, {
      "heading" : "4.2. Covariance Matching GAN",
      "text" : "Turning now to the problem of learning a generative model gθ of Pr ∈P(X ) using IPMΣ we shall solve:\nmin gθ dFU,V,ω (Pr,Pθ),\nthis has the following primal formulation:\nmin gθ max ω∈Ω,U,V ∈Om,k Lσ(U, V, ω, θ), (6)\nwhere Lσ(U, V, ω, θ) = E x∼Pr\n〈 U>Φω(x), V >Φω(x)) 〉\n− E z∼pz\n〈 U>Φω(gθ(z)), V >Φω(gθ(z)) 〉 ,\nor equivalently the following dual formulation:\nmin gθ max ω∈Ω ‖[Σω(Pr)− Σω(Pθ)]k‖∗ , (7)\nwhere Σω(Pθ) = Ez∼pzΦω(gθ(z))Φω(gθ(z))>.\nThe dual formulation in Equation (7) shows that learning generative models with IPMΣ, consists in an adversarial game between the feature map and the generator, when the feature maps tries to maximize the distance between the feature covariance embeddings of the distributions, the generator tries to minimize this distance. Hence we call learning with IPMΣ, covariance matching GAN.\nWe give here an empirical estimate of the primal formulation in Equation (6) which is amenable to stochastic gradient. The dual requires nuclear norm minimization and is more involved. Given {xi, xi ∼ Pr}, and {zj , zj ∼ pz}, the covariance matching GAN can be written as follows:\nmin gθ max ω∈Ω,U,V ∈Om,k L̂σ(U, V, ω, θ), (8)\nwhere L̂σ(U, V, ω, θ) = 1\nN\nN∑\ni=1\n〈 U>Φω(xi), V >Φω(xi) 〉\n− 1 N\nN∑\nj=1\n〈 U>Φω(gθ(zj)), V >Φω(gθ(zj)) 〉 ."
    }, {
      "heading" : "4.3. Mean and Covariance Matching GAN",
      "text" : "In order to match first and second order statistics we propose the following simple extension:\nmin gθ max ω∈Ω,v,||v||p≤1 U,V ∈Om,k Lµ(v, ω, θ) + Lσ(U, V, ω, θ),\nthat has a simple dual adversarial game interpretation\nmin gθ max ω∈Ω ‖µω(P)− µω(Pθ)‖q+‖[Σω(Pr)− Σω(Pθ)]k‖∗ ,\nwhere the discriminator finds a feature space that discriminates between means and variances of real and fake, and the generator tries to match the real statistics. We can also give empirical estimates of the primal formulation similar to expressions given in the paper."
    }, {
      "heading" : "5. Algorithms",
      "text" : "We present in this Section our algorithms for mean and covariance feature matching GAN (McGan) with IPMµ,q and IPMΣ.\nMean Matching GAN. Primal Pµ: We give in Algorithm 1 an algorithm for solving the primal IPMµ,q GAN (Pµ). Algorithm 1 is adapted from (Arjovsky et al., 2017) and corresponds to their algorithm for p =∞. The main difference is that we allow projection of v on different `p balls, and we maintain the clipping of ω to ensure boundedness of Φω . For example for p = 2, projB`2 (v) = min(1, 1 ‖v‖2\n)v. For p =∞ we obtain the same clipping in (Arjovsky et al., 2017) projB`∞ (v) = clip(v,−c, c) for c = 1. Dual Dµ: We give in Algorithm 2 an algorithm for solving the dual formulation IPMµ,q GAN (Dµ). As mentioned earlier we need samples from “real” and “fake” for training both generator and the “critic” feature space.\nCovariance Matching GAN. Primal PΣ: We give in Algorithm 3 an algorithm for solving the primal of IPMΣ GAN (Equation (8)). The algorithm performs a stochastic gradient ascent on (ω,U, V ) and a descent on θ. We maintain clipping on ω to ensure boundedness of Φω , and perform a QR retraction on the Stiefel manifoldOm,k (Absil et al., 2007), maintaining orthonormality of U and V .\nAlgorithm 1 Mean Matching GAN - Primal (Pµ) Input: p to define the ball of v ,η Learning rate, nc number of iterations for training the critic, c clipping or weight decay parameter, N batch size Initialize v, ω, θ repeat\nfor j = 1 to nc do Sample a minibatch xi, i = 1 . . . N, xi ∼ Pr Sample a minibatch zi, i = 1 . . . N, zi ∼ pz (gv, gω)← (∇vL̂µ(v, ω, θ),∇ωL̂µ(v, ω, θ)) (v, ω)← (v, ω) + η RMSProp ((v, ω), (gv, gω)) {Project v on `p ball, B`p = {x, ‖x‖p ≤ 1}} v ← projB`p (v) ω ← clip(ω,−c, c) {Ensure Φω is bounded} end for Sample zi, i = 1 . . . N, zi ∼ pz dθ ← −∇θ 〈 v, 1N ∑N i=1 Φω(gθ(zi)) 〉\nθ ← θ − η RMSProp (θ, dθ) until θ converges"
    }, {
      "heading" : "6. Experiments",
      "text" : "We train McGan for image generation with both Mean Matching and Covariance Matching objectives. We show generated images on the labeled faces in the wild (lfw)\nAlgorithm 2 Mean Matching GAN - Dual (Dµ) Input: q the matching `q norm ,η Learning rate, nc number of iterations for training the critic, c clipping or weight decay parameter, N batch size Initialize v, ω, θ repeat\nfor j = 1 to nc do Sample a minibatch xi, i = 1 . . . N, xi ∼ Pr Sample a minibatch zi, i = 1 . . . N, zi ∼ pz ∆ω,θ ← 1N ∑N i=1 Φω(xi)− 1N ∑N i=1 Φω(gθ(zi))\ngω ← ∇ω ‖∆ω,θ‖q ω ← ω + η RMSProp (ω, gω) ω ← clip(ω,−c, c) {Ensure Φω is bounded}\nend for Sample zi, i = 1 . . . N, zi ∼ pz Sample xi, i = 1 . . .M, xi ∼ Pr (M > N) ∆ω,θ ← 1M ∑M i=1 Φω(xi)− 1N ∑N i=1 Φω(gθ(zi)) dθ ← ∇θ ‖∆ω,θ‖q θ ← θ − η RMSProp (θ, dθ)\nuntil θ converges\nAlgorithm 3 Covariance Matching GAN - Primal (PΣ) Input: k the number of components ,η Learning rate, nc number of iterations for training the critic, c clipping or weight decay parameter, N batch size Initialize U, V, ω, θ repeat\nfor j = 1 to nc do Sample a minibatch xi, i = 1 . . . N, xi ∼ Pr Sample a minibatch zi, i = 1 . . . N, zi ∼ pz G← (∇U ,∇V ,∇ω)L̂σ(U, V, ω, θ) (U, V, ω)← (U, V, ω)+η RMSProp ((U, V, ω), G) { Project U and V on the Stiefel manifold Om,k} Qu, Ru ← QR(U) su ← sign(diag(Ru)) Qv, Rv ← QR(V ) sv ← sign(diag(Rv)) U ← QuDiag(su) V ← QvDiag(sv) ω ← clip(ω,−c, c) {Ensure Φω is bounded} end for Sample zi, i = 1 . . . N, zi ∼ pz dθ ← −∇θ 1N ∑N j=1 〈UΦω(gθ(zj)), V Φω(gθ(zj))〉\nθ ← θ − η RMSProp (θ, dθ) until θ converges\n(Huang et al., 2007), LSUN bedrooms (Yu et al., 2015), and cifar-10 (Krizhevsky & Hinton, 2009) datasets.\nIt is well-established that evaluating generative models is hard (Theis et al., 2016). Many GAN papers rely on a combination of samples for quality evaluation, supplemented by a number of heuristic quantitative measures. We will mostly focus on training stability by showing plots of the\nloss function, and will provide generated samples to claim comparable sample quality between methods, but we will avoid claiming better sample quality. These samples are all generated at random and are not cherry-picked.\nThe design of gθ and Φω are following DCGAN principles (Radford et al., 2015), with both gθ and Φω being a convolutional network with batch normalization (Ioffe & Szegedy, 2015) and ReLU activations. Φω has output size bs × F × 4 × 4. The inner product can then equivalently be implemented as conv(4x4, F->1) or flatten + Linear(4*4*F -> 1). We generate 64× 64 images for lfw and LSUN and 32× 32 images on cifar, and train with minibatches of size 64. We follow the experimental framework and implementation of (Arjovsky et al., 2017), where we ensure the boundedness of Φω by clipping the weights pointwise to the range [−0.01, 0.01]. Primal versus dual form of mean matching. We trained mean matching GANs both in the primal and dual form, see respectively Algorithm 1 and 2. Samples are shown in Figure 2. The primal formulation of IPMµ,1 GAN corresponds to clipping v, i.e. the original WGAN, while for IPMµ,2 we divide v by its `2 norm if it becomes larger than 1. In the dual formulation, for q = 2 we noticed little difference between maximizing the `2 norm or its square.\nWe observed that the default learning rates from WGAN (5e-5) are optimal for both primal and dual formulation. Figure 3 shows the loss (i.e. IPM estimate) dropping steadily for both the primal and dual formulation independently of the choice of the `q norm. We also observed that during the whole training process, samples generated from the same noise vector across iterations, remain similar in nature (face identity, bedroom style), while details and background will evolve. This qualitative observation indicates valuable stability of the training process.\nFor the dual formulation (Algorithm 2), we confirmed the hypothesis that we need a good estimate of µω(Pr) in order to compute the gradient of the generator ∇θ: we needed to increase the minibatch size of real threefold to 3× 64. Covariance GAN. We now experimentally investigate the IPM defined by covariance matching. For this section and the following, we use only the primal formulation, i.e. with explicit uj and vj orthonormal (Algorithm 3). Figure 4 and 5 show samples and loss from lfw and LSUN training respectively. We use Algorithm 3 with k = 16 components. We obtain samples of comparable quality to the mean matching formulations (Figure 2), and we found training to be stable independent of hyperparameters like number of components k varying between 4 and 64.\nCovariance GAN with labels and conditioning. Finally, we conduct experiments on the cifar-10 dataset, where we will leverage the additional label information by training\na conditional GAN (Mirza & Osindero, 2014). The way we incorporate label information is following InfoGAN (Chen et al., 2016) and AC-GAN (Odena et al., 2016), where both real and generated data are labeled, but the label is not given as input to the discriminator. The generator sees the label by appending a one-hot encoding along the feature map dimension, i.e. the generator receives an input vector of size (nz + 10) × 1 × 1. The classifier is a linear output layer S on top of Φω followed by softmax. We now optimize a combination of the original IPM loss in the primal formulation with the cross-entropy loss CE= −Ex,ylogsoftmax(〈Sy,Φω(x)〉).\nDuring the nc critic training iterations, we alternate between mazimizing\n• the IPM L̂σ alone, where gθ gets conditioning labels at random, and\n• L̂σ−λDCE, where gθ gets conditioning labels matching the real labels.\nThe generator is trained by sampling with random labels y and always minimizes L̂σ + λGCE.\nResults are shown in figure 6. Notice rows corresponding to recognizable classes, while the noise z (shared within each column) clearly determines other elements of the visual style like dominant color, across label conditioning. Additional experimental results, with combinations of Mean and Covariance Matching are presented in the supplementary material."
    }, {
      "heading" : "7. Discussion",
      "text" : "We noticed the influence of clipping on the capacity of the critic: a higher number of feature maps was needed to compensate for clipping. The question remains what alternatives to clipping of Φω can ensure the boundedness. For example, we succesfully used an `2 penalty on the weights of Φω . Other directions are to explore geodesic distances between the covariances (Arsigny et al., 2006), and extensions of the IPM framework to the multimodal setting (Isola et al., 2016)."
    }, {
      "heading" : "A. Subspace Matching Interpretation of Covariance Matching GAN",
      "text" : "Let ∆ω = Σω(P) − Σω(Q). ∆ω is a symmetric matrix but not PSD, which has the property that its eigenvalues λj are related to its singular values as given by: σj = |λj | and its left and right singular vectors coincides with its eigenvectors and satisfy the following equality uj = sign(λj)vj . One can ask here if we can avoid having both U, V in the definition of IPMΣ since at the optimum uj = ±vj . One could consider δEω(Pr,Pθ) defined as follows:\nmax ω∈Ω,U∈Om,k E x∼Pr ‖UΦω(x)‖2\nEnergy in the subspace of real data\n− E z∼pz ‖UΦω(gθ(z))‖2\nEnergy in the subspace of fake data\n,\nand then solve for mingθ δEω(Pr,Pθ). Note that:\nδEω(Pr,Pθ) = max ω∈Ω,U∈Om,k\nTrace(U>(Σω(Pr)− Σω(Pθ))U)\n= max ω∈Ω\nk∑\ni=1\nλi(∆ω)\nδEω is not symmetric furthermore the sum of those eigenvalues is not guaranteed to be positive and hence δEω is not guaranteed to be non negative, and hence does not define an IPM. Noting that σi(∆ω) = |λi(∆ω)|,we have that:\nIPMΣ(Pr,Pθ) = k∑\ni=1\nσi(∆ω) ≥ k∑\ni=1\nλi(∆ω) = δEω(Pr,Pθ).\nHence δE is not an IPM but can be optimized as a lower bound of the IPMΣ. This would have an energy interpretation as in the energy based GAN introduced recently (Zhao et al., 2017): the discriminator defines a subspace that has higher energy on real data than fake data, and the generator maximizes his energy in this subspace."
    }, {
      "heading" : "B. Mean and Covariance Matching Loss Combinations",
      "text" : "We report below samples for McGan, with different IPMµ,q and IPMΣ combinations. All results are reported for the same architecture choice for generator and discriminator, which produced qualitatively good samples with IPMΣ (Same one reported in Section 6 in the main paper). Note that in Figure 7 with the same hyper-parameters and architecture choice, WGAN failed to produce good sample. In other configurations training converged."
    } ],
    "references" : [ {
      "title" : "Optimization Algorithms on Matrix Manifolds",
      "author" : [ "Absil", "P.-A", "R. Mahony", "R. Sepulchre" ],
      "venue" : null,
      "citeRegEx" : "Absil et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Absil et al\\.",
      "year" : 2007
    }, {
      "title" : "Log-euclidean metrics for fast and simple calculus on diffusion tensors",
      "author" : [ "Arsigny", "Vincent", "Fillard", "Pierre", "Pennec", "Xavier", "Ayache", "Nicholas" ],
      "venue" : "In Magnetic Resonance in Medicine,",
      "citeRegEx" : "Arsigny et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Arsigny et al\\.",
      "year" : 2006
    }, {
      "title" : "Infogan: Interpretable representation learning by information maximizing generative adversarial nets",
      "author" : [ "Chen", "Xi", "Duan", "Yan", "Houthooft", "Rein", "Schulman", "John", "Sutskever", "Ilya", "Abbeel", "Pieter" ],
      "venue" : null,
      "citeRegEx" : "Chen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "Training generative neural networks via maximum mean discrepancy optimization",
      "author" : [ "Dziugaite", "Gintare Karolina", "Roy", "Daniel M", "Ghahramani", "Zoubin" ],
      "venue" : "In UAI,",
      "citeRegEx" : "Dziugaite et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Dziugaite et al\\.",
      "year" : 2015
    }, {
      "title" : "Generative adversarial nets",
      "author" : [ "Goodfellow", "Ian", "Pouget-Abadie", "Jean", "Mirza", "Mehdi", "Xu", "Bing", "Warde-Farley", "David", "Ozair", "Sherjil", "Courville", "Aaron", "Bengio", "Yoshua" ],
      "venue" : "In NIPS",
      "citeRegEx" : "Goodfellow et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Goodfellow et al\\.",
      "year" : 2014
    }, {
      "title" : "A kernel two-sample test",
      "author" : [ "Gretton", "Arthur", "Borgwardt", "Karsten M", "Rasch", "Malte J", "Schölkopf", "Bernhard", "Smola", "Alexander" ],
      "venue" : null,
      "citeRegEx" : "Gretton et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Gretton et al\\.",
      "year" : 2012
    }, {
      "title" : "Labeled faces in the wild: A database for studying face recognition in unconstrained environments",
      "author" : [ "Huang", "Gary B", "Ramesh", "Manu", "Berg", "Tamara", "Learned-Miller", "Erik" ],
      "venue" : "Technical report,",
      "citeRegEx" : "Huang et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Huang et al\\.",
      "year" : 2007
    }, {
      "title" : "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
      "author" : [ "Ioffe", "Sergey", "Szegedy", "Christian" ],
      "venue" : "Proc. ICML,",
      "citeRegEx" : "Ioffe et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Ioffe et al\\.",
      "year" : 2015
    }, {
      "title" : "Image-to-image translation with conditional adversarial networks",
      "author" : [ "Isola", "Phillip", "Zhu", "Jun-Yan", "Zhou", "Tinghui", "Efros", "Alexei A" ],
      "venue" : "arxiv,",
      "citeRegEx" : "Isola et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Isola et al\\.",
      "year" : 2016
    }, {
      "title" : "Auto-encoding variational bayes",
      "author" : [ "Kingma", "Diederik P", "Welling", "Max" ],
      "venue" : null,
      "citeRegEx" : "Kingma et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Kingma et al\\.",
      "year" : 2013
    }, {
      "title" : "Learning multiple layers of features from tiny images",
      "author" : [ "A. Krizhevsky", "G. Hinton" ],
      "venue" : "Master’s thesis,",
      "citeRegEx" : "Krizhevsky and Hinton,? \\Q2009\\E",
      "shortCiteRegEx" : "Krizhevsky and Hinton",
      "year" : 2009
    }, {
      "title" : "Generative moment matching networks",
      "author" : [ "Li", "Yujia", "Swersky", "Kevin", "Zemel", "Richard" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Li et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2015
    }, {
      "title" : "Conditional generative adversarial nets",
      "author" : [ "Mirza", "Mehdi", "Osindero", "Simon" ],
      "venue" : "Arxiv,",
      "citeRegEx" : "Mirza et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Mirza et al\\.",
      "year" : 2014
    }, {
      "title" : "Kernel mean embedding of distributions: A review and beyond",
      "author" : [ "Muandet", "Krikamol", "Fukumizu", "Kenji", "Sriperumbudur", "Bharath", "Schlkopf", "Bernhard" ],
      "venue" : null,
      "citeRegEx" : "Muandet et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Muandet et al\\.",
      "year" : 2017
    }, {
      "title" : "Integral probability metrics and their generating classes of functions",
      "author" : [ "Muller", "Alfred" ],
      "venue" : "Advances in Applied Probability,",
      "citeRegEx" : "Muller and Alfred.,? \\Q1997\\E",
      "shortCiteRegEx" : "Muller and Alfred.",
      "year" : 1997
    }, {
      "title" : "f-gan: Training generative neural samplers using variational divergence minimization",
      "author" : [ "Nowozin", "Sebastian", "Cseke", "Botond", "Tomioka", "Ryota" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Nowozin et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Nowozin et al\\.",
      "year" : 2016
    }, {
      "title" : "Conditional image synthesis with auxiliary classifier gans",
      "author" : [ "Odena", "Augustus", "Olah", "Christopher", "Shlens", "Jonathon" ],
      "venue" : null,
      "citeRegEx" : "Odena et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Odena et al\\.",
      "year" : 2016
    }, {
      "title" : "Unsupervised representation learning with deep convolutional generative adversarial networks",
      "author" : [ "Radford", "Alec", "Metz", "Luke", "Chintala", "Soumith" ],
      "venue" : "Arxiv,",
      "citeRegEx" : "Radford et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Radford et al\\.",
      "year" : 2015
    }, {
      "title" : "Random features for large-scale kernel machines",
      "author" : [ "Rahimi", "Ali", "Recht", "Benjamin" ],
      "venue" : "In NIPS",
      "citeRegEx" : "Rahimi et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Rahimi et al\\.",
      "year" : 2008
    }, {
      "title" : "Improved techniques for training gans",
      "author" : [ "Salimans", "Tim", "Goodfellow", "Ian", "Zaremba", "Wojciech", "Cheung", "Vicki", "Radford", "Alec", "Chen", "Xi" ],
      "venue" : null,
      "citeRegEx" : "Salimans et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Salimans et al\\.",
      "year" : 2016
    }, {
      "title" : "On integral probability metrics, phi -divergences and binary classification",
      "author" : [ "Sriperumbudur", "Bharath K", "Fukumizu", "Kenji", "Gretton", "Arthur", "Schlkopf", "Bernhard", "Lanckriet", "Gert R. G" ],
      "venue" : null,
      "citeRegEx" : "Sriperumbudur et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Sriperumbudur et al\\.",
      "year" : 2009
    }, {
      "title" : "On the empirical estimation of integral probability metrics",
      "author" : [ "Sriperumbudur", "Bharath K", "Fukumizu", "Kenji", "Gretton", "Arthur", "Schlkopf", "Bernhard", "Lanckriet", "Gert R. G" ],
      "venue" : "Electronic Journal of Statistics,",
      "citeRegEx" : "Sriperumbudur et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Sriperumbudur et al\\.",
      "year" : 2012
    }, {
      "title" : "A note on the evaluation of generative models",
      "author" : [ "Theis", "Lucas", "Oord", "Aäron van den", "Bethge", "Matthias" ],
      "venue" : null,
      "citeRegEx" : "Theis et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Theis et al\\.",
      "year" : 2016
    }, {
      "title" : "Lsun: Construction of a large-scale image dataset using deep learning with humans in the loop",
      "author" : [ "Yu", "Fisher", "Zhang", "Yinda", "Song", "Shuran", "Seff", "Ari", "Xiao", "Jianxiong" ],
      "venue" : "arXiv preprint arXiv:1506.03365,",
      "citeRegEx" : "Yu et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Yu et al\\.",
      "year" : 2015
    }, {
      "title" : "Energy based generative adversarial networks",
      "author" : [ "Zhao", "Junbo", "Mathieu", "Michael", "Lecun", "Yann" ],
      "venue" : null,
      "citeRegEx" : "Zhao et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Zhao et al\\.",
      "year" : 2017
    } ],
    "referenceMentions" : [ {
      "referenceID" : 4,
      "context" : "Variational AutoEncoders (VAE) (Kingma & Welling, 2013) and Generative Adversarial Networks (GAN) (Goodfellow et al., 2014) fall under this category.",
      "startOffset" : 98,
      "endOffset" : 123
    }, {
      "referenceID" : 4,
      "context" : "The original work of (Goodfellow et al., 2014) showed that in GAN this objective is the Jensen-Shannon divergence.",
      "startOffset" : 21,
      "endOffset" : 46
    }, {
      "referenceID" : 15,
      "context" : "(Nowozin et al., 2016) showed that otherφ-divergences can be successfully used.",
      "startOffset" : 0,
      "endOffset" : 22
    }, {
      "referenceID" : 11,
      "context" : "The Maximum Mean Discrepancy objective (MMD) for GAN training was proposed in (Li et al., 2015; Dziugaite et al., 2015).",
      "startOffset" : 78,
      "endOffset" : 119
    }, {
      "referenceID" : 3,
      "context" : "The Maximum Mean Discrepancy objective (MMD) for GAN training was proposed in (Li et al., 2015; Dziugaite et al., 2015).",
      "startOffset" : 78,
      "endOffset" : 119
    }, {
      "referenceID" : 19,
      "context" : "in (Salimans et al., 2016), one can train the GAN discriminator using the objective of (Goodfellow et al.",
      "startOffset" : 3,
      "endOffset" : 26
    }, {
      "referenceID" : 4,
      "context" : ", 2016), one can train the GAN discriminator using the objective of (Goodfellow et al., 2014) while training the generator using mean feature matching.",
      "startOffset" : 68,
      "endOffset" : 93
    }, {
      "referenceID" : 24,
      "context" : "An energy based objective for GANs was also developed recently (Zhao et al., 2017).",
      "startOffset" : 63,
      "endOffset" : 82
    }, {
      "referenceID" : 13,
      "context" : "In this paper, inspired by the MMD distance and the kernel mean embedding of distributions (Muandet et al., 2017) we propose to embed distributions in a finite dimensional feature space and to match them based on their mean and covariance feature statistics.",
      "startOffset" : 91,
      "endOffset" : 113
    }, {
      "referenceID" : 19,
      "context" : "While mean matching was empirically used in (Salimans et al., 2016), we show in this work that it is theoretically grounded: similarly to the EM distance in (Arjovsky et al.",
      "startOffset" : 44,
      "endOffset" : 67
    }, {
      "referenceID" : 21,
      "context" : "By choosing F appropriately (Sriperumbudur et al., 2012; 2009), various distances between probability measures can be defined.",
      "startOffset" : 28,
      "endOffset" : 62
    }, {
      "referenceID" : 11,
      "context" : "In the next subsection following (Arjovsky et al., 2017; Li et al., 2015; Dziugaite et al., 2015) we show how to use IPM to learn generative models of distributions, we then specify a special set of functions F that makes the learning tractable.",
      "startOffset" : 33,
      "endOffset" : 97
    }, {
      "referenceID" : 3,
      "context" : "In the next subsection following (Arjovsky et al., 2017; Li et al., 2015; Dziugaite et al., 2015) we show how to use IPM to learn generative models of distributions, we then specify a special set of functions F that makes the learning tractable.",
      "startOffset" : 33,
      "endOffset" : 97
    }, {
      "referenceID" : 13,
      "context" : "where μ(P) = E x∼P Φ(x) ∈H is the so called kernel mean embedding (Muandet et al., 2017).",
      "startOffset" : 66,
      "endOffset" : 88
    }, {
      "referenceID" : 5,
      "context" : "dF in this case is the so called Maximum kernel Mean Discrepancy (MMD) (Gretton et al., 2012) .",
      "startOffset" : 71,
      "endOffset" : 93
    }, {
      "referenceID" : 11,
      "context" : "(Li et al., 2015; Dziugaite et al., 2015) showed that GANs can be learned using MMD with a fixed gaussian kernel.",
      "startOffset" : 0,
      "endOffset" : 41
    }, {
      "referenceID" : 3,
      "context" : "(Li et al., 2015; Dziugaite et al., 2015) showed that GANs can be learned using MMD with a fixed gaussian kernel.",
      "startOffset" : 0,
      "endOffset" : 41
    }, {
      "referenceID" : 4,
      "context" : "c) Improved GAN: Building on the pioneering work of (Goodfellow et al., 2014), (Salimans et al.",
      "startOffset" : 52,
      "endOffset" : 77
    }, {
      "referenceID" : 19,
      "context" : ", 2014), (Salimans et al., 2016) suggested to learn the discriminator with the binary cross entropy criterium of GAN while learning the generator with `2 mean feature matching.",
      "startOffset" : 9,
      "endOffset" : 32
    }, {
      "referenceID" : 0,
      "context" : "We maintain clipping on ω to ensure boundedness of Φω , and perform a QR retraction on the Stiefel manifoldOm,k (Absil et al., 2007), maintaining orthonormality of U and V .",
      "startOffset" : 112,
      "endOffset" : 132
    }, {
      "referenceID" : 6,
      "context" : "(Huang et al., 2007), LSUN bedrooms (Yu et al.",
      "startOffset" : 0,
      "endOffset" : 20
    }, {
      "referenceID" : 23,
      "context" : ", 2007), LSUN bedrooms (Yu et al., 2015), and cifar-10 (Krizhevsky & Hinton, 2009) datasets.",
      "startOffset" : 23,
      "endOffset" : 40
    }, {
      "referenceID" : 22,
      "context" : "It is well-established that evaluating generative models is hard (Theis et al., 2016).",
      "startOffset" : 65,
      "endOffset" : 85
    }, {
      "referenceID" : 17,
      "context" : "The design of gθ and Φω are following DCGAN principles (Radford et al., 2015), with both gθ and Φω being a convolutional network with batch normalization (Ioffe & Szegedy, 2015) and ReLU activations.",
      "startOffset" : 55,
      "endOffset" : 77
    }, {
      "referenceID" : 2,
      "context" : "The way we incorporate label information is following InfoGAN (Chen et al., 2016) and AC-GAN (Odena et al.",
      "startOffset" : 62,
      "endOffset" : 81
    }, {
      "referenceID" : 16,
      "context" : ", 2016) and AC-GAN (Odena et al., 2016), where both real and generated data are labeled, but the label is not given as input to the discriminator.",
      "startOffset" : 19,
      "endOffset" : 39
    }, {
      "referenceID" : 1,
      "context" : "Other directions are to explore geodesic distances between the covariances (Arsigny et al., 2006), and extensions of the IPM framework to the multimodal setting (Isola et al.",
      "startOffset" : 75,
      "endOffset" : 97
    }, {
      "referenceID" : 8,
      "context" : ", 2006), and extensions of the IPM framework to the multimodal setting (Isola et al., 2016).",
      "startOffset" : 71,
      "endOffset" : 91
    } ],
    "year" : 2017,
    "abstractText" : "We introduce new families of Integral Probability Metrics (IPM) for training Generative Adversarial Networks (GAN). Our IPMs are based on matching statistics of distributions embedded in a finite dimensional feature space. Mean and covariance feature matching IPMs allow for stable training of GANs, which we will call McGan. McGan minimizes a meaningful loss between distributions.",
    "creator" : "LaTeX with hyperref package"
  }
}