{
  "name" : "1702.08712.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : null,
    "authors" : [ "Tongliang Liu", "Gábor Lugosi", "Gergely Neu", "Dacheng Tao" ],
    "emails" : [ "tliang.liu@gmail.com,", "dacheng.tao@sydney.edu.au", "bor.lugosi@upf.edu", "gergely.neu@gmail.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n70 2.\n08 71\n2v 1\n[ st\nat .M\nL ]\n2 8\nWe introduce a notion of algorithmic stability of learning algorithms—that we term hypothesis stability—that captures stability of the hypothesis output by the learning algorithm in the normed space of functions from which hypotheses are selected.\ne main result of the paper bounds the generalization error of any learning algorithm in terms of its hypothesis stability. e bounds are based on martingale inequalities in the Banach space to which the hypotheses belong. We apply the general bounds to bound the performance of some learning algorithms based on empirical risk minimization and stochastic gradient descent.\n∗Parts of the work were done when Tongliang Liu was a visiting PhD student at Pompeu Fabra University.\n†School of Information Technologies, Faculty Engineering and Information Technologies, University of Sydney, Sydney, Australia, tliang.liu@gmail.com, dacheng.tao@sydney.edu.au\n‡Department of Economics and Business, Pompeu Fabra University, Barcelona, Spain, gabor.lugosi@upf.edu\n§ICREA, Pg. Llus Companys 23, 08010 Barcelona, Spain ¶Barcelona Graduate School of Economics ∥AI group, DTIC, Universitat Pompeu Fabra, Barcelona, Spain, gergely.neu@gmail.com"
    }, {
      "heading" : "1 Introduction",
      "text" : "Many efforts have beenmade to analyze various notions of algorithmic stability and prove that a broad spectrum of learning algorithms are stable in some sense. Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that ℓ2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., ℓp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al. [2017] proved that tasks in multi-task learning can act as regularizers and that multi-task learning in a very general se ing will therefore be uniformly stable under mild assumptions. e notion of algorithmic stability has been an important tool in deriving theoretical guarantees of the generalization abilities of learning algorithms. Various notions of stability have been introduced and have been exploited to derive generalization bounds. For some examples, Mukherjee et al. [2006] proved that a statistical form of leave-oneout stability is a sufficient and necessary condition for the generalization and learnability of empirical risk minimization learning algorithms; Shalev-Shwartz et al. [2010] defined a weaker notion, the so-called “on-average-replace-one-example stability”, and showed that this condition is both sufficient and necessary for the generalization and learnability of a general learning se ing.\nIn this paper we study learning algorithms that select a hypothesis (i.e., a function used for prediction) from a certain fixed class of functions belonging to a separable Banach space. We introduce a notion of hypothesis stability which measures the impact of changing a single training example on the hypothesis selected by the learning algorithm. is notion of stability is stronger than uniform algorithmic stability of Bousquet and Elisseeff [2002] that is only concerned about the change in the loss but not the hypothesis itself. However, as we will show, the new notion is still quite natural and holds for a variety of learning algorithms. On the other hand, it allows one to exploit martingale inequalities Boucheron et al. [2013] in the Banach space of the hypotheses. Indeed, the performance bounds we derive for stable algorithms depend on characteristics related to themartingale type of the Banach space.\nGeneralization bounds typically depend on the complexity of a class of hypotheses that can be chosen by the learning algorithm. Exploiting the local estimates of the complexity of the predefined hypothesis class is a promising way to obtain sharp bounds. Building on martingale inequalities in the Banach space of the hypotheses, we define a subset of the predefined hypothesis class, whose elements will (or will have a high probability to) be output by a learning algorithm, as the algorithmic hypothesis class, and study the complex-\nity of the algorithmic hypothesis class of hypothesis-stable learning algorithms. We show that, if the hypotheses belong to a Hilbert space, the upper bound of the Rademacher complexity of the algorithmic hypothesis class will converge at a fast rate of order O(1/n), where n is the sample size. e rest of the paper is organized as follows. Section 2 introduces the mathematical framework and the proposed notion of algorithmic stability. Section 3 presents the main results of this study, namely the generalization bounds in terms of hypothesis stability. Section 4 specializes the results to some learning algorithms, including empirical risk minimization and stochastic gradient descent. Section 5 concludes the paper."
    }, {
      "heading" : "2 Algorithmic Stability and Hypothesis Class",
      "text" : "We consider the classical statistical learning problem, where the value of a real random variable Y is to be predicted based on the observation of an another random variable X . Let S be a training sample of n i.i.d. pairs of random variables Z1 = (X1, Y1), . . . , Zn = (Xn, Yn) drawn from a fixed distribution P on a setZ = X ×Y , where X is the so-called feature space. A learning algorithm A : S ∈ Zn 7→ hS ∈ H is a mapping from Z\nn to a hypothesis class H that we assume to be a subset of a separable Banach space (B, ‖ · ‖). We focus on linear prediction problems, that is, when h(x) is a linear functional of x. We write h(x) = 〈h, x〉. In other words, we assume that the feature space X is the algebraic dual of the Banach space B. We denote the norm in X by ‖ · ‖∗. e output hS of the learning algorithm is a hypothesis used for predicting the value for Y .\nAn important special case is when B is a Hilbert space. In that case we may assume that X = B and 〈h, x〉 is the inner product in B. e quality of the predictions made by any hypothesis will be measured by a loss function ℓ : B × Z → R+ (where R+ denotes the set of positive reals). Specifically, ℓ(h, Z) measures the loss of predicting an example Z using a hypothesis h.\ne risk of h ∈ H is defined by\nR(h) = Eℓ(h, Z) ;\nwhile the empirical risk is\nRS(h) = 1\nn\nn ∑\ni=1\nℓ(h, Zi) .\nFor the output hS of a learning algorithm A, the generalization error is defined as\nR(hS)− RS(hS) . (1)\ne notion of algorithmic stability was proposed to measure the changes of outputs of a learning algorithm when the input is changed. In this paper, we assume that the learning algorithm is symmetric, that is, invariant to permutations of the examples in\nthe training sample. Various ways have been introduced to measure algorithmic stability. Here we recall the notion of uniform stability defined by Bousquet and Elisseeff [2002] for comparison purposes. is notion of stability relies on the altered sample Si = {Z1, . . . , Zi−1, Z ′ i, Zi+1, . . . , Zn}, the sample S with the i-th example being replaced by an independent copy of Zi.\nDefinition 1 (Uniform Stability). A learning algorithm A is β(n)-uniformly stable with respect to the loss function ℓ if for all i ∈ {1, . . . , n},\n|ℓ(hS, Z)− ℓ(hSi, Z)| ≤ β(n) ,\nwith probability one, where β(n) ∈ R+.\nWe propose the following, similar, notion that “acts” on the hypotheses directly, as opposed to the losses.\nDefinition 2 (Uniform Hypothesis Stability). A learning algorithm A is α(n)-uniformly hypothesis stable if for all i ∈ {1, . . . , n},\n‖hS − hSi‖ ≤ α(n) .\nwith probability one, where α(n) ∈ R+.\ne two notions of stability are closely related. Indeed, since\n‖hS − hSi‖ = sup x∈X :‖x‖∗≤1 (〈hS, x〉 − 〈hSi, x〉) ,\nif the loss function is Lipschitz in the sense that |ℓ(h, z)− ℓ(h′, z)| ≤ L |〈h, x〉 − 〈h′, x〉| for all z ∈ Z and h, h′ ∈ H and ‖X‖∗ is bounded by some B > 0 with probability one, then an α(n)-uniformly hypothesis stable learning algorithm is uniformly stable with β(n) = LBα(n). However, the reverse implication need not necessarily hold and hence uniform hypothesis stability is a stronger notion. e relationship between hypothesis stability and generalization performance hinges on a property of the Banach space B that is closely related to the martingale type of the space—see Pisier [2011] for a comprehensive account. For concreteness we assume that the Banach space B is (2, D)-smooth (or of martingale type 2) for some D > 0. is means that for all h, h′ ∈ B,\n‖h+ h′‖2 + ‖h− h′‖2 ≤ 2‖h‖2 + 2D2‖h′‖2 .\nNote that Hilbert spaces are (2, 1)-smooth. e property we need is described in the following result of [Pinelis, 1994]:\nProposition 1. LetD1, . . . , Dn be a martingale difference sequence taking values in a separable (2, D)-smooth Banach space B. en for any ǫ > 0,\nP\n(\nsup n≥1\n∥ ∥ ∥ ∥ ∥ n ∑\nt=1\nDt\n∥ ∥ ∥ ∥ ∥ ≥ cǫ ) ≤ 2 exp ( − ǫ2 2D2 ) ,\nwhere c is a constant satisfying that ∑∞ t=1 ‖Dt‖ 2 ∞ ≤ c 2 (and ‖Dt‖∞ is the essential supremum of the random variable ‖Dt‖).\nOur arguments extend, in a straightforward manner, to more general Banach spaces whenever exponential tail inequalities for boundedmartingale sequences similar to Proposition 1 are available. We stay with the assumption of (2, D)-smoothness for convenience and because it applies to the perhaps most important special case when B is a Hilbert space. We refer to Rakhlin and Sridharan [2015] for more information of martingale inequalities of this kind.\nA key property of stable algorithms, implied by the martingale inequality, is that the hypothesis hS output by the algorithm is concentrated—in the Banach space B—around its expectation EhS . is is established in the next simple lemma.\nLemma 1. Let the Banach space B be (2, D)-smooth. If a learning algorithm A is α(n)uniformly hypothesis stable, then, for any δ > 0,\nP\n(\n‖hS − EhS‖ ≤ Dα(n) √ 2n log(2/δ) ) ≥ 1− δ .\nProof. Introduce the martingale differences\nDt = E(hS|Z1, . . . , Zt)− E(hS|Z1, . . . , Zt−1)\nso that\nhS − EhS =\nn ∑\nt=1\nDt .\nWe have ∞ ∑\nt=1\n‖Dt‖ 2 ∞\n=\nn ∑\nt=1\n‖E(hS|Z1, . . . , Zt)− E(hS |Z1, . . . , Zt−1)‖ 2 ∞\n=\nn ∑\nt=1\n‖E(hS − hSt |Z1, . . . , Zt)‖ 2 ∞\n≤\nn ∑\nt=1\n(E(‖(hS − hSt‖∞|Z1, . . . , Zt)) 2\n≤ nα(n)2 .\nus, by Proposition 1, we have\nP\n(\n‖hS − EShS‖ ≥ α(n)D √ 2n log(2/δ) ) ≤ δ\nfor δ = 2 exp ( − ǫ 2\n2D2\n)\n."
    }, {
      "heading" : "3 Algorithmic Rademacher Complexity and General-",
      "text" : "ization Bound\ne concentration result of Lemma 1 justifies the following definition of the “algorithmic hypothesis class”: sincewith high probability hS concentrates around its expectationEhS , what ma ers in the generalization performance of the algorithm is the complexity of the ball centered at EhS and not that of the entire hypothesis class H . is observation may lead to significantly improved performance guarantees.\nDefinition 3 (AlgorithmicHypothesis Class). For a sample size n and confidence parameter δ > 0, let r = r(n, δ) = Dα(n) √\n2n log(2/δ) and define the algorithmic hypothesis class of a stable learning algorithm by\nBr = {h ∈ H| ‖h− EhS‖ ≤ r(n, δ)} .\nNote that, by Lemma 1, hS ∈ Br with probability at least 1− δ. We bound the generalization error (1) in terms of the Rademacher complexity Bartle and Mendelson\n[2003] of the algorithmic hypothesis class. e Rademacher complexity of a hypothesis classH on the feature space X is defined as\nR(H) = E sup h∈H\n1\nn\nn ∑\ni=1\nσi〈h,Xi〉 ,\nwhereσ1, . . . , σn are i.i.d. Rademacher variables that are uniformly distributed in {−1,+1}. e next theorem shows how the Rademacher complexity of the algorithmic hypothesis class can be bounded. e bound depends on the type of the feature space X . Recall that the Banach space (X , ‖ · ‖∗) is of type p ≥ 1 if there exists a constant Cp such that for all x1, . . . , xn ∈ X ,\nE\n∥ ∥ ∥ ∥ ∥ n ∑\ni=1\nσixi\n∥ ∥ ∥ ∥ ∥\n∗\n≤ Cp\n(\nn ∑\ni=1\n‖xi‖ p ∗\n)1/p\n.\nIn the important special casewhenX is a Hilbert space, the space is of type 2with constant C2 = 1.\neorem 1. Assume thatB is a (2, D)-smooth Banach space and that its dual X is of type p. Suppose that the marginal distribution of theXi is such that ‖Xi‖∗ ≤ B with probability one, for some B > 0. If a learning algorithm is α(n)-uniformly hypothesis stable, then the Rademacher complexity of the algorithmic hypothesis class Br on the feature space satisfies\nR(Br) ≤ DCpB √ 2 log(2/δ)α(n)n−1/2+1/p .\nIn particular, whenB is a Hilbert space, the bound simplifies to\nR(Br) ≤ B √ 2 log(2/δ)α(n) .\nProof. We have\nR(Br)\n= E sup h∈Br\n1\nn\nn ∑\ni=1\nσi〈h,Xi〉\n= E sup h∈Br\n1\nn\nn ∑\ni=1\n(σi〈h,Xi〉\n−σiE〈hS, Xi〉+ σiE〈hS , Xi〉)\n= E sup h∈Br\n1\nn\nn ∑\ni=1\nσi(〈h,Xi〉 − E〈hS, Xi〉)\n= E sup h∈Br\n1\nn\nn ∑\ni=1\nσi 〈h− EhS , Xi〉\n≤ E sup h∈Br\n1 n ‖h− EhS‖\n∥ ∥ ∥ ∥ ∥ n ∑\ni=1\nσiXi\n∥ ∥ ∥ ∥ ∥\n∗\n≤ r\nn E\n∥ ∥ ∥ ∥ ∥ n ∑\ni=1\nσiXi\n∥ ∥ ∥ ∥ ∥\n∗\n≤ 1\nn α(n)D\n√\n2n log(2/δ)Cp\n(\nn ∑\ni=1\n‖Xi‖ p ∗\n)1/p\n≤ DCpB √ 2 log(2/δ)α(n)n−1/2+1/p ,\nconcluding the proof.\ne theorem abovemay be easily used to bound the performance of anα(n)-uniformly hypothesis stable learning algorithm. For simplicity, we state the result for Hilbert spaces only. e extension to (2, D)-smooth Banach spaceswith a type-p dual is straightforward.\nCorollary 1. Assume that B is a separable Hilbert space. Suppose that the marginal distribution of the Xi is such that ‖Xi‖∗ ≤ B with probability one, for some B > 0 and that the loss function is bounded and Lipschitz, that is, ℓ(h, Z) ≤ M with probability one for some M > 0 and |ℓ(h, z)− ℓ(h′, z)| ≤ L |〈h, x〉 − 〈h′, x〉| for all z ∈ Z and h, h′ ∈ H . If a learning algorithm is α(n)-uniformly hypothesis stable, then its generalization error is bounded as follows. With probability at least 1− 2δ,\nR(hS)− RS(hS) ≤ 2LB √ 2 log(2/δ)α(n) +M\n√\nlog(1/δ)\n2n .\nProof. Note first that, by Lemma 1, with probability at least 1− δ,\nR(hS)− RS(hS) ≤ sup h∈Br (R(h)− RS(h)) .\nOn the other hand, by the boundedness of the loss function, and the bounded differences inequality, with probability at least 1− δ,\nsup h∈Br (R(h)−RS(h))\n≤ E sup h∈Br (R(h)− RS(h)) +M\n√\nlog(1/δ)\n2n\n≤ 2R(ℓ ◦Br) +M\n√\nlog(1/δ)\n2n ,\nwhere ℓ ◦H denotes the set of compositions of functions ℓ and h ∈ H . By the Lipschitz property of the loss function and a standard contraction argument, we have [Ledoux and Talagrand, 2013],\nR(ℓ ◦Br) ≤ L ·R(Br) ≤ LB √ 2 log(2/δ)α(n) .\nNote that the order of magnitude ofα(n) of many stable algorithms is of orderO(1/n). For the notion of uniform stability, such bounds appear in Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Wibisono et al. [2009], Hardt et al. [2015], Liu et al. [2017]. As we will show in the examples below, many of these learning algorithms even have uniform hypothesis stability of order O(1/n). In such cases the bound of Corollary 1 is essentially equivalent of the earlier results cited above. e bound is dominated by the termM √\nlog(1/δ) 2n present by using the bounded differences inequality. Fluctuations of the\norder ofO(n−1/2) are o en inevitable, especiallywhenR(hS) is not typically small. When small risk is reasonable to expect, one may use more advanced concentration inequalities with second-moment information, at the price of replacing the generalization error by the so-called “deformed” generalization error R(hS)− a a−1\nRS(hS) where a > 1. e next theorem derives such a bound, relying on techniques developed by Bartle et al. [2005]. is result improves essentially on earlier stability-based bounds.\neorem 2. Assume that B is a separable Hilbert space. Suppose that the marginal distribution of the Xi is such that ‖Xi‖∗ ≤ B with probability one, for some B > 0 and that the loss function is bounded and Lipschitz, that is, ℓ(h, Z) ≤ M with probability one for some M > 0 and |ℓ(h, z)− ℓ(h′, z)| ≤ L |〈h, x〉 − 〈h′, x〉| for all z ∈ Z and h, h′ ∈ H . Let a > 1. If a learning algorithm is α(n)-uniformly hypothesis stable, then, with probability at least 1− 2δ,\nR(hS)− a\na− 1 RS(hS) ≤ 8LB\n√ 2 log(2/δ)α(n) + (6a+ 8)M log(1/δ)\n3n .\ne proof of eorem 2 relies on techniques developed by Bartle et al. [2005]. In particular, we make use of the following result.\nProposition 2. [Bartle et al., 2005, eorem 2.1]. Let F be a class of functions that map X into [0,M ]. Assume that there is some ρ > 0 such that for every f ∈ F , var(f(X)) ≤ ρ. en, with probability at least 1− δ, we have\nsup f∈F\n(\nEf(X)− 1\nn\nn ∑\ni=1\nf(Xi)\n)\n≤\n(\n4R(F ) +\n√\n2ρ log(1/δ)\nn +\n4M\n3\nlog(1/δ)\nn\n)\n.\nTo prove the theorem, we also need to introduce the following auxiliary lemma. Define\nGr(Z) =\n{\nr\nmax{r,Eℓ(h, Z)} ℓ(h, Z)|h ∈ Br\n}\n.\nIt is evident that Gr ⊆ {αh|h ∈ Br, α ∈ [0, 1]}. e following lemma is proven in [Bartle et al., 2005].\nLemma 2. Define\nVr = sup g∈Gr\n(\nEg(Z)− 1\nn\nn ∑\ni=1\ng(Zi)\n)\n.\nFor any r > 0 and a > 1, if Vr ≤ r/a then every h ∈ Br satisfies\nEℓ(h, Z) ≤ a\na− 1\n1\nn\nn ∑\ni=1\nℓ(h, Zi) + Vr.\nNow, we are ready to prove eorem 2.\nProof of eorem 2. First, we introduce an inequality to build the connection between al-\ngorithmic stability and hypothesis complexity. For any a > 1, we have\nP\n(\nR(hS)− a\na− 1 RS(hS) ≥ r\n)\n= P(hS ∈ Br)P\n(\nR(hS)− a\na− 1 RS(hS) ≥ r|hS ∈ Br\n)\n+ P(hS 6∈ Br)P\n(\nR(hS)− a\na− 1 RS(hS) ≥ r|hS 6∈ Br\n)\n≤ P(hS ∈ Br)P\n(\nR(hS)− a\na− 1 RS(hS) ≥ r|hS ∈ Br\n)\n+ P(hS 6∈ Br)\n≤ P\n(\nR(hS)− a\na− 1 RS(hS) ≥ r, hS ∈ Br\n)\n+ P(hS 6∈ Br)\n≤ P\n(\nsup h∈Br\n(R(h)− a\na− 1 RS(h)) ≥ r\n)\n+ δ . (2)\ne last inequality holds because of Lemma 1. Second, we are going to upper bound the term suph∈Br(R(h)− a a−1\nRS(h)) with high probability. It is easy to check that for any g ∈ Gr , Eg(Z) ≤ r and g(Z) ∈ [0,M ]. en\nvar(g(Z)) ≤ E(g(Z))2 ≤ MEg(Z) ≤ Mr.\nApplying Proposition 2,\nVr ≤ 4R(Gr) +\n√\n2Mr log(1/δ)\nn +\n4M\n3\nlog(1/δ)\nn .\nLet\n4R(Gr) +\n√\n2Mr log(1/δ)\nn +\n4M\n3\nlog(1/δ)\nn =\nr a .\nWe have\nr ≤ 2Ma2 log(1/δ)\nn + 8aR(Gr) +\n4\n3\n2aM log(1/δ)\nn ,\nwhich means that there exists an r∗ ≤ 2Ma 2 log(1/δ) n + 8aR(Gr) + 4 3 2aM log(1/δ) n such that Vr∗ ≤ r ∗/a holds. According to Lemma 2, for any h ∈ Br, with probability at least 1− δ,\nwe have\nEℓ(h, Z) ≤ a\na− 1\n1\nn\nn ∑\ni=1\nℓ(h, Zi) + Vr∗\n≤ a\na− 1\n1\nn\nn ∑\ni=1\nℓ(h, Zi) + r∗\na\n≤ a\na− 1\n1\nn\nn ∑\ni=1\nℓ(h, Zi) + 2Ma log(1/δ)\nn + 8R(Gr) +\n4\n3\n2M log(1/δ)\nn .\nIt is easy to verify that Gr ⊆ {αh|h ∈ Br, α ∈ [0, 1]} ⊆ convBr. By elementary properties of the Rademacher complexity (see, e.g., Bartle and Mendelson\n[2003]), H ′ ⊂ H impliesR(H ′) ≤ R(H). en, with probability at least 1− δ, we have\nsup h∈Br\n(\nEℓ(h,X)− a\na− 1\n1\nn\nn ∑\ni=1\nℓ(h,Xi)\n)\n≤ 2Ma log(1/δ)\nn + 8R(ℓ ◦Br) +\n4\n3\n2M log(1/δ)\nn .\ne proof of eorem 2 is complete by combining the above inequality with eorem 1 and inequality (2).\nIn the next section, we specialize the above results to some learning algorithms by proving their uniform hypothesis stability."
    }, {
      "heading" : "4 Applications",
      "text" : "Various learning algorithms have been proved to possess some kind of stability. We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al. [2009], Hardt et al. [2015], Liu et al. [2017] for such examples, including stochastic gradient descent methods, empirical risk minimization, and non-parametric learning algorithms such as k-nearest neighbor rules and kernel regression."
    }, {
      "heading" : "4.1 Empirical Risk Minimization",
      "text" : "Regularized empirical riskminimization has beenknown to be uniformly stable [Bousquet and Elisseeff, 2002]. Here we consider regularized empirical risk minimization (RERM) algorithms of the following form. e empirical risk (or the objective function) of RERM is formulated as\nRS,λ(h) = 1\nn\nn ∑\ni=1\nℓ(h,Xi) + λN(h),\nwhere N : h ∈ H 7→ N(h) ∈ R+ is a convex function. Its corresponding expected counterpart is defined as\nRλ(h) = Eℓ(h,X) + λN(h).\nBousquet and Elisseeff [2002] proved that ℓ2-regularized learning algorithms are β(n)uniformly stable. Wibisono et al. [2009] extended the result and studied a sufficient condition of the penalty term N(h) to ensure uniform β(n)-stability. As we now show, both of their proof methods are applicable to the analysis of uniform hypothesis stability.\nBy exploiting their results, we show that stable RERM algorithms have strong generalization properties.\neorem 3. Assume that B is a separable Hilbert space. Suppose that the marginal distribution of the Xi is such that ‖Xi‖∗ ≤ B with probability one, for some B > 0 and that the loss function is convex in h, bounded byM and L-Lipschitz. Suppose that for some constants C and ξ > 1, the penalty function N(h) satisfies\nN(hS) +N(hSi)− 2N\n(\nhS + hSi\n2\n)\n≥ C‖hS − hSi‖ ξ. (3)\nen, for any δ > 0, and a > 1, if hS is the output of RERM, with probability at least 1− 2δ, we have\nR(hS)− a\na− 1 RS(hS) ≤ 8LB\n(\nLB\nCλn\n) 1\nξ−1 √ 2 log(2/δ) + (6a+ 8)M log(1/δ)\n3n .\nSpecifically, when N(h) = ‖h‖2, (3) holds with ξ = 2 and C = 1 2\n(\nM λ\n) 1\n2 .\nProof. e proof of eorem 3 relies on the following result implied by Wibisono et al. [2009].\nProposition 3. Assume the conditions of eorem 3. en the RERM learning algorithm is β(n)-uniformly stable with\nβ(n) =\n(\nkξLξ\nCλn\n)\n1\nξ−1\n,\nand is α(n)-uniformly hypothesis stable with\nα(n) =\n(\nkL\nCλn\n) 1\nξ−1\n.\nSpecifically, when N(h) = ‖h‖pp and 1 < p ≤ 2, the condition 3 on the penalty function holds with ξ = 2 and C = 1 4 p(p − 1) ( M λ ) p−1 p , where ‖h‖pp = ∑ r |hr| p and r is the index for the dimensionality.\neorem 3 follows by combining eorem 2 and Proposition 3."
    }, {
      "heading" : "4.2 Stochastic Gradient Descent",
      "text" : "Stochastic gradient descent (SGD) is one of the most widely used optimization methods in machine learning. Hardt et al. [2015] showed that parametric models trained by SGD methods are uniformly stable. eir results apply to both convex and non-convex learning problems and provide insights for why SGD performs well in practice, in particular, for deep learning algorithms. eir results are based on the assumptions that the loss function employed is both Lipschitz and smooth. In order to avoid technicalities of defining derivatives in general Hilbert spaces, in this section we assume thatB = X = Rd, the d-dimensional Euclidean space.\nDefinition 4. A differentiable loss function ℓ(h, ·) is s-smooth if for all h, h′ ∈ H , we have\n‖∇hℓ(h, ·)−∇h′ℓ(h ′, ·)‖ ≤ s‖h− h′‖,\nwhere∇xf(x) denotes the derivative of f(x) with respect to x and s > 0.\nDefinition 5. A differentiable loss function ℓ(h, ·) is γ-strongly convex with respect to ‖ · ‖ if for all h, h′ ∈ H , we have\n(∇hℓ(h, ·)−∇h′ℓ(h ′, ·))T (h− h′) ≥ γ‖h− h′‖2,\nwhere γ > 0.\neorem 4. Let the stochastic gradient update rule be given by ht+1 = ht−αt∇hℓ(ht, Xit), where αt > 0 is the learning rate and it is the index for choosing one example for the t-th update. Let hT and h i T denote the outputs of SGD run on sample S and S i, respectively. Assume that ‖X‖∗ ≤ B with probability one. Suppose that the loss function is L-Lipschitz, s-smooth, and upper bounded by M . Let SGD is run with a monotonically non-increasing step size αt ≤ c/t, where c is a universal constant, for T steps. en, for any δ > 0 and a > 1, with probability at least 1− 2δ, we have\nR(hT )− a\na− 1 RS(hT )\n≤ 8BL 1 + 1/sc\nn− 1 (2cBL)\n1 sc+1T sc sc+1 √ 2 log(2/δ) + (6a+ 8)M log(1/δ)\n3n .\nWhen the loss function ℓ is convex, L-admissible, s-smooth, and upper bounded by M , suppose that SGD is run with step sizes αt ≤ 2/s for T steps. en, for any δ > 0 and a > 1, with probability at least 1− 2δ,\nR(hT )− a\na− 1 RS(hT ) ≤\n16B2L2\nn\nT ∑\nt=1\nαt √ 2 log(2/δ) + (6a+ 8)M log(1/δ)\n3n .\nMoreover, when the loss function ℓ is γ-strongly convex, s-smooth, and upper bounded by M , let the stochastic gradient update be given by ht+1 = ΠΩ(ht−αt∇hℓ(ht, Xit)), whereΩ\nis a compact, convex set over which we wish to optimize and ΠΩ(·) is a projection such that ΠΩ(f) = argminh∈H ‖h− f‖. If the loss function is further L-Lipschitz over the set Ω and the projected SGD is run with a constant step size α ≤ 1/s for T steps. en, for any δ > 0 and a > 1, with probability at least 1− 2δ, the projected SGD satisfies that\nR(hT )− a\na− 1 RS(hT ) ≤\n16DB2L2\nγn\n√ 2 log(2/δ) + (6a+ 8)M log(1/δ)\n3n .\nNote that the ℓ2 regularized convex loss function can be regarded as a strongly convex loss function. Bousquet and Elisseeff [2002] studied the stability of batch methods. When the loss function is strongly convex, the stability of SGD is consistent with the result in [Bousquet and Elisseeff, 2002]. eorem 4 implies that SGD generalizeswell with an early stop. is partially explains why deep learning algorithms employing SGD with a certain small number of iterations perform well. However, early stopped SGD may have a large empirical risk RS(hT ). e proof of eorem 4 follows immediately from eorem 2, combined with the following result implied by Hardt et al. [2015] (which is a collection of the results of eorems 3.8, 3.9, and 3.12 therein).\nProposition 4. Let the stochastic gradient update be given by ht+1 = ht − αt∇hℓ(ht, Zit), where αt > 0 is the learning rate and it is the index for choosing one example for the t-th update. Let hT and h i T denote the outputs of SGD running on sample S and S i respectively. When the loss function is L-Lipschitz and s-smooth, suppose that SGD is run with monotonically non-increasing step size αt ≤ c/t, where c is a universal constant, for T steps. en,\n‖hT − h i T‖ ≤\n1 + 1/sc\nn− 1 (2cBL)\n1 sc+1T sc sc+1 .\nWhen the loss function ℓ is convex, L-Lipschitz, and s-smooth, suppose that SGD is run with step sizes αt ≤ 2/s for T steps. en,\n‖hT − h i T ‖ ≤\n2BL\nn\nT ∑\nt=1\nαt.\nMoreover, when the loss function ℓ is γ-strongly convex and s-smooth, let the stochastic gradient update be given byht+1 = ΠΩ(ht−αt∇hℓ(ht, Zit)), whereΩ is a compact, convex set over which we wish to optimize andΠΩ(·) is a projection such thatΠΩ(f) = argminh∈H ‖h−f‖. If the loss function is L-Lipschitz over the set Ω and the projected SGD is run with constant step size α ≤ 1/s for T steps. en, e projected SGD satisfies algorithmic hypothesis stability with\n‖hT − h i T‖ ≤\n2BL\nγn ."
    }, {
      "heading" : "5 Conlusion",
      "text" : "We introduced the concepts of uniform hypothesis stability and algorithmic hypothesis class, defined as the class of hypotheses that are likely to be output by the learning algorithm. We proposed a general probabilistic framework to exploit local estimates for the complexity of hypothesis class to obtain fast convergence rates for stable learning algorithms. Specifically, we defined the algorithmic hypothesis class by observing that the output of stable learning algorithms concentrates aroundEhS . e Rademacher complexity defined on the algorithmic hypothesis class then converges at the same rate as that of the uniform hypothesis stability in Hilbert space, which are of order O(1/n) for various learning algorithms, such as empirical risk minimization and stochastic gradient descent. We derived fast convergence rates of order O(1/n) for their deformed generalization errors. Unlike previously published guarantees of similar flavor, our bounds hold with high probability, rather than only in expectation.\nOur study leaves some open problems and allows several possible extensions. First, the algorithmic hypothesis class defined in this study depends mainly on the property of learning algorithms but li le on the data distribution. It would be interesting to investigate a way to define an algorithmic hypothesis class by considering both the algorithmic property and the data distribution. Second, it would be interesting to explore if there are some algorithmic properties other than stability that could result in a small algorithmic hypothesis class."
    } ],
    "references" : [ {
      "title" : "Rademacher and gaussian complexities: Risk bounds and structural results",
      "author" : [ "Peter L Bartle", "Shahar Mendelson" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Bartle and Mendelson.,? \\Q2003\\E",
      "shortCiteRegEx" : "Bartle and Mendelson.",
      "year" : 2003
    }, {
      "title" : "Local rademacher complexities",
      "author" : [ "Peter L Bartle", "Olivier Bousquet", "ShaharMendelson" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "Bartle et al\\.,? \\Q2005\\E",
      "shortCiteRegEx" : "Bartle et al\\.",
      "year" : 2005
    }, {
      "title" : "Perturbation analysis of optimization problems",
      "author" : [ "J Frédéric Bonnans", "Alexander Shapiro" ],
      "venue" : "Springer Science & Business Media,",
      "citeRegEx" : "Bonnans and Shapiro.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bonnans and Shapiro.",
      "year" : 2013
    }, {
      "title" : "Concentration inequalities: A nonasymptotic theory of independence",
      "author" : [ "Stéphane Boucheron", "Gábor Lugosi", "Pascal Massart" ],
      "venue" : "OUP Oxford,",
      "citeRegEx" : "Boucheron et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Boucheron et al\\.",
      "year" : 2013
    }, {
      "title" : "Stability and generalization",
      "author" : [ "Olivier Bousquet", "André Elisseeff" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Bousquet and Elisseeff.,? \\Q2002\\E",
      "shortCiteRegEx" : "Bousquet and Elisseeff.",
      "year" : 2002
    }, {
      "title" : "Distribution-free inequalities for the deleted and holdout error estimates. Information eory",
      "author" : [ "Luc Devroye", "Terry J Wagner" ],
      "venue" : "IEEE Transactions on,",
      "citeRegEx" : "Devroye and Wagner.,? \\Q1979\\E",
      "shortCiteRegEx" : "Devroye and Wagner.",
      "year" : 1979
    }, {
      "title" : "Train faster, generalize beer: Stability of stochastic gradient descent",
      "author" : [ "Moritz Hardt", "Benjamin Recht", "Yoram Singer" ],
      "venue" : "arXiv preprint arXiv:1509.01240,",
      "citeRegEx" : "Hardt et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Hardt et al\\.",
      "year" : 2015
    }, {
      "title" : "Probability in Banach Spaces: isoperimetry and processes",
      "author" : [ "Michel Ledoux", "Michel Talagrand" ],
      "venue" : "Springer Science & Business Media,",
      "citeRegEx" : "Ledoux and Talagrand.,? \\Q2013\\E",
      "shortCiteRegEx" : "Ledoux and Talagrand.",
      "year" : 2013
    }, {
      "title" : "Algorithm-dependent generalization bounds for multi-task learning",
      "author" : [ "Tongliang Liu", "DachengTao", "Mingli Song", "Stephen J. Maybank" ],
      "venue" : "IEEE Transactions on Paern Analysis and Machine Intelligence,",
      "citeRegEx" : "Liu et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Liu et al\\.",
      "year" : 2017
    }, {
      "title" : "On the posterior-probability estimate of the error rate of nonparametric classification rules. Information eory",
      "author" : [ "Gábor Lugosi", "Miroslaw Pawlak" ],
      "venue" : "IEEE Transactions on,",
      "citeRegEx" : "Lugosi and Pawlak.,? \\Q1994\\E",
      "shortCiteRegEx" : "Lugosi and Pawlak.",
      "year" : 1994
    }, {
      "title" : "Learning theory: stability is sufficient for generalization and necessary and sufficient for consistency of empirical risk minimization",
      "author" : [ "Sayan Mukherjee", "Partha Niyogi", "Tomaso Poggio", "Ryan Riin" ],
      "venue" : "Advances in Computational Mathematics,",
      "citeRegEx" : "Mukherjee et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Mukherjee et al\\.",
      "year" : 2006
    }, {
      "title" : "Optimum bounds for the distributions of martingales in Banach spaces",
      "author" : [ "Iosif Pinelis" ],
      "venue" : "e Annals of Probability,",
      "citeRegEx" : "Pinelis.,? \\Q1994\\E",
      "shortCiteRegEx" : "Pinelis.",
      "year" : 1994
    }, {
      "title" : "Martingales in Banach spaces (in connection with type and cotype)",
      "author" : [ "Gilles Pisier" ],
      "venue" : "IHP course notes,",
      "citeRegEx" : "Pisier.,? \\Q2011\\E",
      "shortCiteRegEx" : "Pisier.",
      "year" : 2011
    }, {
      "title" : "On equivalence of martingale tail bounds and deterministic regret inequalities",
      "author" : [ "Alexander Rakhlin", "Karthik Sridharan" ],
      "venue" : "arXiv preprint arXiv:1510.03925,",
      "citeRegEx" : "Rakhlin and Sridharan.,? \\Q2015\\E",
      "shortCiteRegEx" : "Rakhlin and Sridharan.",
      "year" : 2015
    }, {
      "title" : "Learnability, stability and uniform convergence",
      "author" : [ "Shai Shalev-Shwartz", "Ohad Shamir", "Nathan Srebro", "Karthik Sridharan" ],
      "venue" : "Journal ofMachine Learning Research,",
      "citeRegEx" : "Shalev.Shwartz et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Shalev.Shwartz et al\\.",
      "year" : 2010
    }, {
      "title" : "Sufficient conditions for uniform stability of regularization algorithms",
      "author" : [ "Andre Wibisono", "Lorenzo Rosasco", "Tomaso Poggio" ],
      "venue" : "Techincal Report MIT-CSAIL-TR-2009-060,",
      "citeRegEx" : "Wibisono et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Wibisono et al\\.",
      "year" : 2009
    }, {
      "title" : "Leave-one-out bounds for kernel methods",
      "author" : [ "Tong Zhang" ],
      "venue" : "Neural Computation,",
      "citeRegEx" : "Zhang.,? \\Q2003\\E",
      "shortCiteRegEx" : "Zhang.",
      "year" : 2003
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013].",
      "startOffset" : 221,
      "endOffset" : 248
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al.",
      "startOffset" : 222,
      "endOffset" : 289
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al.",
      "startOffset" : 222,
      "endOffset" : 315
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al.",
      "startOffset" : 222,
      "endOffset" : 333
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al.",
      "startOffset" : 222,
      "endOffset" : 430
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.",
      "startOffset" : 222,
      "endOffset" : 522
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., lp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al.",
      "startOffset" : 222,
      "endOffset" : 776
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., lp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al. [2017] proved that tasks in multi-task learning can act as regularizers and that multi-task learning in a very general seing will therefore be uniformly stable under mild assumptions.",
      "startOffset" : 222,
      "endOffset" : 900
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., lp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al. [2017] proved that tasks in multi-task learning can act as regularizers and that multi-task learning in a very general seing will therefore be uniformly stable under mild assumptions. e notion of algorithmic stability has been an important tool in deriving theoretical guarantees of the generalization abilities of learning algorithms. Various notions of stability have been introduced and have been exploited to derive generalization bounds. For some examples, Mukherjee et al. [2006] proved that a statistical form of leave-oneout stability is a sufficient and necessary condition for the generalization and learnability of empirical risk minimization learning algorithms; Shalev-Shwartz et al.",
      "startOffset" : 222,
      "endOffset" : 1381
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., lp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al. [2017] proved that tasks in multi-task learning can act as regularizers and that multi-task learning in a very general seing will therefore be uniformly stable under mild assumptions. e notion of algorithmic stability has been an important tool in deriving theoretical guarantees of the generalization abilities of learning algorithms. Various notions of stability have been introduced and have been exploited to derive generalization bounds. For some examples, Mukherjee et al. [2006] proved that a statistical form of leave-oneout stability is a sufficient and necessary condition for the generalization and learnability of empirical risk minimization learning algorithms; Shalev-Shwartz et al. [2010] defined a weaker notion, the so-called “on-average-replace-one-example stability”, and showed that this condition is both sufficient and necessary for the generalization and learnability of a general learning seing.",
      "startOffset" : 222,
      "endOffset" : 1599
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., lp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al. [2017] proved that tasks in multi-task learning can act as regularizers and that multi-task learning in a very general seing will therefore be uniformly stable under mild assumptions. e notion of algorithmic stability has been an important tool in deriving theoretical guarantees of the generalization abilities of learning algorithms. Various notions of stability have been introduced and have been exploited to derive generalization bounds. For some examples, Mukherjee et al. [2006] proved that a statistical form of leave-oneout stability is a sufficient and necessary condition for the generalization and learnability of empirical risk minimization learning algorithms; Shalev-Shwartz et al. [2010] defined a weaker notion, the so-called “on-average-replace-one-example stability”, and showed that this condition is both sufficient and necessary for the generalization and learnability of a general learning seing. In this paper we study learning algorithms that select a hypothesis (i.e., a function used for prediction) from a certain fixed class of functions belonging to a separable Banach space. We introduce a notion of hypothesis stability which measures the impact of changing a single training example on the hypothesis selected by the learning algorithm. is notion of stability is stronger than uniform algorithmic stability of Bousquet and Elisseeff [2002] that is only concerned about the change in the loss but not the hypothesis itself.",
      "startOffset" : 222,
      "endOffset" : 2270
    }, {
      "referenceID" : 2,
      "context" : "Intuitively, a learning algorithm is said to be stable if slight perturbations in the training data result in small changes in the output of the algorithm, and these changes vanish as the data set grows bigger and bigger [Bonnans and Shapiro, 2013]. For example, Devroye and Wagner [1979], Lugosi and Pawlak [1994], and Zhang [2003] showed that several non-parametric learning algorithms are stable; Bousquet and Elisseeff [2002] proved that l2 regularized learning algorithms are uniformly stable; Wibisono et al. [2009] generalized Bousquet and Elisseeff’s results and proved that regularized learning algorithmswith strongly convex penalty functions on bounded domains, e.g., lp regularized learning algorithms for 1 < p ≤ 2, are also uniformly stable; Hardt et al. [2015] showed that parametric models trained by stochastic gradient descent algorithms are uniformly stable; and Liu et al. [2017] proved that tasks in multi-task learning can act as regularizers and that multi-task learning in a very general seing will therefore be uniformly stable under mild assumptions. e notion of algorithmic stability has been an important tool in deriving theoretical guarantees of the generalization abilities of learning algorithms. Various notions of stability have been introduced and have been exploited to derive generalization bounds. For some examples, Mukherjee et al. [2006] proved that a statistical form of leave-oneout stability is a sufficient and necessary condition for the generalization and learnability of empirical risk minimization learning algorithms; Shalev-Shwartz et al. [2010] defined a weaker notion, the so-called “on-average-replace-one-example stability”, and showed that this condition is both sufficient and necessary for the generalization and learnability of a general learning seing. In this paper we study learning algorithms that select a hypothesis (i.e., a function used for prediction) from a certain fixed class of functions belonging to a separable Banach space. We introduce a notion of hypothesis stability which measures the impact of changing a single training example on the hypothesis selected by the learning algorithm. is notion of stability is stronger than uniform algorithmic stability of Bousquet and Elisseeff [2002] that is only concerned about the change in the loss but not the hypothesis itself. However, as we will show, the new notion is still quite natural and holds for a variety of learning algorithms. On the other hand, it allows one to exploit martingale inequalities Boucheron et al. [2013] in the Banach space of the hypotheses.",
      "startOffset" : 222,
      "endOffset" : 2557
    }, {
      "referenceID" : 11,
      "context" : "e property we need is described in the following result of [Pinelis, 1994]:",
      "startOffset" : 60,
      "endOffset" : 75
    }, {
      "referenceID" : 4,
      "context" : "Here we recall the notion of uniform stability defined by Bousquet and Elisseeff [2002] for comparison purposes.",
      "startOffset" : 58,
      "endOffset" : 88
    }, {
      "referenceID" : 4,
      "context" : "Here we recall the notion of uniform stability defined by Bousquet and Elisseeff [2002] for comparison purposes. is notion of stability relies on the altered sample S = {Z1, . . . , Zi−1, Z ′ i, Zi+1, . . . , Zn}, the sample S with the i-th example being replaced by an independent copy of Zi. Definition 1 (Uniform Stability). A learning algorithm A is β(n)-uniformly stable with respect to the loss function l if for all i ∈ {1, . . . , n}, |l(hS, Z)− l(hSi, Z)| ≤ β(n) , with probability one, where β(n) ∈ R+. We propose the following, similar, notion that “acts” on the hypotheses directly, as opposed to the losses. Definition 2 (Uniform Hypothesis Stability). A learning algorithm A is α(n)-uniformly hypothesis stable if for all i ∈ {1, . . . , n}, ‖hS − hSi‖ ≤ α(n) . with probability one, where α(n) ∈ R+. e two notions of stability are closely related. Indeed, since ‖hS − hSi‖ = sup x∈X :‖x‖∗≤1 (〈hS, x〉 − 〈hSi, x〉) , if the loss function is Lipschitz in the sense that |l(h, z)− l(h, z)| ≤ L |〈h, x〉 − 〈h, x〉| for all z ∈ Z and h, h ∈ H and ‖X‖∗ is bounded by some B > 0 with probability one, then an α(n)-uniformly hypothesis stable learning algorithm is uniformly stable with β(n) = LBα(n). However, the reverse implication need not necessarily hold and hence uniform hypothesis stability is a stronger notion. e relationship between hypothesis stability and generalization performance hinges on a property of the Banach space B that is closely related to the martingale type of the space—see Pisier [2011] for a comprehensive account.",
      "startOffset" : 58,
      "endOffset" : 1524
    }, {
      "referenceID" : 13,
      "context" : "We refer to Rakhlin and Sridharan [2015] for more information of martingale inequalities of this kind.",
      "startOffset" : 12,
      "endOffset" : 41
    }, {
      "referenceID" : 0,
      "context" : "We bound the generalization error (1) in terms of the Rademacher complexity Bartle and Mendelson [2003] of the algorithmic hypothesis class.",
      "startOffset" : 76,
      "endOffset" : 105
    }, {
      "referenceID" : 7,
      "context" : "By the Lipschitz property of the loss function and a standard contraction argument, we have [Ledoux and Talagrand, 2013], R(l ◦Br) ≤ L ·R(Br) ≤ LB √",
      "startOffset" : 92,
      "endOffset" : 120
    }, {
      "referenceID" : 6,
      "context" : "For the notion of uniform stability, such bounds appear in Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Wibisono et al.",
      "startOffset" : 59,
      "endOffset" : 84
    }, {
      "referenceID" : 4,
      "context" : "For the notion of uniform stability, such bounds appear in Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Wibisono et al.",
      "startOffset" : 85,
      "endOffset" : 115
    }, {
      "referenceID" : 4,
      "context" : "For the notion of uniform stability, such bounds appear in Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Wibisono et al. [2009], Hardt et al.",
      "startOffset" : 85,
      "endOffset" : 139
    }, {
      "referenceID" : 4,
      "context" : "For the notion of uniform stability, such bounds appear in Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Wibisono et al. [2009], Hardt et al. [2015], Liu et al.",
      "startOffset" : 85,
      "endOffset" : 160
    }, {
      "referenceID" : 4,
      "context" : "For the notion of uniform stability, such bounds appear in Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Wibisono et al. [2009], Hardt et al. [2015], Liu et al. [2017]. As we will show in the examples below, many of these learning algorithms even have uniform hypothesis stability of order O(1/n).",
      "startOffset" : 85,
      "endOffset" : 179
    }, {
      "referenceID" : 1,
      "context" : "e next theorem derives such a bound, relying on techniques developed by Bartle et al. [2005]. is result improves essentially on earlier stability-based bounds.",
      "startOffset" : 73,
      "endOffset" : 95
    }, {
      "referenceID" : 1,
      "context" : "e proof of eorem 2 relies on techniques developed by Bartle et al. [2005]. In particular, we make use of the following result.",
      "startOffset" : 55,
      "endOffset" : 77
    }, {
      "referenceID" : 1,
      "context" : "e following lemma is proven in [Bartle et al., 2005].",
      "startOffset" : 32,
      "endOffset" : 54
    }, {
      "referenceID" : 0,
      "context" : ", Bartle and Mendelson [2003]), H ′ ⊂ H impliesR(H ) ≤ R(H).",
      "startOffset" : 2,
      "endOffset" : 31
    }, {
      "referenceID" : 4,
      "context" : "1 Empirical Risk Minimization Regularized empirical riskminimization has beenknown to be uniformly stable [Bousquet and Elisseeff, 2002].",
      "startOffset" : 106,
      "endOffset" : 136
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al.",
      "startOffset" : 22,
      "endOffset" : 48
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al.",
      "startOffset" : 22,
      "endOffset" : 74
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al.",
      "startOffset" : 75,
      "endOffset" : 105
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al.",
      "startOffset" : 75,
      "endOffset" : 119
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al. [2009], Hardt et al.",
      "startOffset" : 75,
      "endOffset" : 143
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al. [2009], Hardt et al. [2015], Liu et al.",
      "startOffset" : 75,
      "endOffset" : 164
    }, {
      "referenceID" : 4,
      "context" : "We refer the reader toDevroye and Wagner [1979], Lugosi and Pawlak [1994], Bousquet and Elisseeff [2002], Zhang [2003], Wibisono et al. [2009], Hardt et al. [2015], Liu et al. [2017] for such examples, including stochastic gradient descent methods, empirical risk minimization, and non-parametric learning algorithms such as k-nearest neighbor rules and kernel regression.",
      "startOffset" : 75,
      "endOffset" : 183
    }, {
      "referenceID" : 4,
      "context" : "Bousquet and Elisseeff [2002] proved that l2-regularized learning algorithms are β(n)uniformly stable.",
      "startOffset" : 0,
      "endOffset" : 30
    }, {
      "referenceID" : 4,
      "context" : "Bousquet and Elisseeff [2002] proved that l2-regularized learning algorithms are β(n)uniformly stable. Wibisono et al. [2009] extended the result and studied a sufficient condition of the penalty term N(h) to ensure uniform β(n)-stability.",
      "startOffset" : 0,
      "endOffset" : 126
    }, {
      "referenceID" : 15,
      "context" : "e proof of eorem 3 relies on the following result implied by Wibisono et al. [2009]. Proposition 3.",
      "startOffset" : 63,
      "endOffset" : 86
    }, {
      "referenceID" : 6,
      "context" : "Hardt et al. [2015] showed that parametric models trained by SGD methods are uniformly stable.",
      "startOffset" : 0,
      "endOffset" : 20
    }, {
      "referenceID" : 4,
      "context" : "When the loss function is strongly convex, the stability of SGD is consistent with the result in [Bousquet and Elisseeff, 2002].",
      "startOffset" : 97,
      "endOffset" : 127
    }, {
      "referenceID" : 4,
      "context" : "Bousquet and Elisseeff [2002] studied the stability of batch methods.",
      "startOffset" : 0,
      "endOffset" : 30
    }, {
      "referenceID" : 4,
      "context" : "Bousquet and Elisseeff [2002] studied the stability of batch methods. When the loss function is strongly convex, the stability of SGD is consistent with the result in [Bousquet and Elisseeff, 2002]. eorem 4 implies that SGD generalizeswell with an early stop. is partially explains why deep learning algorithms employing SGD with a certain small number of iterations perform well. However, early stopped SGD may have a large empirical risk RS(hT ). e proof of eorem 4 follows immediately from eorem 2, combined with the following result implied by Hardt et al. [2015] (which is a collection of the results of eorems 3.",
      "startOffset" : 0,
      "endOffset" : 573
    } ],
    "year" : 2017,
    "abstractText" : "We introduce a notion of algorithmic stability of learning algorithms—that we term hypothesis stability—that captures stability of the hypothesis output by the learning algorithm in the normed space of functions from which hypotheses are selected. e main result of the paper bounds the generalization error of any learning algorithm in terms of its hypothesis stability. e bounds are based on martingale inequalities in the Banach space to which the hypotheses belong. We apply the general bounds to bound the performance of some learning algorithms based on empirical risk minimization and stochastic gradient descent. Parts of the work were done when Tongliang Liu was a visiting PhD student at Pompeu Fabra University. School of Information Technologies, Faculty Engineering and Information Technologies, University of Sydney, Sydney, Australia, tliang.liu@gmail.com, dacheng.tao@sydney.edu.au Department of Economics and Business, Pompeu Fabra University, Barcelona, Spain, gabor.lugosi@upf.edu ICREA, Pg. Llus Companys 23, 08010 Barcelona, Spain Barcelona Graduate School of Economics AI group, DTIC, Universitat Pompeu Fabra, Barcelona, Spain, gergely.neu@gmail.com 1",
    "creator" : "LaTeX with hyperref package"
  }
}