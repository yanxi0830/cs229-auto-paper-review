{
  "name" : "1606.02448.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Multiple-Play Bandits in the Position-Based Model",
    "authors" : [ "Paul Lagrée", "Claire Vernade", "Olivier Cappé" ],
    "emails" : [ "paul.lagree@u-psud.fr", "claire.vernade@telecom-paristech.fr", "cappe@enst.fr" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "During their browsing experience, users are constantly provided – without having asked for it – with clickable content spread over web pages. While users interact on a website, they send clicks to the system for a very limited selection of the clickable content. Hence, they let every unclicked item with an equivocal answer: the system does not know whether the content was really deemed irrelevant or simply ignored. In contrast, in traditional multi-armed bandit (MAB) models, the learner makes actions and observes at each round the reward corresponding to the chosen action. In the so-called multiple play semi-bandit setting, when users are presented with L items, they are assumed to provide feedback for each of those items.\nSeveral variants of this basic setting have been considered in the bandit literature. The necessity for the user to provide feedback for each item has been called into question in the context of the so-called Cascade Model [7, 13, 5] and its extensions such as the Dependent Click Model (DCM) [19]. Both models are particularly suited for search contexts, where the user is assumed to be looking for something relative to a query. Consequently, the learner expects explicit feedback: in the Cascade Model each valid observation sequence must be either all zeros or terminated by a one, such that no ambiguity is left on the evaluation of the presented items, while multiple clicks are allowed in the DCM.\nIn the Cascade Model, the positions of the items are not taken into account in the reward process because the learner is assumed to obtain a click as long as the interesting item belongs to the list. Indeed, there are even clear indications that the optimal strategy in a learning context consists in showing the most relevant items at the end of the list in order to maximize the amount of observed feedback [13] – which is counter-intuitive in recommendation tasks.\nTo overcome these limitations, [5] introduces weights – to be defined by the learner – that are attributed to positions in the list, with a click on position l ∈ {1, . . . , L} providing a reward wl, where the sequence (wl)l is decreasing to enforce the ranking behavior. However, no rule is given for setting the weights (wl)l that control the order of importance of the positions. The authors propose an algorithm based on KL-UCB [9] and prove a lower bound on the regret as well as an asymptotically optimal upper bound.\nAnother way to address the limitations of the Cascade Model is to consider the DCM as in [19]. Here, examination probabilities vl are introduced for each position l: conditionally on the event that the user effectively\nar X\niv :1\n60 6.\n02 44\n8v 1\n[ cs\n.L G\n] 8\nJ un\nscanned the list up to position l, he/she can choose to leave with probability vl and in that case, the learner is aware of his/her departure. This framework naturally induces the necessity to rank the items in the optimal order.\nAll previous models assume that a portion of the recommendation list is explicitly examined by the user and hence that the learning algorithm eventually has access to rewards corresponding to the unbiased user’s evaluation of each item. In contrast, we propose to analyze multiple-play bandits in the Position-based model (PBM) [4]. In the PBM, each position in the list is also endowed with a binary Examination variable [7, 18] which is equal to one only when the user paid attention to the corresponding item. But this variable, that is independent of the user’s evaluation of the item, is not observable. It allows to model situations where the user is not explicitly looking for specific content, as in typical recommendation scenarios.\nCompared to variants of the Cascade model, the PBM is challenging due to the censoring induced by the examination variables: the learning algorithm observes actual clicks but non-clicks are always ambiguous. Thus, combining observations made at different positions becomes a non-trivial statistical task. Some preliminary ideas on how to address this issue appear in the supplementary material of [12]. In this work, we provide a complete statistical study of stochastic multiple-play bandits with semi-bandit feedback in the PBM.\nWe introduce the model and notations in Section 2 and provide the lower bound on the regret in Section 3. In Section 4, we present two optimistic algorithms as well as a theoretical analysis of their regret. In the last section dedicated to experiments, those policies are compared to several benchmarks on both synthetic and realistic data."
    }, {
      "heading" : "2 Setting and Parameter Estimation",
      "text" : "We consider the binary stochastic bandit model with K Bernoulli-distributed arms. The model parameters are the arm expectations θ = (θ1, θ2, . . . , θK), which lie in Θ = (0, 1)K . We will denote by B(θ) the Bernoulli distribution with parameter θ and by d(p, q) := p log(p/q) + (1 − p) log((1 − p)/(1 − q)) the Kullback-Leibler divergence from B(p) to B(q). At each round t, the learner selects a list of L arms – referred to as an action – chosen among the K arms which are indexed by k ∈ {1, . . . ,K}. The set of actions is denoted by A and thus contains K!/(K − L)! ordered lists; the action selected at time t will be denoted A(t) = (A1(t), . . . , AL(t)).\nThe PBM is characterized by examination parameters (κl)1≤l≤L, where κl is the probability that the user effectively observes the item in position l [4]. At round t, the selection A(t) is shown to the user and the learner observes the complete feedback – as in semi-bandit models – but the observation at position l, Zl(t), is censored being the product of two independent Bernoulli variables Yl(t) and Xl(t), where Yl(t) ∼ B(κl) is non null when the user considered the item in position l – which is unknown to the learner – and Xl(t) ∼ B(θAl(t)) represents the actual user feedback to the item shown in position l. The learner receives a reward rA(t) = ∑L l=1 Zl(t), where Z(t) = (X1(t)Y1(t), . . . , XL(t)YL(t)) denotes the vector of censored observations at step t. In the following, we will assume, without loss of generality, that θ1 > · · · > θK and κ1 > · · · > κL > 0, in order to simplify the notations. The fact that the sequences (θl)l and (κl)l are decreasing implies that the optimal list is a∗ = (1, . . . , L). Denoting by R(T ) = ∑T t=1 ra∗ − rA(t) the regret incurred by the learner up to time T , one has\nE[R(T )] = T∑ t=1 L∑ l=1 κl(θa∗l − E[θAl(t)]) = ∑ a∈A (µ∗ − µa)E[Na(T )] = ∑ a∈A ∆aE[Na(T )], (1)\nwhere µa = ∑L l=1 κlθal is the expected reward of action a, µ\n∗ = µa∗ is the best possible reward in average, ∆a = µ ∗ − µa the expected gap to optimality, and, Na(T ) = ∑T t=1 1{A(t) = a} is the number of times action a has been chosen up to time T . In the following, we assume that the examination parameters (κl)1≤l≤L are known to the learner. These can be estimated from historical data [4], using, for instance, the EM algorithm [8] (see also Section 5). In most scenarios, it is realistic to assume that the content (e.g., ads in on-line advertising) is changing much more frequently than the layout (web page design for instance) making it possible to have a good knowledge of the click-through biases associated with the display positions.\nThe main statistical challenge associated with the PBM is that one needs to obtain estimates and confidence bounds for the components θk of θ from the available B(κlθk)-distributed draws corresponding to occurrences of arm k at various positions l = 1, . . . , L in the list. To this aim, we define the following statistics: Sk,l(t) =\n∑t−1 s=1 Zl(s)1{Al(s) = k}, Sk(t) = ∑L l=1 Sk,l(t), Nk,l(t) = ∑t−1 s=1 1{Al(s) = k}, Nk(t) = ∑L l=1Nk,l(t). We further\nrequire bias-corrected versions of the counts Ñk,l(t) = ∑t−1 s=1 κl1{Al(s) = k} and Ñk(t) = ∑L l=1 Ñk,l(t).\nA time t, and conditionally on the past actions A(1) up to A(t− 1), the Fisher information for θk is given by I(θk) = ∑L l=1Nk,l(t)κl/(θk(1− κlθk)) (see Appendix A). We cannot however estimate θk using the maximum likelihood estimator since it has no closed form expression. Interestingly though, the simple pooled linear estimator\nθ̂k(t) = Sk(t)/Ñk(t), (2)\nconsidered in the supplementary material to [12], is unbiased and has a (conditional) variance of υ(θk) = ( ∑L l=1Nk,l(t)κlθk(1 − κlθk))/( ∑L l=1Nk,l(t)κl)\n2, which is close to optimal given the Cramér-Rao lower bound. Indeed, υ(θk)I(θk) is recognized as a ratio of a weighted arithmetic mean to the corresponding weighted harmonic mean, which is known to be larger than one, but is upper bounded by 1/(1− θk), irrespectively of the values of the κl’s. Hence, if, for instance, we can assume that all θk’s are smaller than one half, the loss with respect to the best unbiased estimator is no more than a factor of two for the variance. Note that despite its simplicity, θ̂k(t) cannot be written as a simple sum of conditionally independent increments divided by the number of terms and will thus require specific concentration results.\nIt can be checked that when θk gets very close to one, θ̂k(t) is no longer close to optimal. This observation also has a Bayesian counterpart that will be discussed in Section 5. Nevertheless, it is always preferable to the “position-debiased” estimator ( ∑L l=1 Sk,l(t)/κl)/Nk,l(t) which gets very unreliable as soon as one of the κl’s gets very small."
    }, {
      "heading" : "3 Lower Bound on the Regret",
      "text" : "In this section, we consider the fundamental asymptotic limits of learning performance for online algorithms under the PBM. These cannot be deduced from earlier general results, such as those of [10, 6], due to the censoring in the feedback associated to each action. We detail a simple and general proof scheme – using the results of [11] – that applies to the PBM, as well as to more general models.\nLower bounds on the regret rely on changes of measure: the question is how much can we mistake the true parameters of the problem for others, when observing successive arms? With this in mind, we will subscript all expectations and probabilities by the parameter value and indicate explicitly that the quantities µa, a∗, µ∗,∆a, introduced in Section 2, also depend on the parameter. For ease of notation, we will still assume that θ is such that a∗(θ) = (1, . . . , L)."
    }, {
      "heading" : "3.1 Existing results for multiple-play bandit problems",
      "text" : "Lower bounds on the regret will be proved for uniformly efficient algorithms, in the sense of [15]:\nDefinition 1. An algorithm is said to be uniformly efficient if for any bandit model parameterized by θ and for all α ∈ (0, 1], its expected regret after T rounds is such that EθR(T ) = o(Tα).\nFor the multiple-play MAB, [1] obtained the following bound\nlim inf T→∞\nEθR(T )\nlog(T ) ≥ K∑ k=L+1 θL − θk d(θk, θL) . (3)\nFor the “learning to rank” problem where rewards follow the weighted Cascade Model with decreasing weights (wl)l=1,...,L, [5] derived the following bound\nlim inf T→∞\nEθR(T )\nlog T ≥ wL K∑ k=L+1 θL − θk d(θk, θL) .\nPerhaps surprisingly, this lower bound does not show any additional term corresponding to the complexity of ranking the L optimal arms. Indeed, the errors are still asymptotically dominated by the need to discriminate irrelevant arms (θk)k>L from the worst of the relevant arms, that is, θL."
    }, {
      "heading" : "3.2 Lower bound step by step",
      "text" : "Step 1: Computing the expected log-likelihood ratio. Denoting by Fs−1 the σ-algebra generated by the past actions and observations, we define the log-likelihood ratio for the two values θ and λ of the parameters by\n`(t) := t∑ s=1 log p(Z(s); θ | Fs−1) p(Z(s);λ | Fs−1) . (4)\nLemma 2. For each position l and each item k, define the local amount of information by\nIl(θk, λk) := Eθ\n[ log p(Zl(t); θ)\np(Zl(t);λ) ∣∣∣∣Al(t) = k] , and its cumulated sum over the L positions by Ia(θ, λ) := ∑L l=1 ∑K k=1 1{al = k}Il(θk, λk). The expected log-likelihood ratio is given by Eθ[`(t)] =\n∑ a∈A Ia(θ, λ)Eθ[Na(t)]. (5)\nThe next proposition is adapted from Theorem 17 in Appendix B of [11] and provides a lower bound on the expected log-likelihood ratio.\nProposition 3. Let B(θ) := {λ ∈ Θ |∀l ≤ L, θl = λl and µ∗(θ) < µ∗(λ)} be the set of changes of measure that improve over θ without modifying the optimal arms. Assuming that the expectation of the log-likelihood ratio may be written as in (5), for any uniformly efficient algorithm one has\n∀λ ∈ B(θ), lim inf T→∞\n∑ a∈A Ia(θ, λ)Eθ[Na(T )]\nlog(T ) ≥ 1.\nStep 2: Variational form of the lower bound. We are now ready to obtain the lower bound in a form similar to that originally given by [10].\nTheorem 4. The expected regret of any uniformly efficient algorithm satisfies\nlim inf T→∞\nEθR(T )\nlog T ≥ f(θ) , where f(θ) = inf c 0 ∑ a∈A ∆a(θ)ca , s.t. inf λ∈B(θ) ∑ a∈A Ia(θ, λ)ca ≥ 1.\nTheorem 4 is a straightforward consequence of Proposition 3, combined with the expression of the expected regret given in (1). The vector c ∈ R|A|+ , that satisfies the inequality ∑ a∈A Ia(θ, λ)ca ≥ 1, represents the feasible values of Eθ[Na(T )]/ log(T ).\nStep 3: Relaxing the constraints. The bounds mentioned in Section 3.1 may be recovered from Theorem 4 by considering only the changes of measure that affect a single suboptimal arm.\nCorollary 5.\nf(θ) ≥ inf c 0 ∑ a∈A ∆a(θ)ca , s.t. ∑ a∈A L∑ l=1 1{al = k}Il(θk, θL)ca ≥ 1 , ∀k ∈ {L+ 1, . . . ,K}.\nCorollary 5 is obtained by restricting the constraint set B(θ) of Theorem 4 to ∪Kk=L+1Bk(θ), where Bk(θ) := {λ ∈ Θ|∀j 6= k, θj = λj and µ∗(θ) < µ∗(λ)} ."
    }, {
      "heading" : "3.3 Lower bound for the PBM",
      "text" : "Theorem 6. For the PBM, the following lower bound holds for any uniformly efficient algorithm:\nlim inf T→∞\nEθR(T )\nlog T ≥ K∑ k=L+1 min l∈{1,...,L} ∆vk,l(θ) d(κlθk, κlθL) , (6)\nwhere vk,l := (1, . . . , l − 1, k, l, . . . , L− 1).\nProof. First, note that for the PBM one has Il(θk, λk) = d(κlθk, κlλk). To get the expression given in Theorem 6 from Corollary 5, we proceed as in [5] showing that the optimal coefficients (ca)a∈A can be non-zero only for the K−L actions that put the suboptimal arm k in the position l that reaches the minimum of ∆vk,l(θ)/d(κlθk, κlθL). Nevertheless, this position does not always coincide with L, the end of the displayed list, contrary to the case of [5] (see Appendix B for details).\nThe discrete minimization that appears in the r.h.s. of Theorem 6 corresponds to a fundamental trade-off in the PBM. When trying to discriminate a suboptimal arm k from the L optimal ones, it is desirable to put it higher in the list to obtain more information, as d(κlθk, κlθL) is an increasing function of κl. On the other hand, the gap ∆vk,l(θ) is also increasing as l gets closer to the top of the list. The fact that d(κlθk, κlθL) is not linear in κl (it is a strictly convex function of κl) renders the trade-off non trivial. It is easily checked that when (θ1 − θL) is very small, i.e. when all optimal arms are equivalent, the optimal exploratory position is l = 1. In contrast, it is equal to L when the gap (θL − θL+1) becomes very small. Note that by using that for any suboptimal a ∈ A, ∆a(θ) ≥ ∑K k=L+1 ∑L l=1 1{al = k}κl(θL − θk), one can lower bound the r.h.s. of Theorem 6\nby κL ∑K k=L+1(θL − θk)/d(κLθk, κLθL), which is not tight in general.\nRemark 7. In the uncensored version of the PBM – i.e., if the Yl(t) were observed –, the expression of Ia(θ, λ) is simpler: it is equal to ∑L l=1 ∑K k=1 1{Al(t) = k}κld(θk, λk) and leads to a lower bound that coincides with (3). The uncensored PBM is actually statistically very close to the weighted Cascade model and can be addressed by algorithms that do not assume knowledge of the (κl)l but only of their ordering."
    }, {
      "heading" : "4 Algorithms",
      "text" : "In this section we introduce two algorithms for the PBM. The first one uses the CUCB strategy of [3] and requires an simple upper confidence bound for θk based on the estimator θ̂k(t) defined in (2). The second algorithm is based on the Parsimonious Item Exploration – PIE(L) – scheme proposed in [5] and aims at reaching asymptotically optimal performance. For this second algorithm, termed PBM-PIE, it is also necessary to use a multi-position analog of the well-known KL-UCB index [9] that is inspired by a result of [16]. The analysis of PBM-PIE provided below confirms the relevance of the lower bound derived in Section 3.\nPBM-UCB The first algorithm simply consists in sorting optimistic indices in decreasing order and pulling the corresponding first L arms [3]. To derive the expression of the required “exploration bonus” we use an upper confidence for θ̂k(t) based on Hoeffding’s inequality:\nUUCBk (t, δ) = Sk(t)\nÑk(t) +\n√ Nk(t)\nÑk(t)\n√ δ\n2Ñk(t) ,\nfor which a coverage bound is given by the next proposition, proven in Appendix C.\nProposition 8. Let k be any arm in {1, . . . ,K}, then for any δ > 0, P ( UUCBk (t, δ) ≤ θk ) ≤ eδ log(t)e−δ.\nFollowing the ideas of [6], it is possible to obtain a logarithmic regret upper bound for this algorithm. The proof is given in Appendix D.\nTheorem 9. Let C(κ) = min1≤l≤L[( ∑L j=1 κj) 2/l + ( ∑l j=1 κj) 2]/κ2L and ∆ = mina∈σ(a∗)\\a∗ ∆a, where σ(a ∗) denotes the permutations of the optimal action. Using PBM-UCB with δ = (1 + ) log(t) for some > 0, there exists a constant C0( ) independent from the model parameters such that the regret of PBM-UCB is bounded from above by\nE[R(T )] ≤ C0( ) + 16(1 + )C(κ) log T\n( L\n∆ + ∑ k/∈a∗\n1\nκL(θL − θk)\n) .\nThe presence of the term L/∆ in the above expression is attributable to limitations of the mathematical analysis. On the other hand, the absence of the KL-divergence terms appearing in the lower bound (6) is due to the use of an upper confidence bound based on Hoeffding’s inequality.\nPBM-PIE We adapt the PIE(l) algorithm introduced by [5] for the Cascade Model to the PBM in Algorithm 1 below. At each round, the learner potentially explores at position L with probability 1/2 using the following upper-confidence bound for each arm k\nUk(t, δ) = sup q∈[θmink (t),1]\n{ q ∣∣∣∣∣ L∑ l=1 Nk,l(t)d ( Sk,l(t) Nk,l(t) , κlq ) ≤ δ } , (7)\nwhere θmink (t) is the minimum of the convex function Φ : q 7→ ∑L l=1Nk,l(t)d(Sk,l(t)/Nk,l(t), κlq). In other positions, l = 1, . . . , L− 1, PBM-PIE selects the arms with the largest estimates θ̂k(t). The resulting algorithm is presented as Algorithm 1 below, denoting by L(t) the L-largest empirical estimates, referred to as the “leaders” at round t.\nAlgorithm 1 – PBM-PIE Require: K, L, observation probabilities κ, > 0\nInitialization: first K rounds, play each arm at every position for t = K + 1, . . . , T do\nCompute θ̂k(t) for all k L(t)← top-L ordered arms by decreasing θ̂k(t) Al(t)← Ll(t) for each position l < L B(t)← {k|k /∈ L(t), Uk(t, (1 + ) log(T )) ≥ θ̂LL(t)(t) if B(t) = ∅ then AL(t)← LL(t) else With probability 1/2, select AL(t) uniformly at random from B(t), else AL(t)← LL(t) end if Play action A(t) and observe feedback Z(t); Update Nk,l(t+ 1) and Sk,l(t+ 1).\nend for\nThe Uk(t, δ) index defined in (7) aggregates observations from all positions – as in PBM-UCB – but allows to build tighter confidence regions as shown by the next proposition proved in Appendix E.\nProposition 10. For all δ ≥ L+ 1, P (Uk(t, δ) < θk) ≤ eL+1 ( dδ log(t)e δ\nL\n)L e−δ.\nWe may now state the main result of this section that provides an upper bound on the regret of PBM-PIE.\nTheorem 11. Using PBM-PIE with δ = (1 + ) log(t) and > 0, for any η < mink<K(θk − θk+1)/2, there exist problem-dependent constants C1(η), C2( , η), C3( ) and β( , η) such that\nE[R(T )] ≤ (1 + )2 log(T ) K∑\nk=L+1\nκL(θL − θk) d(κLθk, κL(θL − η)) + C1(η) + C2( , η) T β( ,η) + C3( ).\nThe proof of this result is provided in Appendix E. Comparing to the expression in (6), Theorem 11 shows that PBM-PIE reaches asymptotically optimal performance when the optimal exploring position is indeed located at index L. In other case, there is a gap that is caused by the fact the exploring position is fixed beforehand and not adapted from the data.\nWe conclude this section by a quick description of two other algorithms that will be used in the experimental section to benchmark our results.\nRanked Bandits (RBA-KL-UCB) The state-of-the-art algorithm for the sequential “learning to rank” problem was proposed by [17]. It runs one bandit algorithm per position, each one being entitled to choose the best suited arm at its rank. The underlying bandit algorithm that runs in each position is left to the choice of the user, the better the policy the lower the regret can be. If the bandit algorithm at position l selects an arm already chosen at a higher position, it receives a reward of zero. Consequently, the bandit algorithm operating at position l tends to focus on the estimation of l-th best arm. In the next section, we use as benchmark the Ranked Bandits strategy using the KL-UCB algorithm [9] as the per-position bandit.\nPBM-TS The observations Zl(t) are censored Bernoulli which results in a posterior that does not belong to a standard family of distribution. [12] suggest a version of Thompson Sampling called “Bias Corrected Multiple Play TS” (or BC-MP-TS) that approximates the true posterior by a Beta distribution. We observed in experiments that for parameter values close to one, this algorithm does not explore enough. In Figure 1(a), we show this phenomenon for θ = (0.95, 0.85, 0.75, 0.65, 0.55). The true posterior for the parameter θk at time t may be written as a product of truncated scaled beta distributions\nπt(θk) ∝ ∏ l θ αk,l(t) k (1− κlθk) βk,l(t),\nwhere αk,l(t) = Sk,l(t) and βk,l(t) = Nk,l(t)−Sk,l(t). To draw from this exact posterior, we use rejection sampling with proposal distribution Beta(αk,m(t), βk,m(t))/κm, where m = arg max1≤l≤L(αk,l(t) + βk,l(t))."
    }, {
      "heading" : "5 Experiments",
      "text" : ""
    }, {
      "heading" : "5.1 Simulations",
      "text" : "In order to evaluate our strategies, a simple problem is considered in which K = 5, L = 3, κ = (0.9, 0.6, 0.3) and θ = (0.45, 0.35, 0.25, 0.15, 0.05). The arm expectations are chosen such that the asymptotic behavior can be observed after reasonable time horizon. All results are averaged based on 10, 000 independent runs of the algorithm. We present the results in Figure 1(b) where PBM-UCB, PBM-PIE and PBM-TS are compared to RBA-KL-UCB. The performance of PBM-PIE and PBM-TS are comparable, the latter even being under the lower bound (it is a common observation, e.g. see [12], and is due to the asymptotic nature of the lower bound). The curves confirm our analysis for PBM-PIE and lets us conjecture that the true Thompson Sampling policy might be asymptotically optimal. As expected, PBM-PIE shows asymptotically optimal performance, matching the lower bound after a large enough horizon."
    }, {
      "heading" : "5.2 Real data experiments: search advertising",
      "text" : "The dataset was provided for KDD Cup 2012 track 2 1 and involves session logs of soso.com, a search engine owned by Tencent. It consists of ads that were inserted among search results. Each of the 150M lines from the log contains the user ID, the query typed, an ad, a position (1, 2 or 3) at which it was displayed and a binary reward (click/no-click). First, for every query, we excluded ads that were not displayed at least 1, 000 times at every position. We also filtered queries that had less than 5 ads satisfying the previous constraints. As a\n1http://www.kddcup2012.org/\nresult, we obtained 8 queries with at least 5 and up to 11 ads. For each query q, we computed the matrix of the average click-through rates (CTR): Mq ∈ RK×L, where K is the number of ads for the query q and L = 3 the number of positions. It is noticeable that the SVD of each Mq matrix has a highly dominating first singular value, therefore validating the low-rank assumption underlying in the PBM. In order to estimate the parameters of the problem, we used the EM algorithm suggested by [4, 8]. Table 1 reports some statistics about the bandit models reconstructed for each query: number of arms K, amount of data used to compute the parameters, minimum and maximum values of the θ’s for each model.\nWe conducted a series of 2, 000 simulations over this dataset. At the beginning of each run, a query was randomly selected together with corresponding probabilities of scanning positions and arm expectations. Even if rewards were still simulated, this scenario is more realistic since the values of the parameters were extracted from a real-world dataset. We show results for the different algorithms in Figure 2. It is remarkable that RBA-KL-UCB performs slightly better than PBM-UCB. One can imagine that PBM-UCB does not benefit enough from position aggregations – only 3 positions are considered – to beat RBA-KL-UCB. Both of them are outperformed by PBM-TS and PBM-PIE."
    }, {
      "heading" : "Conclusion",
      "text" : "This work provides the first complete analysis of the PBM in an online context. The proof scheme used to obtain the lower bound on the regret is interesting on its own, as it can be generalized to various other settings. The tightness of the lower bound is validated by our analysis of PBM-PIE but it would be an interesting future contribution to provide such guarantees for more straightforward algorithms such as PBM-TS or a ‘PBM-KLUCB’ using the confidence regions of PBM-PIE. In practice, the algorithms are robust to small variations of the values of the (κl)l, but it would be preferable to obtain some control over the regret under uncertainty on these examination parameters."
    }, {
      "heading" : "A Properties of θ̂k(t) (Section 2)",
      "text" : "Conditionnally to the actions A(1) up to A(t− 1), the log-likelihood of the observations Z(1), . . . , Z(t− 1) may be written as\nt−1∑ s= K∑ k=1 L∑ l=1 1{Al(t) = k} [Zl(t) log(κlθk) + (1− Zl(t)) log(1− κlθk)]\n= K∑ k=1 L∑ l=1 Sk,l(t) log(κlθk) + (Nk,l(t)− Sk,l(t)) log(1− κlθk).\nDifferenciating twice with respect to θk and taking the expectation of (Sk,l(t))l, contional to A(1), . . . , A(t− 1), yields the expression of I(θk) given in Section 2."
    }, {
      "heading" : "B Proof of Theorem 4",
      "text" : ""
    }, {
      "heading" : "B.1 Proof of Lemma 2",
      "text" : "Under the PBM, the conditional expectation of the log-likelihood ratio defined in (4) writes\nEθ[`(t)|A(1), . . . , A(t)] = Eθ\n[ t∑\ns=1 ∑ a∈A 1{A(s) = a} L∑ l=1 log pal(Xl(s)Yl(s); θ) pal(Xl(s)Yl(s);λ) ∣∣∣∣∣ A(1), . . . , A(t) ]\n= t∑ s=1 ∑ a∈A 1{A(s) = a} L∑ l=1 E [ log pal(Xl(s)Yl(s); θ) pal(Xl(s)Yl(s);λ) ∣∣∣∣ A(s) = a]\n= ∑ a∈A Na(t) L∑ l=1 K∑ k=1 1{al = k}d(κlθk, κlλk)\n= ∑ a∈A Na(t)Ia(θ, λ),\nusing the notation Ia(θ, λ) = ∑L l=1 ∑K k=1 1{al = k}d(κlθk, κlλk)."
    }, {
      "heading" : "B.2 Details on the proof of Proposition 3",
      "text" : "Lemma 12. Let θ = (θ1, . . . , θK) and λ = (λ1, . . . , λK) be two bandit models such that the distributions of all arms in θ and λ are mutually absolutely continuous. Let σ be a stopping time with respect to (Ft) such that (σ < +∞) a.s. under both models. Let E ∈ Fσ be an event such that 0 < Pθ(E) < 1. Then one has∑\na∈A Ia(θ, λ)Eθ[Na(σ)] ≥ d(Pθ(E),Pλ(E)),\nwhere Ia(θ, λ) is the conditional expectation of the log-likelihood ratio for the model of interest.\nThe proof of this lemma directly follows from the above expressions of the log-likelihood ratio and from the proof of Lemma 1 in Appendix A.1 of [11].\nWe simply recall the following technical lemma for completeness.\nLemma 13. Let σ be any stopping time with respect to (Ft). For every event A ∈ Fσ,\nPλ(A) = Eθ[1{A} exp(−`(σ))].\nA full proof of Lemma 13 can be found in the Appendix A.3 of [11] (proof of Lemma 15)."
    }, {
      "heading" : "B.3 Lower bound proof (Theorem 4)",
      "text" : "In order to prove the simplified lower bound of Theorem 4 we basically have two arguments:\n1. a lower bound on f(θ) can be obtained by enlarging the feasible set, that is by relaxing some constraints;\n2. Lemma 15 can be used to lower bound the objective function of the problem.\nThe constant f(θ) is defined by\nf(θ) = inf c 0 ∑ a6=a∗(θ) ∆a(θ)ca (8)\ns.t inf λ∈B(θ) ∑ a∈A Ia(θ, λ)ca ≥ 1. (9)\nWe begin by relaxing some constraints: we only allow the change of measure λ to belong to the sets Bk(θ) := {λ ∈ Θ|∀j 6= k, θj = λj and µ∗(θ) < µ∗(λ)} defined in Section 3:\nf(θ) = inf c 0 ∑ a6=a∗(θ) ∆a(θ)ca (10)\ns.t ∀k /∈ a∗(θ), ∀λ ∈ Bk(θ), ∑ a∈A Ia(θ, λ)ca ≥ 1. (11)\nThe K − L constraints (11) only let one parameter move and must be true for any value satisfying the definition of the corresponding set Bk(θ). In practice, for each k, the parameter λk must be set to at least θL. Consequently, these constraints may then be rewritten\nf(θ) = inf c 0 ∑ a6=a∗(θ) ∆a(θ)ca (12)\ns.t ∀k /∈ a∗(θ), ∑\na 6=a∗(θ)\nca L∑ l=1 1{al = k}d(κlθk, κlθL) ≥ 1. (13)\nProposition 14 tells us that coefficients ca are all zeros except for actions a ∈ A which can be written a = vk,lk where lk = arg minl≤L ∆vk,l (θ) d(κlθk,κlθL) . Thus, we obtain the desired lower bound by rewriting (12) as\nf(θ) ≥ K∑\nk=L+1\nmin l∈{1,...,L}\n∆vk,l(θ)\nd(κlθk, κlθL) .\nProposition 14. Let c = {ca : a 6= a∗} be a solution of the linear problem (LP) in Theorem 4. Coefficients are all zeros except for actions a which can be written as a = (1, . . . , lk − 1, k, lk, . . . , L− 1) := vk,lk where k > L and lk = arg minl≤L ∆vk,l (θ) d(κlθk,κlθL) .\nProof. We denote by πk(a) the position of item k ∈ {1, . . . ,K} in action a (0 if k /∈ a). Let lk be the optimal position of item k > L for exploration: lk = arg minl≤L ∆vk,l (θ) d(κlθk,κlθL) . Following [5], we show by contradiction that ca > 0 implies that a can be written vk,lk for a well chosen k > L. Let α 6= a∗ be a suboptimal action such that ∀k > L,α 6= vk,lk and cα > 0. We need to show a contradiction. Let us introduce a new set of coefficients c′ defined as follows, for any a 6= a∗:\nc′a =  0 if a = α ca + d(κπk(α)θk,κπk(α)θL) d(κlkθk,κlkθL) cα if ∃k > L s.t. a = vk,lk and k ∈ α\nca otherwise.\nAccording to Lemma 15, these coefficients satisfy the constraints of the LP. We now show that these new coefficients yield a strictly lower value to the optimization problem:\nc(θ)− c′(θ) = cα∆α(θ)− ∑\nk>L:k∈α\nd(κπk(α)θk, κπk(α)θL)\nd(κlkθk, κlkθL) cα∆vk,lk (θ)\n> cα ( ∑ k>L:k∈α ∆vk,πk(α)(θ)− ∑ k>L:k∈α d(κπk(α)θk, κπk(α)θL) d(κlkθk, κlkθL) ∆vk,lk (θ) ) . (14)\nThe strict inequality (14) is shown in Lemma 16. Let k > L be one of the suboptimal arms in α. By definition of lk, the corresponding term of the sum in equation (14) is positive. Thus, we have that c(θ) > c′(θ) and, hence, by contradiction, we showed that ca > 0 iff a can be written a = vk,lk for some k > L.\nLemma 15. Let c be a vector of coefficients that satisfy constraints (13) of the optimization problem. Then, coefficients c′ as defined in Proposition 14 also satisfy the constraints:\n∀k /∈ a∗(θ), ∑\na6=a∗(θ)\nc′a L∑ l=1 1{al = k}d(κlθk, κlθL) ≥ 1.\nProof. We use the same α as introduced in Proposition 14. Let us fix k /∈ a∗(θ). Let us define\nL(c) = ∑\na6=a∗(θ)\nca L∑ l=1 1{al = k}d(κlθk, κlθL).\nWe have\nL(c′)− L(c) = −cα L∑ l=1 1{αl = k}d(κlθk, κlθL) + ∑ l:αl>L d(κlθk, κlθL) d(κlkθk, κlkθL) cα\n× 1{αl = k}d(κlkθk, κlkθL).\nIf k /∈ α, clearly, L(c′)− L(c) = 0. Else, k ∈ α and we note p its position in α: p = πk(α). We rewrite:\nL(c′)− L(c) = cαd(κpθk, κpθL) ( −1 + d(κlkθk, κlkθL)\nd(κlkθk, κlkθL)\n) = 0.\nThus, the coefficients c′ satisfy the constraints from Proposition 14.\nLemma 16. Let α be as in the proof of Proposition 14. ∆α(θ) > ∑\nk>L:k∈α\n∆vk,πk(α)(θ).\nProof. Let k1, . . . , kp be the suboptimal arms in α by increasing position. Let v(α) be the action in A with lower regret such that it contains all the suboptimal arms of α in the same positions. Thus, v(α) = (1, . . . , πk1(α)− 1, k1, πk1(α), . . . , πk2(α) − 2, k2, πk2(α) − 1, . . . , L − p). By definition, one has that ∆α(θ) ≥ ∆v(α)(θ). In the following, we show that ∆v(α)(θ) ≥ ∑ k>L:k∈α ∆vk,πk(α)(θ) for p = 2 (that is to say α contains 2 suboptimal arms k1 and k2). For the sake of readability, we write πi instead of πki(α) in the following.\n∆v(α)(θ) = L∑ l=1 κl(θl − θ(vk1,π1 )l) + L∑ l=1 κl(θ(vk1,π1 )l − θv(α)l)\n= ∆vk1,π1 (θ) + [κπ2θπ2−1 + . . .+ κLθL−1]− [κπ2θk2 + κπ2+1θπ2−1 + . . .+ κLθL−2] = ∆vk1,π1 (θ) + ∆vk2,π2 (θ) + [κπ2(θπ2−1 − θπ2) + . . .+ κL(θL−1 − θL)]−\n[κπ2+1(θπ2−1 − θπ2) + . . .+ κL(θL−2 − θL−1)]\n= ∆vk1,π1 (θ) + ∆vk2,π2 (θ) +R(θ).\nThus, one has to show thatR(θ) = κπ2(θπ2−1−θπ2)+κπ2+1(2θπ2−θπ2−1−θπ2+1)+. . .+κL(2θL−1−θL−2−θL) > 0. In fact, using that κl ≥ κl+1 for all l < L, we have\nR(θ) ≥ κπ2+1(θπ2−1 − θπ2 + 2θπ2 − θπ2−1 − θπ2+1) + . . .+ κL(2θL−1 − θL−2 − θL) ≥ κπ2+2(θπ2+1 − θπ2+2) + . . .+ κL(2θL−1 − θL−2 − θL) ≥ . . . ≥ κL(θL−1 − θL) > 0."
    }, {
      "heading" : "C Proof of Proposition 8",
      "text" : "In this section, we fix an arm k ∈ {1, . . . ,K} and obtain an upper confidence bound for the estimator θ̂k(t) := Sk(t)/Ñk(t). Let τi be the instant of the i-th draw of arm k (the τi are stopping times w.r.t. Ft). We introduce the centered sequence of successive observations from arm k\nZ̄k,i = L∑ l=1 1{Al(τi) = k}(Xl(τi)Yl(τi)− θkκl). (15)\nIntroducing the filtration Gi = Fτi+1−1, one has E[Z̄k,i|Gi−1] = 0, and therefore, the sequence\nMk,n = n∑ i=1 Z̄k,i\nis a martingale with bounded increments, w.r.t. the filtration (Gn)n. By construction, one has\nMk,Nk(t) = Sk(t)− Ñk(t)θk = Ñk(t)(θ̂k(t)− θk).\nWe use the so-called peeling technique together with the maximal version of Azuma-Hoeffding’s inequality [2]. For any γ > 0 one has\nP ( Mk,Nk(t) < − √ Nk(t)δ/2 ) ≤ log(t) log(1+γ)∑ i=1 P ( Mk,Nk(t) < − √ Nk(t)δ/2 , Nk(t) ∈ [(1 + γ)i−1, (1 + γ)i) )\n≤ log(t) log(1+γ)∑ i=1 P ( ∃i ∈ {1, . . . , (1 + γ)i} : Mk,i < − √ (1 + γ)i−1δ/2 )\n≤ log(t) log(1+γ)∑ i=1 exp ( −δ(1 + γ) i−1 (1 + γ)i ) = log(t) log(1 + γ) exp ( − δ (1 + γ) ) .\nChoosing γ = 1/(δ − 1), gives\nP ( θ̂k(t)− θk < − √ Nk(t)δ/2\nÑk(t)\n) ≤ δe log(t)e−δ.\nD Regret analysis for PBM-UCB (Theorem 9) We proceed as Kveton et al. (2015) [14]. We start by considering separately rounds when one of the confidence intervals is violated. We denote by Bt,k = √ Nk(t)(1 + ) log t/2/Ñk(t) the PBM-UCB exploration bonus\nand by B+t,k = √ Nk(t)(1 + ) log T/2/Ñk(t) an upper bound of this bonus (for t ≤ T ). We define the event Et = {∃k ∈ A(t) : |θ̂k(t)− θk| > Bt,k}. Then, the regret can be decomposed into\nR(T ) = T∑ t=1 ∆A(t)1Et + ∆A(t)1Ēt .\nand, similarly to [14] (Appendix A.1), the first term of this sum can be bounded from above in expectation by a constant C0( ) that does not depend on T using Proposition 8. So, it remains to bound the regret suffered even when confidence intervals are respected, that is the sum on the r.h.s of\nE[R(T )] < C0( ) + E[ T∑ t=1 ∆A(t)1{Ēt,∆A(t) > 0}].\nIt can be done using techniques from [6, 14]. We start by defining events Ft, Gt, Ht in order to decompose the part of the regret at stake. Then, we show an equivalent of Lemma 2 of [14] for our case and finally we refer to the proof of Theorem 3 in Appendix A.3 of [14].\nFor each round t ≥ 1, we define the set of arms St = {1 ≤ l ≤ L : NAl(t)(t) ≤ 8(1+ ) log T(\n∑L s=1 κs) 2\nκ2L∆ 2 A(t) } and the related events\n• Ft = {∆A(t) > 0, ∆A(t) ≤ 2 ∑L l=1 κlB + t,Al(t) };\n• Gt = {|St| ≥ l};\n• Ht = {|St| < l , ∃k ∈ A(t), Nk(t) ≤ 8(1+ ) log T(\n∑l s=1 κs) 2\nκ2L∆ 2 A(t) }, where the constraint on Nk(t) only differs from the first one by its numerator which is smaller than the previous one, leading to an even stronger constraint.\nFact 17. According to Lemma 1 in [14], the following inequality is still valid with our own definition of Ft :\nT∑ t=1 ∆A(t)1{Ēt,∆A(t) > 0} ≤ T∑ t=1 ∆A(t)1{Ft}.\nProof. Invoking Lemma 1 from [14] needs to be justified as our setting is quite different. Taking action A(t) means that\nL∑ l=1 κlUAl(t)(t) ≥ L∑ l=1 κlUl(t).\nUnder event Ēt, all UCB’s are above the true parameter θk so we have\nL∑ l=1 κl(θAl(t) + 2Bt,Al(t)) ≥ L∑ l=1 κl(θl +Bt,l) ≥ L∑ l=1 κlθl.\nRearranging the terms above and using Bt,l(t) ≤ B+t,l(t), we obtain\nL∑ l=1 κlB + t,Al(t) ≥ 2 L∑ l=1 κlBt,Al(t) ≥ ∆A(t).\nWe now have to prove an equivalent of Lemma 2 in [6] that would allow us to split the right-hand side above in two parts. Let us show that Ft ⊂ (Gt ∪Ht) by showing its contrapositive: if Ft is true then we cannot have (Ḡt ∩ H̄t). Assume both of these events are true. Then, we have\n∆A(t) Ft ≤ 2 L∑ l=1 κlB + t,Al(t)\n≤ 2 L∑ l=1 κl\n√ NAl(t)(t)\nÑAl(t)(t)\n√ (1 + ) log(T )\n2ÑAl(t)(t)\n= 2 L∑ l=1 κl NAl(t)(t) ÑAl(t)(t)\n√ (1 + ) log(T )\n2NAl(t)(t) ≤ √ 2(1 + ) log T\nκL\nL∑ l=1 κl√ NAl(t)(t)\n=\n√ 2(1 + ) log T\nκL\n∑ l/∈St κl√ NAl(t)(t) + ∑ l∈St κl√ NAl(t)(t)  (Ḡt∩H̄t) < √ 2(1 + ) log T\nκL\nκL∆A(t) 2 √ 2(1 + ) log T (∑ l/∈St κl∑L s=1 κs + ∑ l∈St κl∑l s=1 κs ) ≤ ∆A(t)\nwhich is a contradiction. The end of the proof proceeds exactly as in the end of the proof of Theorem 6 in of [6]: events Gt and Ht are split into subevents corresponding to rounds where each specific suboptimal arm of the list is in St or verifies the condition of Ht. We define\nGk,t = Gt ∩ {k ∈ A(t), Nk(t) ≤ 8(1 + ) log T\n(∑L s=1 κs )2 κ2L∆ 2 A(t) },\nHk,t = Ht ∩ {k ∈ A(t), Nk(t) ≤ 8(1 + ) log T\n(∑l s=1 κs )2 κ2L∆ 2 A(t) }.\nThe way we defined these subevents allows to write the two following bounds :\nK∑ k=1 1{Gk,t} = 1{Gt} K∑ k=1 1{k ∈ St} ≥ l1{Gt}\nso 1{Gt} ≤ ∑ k 1{Gk,t}/l. And,\n1{Ht} ≤ K∑ k=1 1{Hk,t}.\nWe can now bound the regret using these two results:\nT∑ t=1 ∆A(t)(1{Gt}+ 1{Ht}) ≤ T∑ t=1 K∑ k=1 ∆A(t) l 1{Gk,t}+ T∑ t=1 K∑ k=1 ∆A(t)1{Hk,t}\n= T∑ t=1 K∑ k=1 ∆A(t) l 1{Gk,t, A(t) 6= a∗}+ T∑ t=1 K∑ k=1 ∆A(t)1{Hk,t, A(t) 6= a∗}.\nFor each arm k, there is a finite number Ck := |Ak| of actions in A containing k; we order them such that the corresponding gaps are in decreasing order ∆k,1 ≥ . . . ≥ ∆k,Ck > 0. So we decompose each sum above on the different actions A(t) possible:\n. . . ≤ T∑ t=1 K∑ k=1 ∑ a∈Ak ∆k,a l 1{Gk,t, A(t) = a}+ T∑ t=1 K∑ k=1 ∑ a∈Ak ∆k,a1{Hk,t, A(t) = a}.\nThe two sums on the right hand side look alike. For arm k fixed, events Gk,t and Hk,t imply almost the same condition on Nk(t), only Hk,t is stronger because the bounding term is smaller. We now rely on a technical result by [6] that allows to bound each sum.\nLemma 18. ([6], Lemma 2 in Appendix B.4) Let k be a fixed item and |Ak| ≥ 1, C > 0, we have\nT∑ t=1 ∑ a∈Ak 1{k ∈ A(t), Nk(t) ≤ C/∆2k,a, A(t) = a}∆k,a ≤ 2C ∆min,k\nwhere ∆min,k is the smallest gap among all suboptimal actions containing arm k. In particular, when k /∈ a∗ the smallest gap is ∆min,k = κL(θL− θk). While, when k ∈ a∗ it is less obvious what the minimal gap is, however it corresponds the second best action A2 containing only optimal arms: ∆min,k = ∆A2 .\nSo, bounding each sum with the above lemma, we obtain\nT∑ t=1 ∆A(t)(1{Gt}+ 1{Ht}) ≤ 16(1 + ) log T κ2L\n (∑L s=1 κs )2 l + ( l∑\ns=1\nκs )2 ︸ ︷︷ ︸\nC(l;κ)\n( L\n∆A2 + ∑ k/∈a∗\n1\nκL(θL − θk)\n) .\nThis bound can be optimized by minimizing C(l;κ) over l.\nE Regret analysis for PBM-PIE (Theorem 11) The proof follows the decomposition of [5]. For all t ≥ 1, we denote f(t, ) = (1 + ) log t."
    }, {
      "heading" : "E.1 Controlling leaders and estimations",
      "text" : "Define η0 = mink∈{1,...,L−1}(θk − θk+1)/2 and let η < η0. We define the following set of rounds\nA = {t ≥ 1 : L(t) 6= (1, . . . , L)}.\nOur goal is to upper bound the expected size of A. Let us introduce the following sets of rounds:\nB = {t ≥ 1 : ∃k ∈ L(t), |θ̂k(t)− θk| ≥ η}, C = {t ≥ 1 : ∃k ≤ L,Uk(t) ≤ θk},\nD = {t ≥ 1 : t ∈ A \\ (B ∪ C),∃k ≤ L, k /∈ L(t), |θ̂k(t)− θk| ≥ η}.\nWe first show that A ⊂ (B ∪ C ∪D). Let t ∈ A \\ (B ∪ C). Let k, k′ ∈ L(t) such that k < k′. Since t /∈ B, we have that |θ̂k(t)− θk| ≤ η and |θ̂k′(t)− θk′ | ≤ η. Since η ≤ (θk − θk′)/2, we conclude that θ̂k(t) ≥ θ̂k′(t). This proves that (L1(t), . . . ,LL(t) is an increasing sequence. We have that LL(t) > L otherwise L(t) = (1, . . . , L) which is a contradiction because t ∈ A. Since LL(t) > L, there exists k ≤ L such that k /∈ L(t). We show by contradiction that |θ̂k(t) − θk| ≥ η. Assume that |θ̂k(t) − θk| ≤ η. We also have that θ̂LL(t)(t) − θLL(t) ≤ η because LL(t) ∈ L(t) and t /∈ B. Thus, θ̂k(t) > θ̂LL(t)(t). We have a contradiction because this would imply that k ∈ L(t). Finally we have proven that if t ∈ A \\ (B ∪ C), then t ∈ D so A ⊂ (B ∪ C ∪D).\nBy a union bound, we obtain E[|A|] ≤ [|B|] + [|C|] + [|D|].\nIn the following, we upper bound each set of rounds individually. Controlling E[|B|]: We decompose B = ⋃K k=1(Bk,1 ∪Bk,2) where\nBk,1 = {t ≥ 1 : k ∈ L(t),LL(t) 6= k, |θ̂k(t)− θk| ≥ η}\nBk,2 = {t ≥ 1 : k ∈ L(t),LL(t) = k, |θ̂k(t)− θk| ≥ η}\nLet t ∈ Bk,1: k ∈ A(t) so E[k ∈ A(t)|t ∈ Bk,1] = 1. Furthermore, for all t, 1{t ∈ Bk,1} is Ft−1 measurable. Then we can apply Lemma 22 (with H = Bk,1 and c = 1).\nE[|Bk,1|] ≤ 2(2 + κ−2L η −2).\nLet t ∈ Bk,2: k ∈ B(t) but because of the randomization of the algorithm, k ∈ A(t) with probability 1/2, i.e. E[k ∈ A(t)|t ∈ Bk,2] ≥ 1/2. We get\nE[|Bk,2|] ≤ 4(4 + κ−2L η −2)\nBy union bound over k, we get E[|B|] ≤ 2K(10 + 3κ−2L η−2).\nControlling E[|C|]: We decompose C = ⋃L k=1 Ck where Ck = {t ≥ 1 : Uk(t) ≤ θk}\nWe first require to prove Proposition 10.\nProof. Theorem 2 of [16] implies that\nP ( L∑ l=1 Nk,l(t)d( Sk,l(t) Nk,l(t) , κlθk) ≥ δ ) ≤ e−δ ( dδ log(t)e δ L )L eL+1.\nThe function Φ : x→ ∑L l=1Nk,l(t)d ( Sk,l(t) Nk,l(t) , κlx ) is convex and non-decreasing on [θmink (t), 1]; the convexity is easily checked and θmink (t) is defined as the minimum of this convex function. By definition, we have, either, Uk(t, δ) = 1 and then Uk(t, δ) > θk, or, Uk(t, δ) < 1 and Φ(Uk(t, δ)) = δ, consequently\nP (Uk(t, δ) < θk) = P (Φ(Uk(t, δ)) ≤ Φ(θk)) = P (δ ≤ Φ(θk)) .\nRemember that Uk(t) = Uk(t, (1 + ) log(t)) = Uk(t, f(t, )). Thus, applying Proposition 10, we obtain for arm k,\nE[|Ck|] ≤ ∞∑ t=1 P(Uk(t) ≤ θk) ≤ deL+1e+ eL+1 LL ∞∑ t=deL+1e+1 (2 + )2L(log t)3L t1+ ≤ C3( ),\nfor some constant C3( ). Controlling E[|D|]: Decompose D as D = ⋃L k=1Dk where\nDk = {t ≥ 1 : t ∈ A \\ (B ∪ C), k /∈ L(t), |θ̂k(t)− θk| ≥ η}.\nFor a given k ≤ L, Dk is the set of rounds at which k is not one of the leaders, and is not accurately estimated. Let t ∈ Dk. Since k /∈ L(t), we must have LL(t) > L. In turn, since t /∈ B, we have |θ̂LL(t)(t)− θLL(t)| ≤ η, so that\nθ̂LL(t) ≤ θLL(t) + η ≤ θL + η ≤ (θL + θL+1)/2.\nFurthermore, since t /∈ C and 1 ≤ k ≤ L, we have Uk(t) ≥ θk ≥ θL ≥ (θL + θL+1)/2 ≥ θ̂LL(t). This implies that k ∈ B(t) thus E[k ∈ A(t)|t ∈ Dk] ≥ 1/(2K). We apply Lemma 22 with H ≡ Dk and c = 1/(2K) to get\nE[|D|] ≤ L∑ k=1 E[|Dk|] ≤ 4K(4K + κ−2L η −2)."
    }, {
      "heading" : "E.2 Regret decomposition",
      "text" : "We decompose the regret by distinguishing rounds in A ∪B and other rounds. More specifically, we introduce the following sets of rounds for arm k > L:\nEk = {t ≥ 1 : t /∈ (B ∪ C ∪D),L(t) = a∗, A(t) = vk,L}.\nThe set of instants at which a suboptimal action is selected now can be expressed as follows\n{t ≥ 1 : A(t) 6= a∗} ⊂ (B ∪ C ∪D) ∪ (∪k=L+1Ek).\nUsing a union bound, we obtain the upper bound\nE[R(T )] ≤ ( L∑ l=1 κl ) E[|B ∪ C ∪D|] + K∑ k=L+1 ∆vk,L(θ)E[|Ek|].\nFrom previous boundaries, putting it all together, there exist C1(η) and C3( ), such that( L∑ l=1 κl ) (E[|B|] + E[|C|] + E[|D|]) ≤ C1(η) + C3( ).\nAt this step, it suffices to bound events Ek for all k > L."
    }, {
      "heading" : "E.3 Bounding event Ek",
      "text" : "We proceed similarly to [9]. Let us fix an arm k > L. Let t ∈ Ek: arm k is pulled in position L, so by construction of the algorithm, we have that k ∈ B(t) and thus Uk(t) ≥ θ̂LL(t)(t). We first show that this implies that Uk(t) ≥ θL − η. Since t ∈ Ek, we know that LL(t) = L, and since t /∈ B, |θ̂L(t)− θL| ≤ η. This leads to\nUk(t) ≥ θ̂LL(t)(t) = θ̂L(t) ≥ θL − η.\nRecall thatNk,L(t) is the number of times arm k was played in position L. By denoting d+(x, y) = 1{x < y}d(x, y), we have that\nNk,L(t)d +(Sk,L(t)/Nk,L(t), κL(θL − η)) ≤ Nk,L(t)d+(Sk,L(t)/Nk,L(t), κLUk(t))\n≤ L∑ l=1 Nk,l(t)d +(Sk,l(t)/Nk,l(t), κlUk(t)) ≤ f(t, ).\nThis implies that 1{t ∈ Ek} ≤ 1{Nk,L(t)d+(Sk,L(t)/Nk,L(t), κL(θL − η)) ≤ f(t, )}.\nLemma 19. ([9], Lemma 7) Denoting by ν̂Lk,s the empirical mean of the first s samples of Zk,L, we have\nT∑ t=1 1{A(t) = vk,L, Nk,L(t)d+(Sk,L(t)/Nk,L(t), κL(θL − η)) ≤ f(t, )}\n≤ T∑ s=1 1{sd+(ν̂Lk,s, κL(θL − η)) ≤ f(T, )}.\nWe apply Lemma 19 which is a direct translation of Lemma 7 from [9] to our problem. This yields\n|Ek| ≤ T∑ s=1 1{sd+(ν̂Lk,s, κL(θL − η)) ≤ f(T, )}.\nLet γ > 0. We define KT = (1+γ)f(T, )\nd+(κLθk,κL(θL−η)) . We now rewrite the last inequality splitting the sum in two parts.\nT∑ s=1 P(sd+(ν̂Lk,s,κL(θL − η)) ≤ f(T, )) ≤ KT + ∞∑\ns=KT+1\nP(KT d +(ν̂Lk,s, κL(θL − η)) ≤ f(T, ))\n≤ KT + ∞∑\ns=KT+1\nP(d+(ν̂Lk,s, κL(θL − η)) ≤ d(κLθk, κL(θL − η))/(1 + γ))\n≤ KT + C2(γ, η)\nT β(γ,η) ,\nwhere last inequality comes from Lemma 20. Fixing γ < , we obtain the desired result, which concludes the proof.\nLemma 20. For each γ > 0, there exists C2(γ, η) > 0 and β(γ, η) > 0 such that\n∞∑ s=KT+1 P ( d+(ν̂Lk,s, κL(θL − η)) ≤ d(κLθk, κL(θL − η) 1 + γ ) ≤ C2(γ, η) T β(γ,η) .\nProof. If d+(ν̂Lk,s, κL(θL − η)) ≤ d(κLθk,κL(θL−η)) 1+γ , then there exists some r(γ, η) ∈ (θk, θL − η) such that ν̂ L k,s > κLr(γ, η) and\nd(κLr(γ, η), κL(θL − η)) = d(κLθk, κL(θL − η))\n1 + γ .\nHence,\nP ( d+(ν̂k,s, κLθL) < d(κLθk, κLθL)\n1 + γ\n) ≤ P (d(ν̂k,s, κLθk) > d(κLr(γ, η), κLθk), ν̂k,s > κLθk)\n≤ P(ν̂k,s > κLr(γ, η)) ≤ exp(−sd(κLr(γ, η), κLθk)).\nWe obtain,\n∞∑ t=KT P ( d+(ν̂k,s, κLθL) < d(κLθk, κLθL) 1 + γ ) ≤ exp(−KT d(κLr(γ, η), κLθk)) 1− exp(−d(κLr(γ, η), κLθk)) ≤ C2(γ, η) T β(γ,η) ,\nfor well chosen C2(γ, η) and β(γ, η)."
    }, {
      "heading" : "F Lemmas",
      "text" : "In this section, we recall two necessary concentration lemmas directly adapted from Lemma 4 and 5 in Appendix A of [5]. Although more involved from a probabilistic point of view, these results are simpler to establish than proposition 8 as their adaptation to the case of the PBM relies on a crude lower bound for Ñk(t), which is sufficient for proving Theorem 11..\nLemma 21. For k ∈ {1, . . . ,K} consider the martingale Mk,n = ∑n i=1 Z̄k,i, where Z̄k,i is defined in (15). Consider Φ a stopping time such that either Nk(Φ) ≥ s or Φ = T + 1. Then\nP[|Mk,Nk(Φ)| ≥ Nk(Φ)η,Nk(Φ) ≥ s] ≤ 2 exp(−2sη 2). (16)\nAs a consequence,\nP[|θ̂k(Φ)− θk| ≥ η, Φ ≤ T ] ≤ 2 exp(−2sκ2Lη2). (17)\nProof. The first result is a direct application of Lemma 4 of [5] as (Zl(t))t with Zl(t) = Xl(t)Yl(t) is an independent sequence of [0, 1]-valued variables.\nFor the second inequality, we use the fact that Ñk(t) ≥ κLNk(t). Hence, P[|θ̂k(Φ)− θk| ≥ η, Φ ≤ T ] ≤ P [ |Mk,Nk(Φ)| κLNk(Φ) ≥ η, Φ ≤ T ] .\nwhich is upper bounded using (16).\nLemma 22. Fix c > 0 and k ∈ {1, . . . ,K}. Consider a random set of rounds H ⊂ N, such that, for all t, 1{t ∈ H} is Ft−1 measurable and such that for all t ∈ H, {k ∈ B(t)} is true. Further assume, for all t, one has E[1{k ∈ A(t)}|t ∈ H] ≥ c > 0. We define τs a stopping time such that ∑τs t=1 1{t ∈ H} ≥ s. Consider the random set Λ = {τs : s ≥ 1}. Then, for all k,∑ t≥0 P[t ∈ Λ, |θ̂k(t)− θk| ≥ η] ≤ 2c−1(2c−1 + κ−2L η −2)\nThe proof of this lemma follows that of Lemma 5 in [5] using the same lower bound for Ñk(t) as above."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2016,
    "abstractText" : "<lb>Sequentially learning to place items in multi-position displays or lists is a task that can be cast into the<lb>multiple-play semi-bandit setting. However, a major concern in this context is when the system cannot decide<lb>whether the user feedback for each item is actually exploitable. Indeed, much of the content may have been<lb>simply ignored by the user. The present work proposes to exploit available information regarding the display<lb>position bias under the so-called Position-based click model (PBM). We first discuss how this model differs<lb>from the Cascade model and its variants considered in several recent works on multiple-play bandits. We<lb>then provide a novel regret lower bound for this model as well as computationally efficient algorithms that<lb>display good empirical and theoretical performance.",
    "creator" : "LaTeX with hyperref package"
  }
}