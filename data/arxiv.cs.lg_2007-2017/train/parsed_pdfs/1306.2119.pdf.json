{
  "name" : "1306.2119.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Non-strongly-convex smooth stochastic approximation with convergence rate O(1/n)",
    "authors" : [ "Francis Bach" ],
    "emails" : [ "francis.bach@ens.fr", "eric.moulines@enst.fr" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n30 6.\n21 19\nv1 [\ncs .L\nG ]\n√\nn). We consider and analyze two algorithms that achieve a rate of O(1/n) for classical supervised learning problems. For least-squares regression, we show that averaged stochastic gradient descent with constant step-size achieves the desired rate. For logistic regression, this is achieved by a simple novel stochastic gradient algorithm that (a) constructs successive local quadratic approximations of the loss functions, while (b) preserving the same running time complexity as stochastic gradient descent. For these algorithms, we provide a non-asymptotic analysis of the generalization error (in expectation, and also in high probability for least-squares), and run extensive experiments on standard machine learning benchmarks showing that they often outperform existing approaches.\n1 Introduction\nLarge-scale machine learning problems are becoming ubiquitous in many areas of science and engineering. Faced with large amounts of data, practitioners typically prefer algorithms that process each observation only once, or a few times. Stochastic approximation algorithms such as stochastic gradient descent (SGD) and its variants, although introduced more than 60 years ago [1], still remain the most widely used and studied method in this context (see, e.g., [2, 3, 4, 5, 6, 7]).\nWe consider minimizing convex functions f , defined on a Euclidean space H, given by f(θ) = E [ ℓ(y, 〈θ, x〉) ]\n, where (x, y) ∈ H × R denotes the data and ℓ denotes a loss function that is convex with respect to the second variable. This includes logistic and least-squares regression. In the stochastic approximation framework, independent and identically distributed pairs (xn, yn) are observed sequentially and the predictor defined by θ is updated after each pair is seen.\nWe partially understand the properties of f that affect the problem difficulty. Strong convexity (i.e., when f is twice differentiable, a uniform strictly positive lower-bound µ on Hessians of f) is a key property. Indeed, after n observations and with the proper step-sizes, averaged SGD achieves the rate of O(1/µn) in the strongly-convex case [5, 4], while it achieves only O(1/ √ n) in the nonstrongly-convex case [5], with matching lower-bounds [8, 9]. The main issue with strong convexity is that typical machine learning problems are high dimensional and have correlated variables so that the strong convexity constant µ is zero or very\nclose to zero, and in any case smaller than O(1/ √ n). This then makes the non-strongly convex methods better. In this paper, we aim at obtaining algorithms that may deal with arbitrarily small strong-convexity constants, but still achieve a rate of O(1/n).\nSmoothness plays a central role in the context of deterministic optimization. The known convergence rates for smooth optimization are better than for non-smooth optimization (e.g., see [10]). However, for stochastic optimization the use of smoothness only leads to improvements on constants (e.g., see [11]) but not on the rate itself, which remains O(1/ √ n) for non-strongly-convex problems.\nWe show that for the square loss and for the logistic loss, we may use the smoothness of the loss and obtain algorithms that have a convergence rate of O(1/n) without any strong convexity assumptions. More precisely, for least-squares regression, we show in Section 2 that averaged stochastic gradient descent with constant step-size achieves the desired rate. For logistic regression this is achieved by a novel stochastic gradient algorithm that (a) constructs successive local quadratic approximations of the loss functions, while (b) preserving the same running time complexity as stochastic gradient descent (see Section 3). For these algorithms, we provide a non-asymptotic analysis of their generalization error (in expectation, and also in high probability for least-squares), and run extensive experiments on standard machine learning benchmarks showing in Section 4 that they often outperform existing approaches.\n2 Constant-step-size least-mean-square algorithm\nIn this section, we consider stochastic approximation for least-squares regression, where SGD is often referred to as the least-mean-square (LMS) algorithm. The novelty of our convergence result is the use of the constant step-size with averaging, leading to O(1/n) rate without strong convexity.\n2.1 Convergence in expectation\nWe make the following assumptions:\n(A1) H is a d-dimensional Euclidean space, with d > 1.\n(A2) The observations (xn, zn) ∈ H×H are independent and identically distributed.\n(A3) E‖xn‖2 and E‖zn‖2 are finite. Denote by H = E(xn ⊗ xn) the covariance operator from H to H. Without loss of generality, H is assumed invertible (by projecting onto the minimal subspace where xn lies almost surely). However, its eigenvalues may be arbitrarily small.\n(A4) The global minimum of f(θ) = (1/2)E [ 〈θ, xn〉2 − 2〈θ, zn〉 ] is attained at a certain θ∗ ∈ H. We denote by ξn = zn − 〈θ∗, xn〉xn the residual. We have E [ ξn ] = 0, but in general, it is not true\nthat E [ ξn ∣ ∣ xn ] = 0 (unless the model is well-specified).\n(A5) We study the stochastic gradient (a.k.a. least mean square) recursion defined as\nθn = θn−1 − γ(〈θn−1, xn〉xn − zn) = (I − γxn ⊗ xn)θn−1 + γzn, (1)\nstarted from θ0 ∈ H. We also consider the averaged iterates θ̄n = (n+ 1)−1 ∑n k=0 θk.\n(A6) There exists R > 0 and σ > 0 such that E [ ξn ⊗ ξn ] 4 σ2H and E ( ‖xn‖2xn ⊗ xn ) 4 R2H , where 4 denotes the the order between self-adjoint operators, i.e., A 4 B if and only if B − A is positive semi-definite.\nDiscussion of assumptions. Assumptions (A1-5) are standard in stochastic approximation (see, e.g., [12, 6]). Note that for least-squares problems, zn is of the form ynxn, where yn ∈ R is the response to be predicted as a linear function of xn. We consider a slightly more general case than least-squares because we will need it for the quadratic approximation of the logistic loss in Section 3.1. Note that in assumption (A4), we do not assume that the model is well-specified.\nAssumption (A6) is true for least-square regression with almost surely bounded data, since, if ‖xn‖2 6 R2 almost surely, then E ( ‖xn‖2xn ⊗ xn ) 4 E ( R2xn ⊗ xn )\n= R2H ; a similar inequality holds for the output variables yn. Moreover, it also holds for data with infinite supports, such as Gaussians or mixtures of Gaussians (where all covariance matrices of the mixture components are lower and upper bounded by a constant times the same matrix). Note that the finite-dimensionality assumption could be relaxed, but this would require notions similar to degrees of freedom [13], which is outside of the scope of this paper.\nThe goal of this section is to provide a bound on the expectation E [ f(θ̄n)− f(θ∗) ]\n, that (a) does not depend on the smallest non-zero eigenvalue of H (which could be arbitrarily small) and (b) still scales as O(1/n).\nTheorem 1 Assume (A1-6). For any constant step-size γ < 1R2 , we have\nE [ f(θ̄n−1)− f(θ∗) ] 6 1\n2n\n[ σ √ d\n1− √ γR2 +R‖θ0 − θ∗‖\n1 √\nγR2\n]2\n. (2)\nWhen γ = 1/(4R2), we obtain E [ f(θ̄n−1)− f(θ∗) ] 6 2n\n[ σ √ d+R‖θ0 − θ∗‖ ]2 .\nProof technique. We adapt and extend a proof technique from [14] which is based on nonasymptotic expansions in powers of γ. We also use a result from [2] which studied the recursion in Eq. (1), with xn ⊗ xn replaced by its expectation H . See the appendix for details.\nOptimality of bounds. Our bound in Eq. (2) leads to a rate of O(1/n), which is known to be optimal for least-squares regression (i.e., under reasonable assumptions, no algorithm, even more complex than averaged SGD can have a better dependence in n) [15]. The term σ2d/n is also unimprovable.\nInitial conditions. If γ is small, then the initial condition is forgotten more slowly. Note that with additional strong convexity assumptions, the initial condition would be forgotten faster (exponentially fast without averaging), which is one of the traditional uses of constant-step-size LMS [16].\nSpecificity of constant step-sizes. The non-averaged iterate sequence (θn) is a homogeneous Markov chain; under appropriate technical conditions, this Markov chain has a unique stationary (invariant) distribution and the sequence of iterates (θn) converges in distribution to this invariant distribution; see [17, Chapter 17]. Denote by πγ the invariant distribution. Assuming that the Markov Chain is Harris recurrent, the ergodic theorem for Harris Markov chain shows that θ̄n−1 = n−1 ∑n−1\nk=0 θk converges almost-surely to θ̄γ def = ∫\nθπγ(dθ), which is the mean of the stationary distribution. Taking the expectation on both side of Eq. (1), we get E[θn]− θ∗ = (I − γH)(E[θn−1]− θ∗), which shows, using that limn→∞ E[θn] = θ̄γ that Hθ̄γ = Hθ∗ and therefore θ̄γ = θ∗ since H is invertible. Under slightly stronger assumptions, it can be shown that\nlimn→∞ nE[(θ̄n − θ∗)2] = Varπγ (θ0) + 2 ∑∞ k=1 Covπγ (θ0, θk) ,\nwhere Covπγ (θ0, θk) denotes the covariance of θ0 and θk when the Markov chain is started from stationarity. This implies that limn→∞ nE[f(θ̄n) − f(θ∗)] has a finite limit. Therefore, this interpretation explains why the averaging produces a sequence of estimators which converges to the\nsolution θ∗ pointwise, and that the rate of convergence of E[f(θn)− f(θ∗)] is of order O(1/n). Note that for other losses than quadratic, the same properties hold except that the mean under the stationary distribution does not coincide with θ∗ and its distance to θ∗ is typically of order γ2 (see Section 3).\n2.2 Convergence in higher orders\nWe are now going to consider an extra assumption in order to bound the p-th moment of the excess risk and then get a high-probability bound. Let p be a real number greater than 1.\n(A7) There exists R > 0, κ > 0 and τ > σ > 0 such that, for all n > 1, ‖xn‖2 6 R2 a.s., and\nE‖ξn‖p 6 τpRp and E [ ξn ⊗ ξn ] 4 σ2H, (3)\n∀z ∈ H, E〈z, xn〉4 6 κ〈z,Hz〉2. (4)\nThe last condition in Eq. (4) says that the kurtosis of the projection of the covariates xn on any direction z ∈ H is bounded. Note that computing the constant κ happens to be equivalent to the optimization problem solved by the FastICA algorithm [18], which thus provides an estimate of κ. In Table 1, we provide such an estimate for the non-sparse datasets which we have used in experiments, while we consider only directions z along the axes for high-dimensional sparse datasets. For these datasets where a given variable is equal to zero except for a few observations, κ is typically quite large. Adapting and analyzing normalized LMS techniques [19] to this set-up is likely to improve the theoretical robustness of the algorithm (but note that results in expectation from Theorem 1 do not use κ). The next theorem provides a bound for the p-th moment of the excess risk.\nTheorem 2 Assume (A1-7). For any real p > 1, and for a step-size γ 6 1/(12pκR2), we have:\n( E ∣ ∣f(θ̄n−1)− f(θ∗) ∣ ∣ p)1/p 6\np\n2n\n( 7τ √ d+R‖θ0 − θ∗‖ √ 3 + 2\nγpR2\n)2\n. (5)\nFor γ = 1/(12pκR2), we get: ( E ∣ ∣f(θ̄n−1)− f(θ∗) ∣ ∣ p)1/p 6 p 2n (\n7τ √ d+ 6 √ κR‖θ0 − θ∗‖ )2 .\nNote that to control the p-th order moment, a smaller step-size is needed, which scales as 1/p.\nWe can now provide a high-probability bound; the tails decay polynomially as 1/(nδ12γκR 2\n) and the smaller the step-size γ, the lighter the tails.\nCorollary 1 For any step-size such that γ 6 1/(12κR2), any δ ∈ (0, 1),\nP\n(\nf(θ̄n−1)− f(θ∗) > 1\nnδ12γκR2\n[ 7τ √ d+R‖θ0 − θ∗‖( √ 3 + √ 24κ) ]2\n24γκR2\n)\n6 δ . (6)\n3 Beyond least-squares: M-estimation\nIn Section 2, we have shown that for least-squares regression, averaged SGD achieves a convergence rate of O(1/n) with no assumption regarding strong convexity. For all losses, with a constant stepsize γ, the stationary distribution πγ corresponding to the homogeneous Markov chain (θn) does always satisfy ∫\nf ′(θ)πγ(dθ) = 0, where f is the generalization error. When the gradient f ′ is linear (i.e., f is quadratic), then this implies that f ′( ∫\nθπγ(dθ))=0, i.e., the averaged recursion converges pathwise to θ̄γ = ∫\nθπγ(dθ) which coincides with the optimal value θ∗ (defined through f ′(θ∗)=0). When the gradient f ′ is no longer linear, then ∫ f ′(θ)πγ(dθ) 6= f ′( ∫\nθπγ(dθ)). Therefore, for general M -estimation problems we should expect that the averaged sequence still converges at rate O(1/n) to the mean of the stationary distribution θ̄γ , but not to the optimal predictor θ∗. Typically, the\naverage distance between θn and θ∗ is of order γ (see Section 4 and [20]), while for the averaged iterates that converge pointwise to θ̄γ , it is of order γ\n2 for strongly convex problems under some additional smoothness conditions on the loss functions (these are satisfied, for example, by the logistic loss [21]).\nSince quadratic functions may be optimized with rate O(1/n) under weak conditions, we are going to use a quadratic approximation around a well chosen support point, which shares some similarity with the Newton procedure (however, with a non trivial adaptation to the stochastic approximation framework). The Newton step for f around a certain point θ̃ is equivalent to minimizing a quadratic surrogate g of f around θ̃, i.e., g(θ) = f(θ̃) + 〈f ′(θ̃), θ − θ̃〉 + 12 〈θ − θ̃, f ′′(θ̃)(θ − θ̃)〉. If fn(θ) def = ℓ(yn, 〈θ, xn〉), then g(θ) = Egn(θ), with gn(θ) = f(θ̃) + 〈f ′n(θ̃), θ − θ̃〉 + 12 〈θ − θ̃, f ′′n (θ̃)(θ − θ̃)〉; the Newton step may thus be solved approximately with stochastic approximation (here constant-step size LMS), with the following recursion:\nθn = θn−1 − γg′n(θn−1) = θn−1 − γ [ f ′n(θ̃) + f ′′ n (θ̃)(θn−1 − θ̃) ] . (7)\nThis is equivalent to replacing the gradient f ′n(θn−1) by its first-order approximation around θ̃. A crucial point is that for machine learning scenarios where fn is a loss associated to a single data point, its complexity is only twice the complexity of a regular stochastic approximation step, since, with fn(θ) = ℓ(yn, 〈xn, θ〉), f ′′n (θ) is a rank-one matrix.\nChoice of support points for quadratic approximation. An important aspect is the choice of the support point θ̃. In this paper, we consider two strategies: – Two-step procedure: for convex losses, averaged SGD with a step-size decaying at O(1/ √ n)\nachieves a rate (up to logarithmic terms) of O(1/ √ n) [5, 6]. We may thus use it to obtain a first decent estimate. The two-stage procedure is as follows (and uses 2n observations): n steps of averaged SGD with constant step size γ ∝ 1/√n to obtain θ̃, and then averaged LMS for the Newton step around θ̃. As shown below, this algorithm achieves the rate O(1/n) for logistic regression. However, it is not the most efficient in practice.\n– Support point = current average iterate: we simply consider the current averaged iterate θ̄n−1 as the support point θ̃, leading to the recursion:\nθn = θn−1 − γ [ f ′n(θ̄n−1) + f ′′ n (θ̄n−1)(θn−1 − θ̄n−1) ] . (8)\nAlthough this algorithm has shown to be the most efficient in practice (see Section 4) we currently have no proof of convergence. Given that the behavior of the algorithms does not change much when the support point is updated less frequently than each iteration, there may be some connections to two-time-scale algorithms (see, e.g., [22]). In Section 4, we also consider several other strategies based on doubling tricks.\nInterestingly, for non-quadratic functions, our algorithm imposes a new bias (by replacing the true gradient by an approximation which is only valid close to θ̄n−1) in order to reach faster convergence (due to the linearity of the underlying gradients).\nRelationship with one-step-estimators. One-step estimators (see, e.g., [23]) typically take any estimator with O(1/n)-convergence rate, and make a full Newton step to obtain an efficient estimator (i.e., one that achieves the Cramer-Rao lower bound). Although our novel algorithm is largely inspired by one-step estimators, our situation is slightly different since our first estimator has only convergence rate O(n−1/2) and is estimated on different observations.\n3.1 Self-concordance and logistic regression\nWe make the following assumptions:\n(B1) H is a d-dimensional Euclidean space, with d > 1.\n(B2) The observations (xn, yn) ∈ H× {−1, 1} are independent and identically distributed.\n(B3) We consider f(θ) = E [ ℓ(yn, 〈xn, θ〉) ]\n, with the following assumption on the loss function ℓ (whenever we take derivatives of ℓ, this will be with respect to the second variable):\n∀(y, ŷ) ∈ {−1, 1} × R, ℓ′(y, ŷ) 6 1, ℓ′′(y, ŷ) 6 1/4, |ℓ′′′(y, ŷ)| 6 ℓ′′(y, ŷ).\nWe denote by θ∗ a global minimizer of f , which we thus assume to exist, and we denote by H = f ′′(θ∗) the Hessian operator at a global optimum θ∗.\n(B4) We assume that there exists R > 0, κ > 0 and ρ > 0 such that ‖xn‖2 6 R2 almost surely, and\nE [ xn ⊗ xn ] 4 ρE [ ℓ′′(yn, 〈θ∗, xn〉)xn ⊗ xn ] = ρH, (9)\n∀z ∈ H, θ ∈ H, E [ ℓ′′(yn, 〈θ, xn〉)2〈z, xn〉4 ] 6 κ ( E [ ℓ′′(yn, 〈θ, xn〉)〈z, xn〉2 ])2 . (10)\nAssumption (B3) is satisfied for the logistic loss and extends to all generalized linear models (see more details in [21]), and the relationship between the third derivative and second derivative of the loss ℓ is often referred to as self-concordance (see [24, 25] and references therein). Note moreover that we must have ρ > 4 and κ > 1.\nA loose upper bound for ρ is 1/ infn ℓ ′′(yn, 〈θ∗, xn〉) but in practice, it is typically much smaller (see Table 1). The condition in Eq. (10) is hard to check because it is uniform in θ. With a slightly more complex proof, we could restrict θ to be close to θ∗; with such constraints, the value of κ we have found is close to the one from Section 2.2 (i.e., without the terms in ℓ′′(yn, 〈θ, xn〉)).\nTheorem 3 Assume (B1-4), and consider the vector ζn obtained as follows: (a) perform n steps of averaged stochastic gradient descent with constant step size 1/2R2 √ n, to get θ̃n, and (b) perform n step of averaged LMS with constant step-size 1/R2 for the quadratic approximation of f around θ̃n. If n > (19 + 9R‖θ0 − θ∗‖)4, then\nEf(ζn)− f(θ∗) 6 κ3/2ρ3d\nn (16R‖θ0 − θ∗‖+ 19)4. (11)\nWe get an O(1/n) convergence rate without assuming strong convexity, even locally, thus improving on results from [21] where the the rate is proportional to 1/(nλmin(H)). The proof relies on selfconcordance properties and the sharp analysis of the Newton step (see appendix).\n4 Experiments\n4.1 Synthetic data\nLeast-mean-square algorithm. We consider normally distributed inputs, with covariance matrix H that has random eigenvectors and eigenvalues 1/k, k = 1, . . . , d. The outputs are generated from a linear function with homoscedastic noise with unit signal to noise-ratio. We consider d = 20 and the least-mean-square algorithm with several settings of the step size γn, constant or proportional to 1/ √ n. Here R2 denotes the average radius of the data, i.e., R2 = trH . In the left plot of Figure 1, we show the results, averaged over 10 replications.\nWithout averaging, the algorithm with constant step-size does not converge pointwise (it oscillates), and its average excess risk decays as a linear function of γ (indeed, the gap between each values of the constant step-size is close to log10(4), which corresponds to a linear function in γ).\nWith averaging, the algorithm with constant step-size does converge at rate O(1/n), and for all values of the constant γ, the rate is actually the same. Moreover (although it is not shown in the plots), the standard deviation is much lower.\nWith decaying step-size γn = 1/(2R 2 √ n) and without averaging, the convergence rate isO(1/ √ n),\nand improves to O(1/n) with averaging.\nLogistic regression. We consider the same input data as for least-squares, but now generates outputs from the logistic probabilistic model. We compare several algorithms and display the results in Figure 1 (middle and right plots).\nOn the middle plot, we consider SGD. Without averaging, the algorithm with constant step-size does not converge and its average excess risk reaches a constant value which is a linear function of γ (indeed, the gap between each values of the constant step-size is close to log10(4)). With averaging, the algorithm does converge, but as opposed to least-squares, to a point which is not the optimal solution, with an error proportional to γ2 (the gap between curves is twice as large).\nOn the right plot, we consider various variations of our Newton-approximation scheme. The “2-step” algorithm is the one for which our convergence rate holds (n being the total number of examples, we perform n/2 steps of averaged SGD, then n/2 steps of LMS). Not surprisingly, it is not the best in practice (in particular at n/2, when starting the constant-size LMS, the performance worsens temporarily). It is classical to use doubling tricks to remedy this problem while preserving convergence rates [26], this is done in “2-step-dbl.”, which avoids the previous erratic behavior.\nWe have also considered getting rid of the first stage where plain averaged stochastic gradient is used to obtain a support point for the quadratic approximation. We now consider only Newton-steps but change only these support points. We consider updating the support point at every iteration, i.e., the recursion from Eq. (8), while we also consider updating it every dyadic point (“dbl.-approx”). The last two algorithms perform very similarly and achieve the O(1/n) early. In all experiments on real data, we have considered the simplest variant (which corresponds to Eq. (8)).\n4.2 Standard benchmarks\nWe have considered 6 benchmark datasets which are often used in comparing large-scale optimization methods. The datasets are described in Table 1 and vary in values of d, n and sparsity levels. These are all finite binary classification datasets with outputs in {−1, 1}. For least-squares and logistic regression, we have followed the following experimental protocol: (1) remove all outliers (i.e., sample points xn whose norm is greater than 5 times the average norm), (2) divide the dataset in two equal parts, one for training, one for testing, (3) sample within the training dataset with replacement, for 100 times the number of observations in the training set (this corresponds to 100 effective passes; in all plots, a black dashed line marks the first effective pass), (4) compute averaged cost on training and testing data (based on 10 replications). All the costs are shown in log-scale, normalized to that the first iteration leads to f(θ0)− f(θ∗) = 1.\nAll algorithms that we consider (ours and others) have a step-size, and typically a theoretical value that ensures convergence. We consider two settings: (1) one when this theoretical value is used, (2) one with the best testing error after one effective pass through the data (testing powers of 4 times the theoretical step-size).\nHere, we only consider covertype, alpha, sido and news, as well as test errors. For all training errors and the two other datasets (quantum, rcv1 ), see the appendix.\nLeast-squares regression. We compare three algorithms: averaged SGD with constant step-size, averaged SGD with step-size decaying as C/R2 √ n, and the stochastic averaged gradient (SAG) method which is dedicated to finite training data sets [27], which has shown state-of-the-art performance in this set-up1. We show the results in the two left plots of Figure 2 and Figure 3.\nAveraged SGD with decaying step-size equal to C/R2 √ n is slowest (except for sido). In particular, when the best constant C is used (right columns), the performance typically starts to increase significantly. With that step size, even after 100 passes, there is no sign of overfitting, even for the high-dimensional sparse datasets.\nSAG and constant-step-size averaged SGD exhibit the best behavior, for the theoretical stepsizes and the best constants, with a significant advantage for constant-step-size SGD. The non-sparse datasets do not lead to overfitting, even close to the global optimum of the (unregularized) training objectives, while the sparse datasets do exhibit some overfitting after more than 10 passes.\nLogistic regression. We also compare two additional algorithms: our Newton-based technique and “Adagrad” [7], which is a stochastic gradient method with a form a diagonal scaling2 that allows to reduce the convergence rate (which is still in theory proportional to O(1/ √ n)). We show results in the two right plots of Figure 2 and Figure 3. Averaged SGD with decaying step-size proportional to 1/R2 √ n has the same behavior than for least-squares (step-size harder to tune, always inferior performance except for sido). SAG, constant-step-size SGD and the novel Newton technique tend to behave similarly (good with theoretical step-size, always among the best methods). They differ notably in some aspects: (1) SAG converges quicker for the training errors (shown in the appendix) while it is a bit slower for the testing error, (2) in some instances, constant-step-size averaged SGD does underfit (covertype, alpha, news), which is consistent with the lack of convergence to the global optimum mentioned earlier, (3) the novel Newton approximation is consistently better.\nOn the non-sparse datasets, Adagrad performs similarly to the Newton-type method (often better in early iterations and worse later), except for the alpha dataset where the step-size is harder to tune (the best step-size tends to have early iterations that make the cost go up significantly). On\n1The original algorithm from [27] is considering only strongly convex problems, we have used the step-size of 1/16R2, which achieves fast convergence rates in all situations (see http://research.microsoft.com/en-us/um/cambridge/events/mls2013/downloads/stochastic gradient.pdf).\n2Since a bound on ‖θ∗‖ is not available, we have used step-sizes proportional to 1/ supn ‖xn‖∞.\nsparse datasets like rcv1, the performance is essentially the same as Newton. On the sido data set, Adagrad (with fixed steps size, left column) achieves a good testing loss quickly then levels off, for reasons we cannot explain. On the news dataset, it is inferior without parameter-tuning and a bit better with. Adagrad uses a diagonal rescaling; it could be combined with our technique, early experiments show that it improves results but that it is more sensitive to the choice of step-size.\nOverall, even with d and κ very large (where our bounds are vacuous), the performance of our algorithm still achieves the state of the art, while being more robust to the selection of the step-size: finer quantities likes degrees of freedom [13] should be able to quantify more accurately the quality of the new algorithms.\n5 Conclusion\nIn this paper, we have presented two stochastic approximation algorithms that can achieve rates of O(1/n) for logistic and least-squares regression, without strong-convexity assumptions. Our analysis reinforces the key role of averaging in obtaining fast rates, in particular with large step-sizes. Our work can naturally be extended in several ways: (a) an analysis of the algorithm that updates the support point of the quadratic approximation at every iteration, (b) proximal extensions (easy to implement, but potentially harder to analyze); (c) adaptive ways to find the constant-step-size; (d) step-sizes that depend on the iterates to increase robustness, like in normalized LMS [19], and (e) non-parametric analysis to improve our theoretical results for large values of d.\nAcknowledgements\nThis work was partially supported by the European Research Council (SIERRA Project 239993). The authors would like to thank Simon Lacoste-Julien and Mark Schmidt for discussions related to this work.\nIn the appendix we provide proofs of all three theorems, as well as additional experimental results (all training objectives, and two additional datasets quantum and rcv1 ).\nNotations. Throughout this appendix material, we are going to use the notation ‖X‖p = [ E(‖X‖p) ]1/p for any random vector X and real number p > 1. By Minkowski’s inequality, we have the triangle inequality ‖X + Y ‖p 6 ‖X‖p + ‖Y ‖p whenever the expression makes sense.\nA Proof of Theorem 1\nWe first denote by ηn = θn − θ∗ ∈ H the deviation to θ∗. Since we consider quadratic functions, it satisfies a simplified recursion:\nηn = ηn−1 − γ(xn ⊗ xn)θn + γξn = ( I − γxn ⊗ xn ) ηn−1 + γξn. (12)\nWe also consider η̄n = 1\nn+1 ∑n k=0 ηk = θ̄n − θ∗ the averaged iterate. We have f(θn) − f(θ∗) =\n1 2 〈ηn, Hηn〉 and f(θ̄n)− f(θ∗) = 12 〈η̄n, Hηn〉.\nThe crux of the proof is to consider the same recursion as Eq. (12), but replacing xn ⊗ xn by its expectation H (which is related to fixed design analysis in linear regression). This is of course only an approximation, and thus one has to study the remainder term; it happens to satisfy a similar recursion, on which we can apply the same technique, and so on. This proof technique is taken from [14]. Here we push it to arbitrary orders with explicit constants for averaged constant-step-size stochastic gradient descent.\nConsequences of assumptions. Note that Assumption (A6) implies that E‖xn‖2 6 R2 (indeed, taking the trace of E ( ‖xn‖2xn ⊗ xn )\n4 R2H , we get E‖xn‖4 6 R2E‖xn‖2, and we always have by Cauchy-Schwarz inequality, E‖xn‖2 6 √ E‖xn‖4 6 R √\nE‖xn‖2). This then implies that trH 6 R2 and thus H 4 (trH)I 4 R2I. Thus, whenever γ 6 1/R2, we have γH 4 I, for the order between positive definite matrices.\nWe denote by Fn the σ-algebra generated by (x1, z1, . . . , xn, zn). Both θn and θ̄n are Fnmeasurable.\nA.1 Two main lemmas\nThe proof relies on two lemmas, one that provides a weak result essentially equivalent (but more specific and simpler because the step-size is constant) to non-strongly-convex results from [6], and one that replaces xn⊗xn by its expectation H in Eq. (12), which may then be seen as a non-asymptotic counterpart to the similar set-tup in [2].\nLemma 1 Assume (xn, ξn) ∈ H×H are Fn-measurable for a sequence of increasing σ-fields (Fn), n > 1. Assume that E[ξn|Fn−1] = 0, E [ ‖ξn‖2|Fn−1 ] is finite and E [( ‖xn‖2xn ⊗ xn ) |Fn−1 ] 4 R2H, with E [ xn ⊗ xn ∣\n∣Fn−1] = H for all n > 1, for some R > 0 and invertible operator H. Consider the recursion αn = ( I − γxn ⊗ xn ) αn−1 + γξn, with γR2 6 1. Then:\n(1− γR2)E [ 〈ᾱn−1, Hᾱn−1〉 ] + 1\n2nγ E‖αn‖2 6\n1\n2nγ ‖α0‖2 +\nγ\nn\nn ∑\nk=1\nE‖ξk‖2.\nProof. We follow the proof technique of [6] (which relies only on smoothness) and get:\n‖αn‖2 = ‖αn−1‖2 + γ2‖ξn − (xn ⊗ xn)αn−1‖2 + 2γ〈αn−1, ξn − (xn ⊗ xn)αn−1〉\n6 ‖αn−1‖2 + { 2γ2‖ξn‖2 + 2γ2‖(xn ⊗ xn)αn−1‖2 } + 2γ〈αn−1, ξn − (xn ⊗ xn)αn−1〉.\nBy taking expectations, we obtain:\nE [ ‖αn‖2|Fn−1 ] 6 ‖αn−1‖2 + 2γ2‖ξn‖2 + 2γ2〈αn−1,E [ ‖xn‖2xn ⊗ xn ] αn−1〉 − 2γ〈αn−1, Hαn−1〉 6 ‖αn−1‖2 + 2γ2‖ξn‖2 + 2γ2R2〈αn−1, Hαn−1〉 − 2γ〈αn−1, Hαn−1〉 = ‖αn−1‖2 + 2γ2‖ξn‖2 + 2γ2R2〈αn−1, Hαn−1〉 − 2γ〈αn−1, Hαn−1〉 6 ‖αn−1‖2 + 2γ2‖ξn‖2 − 2γ(1− γR2)〈αn−1, Hαn−1〉.\nBy taking another expectation, we get\nE‖αn‖2 6 E‖αn−1‖2 + 2γ2E‖ξn‖2 − 2γ(1− γR2)E〈αn−1, Hαn−1〉.\nThis leads to the desired result, because, by convexity, 〈ᾱn−1, Hᾱn−1〉 6 1n ∑n−1 k=0 〈αk, Hαk〉.\nLemma 2 Assume ξn ∈ H is Fn-measurable for a sequence of increasing σ-fields (Fn), n > 1. Assume E[ξn|Fn−1] = 0, E [ ‖ξn‖2 ] is finite, and for all n > 1, E [ ξn ⊗ ξn ] 4 C. Consider the recursion αn = ( I − γH ) αn−1 + γξn, with γH 4 I for some invertible H. Then:\nE[αn ⊗ αn] = (I − γH)nα0 ⊗ α0(I − γH)n + γ2 n ∑\nk=1\n(I − γH)n−kC(I − γH)n−k, (13)\nE [ 〈ᾱn−1, Hᾱn−1〉 ] 6 1\nnγ ‖α0‖2 +\ntrCH−1\nn . (14)\nProof. The proof relies on the fact that cost functions are quadratic and our recursions are thus linear, allowing to obtain αn in closed form. The sequence (αn) satisfies a linear recursion, from which we get, for all n > 1:\nαn = (I − γH)nα0 + γ n ∑\nk=1\n(I − γH)n−kξk,\nwhich leads to the first result using classical martingale second moment expansions (which amount to considering ξi, i = 1, . . . , n independent, so that the variance of the sum is the sum of variances). Moreover, using the identity ∑n−1\nk=0 (I − γH)k = ( I − (I − γH)n )(\nγH )−1 , we get:\nᾱn−1 = 1\nn\nn−1 ∑\nk=0\n(I − γH)kα0 + γ\nn\nn−1 ∑\nk=1\nk ∑\nj=1\n(I − γH)k−jξj\n= 1\nn\n( I − (I − γH)n )( γH )−1 α0 + γ\nn\nn−1 ∑\nk=1\nk ∑\nj=1\n(I − γH)k−jξj\n= 1\nn\n( I − (I − γH)n )( γH )−1 α0 + γ\nn\nn−1 ∑\nj=1\n( n−1 ∑\nk=j\n(I − γH)k−j )\nξj\n= 1\nn\n( I − (I − γH)n )( γH )−1 α0 + γ\nn\nn−1 ∑\nj=1\n( n−1−j ∑\nk=0\n(I − γH)k )\nξj\n= 1\nn\n( I − (I − γH)n )( γH )−1 α0 + γ\nn\nn−1 ∑\nj=1\n( I − (I − γH)n−j )( γH )−1\nξj .\nWe then get, using standard martingale square moment inequalities (which here also amount to considering ξi, i = 1, . . . , n independent, so that the variance of the sum is the sum of variances):\nE〈ᾱn−1, Hᾱn−1〉 = 1\nnγ 〈α0,\n[ I − (I − γH)n ]2( nγH )−1 α0〉\n+ 1\nn2\nn−1 ∑\nj=1\ntr ( I − (I − γH)n−j )2 H−1C\n6 1\nnγ ‖α0‖2 +\n1 n trH−1C,\nbecause for all u ∈ [0, 1], (1−(1−u) n)2\nnu 6 1 (see Lemma 3 in Section A.6), and the second term is the sum of terms which are all less than trH−1C.\nNote that we may replace the term 1nγ ‖α0‖2 by 1 n2γ2 〈α0, H−1α0〉, which is only interesting when\n〈α0, H−1α0〉 is small.\nA.2 Proof principle\nThe proof relies on an expansion of ηn and η̄n−1 as polynomials in γ due to [14]. This expansion is done separately for the noise process (i.e., when assuming η0 = 0) and for the noise-free process that depends only on the initial conditions (i.e., when assuming that σ = 0). The bounds may then be added.\nIndeed, we have ηn = M n 1 η0 + γ ∑n k=1 M n k+1ξk, with M j i = (I − γxj ⊗ xj) · · · (I − γxi ⊗\nxi) and M i−1 i = I, and thus η̄n = 1 n+1 ∑n i=0\n[\nM i1η0 + γ ∑i k=1 M i k+1ξk\n]\n= 1n+1 ∑n i=0 M i 1η0 +\nγ ∑n\nk=1\n(\n∑n i=k M i k+1\n)\nξk, leading to\n‖H1/2η̄n‖p 6 ∥ ∥ ∥\n∥\n1\nn+ 1\nn ∑\ni=0\nM j1η0\n∥ ∥ ∥ ∥\np\n+\n∥ ∥ ∥ ∥ γ n ∑\nk=1\n( n ∑\ni=k\nM ik+1\n)\nξk\n∥ ∥ ∥ ∥\np\n,\nfor any p > 2 for which it is defined: the left term depends only on initial conditions and the right term depends only on the noise process (note the similarity with bias-variance decompositions).\nA.3 Initial conditions\nIn this section, we assume that ξn is uniformly equal to zero, and that γR 2 6 1.\nWe thus have ηn = (I − γxn ⊗ xn)ηn−1 and thus ‖ηn‖2 = ‖ηn−1‖2 − 2γ〈ηn−1, (xn ⊗ xn)ηn−1〉+ γ2〈ηn−1, (xn ⊗ xn)2ηn−1〉.\nBy taking expectations (first given Fn−1, then unconditionally), we get: E‖ηn‖2 6 E‖ηn−1‖2 − 2γE〈ηn−1, Hηn−1〉+ γ2R2E〈ηn−1, Hηn−1〉 using E‖xn‖2xn ⊗ xn 4 R2H, 6 E‖ηn−1‖2 − γE〈ηn−1, Hηn−1〉 using γR2 6 1, from which we obtain, by summing from 1 to n and using convexity (note that Lemma 1 could be used directly as well):\nE〈η̄n−1, Hη̄n−1〉 6 ‖η0‖2 nγ .\nHere, it would be interesting to explore conditions under which the initial conditions may be forgotten at a rate O(1/n2), as obtained by [6] in the strongly convex case.\nA.4 Noise process\nIn this section, we assume that η0 = θ0−θ∗ = 0 and γR2 6 1 (which implies γH 4 I). Following [14], we recursively define the sequences (ηrn)n>0 for r > 0 (and their averaged counterparts η̄ r n):\n– The sequence (η0n) is defined as η 0 0 = η0 = 0 and for n > 1, η 0 n = (I − γH)η0n−1 + γξn.\n– The sequence (ηrn) is defined from (η r−1 n ) as η r 0 = 0 and, for all n > 1:\nηrn = (I − γH)ηrn−1 + γ(H − xn ⊗ xn)ηr−1n−1. (15)\nRecursion for expansion. We now show that the sequence ηn − ∑r i=0 η i n then satisfies the following recursion, for any r > 0 (which is of the same type than (ηn)):\nηn − r ∑\ni=0\nηin = (I − γxn ⊗ xn) ( ηn−1 − r ∑\ni=0\nηrn−1\n)\n+ γ(H − xn ⊗ xn)ηrn−1. (16)\nIn order to prove Eq. (16) by recursion, we have, for r = 0,\nηn − η0n = (I − γxn ⊗ xn)ηn−1 − (I − γH)η0n−1 = (I − γxn ⊗ xn)(ηn−1 − η0n−1) + γ(H − xn ⊗ xn)η0n−1,\nand, to go from r to r + 1:\nηn − r+1 ∑\ni=0\nηin = (I − γxn ⊗ xn) ( ηn−1 − r ∑\ni=0\nηin−1\n)\n+ γ(H − xn ⊗ xn)ηrn−1\n−(I − γH)ηr+1n−1 − γ(H − xn ⊗ xn)ηrn−1\n= (I − γxn ⊗ xn) ( ηn−1 − r+1 ∑\ni=0\nηin−1\n)\n+ γ(H − xn ⊗ xn)ηr+1n−1.\nBound on covariance operators. We now show that we also have a bound on the covariance operator of ηrn−1, for any r > 0 and n > 2:\nE [ ηrn−1 ⊗ ηrn−1 ] 4 γr+1R2rσ2I. (17)\nIn order to prove Eq. (17) by recursion, we get for r = 0:\nE [ η0n−1 ⊗ η0n−1 ]\n4 γ2σ2 n−1 ∑\nk=1\n(I − γH)2n−2−2kH\n4 γ2σ2 ( I − (I − γH)2n−2 )( I − (I − γH)2 )−1 H\n= γ2σ2 ( I − (I − γH)2n−2 )( 2γH − γ2H2 )−1 H\n4 γ2σ2 ( I − (I − γH)2n−2 )( γH )−1 H 4 γσ2I.\nIn order to go from r to r + 1, we have, using Lemma 2 and the fact that ηrk−1 and xk are independent:\nE [ ηr+1n−1 ⊗ ηr+1n−1 ]\n4 γ2E\n[ n−1 ∑\nk=1\n(I − γH)n−1−k(H − xk ⊗ xk)E [ ηrk−1 ⊗ ηrk−1 ] (H − xk ⊗ xk)(I − γH)n−1−k ]\n4 γr+3R2rσ2E\n[ n−1 ∑\nk=1\n(I − γH)n−1−k(H − xk ⊗ xk)2(I − γH)n−1−k ] using the result for r,\n4 γr+3R2r+2σ2 n−1 ∑\nk=1\n(I − γH)2n−2−2kH using E(xk ⊗ xk −H)2 4 E‖xk‖2xk ⊗ xk 4 R2H,\n4 γr+2R2r+2σ2I.\nPutting things together. We may apply Lemma 1 to the sequence ( ηn − ∑r i=0 η i n ) , to get\nE\n〈 η̄n−1 − r ∑\ni=0\nη̄in−1, H ( η̄n−1 − r ∑\ni=0\nη̄in−1 )\n〉\n6 1 1− γR2 γ n\nn ∑\nk=2\nE‖(H − xk ⊗ xk)ηrk−1‖2\n6 1\n1− γR2 γ r+2σ2R2r+4.\nWe may now apply Lemma 2 to Eq. (15), to get, with a noise process ξrn = (H − xn ⊗ xn)ηr−1n−1 which is such that\nE [ ξrn ⊗ ξrn ] 4 γrR2rσ2H,\nE〈η̄rn−1, Hη̄rn−1〉 6 1\nn γrR2rdσ2.\nWe thus get, using Minkowski’s inequality (i.e., triangle inequality for the norms ‖ · ‖p):\n( E〈η̄n−1, Hη̄n−1〉 )1/2 6 ( 1\n1− γR2 γ r+2σ2R2r+4\n)1/2 + σ √ d√ n r ∑\ni=0\nγi/2Ri\n6 ( 1\n1− γR2 γ r+2σ2R2r+4\n)1/2 + σ √ d√ n 1− ( √ γR2)r+1 1− √ γR2 .\nThis implies that for any γR2 < 1, we obtain, by letting r tend to +∞:\n( E〈η̄n−1, Hη̄n−1〉 )1/2 6 σ √ d√ n\n1\n1− √ γR2 .\nA.5 Final bound\nWe can now take results from Appendices A.3 and A.4, to get\n( E〈η̄n−1, Hη̄n−1〉 )1/2 6 σ √ d√ n\n1\n1− √ γR2 + ‖η0‖2 nγ ,\nwhich leads to the desired result.\nA.6 Proof of Lemma 3\nIn this section, we state and prove a simple lemma.\nLemma 3 For any u ∈ [0, 1] and n > 0, (1− (1 − u)n)2 6 nu.\nProof. Since u ∈ [0, 1], we have, 1− (1− u)n 6 1. Moreover, n(1− u)n−1 6 n, and by integrating between 0 and u, we get 1 − (1 − u)n 6 nu. By multiplying the two previous inequalities, we get the desired result.\nB Proof of Theorem 2\nThroughout the proof, we use the notation forX ∈ H a random vector, and p any real number greater than 1, ‖X‖p = ( E‖X‖p )1/p\n. We first recall the Burkholder-Rosenthal-Pinelis (BRP) inequality [28, Theorem 4.1]. Let p ∈ R, p > 2 and (Fn)n>0 be a sequence of increasing σ-fields, and (xn)n>1 an adapted sequence of elements of H, such that E [ xn|Fn−1 ]\n= 0, and ‖xn‖p is finite. Then, ∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n∥ ∥ ∥ ∥ k ∑\nj=1\nxj\n∥ ∥ ∥ ∥ ∥ ∥ ∥ ∥\np\n6 √ p\n∥ ∥ ∥ ∥ n ∑\nk=1\nE [ ‖xk‖2|Fk−1 ]\n∥ ∥ ∥ ∥ 1/2\np/2\n+ p\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n‖xk‖ ∥ ∥ ∥\n∥\np\n(18)\n6 √ p\n∥ ∥ ∥ ∥ n ∑\nk=1\nE [ ‖xk‖2|Fk−1 ]\n∥ ∥ ∥ ∥ 1/2\np/2\n+ p\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n‖xk‖2 ∥ ∥ ∥\n∥\n1/2\np/2\n.\nWe use the same notations than the proof of Theorem 1, and the same proof principle: (a) splitting the contributions of the initial conditions and the noise, (b) providing a direct argument for the initial condition, and (c) performing an expansion for the noise contribution.\nConsequences of assumptions. Note that by Cauchy-Schwarz inequality, assumption (A7) implies for all z, t ∈ H, E〈z, xn〉2〈t, xn〉2 6 κ〈z,Hz〉〈t,Ht〉. It in turn implies that for all positive semi-definite self-adjoint operators M,N , E〈xn,Mxn〉〈xn, Nxn〉 6 κ tr(MH) tr(NH).\nB.1 Contribution of initial conditions\nWhen the noise is assumed to be zero, we have ηn = (I − γxn ⊗ xn)ηn−1 almost surely, and thus, since 0 4 γxn ⊗ xn 4 I, ‖ηn‖ 6 ‖η0‖ almost surely, and\n‖ηn‖2 = ‖ηn−1‖2 − 2γ〈ηn−1, (xn ⊗ xn)ηn−1〉+ γ2〈ηn−1, (xn ⊗ xn)2ηn−1〉 6 ‖ηn−1‖2 − 2γ〈ηn−1, (xn ⊗ xn)ηn−1〉+ γ〈ηn−1, (xn ⊗ xn)ηn−1〉\nusing ‖xn‖2 6 R2 and γR2 6 1, = ‖ηn−1‖2 − γ〈ηn−1, (xn ⊗ xn)ηn−1〉,\nwhich we may write as\n‖ηn‖2 − ‖ηn−1‖2 + γ〈ηn−1, Hηn−1〉 6 γ〈ηn−1, (H − xn ⊗ xn)ηn−1〉 def= Mn.\nWe thus have:\nAn def = ‖ηn‖2 + γ\nn ∑\nk=1\n〈ηk−1, Hηk−1〉 6 ‖η0‖2 + n ∑\nk=1\nMk.\nNote that we have\nE[M2n|Fn−1] 6 E [ γ2〈ηn−1, (xn ⊗ xn)ηn−1〉2|Fn−1 ] 6 γ2R2‖η0‖2〈ηn−1, Hηn−1〉,\nand |Mn| 6 γ‖η0‖2R2. We may now apply the Burkholder-Rosenthal-Pinelis inequality in Eq. (18), to get:\n∥ ∥An ∥ ∥ p 6 ‖η0‖2 +\n√ p\n∥ ∥ ∥ ∥ n ∑\nk=1\nE [ M2k |Fk−1 ]\n∥ ∥ ∥ ∥ 1/2\np/2\n+ p\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n|Mk| ∥ ∥ ∥\n∥\np\n6 ‖η0‖2 + γ √ p\n∥ ∥ ∥ ∥ ‖η0‖2R2 n ∑\nk=1\n〈ηk−1, Hηk−1〉 ∥ ∥ ∥\n∥\n1/2\np/2\n+ pγR2‖η0‖2\n6 ‖η0‖2 + γ1/2R √ p‖η0‖ ∥ ∥An ∥ ∥ 1/2\np/2 + pγR2‖η0‖2\n6 ‖η0‖2 + γ1/2R √ p‖η0‖ ∥ ∥An ∥ ∥ 1/2\np + pγR2‖η0‖2.\nWe have used above that (a) ∑n k=1〈ηk−1, Hηk−1〉 6 Anγ and that (b) ∥ ∥An ∥ ∥ p/2 6 ∥ ∥An ∥ ∥ p . This leads to (\n∥ ∥An ∥ ∥ 1/2 p − 1 2 γ1/2R √ p‖η0‖\n)2\n6 ‖η0‖2 + 5p\n4 γR2‖η0‖2,\nwhich leads to ∥\n∥An ∥ ∥ 1/2 p − 1 2 γ1/2R √ p‖η0‖ = ‖η0‖\n√\n1 + 5pγR2\n4 ,\n‖An ∥ ∥ p 6 ‖η0‖2\n(\n2 + 5pγR2\n2 +\npγR2\n2\n)\n6 ‖η0‖2(2 + 3pγR2).\nFinally, we obtain, for any p > 2\n∥ ∥ 〈 η̄n−1, Hη̄n−1 〉∥ ∥\np 6 ‖η0‖2 nγ (2 + 3pγR2),\ni.e., by a change of variable p → p2 , for any p > 4, we get\n∥ ∥H1/2η̄n−1 ∥ ∥\np 6\n∥ ∥〈η̄n−1, Hη̄n−1〉‖1/2p/2 = ‖η0‖√ nγ\n√\n2 + 3p\n2 γR2.\nBy using monotonicity of norms, we get, for any p ∈ [2, 4]:\n∥ ∥H1/2η̄n−1 ∥ ∥\np 6\n∥ ∥H1/2η̄n−1 ∥ ∥\n4 6 ‖η0‖√ nγ √ 2 + 6γR2 6 ‖η0‖√ nγ √ 2 + 3pγR2,\nwhich is also valid for p > 4. Note that the constants in the bound above could be improved by using a proof by recursion.\nB.2 Contribution of the noise\nWe follow the same proof technique than for Theorem 1 and consider the expansion based on the sequences (ηrn)n, for r > 0. We need (a) bounds on η 0 n, (b) a recursion on the magnitude (in ‖ · ‖p norm) of ηrn and (c) a control of the error made in the expansions.\nBound on η̄0n. We start by a lemma similar to Lemma 2 but for all moments. This will show a bound for the sequence η̄0n.\nLemma 4 Assume ξn ∈ H is Fn-measurable for a sequence of increasing σ-fields (Fn), n > 1. Assume E[ξn|Fn−1] = 0, E [ ‖ξn‖2|Fn−1 ] is finite. Assume moreover that for all n > 1, E [\nξn ⊗ ξn|Fn−1 ]\n4 C and ‖ξn‖p 6 τR almost surely for some p > 2. Consider the recursion αn = ( I − γH )\nαn−1 + γξn, with α0 = 0 and γH 4 I. Let p ∈ R, p > 2. Then:\n‖H1/2ᾱn−1‖p 6 √ p√ n √ trCH−1 + √ γpRτ√ n . (19)\nProof. We have, from the proof of Lemma 2:\nᾱn−1 = γ\nn\nn−1 ∑\nj=1\n( I − (I − γH)n−j )( γH )−1\nξj\n‖H1/2ᾱn−1‖p 6 γ\nn\n∥ ∥ ∥ ∥\nn−1 ∑\nj=1\n( I − (I − γH)n−j )( γH )−1 H1/2ξj\n∥ ∥ ∥ ∥\np\n6 γ\nn\n∥ ∥ ∥ ∥\nn−1 ∑\nj=1\nβj\n∥ ∥ ∥ ∥\np\n,\nwith βj = ( I − (I − γH)n−j )( γH )−1 H1/2ξj . We have\nn−1 ∑\nj=1\nE[‖βj‖2|Fj−1] = n−1 ∑\nj=1\ntrE [ ξj ⊗ ξj |Fj−1 ] H\n( I − (I − γH)n−j γH )2\n6 γ−2 n−1 ∑\nj=1\nE [ 〈ξj , H−1ξj〉|Fj−1 ] 6 nγ−2 trCH−1,\nand\n‖βj‖p 6 λmax [( I − (I − γH)n−j )( γH )−1 H1/2 ] ‖ξj‖p\n6 γ−1/2‖ξj‖p max u∈(0,1] 1− (1 − u)n−j u1/2\n6 √ n− j√ γ ‖ξj‖p 6 τR √ n√ γ ,\nusing Lemma 3 in Section A.6, and assumption (A7). Using Burkholder-Rosenthal-Pinelis inequality in Eq. (18), we then obtain\n∥ ∥ ∥ ∥\nsup k∈{1,...,n−1}\n‖H1/2ᾱk‖ ∥ ∥ ∥\n∥\np\n6 √ p√ n √ trCH−1 + p √ γ√ n σR,\nleading to the desired result.\nBounds on η0n. Following the same proof technique as above, we have\nη0n = γ\nn ∑\nj=1\n(I − γH)n−jξj ,\nfrom which we get, for any positive semidefinite operator M such that trM = 1, using BRP’s inequality:\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n∥ ∥M1/2η0k‖ ∥ ∥ ∥\n∥\np\n6 √ pγσ\n∥ ∥ ∥ ∥ n ∑\nj=1\ntrH(I − γH)n−jM(I − γH)n−j ∥ ∥ ∥\n∥\n1/2\np/2\n+ pγτR\n6 √ pγσ\n∥ ∥ ∥ ∥ 1\nγ trM\n∥ ∥ ∥ ∥ 1/2\np/2\n+ pγτR\n6 1\nR\n√ pγR2(σ + τ √ pγR2),\nleading to\nsup trM=1\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n∥ ∥M1/2η0k‖ ∥ ∥ ∥\n∥\np\n6 1\nR\n√ pγR2(σ + τ √ pγR2). (20)\nRecursion on bounds on ηrn. We introduce the following quantity to control the deviations of η r n:\nAr = sup trM=1\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n∥ ∥M1/2ηrk ∥ ∥\n∥ ∥ ∥ ∥\np\n.\nWe have from Eq. (20), A0 6 1 R\n√ pγR2(σ + τ √ pγR2).\nSince ηrn = (I−γH)ηrn−1+γ(H−xn⊗xn)ηr−1n−1, for all n > 1, we have the closed form expression\nηrn = γ\nn ∑\nk=2\n(I − γH)n−k(H − xk ⊗ xk)ηr−1k−1,\nand we may use BRP’s inequality in Eq. (18) to get, for any M such that trM = 1:\nAr 6 B + C,\nwith\nB = √ pγ\n∥ ∥ ∥ ∥ n ∑\nk=2\n〈ηr−1k−1,E [ (H − xk ⊗ xk)(I − γH)n−kM(I − γH)n−k(H − xk ⊗ xk) ] ηr−1k−1〉 ∥ ∥ ∥\n∥\n1/2\np/2\n6 √ pγ\n∥ ∥ ∥ ∥ n ∑\nk=2\n〈ηr−1k−1,E [ (xk ⊗ xk)(I − γH)n−kM(I − γH)n−k(xk ⊗ xk) ] ηr−1k−1〉 ∥ ∥ ∥\n∥\n1/2\np/2\nusing E trN(H − xk ⊗ xk)M(H − xk ⊗ xk) 6 E trN(xk ⊗ xk)H(xk ⊗ xk),\n6 √ pγ\n∥ ∥ ∥ ∥ n ∑\nk=2\nκ〈ηr−1k−1, Hηr−1k−1〉 trH(I − γH)n−kM(I − γH)n−k ∥ ∥ ∥\n∥\n1/2\np/2\nusing the kurtosis property,\n6 √ pγ √ κAr−1 ( n ∑\nk=2\ntrH(I − γH)n−kM(I − γH)n−k )1/2\nusing 〈ηr−1k−1, Hηr−1k−1〉 6 sup k∈{1,...,n} 〈ηr−1k−1, Hηr−1k−1〉,\n6 √ pγ √ κRAr−1 ( 1\nγ trM\n)1/2\n= √ pγR2κAr−1,\nand\nC = pγ\n∥ ∥ ∥ ∥\nsup k∈{2,...,n}\n〈ηr−1k−1, (H − xk ⊗ xk)(I − γH)n−kM(I − γH)n−k(H − xk ⊗ xk)ηr−1k−1〉 ∥ ∥ ∥\n∥\n1/2\np/2\n6 pγ\n∥ ∥ ∥ ∥\nsup k∈{2,...,n}\n〈ηr−1k−1, (xk ⊗ xk)(I − γH)n−kM(I − γH)n−k(xk ⊗ xk)ηr−1k−1〉 ∥ ∥ ∥\n∥\n1/2\np/2\n+pγ\n∥ ∥ ∥ ∥\nsup k∈{2,...,n}\n〈ηr−1k−1, H(I − γH)n−kM(I − γH)n−kHηr−1k−1〉 ∥ ∥ ∥\n∥\n1/2\np/2\nusing Minkowski’s inequality,\n6 +pγ\n( n ∑\nk=2\nE [ 〈ηr−1k−1, (xk ⊗ xk)(I − γH)n−kM(I − γH)n−k(xk ⊗ xk)ηr−1k−1〉p/2 ]\n)1/p\n+pγR2Ar−1\nbounding the supremum by a sum, and using H(I − γH)n−kM(I − γH)n−kH 4 H2,\n6 pγ\n( n ∑\nk=2\nE [ 〈ηr−1k−1, xk〉p〈xk, (I − γH)n−kM(I − γH)n−kxk〉p/2 ]\n)1/p\n+ pγR2Ar−1\n6 pγRAr−1\n( n ∑\nk=2\nE [ 〈xk, (I − γH)n−kM(I − γH)n−kxk〉p/2 ]\n)1/p\n+ pγR2Ar−1\nby conditioning with respect to xk,\n6 pγRAr−1\n( n ∑\nk=2\nE [ 〈xk, (I − γH)n−kM(I − γH)n−kxk〉(R2 trM)p/2−1 ]\n)1/p\n+ pγR2Ar−1\nbounding 〈xk, (I − γH)n−kM(I − γH)n−kxk〉 by R2 trM,\n6 pγR2Ar−1 + pγRAr−1\n( (R2)p/2−1 n ∑\nk=2\ntrH(I − γH)n−kM(I − γH)n−k )1/p\n6 pγR2Ar−1 + pγRAr−1\n( (R2)p/2−1R2γ−1 )1/p = pγR2Ar−1 + p(γR 2)1−1/pRAr−1.\nThis implies that Ar 6 A0 ( √ pγR2κ+pγR2+p(γR2)1−1/p )r , which in turn implies, from Eq. (20),\nAr 6 √ pγR2(σ + τ √ pγR2) ( √ pγR2κ+ pγR2 + p(γR2)1−1/p )r . (21)\nThe condition on γ will come from the requirement that √ pγR2κ+ pγR2 + p(γR2)1−1/p < 1.\nBound on ‖H1/2η̄rn−1‖. We have the closed-form expression:\nη̄rn−1 = γ\nn\nn−1 ∑\nj=2\nI − (I − γH)n−j γH (H − xj ⊗ xj)ηr−1j−1 ,\nleading to, using BRP’s inequality in Eq. (18), similar arguments than in the previous bounds, (\nI − (I − γH)n−j )2( γH )−2 H 4 H−1γ and ( I − (I − γH)n−j )2( γH )−2\nH 4 nγ I:\n‖H1/2η̄rn−1‖p\n6 γ √ p\nn\n∥ ∥ ∥ ∥\nn−1 ∑\nj=2\n〈ηr−1j−1 ,E [ (H − xj ⊗ xj) ( I − (I − γH)n−j )2( γH )−2 H(H − xj ⊗ xj) ] ηr−1j−1 〉 ∥ ∥ ∥\n∥\n1/2\np/2\n+ γp\nn\n∥ ∥ ∥ ∥\nsup j∈{2,...,n−1}\n〈ηr−1j−1 , (H − xj ⊗ xj) ( I − (I − γH)n−j )2( γH )−2 H(H − xj ⊗ xj)ηr−1j−1 〉 ∥ ∥ ∥\n∥\n1/2\np/2\n6 γ √ p\nn\n∥ ∥ ∥ ∥\nn−1 ∑\nj=2\n〈ηr−1j−1 ,E [ (H − xj ⊗ xj)γ−2H−1(H − xj ⊗ xj) ] ηr−1j−1 〉 ∥ ∥ ∥\n∥\n1/2\np/2\n+ γp\nn\n∥ ∥ ∥ ∥\nsup j∈{2,...,n−1}\n〈ηr−1j−1 , H n γ Hηr−1j−1 〉\n∥ ∥ ∥ ∥ 1/2\np/2\n+ γp\nn\n∥ ∥ ∥ ∥\nsup j∈{2,...,n−1}\n〈ηr−1j−1 , (xj ⊗ xj) ( I − (I − γH)n−j )2( γH )−2 H(xj ⊗ xj)ηr−1j−1 〉 ∥ ∥ ∥\n∥\n1/2\np/2\n6\n√ p\nn\n∥ ∥ ∥ ∥\nn−1 ∑\nj=2\nκ〈ηr−1j−1 , Hηr−1j−1 〉 trH−1H ∥ ∥ ∥\n∥\n1/2\np/2\n+ √ γpR2√ n Ar−1\n+ γp\nn\n( n−1 ∑\nj=2\nE\n[\n〈ηr−1j−1 , xj〉p〈xj , ( I − (I − γH)n−j )2( γH )−2 Hxj〉p/2 ])1/p\n6 √ pκd√ n RAr−1 + √ γpR2√ n Ar−1\n+ γp\nn RAr−1\n( n−1 ∑\nj=2\nE\n[\n〈xj , ( I − (I − γH)n−j )2( γH )−2 Hxj〉p/2 ])1/p\n6 √ p√ n RAr−1( √ γpR2 + √ κd) + γp n RAr−1 ( n−1 ∑\nj=2\nd γ2 (n γ R2\n)p/2−1 )1/p\n6 √ p√ n RAr−1( √ γpR2 + √ κd) + γp n RAr−1n 1/2γ−1/2−1/pR1−2/pd1/p\n= √ p√ n RAr−1( √ γpR2 + √ κd) + p√ n RAr−1(γR 2)1/2−1/pd1/p\n= √ p√ n RAr−1 [ √ γpR2 + √ κd+ √ p(γR2)1/2−1/pd1/p ]\n6 √ p√ n √ pγR2(σ + τ √ pγR2)( √ γpR2 + √ κd+ √ pd1/p(γR2)1/2−1/p )( √ pγR2κ+ pγR2 + p(γR2)1−1/p )r−1 ,\nusing Eq. (21).\nWe may then impose a restriction on γR2, i.e., γR2 6 1ακp with α > 1. We then have\n√ pγR2κ+ pγR2 + p(γR2)1−1/p 6 1√ α + 1 α + (αp)−1+1/p\n6 1√ α + 1 α + (α)−1(αp)1/p\n6 1√ α + 1 α + (α)−1(α2)1/2 if α > 2,\n= 1√ α + 1 α +\n√\n2 α .\nWith α = 12, we obtain a bound of 0.781 6 810 above. This leads to the bound ‖H1/2η̄rn−1‖p 6 √ p√ n √ pγR2 ( σ + τ√ 12 √ κ ) ( 1√ 12κ + √ κd+ d1/p √ p ( 1 12p )(1/2−1/p)/(1−1/p))( 8/10 )r−1\n6 √ p√ n √ pγR2τ(1 + 1√ 12 ) √ κd( 1√ 12 + 1 + sup p>2 √ p ( 1 12p )(1/2−1/p)/(1−1/p))( 8/10 )r−1\n6 √ p√ n √ pγR2τ(1 + 1√ 12 ) √ κd( 1√ 12 + 1 + √ 2 )( 8/10 )r−1\n6 7\n2 √ p√ n √ pγR2τ √ κd ( 8/10 )r−1 . (22)\nBound on ‖H1/2(η̄n−1 − ∑r i=0 η̄ i n−1)‖p. From Eq. (16) and the fact that 0 4 I − γxn ⊗ xn 4 I almost surely, we get: ∥\n∥ ∥ ∥ ηn − r ∑\ni=0\nηin\n∥ ∥ ∥ ∥\np\n6\n∥ ∥ ∥ ∥ ηn−1 − r ∑\ni=0\nηin−1\n∥ ∥ ∥ ∥\np\n+ γ ∥ ∥(H − xn ⊗ xn)ηrn−1 ∥ ∥\np\n6\n∥ ∥ ∥ ∥ ηn−1 − r ∑\ni=0\nηin−1\n∥ ∥ ∥ ∥\np\n+ γR ∥ ∥〈xn, ηrn−1〉 ∥ ∥\np\n6\n∥ ∥ ∥ ∥ ηn−1 − r ∑\ni=0\nηin−1\n∥ ∥ ∥ ∥\np\n+ γR2Ar.\nThis implies that ∥\n∥ ∥ ∥ H1/2(η̄n−1 − r ∑\ni=0\nη̄in−1)\n∥ ∥ ∥ ∥\np\n6 R\n∥ ∥ ∥ ∥ ηn − r ∑\ni=0\nηin\n∥ ∥ ∥ ∥\np\n6 nγR3Ar. (23)\nPutting things together. We get by combining Lemma 4 with Eq. (22) and Eq. (23) and then letting r tends to infinity,\n‖H1/2η̄rn−1‖p 6 r ∑\ni=1\n∥ ∥H1/2η̄in−1 ∥ ∥ p + ∥ ∥H1/2η̄0n−1 ∥ ∥ p +\n∥ ∥ ∥ ∥ H1/2(η̄n−1 − r ∑\ni=0\nη̄in−1)\n∥ ∥ ∥ ∥\np\n6\n{\n7\n2 √ p√ n √ pγR2τ √ κd 1− (8/10)r 1− 8/10 } + {√ pdσ√ n + √ γpRτ√ n } +O((8/10)r)\n6 √ pdσ√ n + √ p√ n √ pγR2τ √ κd(1 + 7 2 10 2 ) 6 √ pdσ√ n + 18.5 √ p√ n √ pγR2τ √ κd\n6 √ pdσ√ n + 18.5√ 12 √ pdτ√ n 6 √ pd(σ + 6τ)√ n 6 7 √ pdτ√ n .\nB.3 Final bound\nFor γ 6 112κpR2 , we obtain, from the last equations of Section B.1 and Section B.2,\n‖H1/2η̄rn−1‖p 6 7 √ pdτ√ n + ‖η0‖√ nγ √ 2 + 3pγR2\n6 √ p√ n ( 7 √ dτ +R‖η0‖ √ 3 + 2 γpR2 ) .\nMoreover, when γ = 112κpR2 , we have:\n‖H1/2η̄rn−1‖p 6 7 √ pdτ√ n + ‖η0‖√ n √ 12κpR2 √ 2 + 1 4\n6 7 √ pdτ√ n + 6R‖η0‖√ n √ κp = √ p√ n ( 7 √ dτ + 6 √ κR‖θ0 − θ∗‖ ) .\nB.4 Proof of Corollary 1\nWe have from the previous proposition, for γ 6 112κpR2 :\n( E ∣ ∣f(θ̄n−1)− f(θ∗) ∣ ∣ p)1/p 6\n1\n2n\n(√ p [ 7τ √ d+R‖θ0 − θ∗‖ √ 3 ] +R‖θ0 − θ∗‖ √ 2\nγR2\n)2\n6 1\n2n\n(√ p +△\n√\n1\nη\n)2\n,\nwith η = 12γκR2 6 1/p, and = 7τ √ d+R‖θ0 − θ∗‖ √ 3 and △ = R‖θ0 − θ∗‖ √ 24κ.\nThis leads to, using Markov’s inequality:\nP\n(\nf(θ̄n−1)− f(θ∗) > t\n2n\n)\n6\n(√ p +△ √\n1/η√ t\n)2p\n.\nThis leads to, with p = 1η ,\nP\n(\nf(θ̄n−1)− f(θ∗) > t\n2n\n)\n6\n(\n( +△)2 ηt\n)1/η\n.\nThis leads to\nP\n(\nf(θ̄n−1)− f(θ∗) > t\n2n\n[ 7τ √ d+R‖θ0 − θ∗‖( √ 3 + √ 24κ) ]2 ) 6 (\n1\n12γκR2t\n)1/(12γκR2)\n. (24)\nThus the large deviations decay as power of t, with a power that decays as 1/(12γκR2). If γ is small, the deviations are lighter.\nIn order to get the desired result, we simply take t = 112γκR2 δ −12κγR2 .\nC Proof of Theorem 3\nThe proof relies mostly on properties of approximate Newton steps: θ1 def = θ̃n is an approximate minimizer of f , and θ3 def = ζn is an approximate minimizer of the associated quadratic problem.\nIn terms of convergence rates, θ1 will be (1/ √ n)-optimal, while θ3 will be (1/n)-optimal for the quadratic problem because of previous results on averaged LMS. A classical property is that a single Newton step squares the error. Therefore, the full Newton step should have an error which is the square of the one of θ1, i.e., O(1/n). Overall, since θ3 approaches the full Newton step with rate O(1/n), this makes a bound of O(1/n).\nIn Section C.1, we provide a general deterministic result on the Newton step, while in Section C.2, we combine with two stochastic approximation results, making the informal reasoning above more precise.\nC.1 Approximate Newton step\nIn this section, we study the effect of an approximate Newton step. We consider θ1 ∈ H, the Newton iterate θ2 = θ1−f ′′(θ1)−1f ′(θ1), and an approximation θ3 of θ2. In the next proposition, we provide a bound on f(θ3)− f(θ∗), under different conditions, whether θ1 is close to optimal for f , and/or θ3 is close to optimal for the quadratic approximation around θ1 (i.e., close to θ2). Eq. (25) corresponds to the least-favorable situations where both errors are small, while Eq. (26) and Eq. (27) consider cases where θ1 is sufficiently good. See proof in Section E.3. These three cases are necessary for the probabilistic control.\nProposition 1 (Approximate Newton step) Assume (B3-4), and θ1, θ2, θ3 ∈ H such that f(θ1)− f(θ∗) = ε1, θ2 = θ1 − f ′′(θ1)−1f ′(θ1) and 12 〈θ3 − θ2, f ′′(θ1)(θ3 − θ2)〉 = ε2. Then, if t2 = ε1κρ,\nf(θ3)− f(θ∗) 6 ε1 + √ 2ρε2e √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1. (25)\nIf t = √ ε1κρ 6 1/16, then\nf(θ3)− f(θ∗) 6 57κρε21 + 2 √ ρε2. (26)\nMoreover, if t = √ ε1κρ 6 1/16 and ε2κρ 6 1/16, then\nf(θ3)− f(θ∗) 6 57κρε21 + 12ε2. (27)\nNote that in the favorable situation in Eq. (26), we get error of the form O(ε21+ε2). It essentially suffices now to show that in our set-up, in a probabilistic sense to be determined, ε1 = O(1/ √ n) and ε2 = O(1/n), while controlling the unfavorable situations.\nC.2 Stochastic analysis\nWe consider the following two-step algorithm:\n– Starting from any initialization θ0, run n iterations of averaged stochastic gradient descent to get θ1,\n– Run from θ1 n steps of LMS on the quadratic approximation around θ1, to get θ3, which is an approximation of the Newton step θ2.\nWe consider the events\nA1 =\n{\nf(θ1)− f(θ∗) 6 1 162 (κρ)−1\n}\n=\n{\nε1 6 1 162 (κρ)−1\n}\nand\nA2 =\n{\n1 2 〈θ3 − θ2, f ′′(θ1)(θ3 − θ2)〉 6 1 16 (κρ)−1\n}\n=\n{\nε2 6 1 16 (κρ)−1\n}\n.\nWe denote by G1 the σ-field generated by the first n observations (the ones used to define θ1). We have, by separating all events, i.e., using 1 = 1A11A2 + 1A11Ac2 + 1Ac1 :\nE [ f(θ3)− f(θ∗) ∣ ∣G1 ]\n= E [ 1A11A2 ( f(θ3)− f(θ∗) ) ∣ ∣G1 ] + E [ 1A11Ac2 ( f(θ3)− f(θ∗) ) ∣ ∣G1 ] + E [ 1Ac 1 ( f(θ3)− f(θ∗) ) ∣ ∣G1 ] 6 E [\n1A11A2 ( 57κρε21 + 12ε2 )∣ ∣G1 ] + E [ 1A11Ac2 ( 57κρε21 + 2 √ ρε2 )∣ ∣G1 ]\n+E [\n1Ac 1\n( ε1 + √ 2ρε2e √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 )∣ ∣G1 ] using Prop. 1,\n6 57κρε21 + 12E [ 1A1ε2 ∣ ∣G1 ] + E [ 1A11Ac2 ( 2 √ ρε2 )∣ ∣G1 ]\n+1Ac 1\n(\nε1 + E [√ ε2|G1 ] √ 2ρe √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 )\n6 57κρε21 + 12× 1A1E [ ε2 ∣ ∣G1 ] + 2 √ ρ1A1 √ P(Ac2|G1) √ E [ ε2 ∣ ∣G1 ] using Cauchy-Schwarz inequality,\n+1Ac 1\n(\nε1 + E [√ ε2|G1 ] √ 2ρe √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 )\n= 57κρε21 + 12× 1A1E [ ε2 ∣ ∣G1 ] + 2 √ ρ1A1\n√\nP({ε2 > 1\n16κρ |G1)\n√\nE [ ε2 ∣ ∣G1 ]\n+1Ac 1\n(\nε1 + E [√ ε2|G1 ] √ 2ρe √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 )\n6 57κρε21 + 12× 1A1E [ ε2 ∣ ∣G1 ] + 2 √ ρ1A1 √ 16κρE(ε2|G1) √ E [ ε2 ∣ ∣G1 ] using Markov’s inequality,\n+1Ac 1\n( ε1 + E [√ ε2|G1 ] √ 2ρe √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 )\n= 57κρε21 + 1A1E [ ε2 ∣ ∣G1 ]\n(12 + 2 √ ρ √ 16κρ)\n+1Ac 1\n(\nε1 + E [√ ε2|G1 ] √ 2ρe √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 ) . (28)\nWe now need to control ε2, i.e., the error made by the LMS algorithm started from θ1.\nLMS on the second-order Taylor approximation. We consider the quadratic approximation around θ1 ∈ H, and write is as an expectation, i.e.,\ng(θ) = f(θ1) + 〈f ′(θ1), θ − θ1〉+ 1 2 〈θ − θ1, f ′′(θ1)(θ − θ1)〉\n= f(θ1) + E [〈 ℓ′(y, 〈x, θ1〉)x, θ − θ1 〉] + 1\n2 E [〈 θ − θ1, ℓ′′(y, 〈x, θ1〉)x ⊗ x(θ − θ1) 〉]\n= f(θ1) + 〈 E [ ℓ′(y, 〈x, θ1〉)x ] , θ − θ1 〉 + 1\n2\n〈 θ − θ1,E [ ℓ′′(y, 〈x, θ1〉)x ⊗ x ] (θ − θ1) 〉 .\nWe consider x̃n = √ ℓ′′(yn, 〈xn, θ1〉)xn and z̃n = −ℓ′(yn, 〈xn, θ1〉)xn, so that\ng(θ) = f(θ1) + E\n[\n1 2 〈θ − θ1, x̃n〉2 − 〈z̃n, θ − θ1〉\n]\n.\nWe denote by θ2 = θ1 − f ′′(θ1)−1f ′(θ1) the output of the Newton step, i.e., the global minimizer of g, and ξ̃n = z̃n − 〈θ2 − θ1, x̃n〉x̃n the residual.\nWe have Eξ̃n = 0, E [ x̃n ⊗ x̃n ] = f ′′(θ1), and, for any z ∈ H:\n( E [ 〈z, ξ̃n〉 ]2)1/2 =\n(\nE [( ℓ′′(yn, 〈xn, θ1〉)〈θ2 − θ1, xn〉+ ℓ′(yn, 〈xn, θ1〉 ) 〈z, xn〉 ]2 )1/2\n6\n(\nE [( ℓ′′(yn, 〈xn, θ1〉)〈θ2 − θ1, xn〉〈z, xn〉 ]2 )1/2 + ( E [ ℓ′(yn, 〈xn, θ1〉〈z, xn〉 ]2 )1/2\nusing the triangle inequality,\n6 √ κ √ 〈z, f ′′(θ1)z〉〈θ2 − θ1, f ′′(θ1)(θ2 − θ1)〉+ ( E [ 〈z, xn〉 ]2 )1/2 6 √ κ √ 〈z, f ′′(θ1)z〉〈θ2 − θ1, f ′′(θ1)(θ2 − θ1)〉+ √ ρ √ 〈z, f ′′(θ∗)z〉\n6 √ 〈z, f ′′(θ1)z〉 [√ κ‖f ′′(θ1)−1/2f ′(θ1)‖+ √ ρe √ κρd1/2 ] ,\nwhere we denote d21 = 〈θ1−θ∗, H(θ1−θ∗)〉, and we have used assumption (B4) , |ℓ′| 6 1 and Prop. 5 relating H and f ′′(θ1). This leads to\nE [ ξ̃n ⊗ ξ̃n ] 4 [√ κ‖f ′′(θ1)−1/2f ′(θ1)‖+ √ ρe √ κρd1/2 ]2 f ′′(θ1).\nThus, we have:\n– E [ ξ̃n ⊗ ξ̃n ] 4 σ2f ′′(θ1) with σ = √ κ‖f ′′(θ1)−1/2f ′(θ1)‖+ √ ρe √ κρd1/2.\n– ‖xn‖2 6 R2/4 almost surely.\nWe may thus apply the previous results, i.e., Theorem 1, to obtain with the LMS algorithm a θ3 ∈ H such that, with γ = 1R2 :\nE [ ε2|G1 ] 6 2\nn\n[√ d √ κ‖f ′′(θ1)−1/2f ′(θ1)‖+ √ d √ ρe √ κρd1/2 + R\n2 ‖f ′′(θ1)−1f ′(θ1)‖\n]2\n6 2\nn\n[√ d √ κ‖H−1/2f ′(θ1)‖e √ κρd1/2 + √ d √ ρe √ κρd1/2 + R 2 e √ κρd1‖H−1f ′(θ1)‖ ]2\nusing Prop. 5 ,\n6 2\nn\n[√ d √ κ( √ 3 + 2 √ κρε1) √ ε1e √ κρd1/2 + √ d √ ρe √ κρd1/2 + R 2 e √ κρd1 e √ κρd1 − 1√ κρd1 ‖θ1 − θ∗‖ ]2\nusing Prop. 11 and Eq. (49) from Section E.3.\nThus, E [ ε2|G1 ] 6 2n\n[ R‖θ1 − θ∗‖△2(t) +△3(t) √ dρ ]2 , with increasing functions\n△2(t) = 1 2 e √ 3+t2t e √ 3+t2t − 1√ 3 + t2t ,\n△3(t) = [ ( √ 3 + 2t)t+ 1 ] e √ 3+t2t/2,\nwhich are such that △2(t) 6 0.6 and △3(t) 6 1.2 if t 6 1/16.\nWe then get from Eq. (28):\nE [ f(θ3)− f(θ∗) ∣ ∣G1 ]\n6 57κρε21 + 2\nn (12 + 2\n√ ρ √ 16κρ) [ 0.6R‖θ1 − θ∗‖+ √ dρ1.2 ]2\n+1Ac 1\n(\nε1 +\n√\n2\nn\n( R‖θ1 − θ∗‖△2(t) +△3(t) √ dρ ) √ 2ρe √ 3+t2t/2 + √ ρe √ 3+t2t( √ 3 + 2t) √ ε1 )\n6 57κρε21 + 1\nn (12 + 8\n√ ρ √ κρ) ( 6dρ+ 3\n2 R2‖θ1 − θ∗‖2\n)\n+1Ac 1\n(√ ε1 [ √ t√ κρ + √ ρe √ 3+t2t( √ 3 + 2t) ] + √ 2 n ( R‖θ1 − θ∗‖△2(t) +△3(t) √ dρ ) √ 2ρe √ 3+t2t/2 )\n= 57κρε21 + 12\nn (3 + 2\n√ ρ √ κρ) ( 2dρ+ 1\n2 R2‖θ1 − θ∗‖2\n)\n+1Ac 1\n(√ ρε1 [\n√ t\nρ √ κ + e\n√ 3+t2t( √ 3 + 2t) ] + √ 4ρ\nn △2(t)e\n√ 3+t2t/2R‖θ1 − θ∗‖+\n√\n4ρ\nn △3(t)e\n√ 3+t2t/2 √\nρd\n)\n6 57κρε21 + 12\nn (3 + 2\n√ ρ √ κρ) ( 2dρ+ 1\n2 R2‖θ1 − θ∗‖2\n)\n+1Ac 1\n(√ ρε1△4(t) +\n√\nρ n R‖θ1 − θ∗‖△5(t) +\n√\nρ\nn\n√ ρd△6(t) ) , (29)\nwith (using ρ > 4):\n△4(t) = √ t\n4 + e\n√ 3+t2t( √ 3 + 2t) 6 5 exp(2t2)\n△5(t) = 2e √ 3+t2t/2∆2(t) 6 4 exp(3t 2) △6(t) = 2e √ 3+t2t/2∆3(t) 6 6 exp(3t 2).\nThe last inequalities may be checked graphically. By taking expectations and using E|XY Z| 6 (E|X |2)1/2(E|X |4)1/4(E|X |4)1/4, this leads to, from Eq. (29):\nE [ f(θ3)− f(θ∗) ]\n6 57κρE [ ε21 ]\n+ 12\nn (3 + 2\n√ ρ √ κρ) ( 2dρ+ 1\n2 E [ R2‖θ1 − θ∗‖2 ])\n+ √ ρ √\nP(Ac1)\n(\n( E [ ε21 ])1/4( E [ △4(t) ]4)1/4\n+\n√\n1\nn\n( E [ R4‖θ1 − θ∗‖4 ])1/4( E [ △5(t) ]4)1/4 +\n√\n1\nn\n√\nρd ( E [ △6(t) ]4)1/4\n)\n. (30)\nWe now need to use bounds on the behavior of the first n steps of regular averaged stochastic gradient descent.\nFine results on averaged stochastic gradient descent. In order to get error bounds on θ1, we run n steps of averaged stochastic gradient descent with constant-step size γ = 1/(2R2 √ n). We\nneed the following bounds from [21, Appendix E and Prop. 1]:\nE[(f(θ1)− f(θ∗))2] 6 1\nn (R2‖θ0 − θ∗‖2 +\n3 4 )2\nE[(f(θ1)− f(θ∗))3] 6 1\nn3/2 (R2‖θ0 − θ∗‖2 +\n3 2 )3\nE [ R4‖θ1 − θ∗‖4 ] 6 (R2‖θ0 − θ∗‖2 + 3\n4 )2\nE [ R2‖θ1 − θ∗‖2 ] 6 R2‖θ0 − θ∗‖2 + 1\n4\nP\n[\nf(θ1)− f(θ∗) > 1 162 (κρ)−1\n]\n6 166(κρ)3E [ f(θ1)− f(θ∗) ]3 using Markov’s inequality,\n6 166(κρ)3 1\nn3/2 (R2‖θ0 − θ∗‖2 +\n3 2 )3.\nHowever, we need a finer control of the deviations in order to bound quantities of the form eαε1 .\nIn Section D, extending results from [21], we show in Prop. 3 that if α(10+2R 2‖θ0−θ∗‖2)√ n 6 12e , then Eeα(f(θ1)−f(θ∗)) 6 1.\nPutting things together. From Eq. (30), we then get, if 6(10+2R 2‖θ0−θ∗‖2)√ n 6 12e :\nE [ f(θ3)− f(θ∗) ]\n6 57κρ 1\nn (R2‖θ0 − θ∗‖2 +\n3 4 )2 + 12 n (3 + 2 √ ρ √ κρ) ( 2dρ+ 1 4 + 1 2 R2‖θ0 − θ∗‖2 )\n+ √ ρ\n√\n166(κρ)3 1\nn3/2 (R2‖θ0 − θ∗‖2 +\n3 2 )3\n× ( 5 ( 1\nn (R2‖θ0 − θ∗‖2 +\n3 4 )2 )1/4 + 4\n√\n1\nn\n( (R2‖θ0 − θ∗‖2 + 3 4 )2 )1/4 + 6\n√\n1\nn\n√\nρd\n)\nUsing the notation D = (R2‖θ0 − θ∗‖2 + 32 ), we obtain:\nE [ f(θ3)− f(θ∗) ]\n6 57κρ 1\nn D2 +\n12\nn (3 + 2\n√ ρ √ κρ) ( 2dρ+ D\n2\n)\n+ √ ρ\n√\n166(κρ)3 1\nn3/2 D3 ×\n(\n5 ( 1\nn D2 )1/4 + 4\n√\n1\nn\n( D2 )1/4 + 6\n√\n1\nn\n√\nρd\n)\n= 57κρ 1\nn D2 +\n12\nn (3 + 2\n√ ρ √ κρ) ( 2dρ+ D\n2\n)\n+ √ ρ163(κρ)3/2 1\nn3/4 D3/2 ×\n(\n5 1\nn1/4 D1/2 + 4\n1\nn1/2 D1/2 + 6 1√ n √ ρd\n)\n6 κ3/2ρ2\nn\n[\n57\n4 D2 + 12(\n3\n16 +\n2 4 ) ( 2dρ+ D 2 ) + 163D3/2 × ( 5D1/2 + 4 1 n1/4 D1/2 + 6 1 n1/4 √ ρd )]\nusing ρ > 4 and κ > 1,\n6 κ3/2ρ2D2\nn\n[\n57\n4 1 + 12(\n3\n16 +\n2 4 ) ( 2dρ 4 9 + 1 2 2 3 ) + 163 × ( 5 + 4 + 6 1 n1/4 √ 2√ 3 √ ρd )] using D > 3 2 ,\n6 κ3/2ρ2D2\nn\n[\n36881 + 20067\n√ ρd n1/4 + 17dρ ] 6 κ3/2ρ3d n 56965(R2‖θ0 − θ∗‖2 + 3 2 )2\n6 κ3/2ρ3d\nn (16R‖θ0 − θ∗‖+ 19)4.\nThe condition 6(10+2R 2‖θ0−θ∗‖2)√ n 6 12e is implied by n > (19 + 9R‖θ0 − θ∗‖)4.\nD Higher-order bounds for stochastic gradient descent\nIn this section, we provide high-order bounds for averaged stochastic gradient for logistic regression. The first proposition gives a finer result than [21], with a simpler proof, while the second proposition is new.\nProposition 2 Assume (B1-4). Consider the stochastic gradient recursion θn = θn−1−γℓ′(yn, 〈θn−1, xn〉)xn and its averaged version θ̄n−1. We have, for all real p > 1,\n∥ ∥f(θ̄n−1)− f(θ∗) ∥ ∥\np 6\n17γR2 2 ( √ p+ p√ n )2 + 1 γn ‖θ0 − θ∗‖2 (31)\n∥ ∥‖θn − θ∗‖2 ∥ ∥ p 6 17γ2R2n(\n√ p+ p√ n )2 + 2‖θ0 − θ∗‖2. (32)\nProof. Following [21], we have the recursion:\n2γ [ f(θn−1)− f(θ∗) ] + ‖θn − θ∗‖2 6 ‖θn−1 − θ∗‖2 + γ2R2 +Mn,\nwith Mn = −2γ〈θn−1 − θ∗, f ′n(θn−1)− f ′(θn−1)〉.\nThis leads to\n2γnf\n(\n1\nn\nn ∑\nk=1\nθk−1\n)\n− 2γnf(θ∗) + ‖θn − θ∗‖2 6 An,\nwith An = ‖θ0−θ∗‖2+nγ2R2+ ∑n k=1 Mk. Note that E(Mk|Fk−1) = 0 and |Mk| 6 4γR‖θk−1−θ∗‖ 6 4γRA\n1/2 k−1 almost surely. We may now use BRP’s inequality in Eq. (18) to get:\n∥ ∥ ∥ ∥\nsup k∈{0,...,n} Ak\n∥ ∥ ∥ ∥\np\n6 ‖θ0 − θ∗‖2 + nγ2R2 + √ p\n∥ ∥ ∥ ∥ 16γ2R2 n ∑\nk=1\n‖θk−1 − θ∗‖2 ∥ ∥ ∥\n∥\n1/2\np/2\n+p\n∥ ∥ ∥ ∥\nsup k∈{1,...,n}\n4γR‖θk−1 − θ∗‖ ∥ ∥ ∥\n∥\np\n6 ‖θ0 − θ∗‖2 + nγ2R2 + √ p4γR √ n ∥ ∥ ∥\n∥ sup k∈{0,...,n−1} Ak\n∥ ∥ ∥ ∥ 1/2\np/2\n+p4γR\n∥ ∥ ∥ ∥\nsup k∈{0,...,n−1}\nA 1/2 k\n∥ ∥ ∥ ∥\np\n6 ‖θ0 − θ∗‖2 + nγ2R2 + 4γR ∥ ∥ ∥\n∥ sup k∈{0,...,n−1} Ak\n∥ ∥ ∥ ∥ 1/2\np/2\n(√ pn+ p ) .\nThus if B =\n∥ ∥ ∥ ∥ supk∈{0,...,n}Ak ∥ ∥ ∥ ∥\np\n, we have\nB 6 ‖θ0 − θ∗‖2 + nγ2R2 + 4γRB1/2 (√ pn+ p ) .\nBy solving this quadratic inequality, we get:\n( B1/2 − 2γR(√pn+ p) )2 6 ‖θ0 − θ∗‖2 + nγ2R2 + 4γ2R2 (√ pn+ p )2\nB1/2 6 2γR( √ pn+ p) + √ ‖θ0 − θ∗‖2 + nγ2R2 + 4γ2R2 (√ pn+ p )2\nB 6 8γ2R2( √ pn+ p)2 + 2‖θ0 − θ∗‖2 + 2nγ2R2 + 8γ2R2 (√ pn+ p )2\n6 16γ2R2( √ pn+ p)2 + 2‖θ0 − θ∗‖2 + 2nγ2R2 6 17γ2R2( √ pn+ p)2 + 2‖θ0 − θ∗‖2.\nThe previous statement leads to the desired result if p > 2. For p ∈ [1, 2], we may bound it by the value at p = 2, and a direct calculation shows that the bound is still correct.\nProposition 3 Assume (B1-4). Consider the stochastic gradient recursion θn = θn−1−γℓ′(yn, 〈θn−1, xn〉)xn and its averaged version θ̄n−1. If\nαe(10 + 2R2‖θ0 − θ∗‖2)√ n 6 1 2 , then E exp ( α [ f(θ̄n−1)−f(θ∗) ]) 6 1.\nProof. Using that almost surely, ‖θ̄n−1 − θ∗‖ 6 ‖θ0 − θ∗‖ + nγR we obtain that almost surely f(θ̄n−1)− f(θ∗) 6 R‖θ0 − θ∗‖+ nγR2.\nMoreover, from the previous proposition, we have for p 6 n4 ,\n∥ ∥f(θ̄n−1)− f(θ∗) ∥ ∥\np 6\n17γR2\n2\n9 4 p+ 1 γn ‖θ0 − θ∗‖2.\nFor γ = 1 2R2 √ n , we get:\n∥ ∥f(θ̄n−1)− f(θ∗) ∥ ∥\np 6 10p√ n + 2R2√ n ‖θ0 − θ∗‖2,\nand\nf(θ̄n−1)− f(θ∗) 6 R‖θ0 − θ∗‖+ √ n\n2 almost surely.\nThis leads to the bound valid for all p:\n∥ ∥f(θ̄n−1)− f(θ∗) ∥ ∥\np 6 p√ n (10 + 2R2‖θ0 − θ∗‖2).\nWe then get\nE exp ( α [ f(θ̄n−1)− f(θ∗) ]) = ∞ ∑\nk=0\nαp p! E[|f(θ̄n−1)− f(θ∗)|p]\n6\n∞ ∑\nk=0\nαp\np!\npp\nnp/2\n( 10 + 2R2‖θ0 − θ∗‖2 )p\n6\n∞ ∑\nk=0\nαp 2(p/e)p pp np/2\n( 10 + 2R2‖θ0 − θ∗‖2 )p using Stirling’s formula,\n6 1\n2\n∞ ∑\nk=0\n(eα)p\nnp/2\n( 10 + 2R2‖θ0 − θ∗‖2 )p\n6 1\n2\n1 1− 1/2 = 1 if αe(10 + 2R2‖θ0 − θ∗‖2)√ n 6 1 2 .\nE Properties of self-concordance functions\nIn this section, we review various properties of self-concordant functions, that will prove useful in proving Theorem 3. All these properties rely on bounding the third-order derivatives by secondorder derivatives. More precisely, from assumptions (B3-4), we have for any θ, δ, η ∈ H, where f (r)[δ1, . . . , δk] denotes the k-th order differential of f :\nf ′′′(θ)[δ, δ, η] = E [ ℓ′′′(yn, 〈θ, xn〉)〈δ, xn〉2〈η, xn〉 ]\n|f ′′′(θ)[δ, δ, η]| 6 E [ ℓ′′(yn, 〈θ, xn〉)〈δ, xn〉2|〈η, xn〉| ]\n6\n√\nE [ ℓ′′(yn, 〈θ, xn〉)2〈δ, xn〉4 ]\n√\nE [ 〈η, xn〉2 ] using Cauchy-Schwarz,\n6 √ κρf ′′(θ)[δ, δ] √ 〈η,Hη〉 using the two assumptions.\nE.1 Global Taylor expansions\nIn this section, we derive global non-asymptotic Taylor expansions for self-concordant functions, which show that they behave similarly to like quadratic functions.\nThe following proposition shows that having a small excess risk f(θ) − f(θ∗) implies that the weighted distance to optimum 〈θ − θ∗, H(θ − θ∗)〉 is small. Note that for quadratic functions, these two quantities are equal and that throughout this section, we always consider norms weighted by the matrix H (Hessian at optimum).\nProposition 4 (Bounding weighted distance to optimum from function values) Assume (B34). Then, for any θ ∈ H:\n〈θ − θ∗, H(θ − θ∗)〉 6 3 [ f(θ)− f(θ∗) ] + κρ [ f(θ)− f(θ∗) ]2 . (33)\nProof. Let ϕ : t 7→ f [ θ∗ + t(θ − θ∗) ] . Denoting d = √ 〈θ − θ∗, f ′′(θ∗)(θ − θ∗)〉, we have:\n|ϕ′′′(t)| 6 E [ ℓ′′′(y, 〈θ∗ + t(θ − θ∗), x〉)|〈θ − θ∗, x〉|3 ]\n6 E [ ℓ′′(y, 〈θ∗ + t(θ − θ∗), x〉)〈θ − θ∗, x〉2 ]√ κρd = √ κρdϕ′′(t),\nfrom which we obtain ϕ′′(t) > ϕ′′(0)e− √ κρdt. Following [25], by integrating twice (and noting that ϕ′(0) = 0 and ϕ′′(0) = d2), we get\nf(θ) = ϕ(1) > ϕ(0) + ϕ′′(0) 1\nS2d2 (\ne− √ κρd + √ κρd− 1 )\n> f(θ∗) + 1\nκρ\n( e− √ κρd + √ κρd− 1 ) .\nThus e− √ κρd + √ κρd− 1 6 κρ [ f(θ)− f(θ∗) ] . The function κ : u 7→ e−u + u − 1 is an increasing bijection from R+ to itself. Thus this implies d 6 1√κρκ −1 ( κρ [ f(θ) − f(θ∗) ] ) . We show below that κ−1(v) 6 √ 3v + v2, leading to the desired\nresult. The identity κ−1(v) 6 √ 3v + v2 is equivalent to e−u + u − 1 > √ u2 + α2 − α, for α = 32 . It then suffices to show that 1 − e−u > u√ u2+α2 . This can be shown by proving the monotonicity of\nu 7→ e−u + u− 1− √ u2 + α2 + α, and we leave this exercise to the reader.\nThe next proposition shows that Hessians between two points which are close in weighted distance are close to each other, for the order between positive semi-definite matrices.\nProposition 5 (Expansion of Hessians) Assume (B3-4). Then, for any θ1, θ2 ∈ H:\nf ′′(θ1)e √ κρ √ 〈θ2−θ1,H(θ2−θ1)〉 < f ′′(θ2) < f ′′(θ1)e −√κρ √ 〈θ2−θ1,H(θ2−θ1)〉, (34)\n∥ ∥f ′′(θ1) −1/2f ′′(θ2)f ′′(θ1) −1/2 − I ∥ ∥\nop 6 e\n√ κρ √\n〈θ2−θ1,H(θ2−θ1)〉 − 1. (35)\nProof. Let z ∈ H and ψ(t) = z⊤f ′′(θ1 + t(θ2 − θ1))z. We have:\n|ψ′(t)| = |f ′′′(θ1 + t(θ2 − θ1))[z, z, θ2 − θ1]| 6 f ′′(θ1 + t(θ2 − θ1))[z, z] √ κρd = ψ(t) √ κρd,\nwith d12 = √ 〈θ2 − θ1, H(θ2 − θ1)〉. Thus ψ(0)e √ κρd12t > ψ(t) > ψ(0)e− √ κρd12t. This implies, for t = 1, that f ′′(θ1)e √ κρd12 < f ′′(θ2) < f ′′(θ1)e −√κρd12 ,\nwhich implies the desired results. ‖ · ‖op denotes the operator norm (largest singular value).\nThe following proposition gives an approximation result bounding the first order expansion of gradients by the first order expansion of function values.\nProposition 6 (Expansion of gradients) Assume (B3-4). Then, for any θ1, θ2 ∈ H and ∆ ∈ H:\n〈∆, f ′(θ2)− f ′(θ1)− f ′′(θ1)(θ2 − θ1)〉 6 √ κρ〈∆, H∆〉1/2 [ f(θ2)− f(θ1)− 〈f ′(θ1), θ2 − θ1〉 ] . (36)\nProof. Let ϕ(t) = 〈∆, f ′(θ1+ t(θ2 − θ1))− f ′(θ1)− tf ′′(θ1)(θ2 − θ1)〉. We have ϕ′(t) = 〈∆, f ′′(θ1 + t(θ2 − θ1))(θ1 − θ2〉 − 〈∆, f ′′(θ1)(θ1 − θ2)〉 and |ϕ′′(t)| = |f ′′′(θ1 + t(θ2 − θ1))[θ2 − θ1, θ2 − θ1,∆]| 6√ κρ〈∆, H∆〉1/2〈θ1 − θ2, f ′′(θ1 + t(θ2 − θ1))(θ1 − θ2)〉. This leads to\n〈∆, f ′(θ2)− f ′(θ1)− f ′′(θ1)(θ2 − θ1)〉 6 √ κρ〈∆, H∆〉1/2 [ f(θ2)− f(θ1)− 〈f ′(θ1), θ2 − θ1〉 ] .\nNote that one may also use the bound\n|ϕ′(t)| 6 ‖θ1 − θ2‖〈∆, f ′′(θ1)2∆〉1/2 [ et √ κρ‖H1/2(θ1−θ2)‖ − 1 ] ,\nleading to\n〈∆, f ′(θ2)− f ′(θ1)− f ′′(θ1)(θ2 − θ1)〉\n6 ‖θ1 − θ2‖〈∆, f ′′(θ1)2∆〉1/2 e √ κρ‖H1/2(θ1−θ2)‖ − 1−√κρ‖H1/2(θ1 − θ2)‖√\nκρ‖H1/2(θ1 − θ2)‖ . (37)\nThe following proposition considers a global Taylor expansion of function values. Note that when κρ〈θ2 − θ1, H(θ2 − θ1)〉 tends to zero, we obtain exactly the second-order Taylor expansion. For more details, see [25]. This is followed by a corrolary that upper bounds excess risk by distance to optimum (this is thus the other direction than Prop. 4).\nProposition 7 (Expansion of function values) Assume (B3-4). Then, for any θ1, θ2 ∈ H and ∆ ∈ H:\nf(θ2)− f(θ1)− 〈f ′(θ1), θ2 − θ1〉 6 〈θ2 − θ1, f ′′(θ1)(θ2 − θ1)〉 e √ κρ √ 〈θ2−θ1,H(θ2−θ1)〉 − 1−√κρ √\n〈θ2 − θ1, H(θ2 − θ1)〉 κρ〈θ2 − θ1, H(θ2 − θ1)〉 . (38)\nProof. Let ϕ(t) = f [ θ1 + t(θ2 − θ1) ] − f(θ1) − t〈f ′(θ1), θ2 − θ1〉. We have ϕ′(t) = 〈f ′ [ θ1 + t(θ2 − θ1) ] , θ2 − θ1〉 − 〈f ′(θ1), θ2 − θ1〉 and ϕ′′(t) = 〈θ2 − θ1, f ′′ [ θ1 + t(θ2 − θ1) ]\n(θ2 − θ1)〉. Moreover, ϕ′′′(t) 6 √ κρϕ′′(t) √ 〈θ2 − θ1, H(θ2 − θ1)〉, leading to ϕ′′(t) 6 e √ κρt √ 〈θ2−θ1,H(θ2−θ1)〉ϕ′′(0). Integrating twice between 0 and 1 leads to the desired result.\nCorollary 2 (Excess risk) Assume (B3-4), and θ1 ∈ H and θ2 = θ1 − f ′′(θ1)−1f ′(θ1). Then\nf(θ)− f(θ∗) 6 e √ κρd −√κρd− 1\nκρ , (39)\nwhere d = √ 〈θ − θ∗, H(θ − θ∗)〉.\nProof. Applying Prop. 7 to θ2 = θ and θ1 = θ∗, we get the desired result.\nThe following proposition looks at a similar type of bounds than Prop. 7; it is weaker when θ2 and θ1 are close (it does not converge to the second-order Taylor expansion), but stronger for large values (it does not grow exponentially fast).\nProposition 8 (Bounding function values with fewer assumptions) Assume (B3-4), and θ1, θ2 ∈ H. Then\nf(θ2)− f(θ1) 6 √ ρ‖H1/2(θ1 − θ2)‖. (40)\nProof. Let ϕ(t) = f(θ1 + t(θ2 − θ1))− f(θ1). We have |ϕ′(t)| = |Eℓ′(yn, 〈xn, θ1+ t(θ2 − θ1)〉)〈θ2 − θ1t, xn〉| 6 √ ρ‖H1/2(θ1 − θ2)‖. Integrating between 0 and 1 leads to the desired result.\nE.2 Analysis of Newton step\nSelf-concordance has been traditionally used in the analysis of Newton’s method (see [29, 24]). In this section, we adapt classical results to our specific notion of self-concordance (see also [25]). A key quantity is the so-called “Newton decrement” at a certain point θ1, equal to 〈f ′(θ1), f ′′(θ1)−1f ′(θ1)〉, which governs the convergence behavior of Newton methods (this is the quantity which is originally shown to be quadratically convergent). In this paper, we consider a slightly different version where the Hessian is chosen to be the one at θ∗, i.e., 〈f ′(θ1), H−1f ′(θ1)〉.\nThe following proposition shows how a full Newton step improves the Newton decrement (by taking a square).\nProposition 9 (Effect of Newton step on Newton decrement) Assume (B3-4), and θ1 ∈ H and θ2 = θ1 − f ′′(θ1)−1f ′(θ1). Then\n〈f ′(θ2), H−1f ′(θ2)〉 6 κρe2 √ κρd1〈f ′(θ1), H−1f ′(θ1)〉2\n( e √ κρd12 −√κρd12 − 1\nκρd212\n)2\n, (41)\nwhere d212 = 〈θ2 − θ1, H(θ2 − θ1)〉 6 e √ κρd1〈f ′(θ1), H−1f ′(θ1)〉 and d1 = 〈θ1 − θ∗, H(θ1 − θ∗)〉1/2.\nProof. When applying the two previous propositions to the Newton step θ2 = θ1−f ′′(θ1)−1f ′(θ1), we get:\n〈∆, f ′(θ2)〉 6 √ κρ〈∆, H∆〉1/2〈f ′(θ1), f ′′(θ1)−1f ′(θ1)〉\ne √ κρd12 −√κρd12 − 1\nκρd212\n6 √ κρSe √ κρd1〈∆, H∆〉1/2〈f ′(θ1), H−1f ′(θ1)〉\ne √ κρd12 −√κρd12 − 1\nκρd212 .\nWe then optimize with respect to ∆ to obtain the desired result.\nThe following proposition shows how the Newton decrement is upper bounded by a function of the excess risk.\nProposition 10 (Newton decrement) Assume (B3-4), and θ1 ∈ H, then,\n〈f ′(θ1), H−1f ′(θ1)〉 6 ( 1\n2\n√ κρ∆1 +\n√\nd21 + √ κρd1∆1 + 1\n4 κρ∆21\n)2\n, (42)\nwith d1 = √ 〈θ1 − θ∗, H(θ1 − θ∗)〉 and ∆1 = f(θ1)− f(θ∗).\nProof. We may bound the Newton decrement as follows:\n〈f ′(θ1), H−1f ′(θ1)〉 6 〈f ′(θ1)−H(θ1 − θ∗), H−1f ′(θ1)〉+ 〈H(θ1 − θ∗), H−1f ′(θ1)〉 6 √ κρ [ f(θ1)− f(θ∗) ] 〈f ′(θ1), H−1f ′(θ1)〉1/2 + 〈f ′(θ1), θ1 − θ∗〉. (43)\nThis leads to\n〈f ′(θ1), H−1f ′(θ1)〉 6 ( 1\n2\n√ κρ [ f(θ1)− f(θ∗) ] +\n√\n〈f ′(θ1), θ1 − θ∗〉+ 1\n4 κρ\n[ f(θ1)− f(θ∗) ]2 )2 .\nMoreover,\n〈f ′(θ1), θ1 − θ∗〉 = 〈H(θ1 − θ∗), θ1 − θ∗〉+ 〈f ′(θ1)−H(θ1 − θ∗), θ1 − θ∗〉 6 〈H(θ1 − θ∗), θ1 − θ∗〉+ √ κρ〈θ1 − θ∗, H(θ1 − θ∗)〉1/2 [ f(θ1)− f(θ∗) ]\n6 d21 + √ κρd1 [ f(θ1)− f(θ∗) ] .\nOverall, we get\n〈f ′(θ1), H−1f ′(θ1)〉\n6\n(\n1\n2\n√ κρ [ f(θ1)− f(θ∗) ] +\n√\nd21 + √ κρd1 [ f(θ1)− f(θ∗) ] + 1\n4 κρ\n[ f(θ1)− f(θ∗) ]2 )2 .\nThe following proposition provides a bound on a quantity which is not the Newton decrement. Indeed, this is (up to the difference in the Hessians), the norm of the Newton step. This will be key in the following proofs.\nProposition 11 (Bounding gradients from unweighted distance to optimum) Assume (B34), and θ1 ∈ H, then,\n‖H−1f ′(θ1)‖ 6 e √ κρd1 − 1√ κρd1 ‖θ1 − θ∗‖, (44)\nwith d1 = √ 〈θ1 − θ∗, H(θ1 − θ∗)〉.\nProof. We have:\n‖H−1f ′(θ1)‖ 6 ‖H−1 [ f ′(θ1)−H(θ1 − θ∗) ] ‖+ ‖H−1 [ H(θ1 − θ∗) ] ‖\n6 ‖θ1 − θ∗‖ ( 1 + e √ κρd1 − 1−√κρd1√\nκρd1\n)\n.\nThe next proposition shows that having a small Newton decrement implies that the weighted distance to optimum is small.\nProposition 12 (Weighted distance to optimum) Assume (B3-4). If we have √ κρe √ κρd〈f ′(θ), H−1f ′(θ)〉1/2 6 1 2 , with d = √ 〈θ − θ∗, H(θ − θ∗)〉, then\nd 6 4e √ κρd〈f ′(θ), H−1f ′(θ)〉1/2.\nProof. For any ∆ ∈ H such that 〈∆, H∆〉 = 1, and t > 0, we have, following the same reasoning than for Prop. 7:\nf(θ + t∆) > f(θ) + t〈∆, f ′(θ)〉 + 〈∆, f ′′(θ)∆〉e −vt + vt− 1\nv2\n> f(θ) + 〈∆, f ′′(θ)∆〉\nv2\n[\ne−vt − 1 + tv ( 1− s )\n]\nwith v = √ κρ √ 〈∆, H∆〉 = √κρ and\ns = v|〈∆, f ′(θ)〉| 〈∆, f ′′(θ)∆〉 6\n√ κρ〈f ′(θ), f ′′(θ)−1f ′(θ)〉1/2\n〈∆, f ′′(θ)∆〉1/2 6 √ κρe √ κρd〈f ′(θ), H−1f ′(θ)〉1/2.\nIt is shown in [25] that if s ∈ [0, 1), then\ne−2s/(1−s) + (1− s)2s(1− s)−1 − 1 > 0.\nThis implies that if s 6 1/2, for t = 2 √ κρ−1s\n1−s , f(θ2 + t∆) > f(θ2). Thus,\nd = √ 〈θ − θ∗, H(θ − θ∗)〉 6 t 6 4 √ κρ −1 s 6 4e √ κρd〈f ′(θ), H−1f ′(θ)〉1/2. (45)\nNote that the quantity d appears twice in the result above.\nE.3 Proof of Prop. 1\nIn this section, we prove Prop. 1 using tools from self-concordance analysis. These tools are described in the previous Sections E.1 and E.2. In order to understand the proof, it is preferable to read these sections first.\nWe use the notation t2 = κρε1. We then get d 2 1 def = 〈θ1−θ∗, H(θ1−θ∗)〉 6 (3+ t2)ε1 from Prop. 4.\nProof of Eq. (25). We have, from Prop. 8,\nf(θ3)− f(θ∗) 6 f(θ2)− f(θ∗) + √ ρ‖H1/2(θ3 − θ2)‖\n6 f(θ2)− f(θ∗) + √ 2ρε2e √ κρd1/2. (46)\nMoreover, we have, also from Prop. 8, f(θ2)− f(θ∗) 6 √ ρ‖H1/2f ′′(θ1)−1f ′(θ1)‖, and using Prop. 5, we get f(θ2)− f(θ∗) 6 e √ κρd1 √ ρ‖H−1/2f ′(θ1)‖. (47)\nWe may now use Prop. 10 and use the bound:\n〈f ′(θ1), H−1f ′(θ1)〉 6 ( 1\n2\n√ κρε1 +\n√\n(3 + t2)ε1 + √ κρ √ (3 + t2)ε1ε1 + 1\n4 κρε21\n)2\n6\n(\n1 2 t √ ε1 +\n√\n(3 + t2)ε1 + t √ (3 + t2)ε1 + 1\n4 t2ε1\n)2\n=\n(\n1 2 t+\n√\n(3 + t2) + t √ (3 + t2) + 1 4 t2 )2 ε1 def = 1(t) 2ε1. (48)\nA simple plot shows that for all t > 0,\n1(t) = 1\n2 t+\n√\n(3 + t2) + t √ (3 + t2) + 1\n4 t2 6\n√ 3 + 2t. (49)\nCombining with Eq. (46) and Eq. (47), we get\nf(θ3)− f(θ∗) 6 e √ 3+t2t√ρε1( √ 3 + 2t) + √ 2ρε2e √ 3+t2t/2,\nwhich is exactly Eq. (25).\nProof of Eq. (26) and Eq. (27). For these two inequalities, the starting point is the same. Using Eq. (48) (i.e., the Newton decrement at θ1), we first show that the distances d12 and d2 are bounded. Using f ′′(θ1) < e− √ κρd1H (Prop. 5):\nd212 6 e √ κρd1〈f ′(θ1), H−1f ′(θ1)〉 6 et √ 3+t2 1(t) 2ε1 def = 2(t) 2ε1,\nand thus\nd2 6 d1 + d12 6\n[\n√\n3 + t2 + 2(t) ]√ ε1.\nNow, we can bound the Newton decrement at θ2, using Prop. 9:\n〈f ′(θ2), H−1f ′(θ2)〉 6 κρe2 √ κρd1〈f ′(θ1), H−1f ′(θ1)〉2\n( e √ κρd12 −√κρd12 − 1\n( √ κρd12)2\n)2\n6 κρε21 2(t) 4\n(\net 2(t) − t 2(t)− 1 (t 2(t))2 )2 def = 3(t)κρε 2 1.\nThus, using Prop. 12, if κρe2 √ κρd2〈f ′(θ2), H−1f ′(θ2)〉 6 t4e2t[ √ 3+t2+ 2(t)] 3(t) 6 1 4 , then\nd2 6 4e √ κρd2 √ 3(t)κρε21 6 4e t[ √ 3+t2+ 2(t)] √ 3(t)κρε21 def = 4(t) √ κρε21.\nWe then have\nd3 = √ 〈θ3 − θ∗, H(θ3 − θ∗)〉 6 √ 〈θ3 − θ2, H(θ3 − θ2)〉+ √ 〈θ2 − θ∗, H(θ2 − θ∗)〉 = d23 + d2 6 4(t) √ κρε21 + √ 2ε2e t √ 3+t2/2\nd3 √ κρ 6 4(t)t 2 + √ 2ε2κρe t √ 3+t2/2 6 4(t)t 2 + √ 2u2et √ 3+t2/2\nwhere ε2κρ 6 u 2.\nWe now have two separate paths to obtain Eq. (26) and Eq. (27).\nIf we assume that ε2 is bounded, i.e., with t = 1/16 and u = 1/4, then, one can check computationally that we obtain d3 √ κρ 6 0.41 and thus b = 0.576 below:\nf(θ3)− f(θ∗) 6 e √ κρd3 −√κρd3 − 1\nκρ using Prop. 2,\n6 d23 max α∈[0,0.41 eα − α− 1 α2 6 0.576 ( 4(t) √ κρε21 + √ 2ε2e t √ 3+t2/2 )2\n6 0.576(1 + 1/c) 4(t) 2κρε21 + 2× 0.576(1 + c)et √ 3+t2ε2 6 57κρε21 + 12ε2, with c = 8.1,\nwhich is exactly Eq. (27). If we only assume ε1 bounded, then we have (from the beginning of the proof):\nf(θ3)− f(θ∗) 6 f(θ2)− f(θ∗) + √ ρ‖H1/2(θ3 − θ2)‖\n6 57κρε21 + √ 2ρε2e t √ 3+t2/2 6 57κρε21 + 2 √ ρε2,\nbecause we may use the earlier reasoning with ε3 = 0. This is Eq. (26).\nIn Table 2, we describe the datasets we have used in experiments and where they were downloaded from.\nIn Figure 4, we provide similar results than in Section 4, for two additional datasets, quantum and rcv1, while in Figure 5, Figure 6 and Figure 7, we provide training objectives for all methods. We can make the following observations:\n– For non-sparse datasets, SAG manages to get the smallest training error, confirming the results of [27].\n– For the high-dimensional sparse datasets, constant step-size SGD is performing best (note that as shown in Section 3, it is not converging to the optimal value in general, this happens notably for the alpha dataset).\nReferences\n[1] H. Robbins and S. Monro. A stochastic approximation method. The Annals of Mathematical Statistics, pages 400–407, 1951.\n[2] B. T. Polyak and A. B. Juditsky. Acceleration of stochastic approximation by averaging. SIAM Journal on Control and Optimization, 30(4):838–855, 1992.\n[3] L. Bottou and O. Bousquet. The tradeoffs of large scale learning. In Adv. NIPS, 2008.\n[4] S. Shalev-Shwartz, Y. Singer, and N. Srebro. Pegasos: Primal estimated sub-gradient solver for svm. In Proc. ICML, 2007.\n[5] A. Nemirovski, A. Juditsky, G. Lan, and A. Shapiro. Robust stochastic approximation approach to stochastic programming. SIAM Journal on Optimization, 19(4):1574–1609, 2009.\n[6] F. Bach and E. Moulines. Non-asymptotic analysis of stochastic approximation algorithms for machine learning. In Adv. NIPS, 2011.\n[7] J. Duchi, E. Hazan, and Y. Singer. Adaptive subgradient methods for online learning and stochastic optimization. Journal of Machine Learning Research, 12:2121–2159, 2010.\n[8] A. S. Nemirovsky and D. B. Yudin. Problem complexity and method efficiency in optimization. Wiley & Sons, 1983.\n[9] A. Agarwal, P. L. Bartlett, P. Ravikumar, and M. J. Wainwright. Information-theoretic lower bounds on the oracle complexity of convex optimization. In Adv. NIPS, 2009.\n[10] Y. Nesterov. Introductory lectures on convex optimization: a basic course. Kluwer Academic Publishers, 2004.\n[11] G. Lan. An optimal method for stochastic composite optimization. Mathematical Programming, 133(1-2):365–397, 2012.\n[12] H. J. Kushner and G. G. Yin. Stochastic approximation and recursive algorithms and applications. Springer-Verlag, second edition, 2003.\n[13] C. Gu. Smoothing spline ANOVA models. Springer, 2002.\n[14] R. Aguech, E. Moulines, and P. Priouret. On a perturbation approach for the analysis of stochastic tracking algorithms. SIAM J. Control and Optimization, 39(3):872–899, 2000.\n[15] A. B. Tsybakov. Optimal rates of aggregation. In Proc. COLT, 2003.\n[16] O. Macchi. Adaptive processing: The least mean squares approach with applications in transmission. Wiley West Sussex, 1995.\n[17] S. P. Meyn and R. L. Tweedie. Markov Chains and Stochastic Stability. Cambridge University Press, London, 2009.\n[18] A. Hyvärinen and E. Oja. A fast fixed-point algorithm for independent component analysis. Neural computation, 9(7):1483–1492, 1997.\n[19] N.J. Bershad. Analysis of the normalized lms algorithm with gaussian inputs. IEEE Transactions on Acoustics, Speech and Signal Processing, 34(4):793–806, 1986.\n[20] A. Nedic and D. Bertsekas. Convergence rate of incremental subgradient algorithms. Stochastic Optimization: Algorithms and Applications, pages 263–304, 2000.\n[21] F. Bach. Adaptivity of averaged stochastic gradient descent to local strong convexity for logistic regression. Technical Report 00804431, HAL, 2013.\n[22] V. S. Borkar. Stochastic approximation with two time scales. Systems & Control Letters, 29(5):291–294, 1997.\n[23] A. W. Van der Vaart. Asymptotic statistics, volume 3. Cambridge Univ. press, 2000.\n[24] Y. Nesterov and A. Nemirovskii. Interior-point polynomial algorithms in convex programming. SIAM studies in Applied Mathematics, 1994.\n[25] F. Bach. Self-concordant analysis for logistic regression. Electronic Journal of Statistics, 4:384– 414, 2010.\n[26] E. Hazan and S. Kale. Beyond the regret minimization barrier: an optimal algorithm for stochastic strongly-convex optimization. In Proc. COLT, 2001.\n[27] N. Le Roux, M. Schmidt, and F. Bach. A stochastic gradient method with an exponential convergence rate for strongly-convex optimization with finite training sets. In Adv. NIPS, 2012.\n[28] I. Pinelis. Optimum bounds for the distributions of martingales in banach spaces. The Annals of Probability, 22(4):pp. 1679–1706, 1994.\n[29] S. Boyd and L. Vandenberghe. Convex Optimization. Cambridge University Press, 2003."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2013,
    "abstractText" : "We consider the stochastic approximation problem where a convex function has to be minimized, given only the knowledge of unbiased estimates of its gradients at certain points, a framework which includes machine learning methods based on the minimization of the empirical risk. We focus on problems without strong convexity, for which all previously known algorithms achieve a convergence rate for function values of O(1/ √",
    "creator" : "LaTeX with hyperref package"
  }
}