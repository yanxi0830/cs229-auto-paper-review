{
  "name" : "1706.01026.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Adaptive Multiple-Arm Identification∗",
    "authors" : [ "Jiecao Chen", "Xi Chen", "Leonard N. Stern" ],
    "emails" : [ "jiecchen@umail.iu.edu", "xchen3@stern.nyu.edu", "qzhangcs@indiana.edu", "yzhoucs@indiana.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "We study the problem of selecting K arms with the highest expected rewards in a stochastic n-armed bandit game. This problem has a wide range of applications, e.g., A/B testing, crowdsourcing, simulation optimization. Our goal is to develop a PAC algorithm, which, with probability at least 1 − δ, identifies a set of K arms with the aggregate regret at most . The notion of aggregate regret for multiple-arm identification was first introduced in Zhou et al. [2014] , which is defined as the difference of the averaged expected rewards between the selected set of arms and the best K arms. In contrast to Zhou et al. [2014] that only provides instance-independent sample complexity, we introduce a new hardness parameter for characterizing the difficulty of any given instance. We further develop two algorithms and establish the corresponding sample complexity in terms of this hardness parameter. The derived sample complexity can be significantly smaller than state-of-the-art results for a large class of instances and matches the instance-independent lower bound upto a log( −1) factor in the worst case. We also prove a lower bound result showing that the extra log( −1) is necessary for instance-dependent algorithms using the introduced hardness parameter."
    }, {
      "heading" : "1 Introduction",
      "text" : "Given a set of alternatives with different quality, identifying high quality alternatives via a sequential experiment is an important problem in multi-armed bandit (MAB) literature, which is also known as the “pure-exploration” problem. This problem has a wide range of applications. For example, consider the A/B/C testing problem with multiple website designs, where each candidate design corresponds to an alternative. In order to select high-quality designs, an agent could display different designs to website visitors and measure the attractiveness of an design. The question is: how should the agent adaptively select which design to be displayed next so that the high-quality designs can be quickly and accurately identified? For another example, in crowdsourcing, it is critical to identify high-quality workers from\n∗Author names are listed in alphabetical order. Preliminary version to appear in ICML 2017.\nar X\niv :1\n70 6.\n01 02\n6v 1\n[ cs\na pool of a large number of noisy workers. An effective strategy is testing workers by gold questions, i.e., questions with the known answers provided by domain experts. Since the agent has to pay a fixed monetary reward for each answer from a worker, it is important to implement a cost-effective strategy for to select the top workers with the minimum number of tests. Other applications include simulation optimization, clinical trials, etc.\nMore formally, we assume that there are n alternative arms, where the i-th arm is associated with an unknown reward distribution Di with mean θi. For the ease of illustration, we assume each Di is supported on [0, 1]. In practice, it is easy to satisfy this assumption by a proper scaling. For example, the traffic of a website or the correctness of an answer for a crowd worker (which simply takes the value either 0 or 1), can be scaled to [0, 1]. The mean reward θi characterizes the quality of the i-th alternative. The agent sequentially pulls an arm, and upon each pulling of the i-th arm, the i.i.d. reward from Di is observed. The goal of “top-K arm identification” is to design an adaptive arm pulling strategy so that the top K arms with the largest mean rewards can be identified with the minimum number of trials. In practice, identifying the exact top-K arms usually requires a large number of arm pulls, which could be wasteful. In many applications (e.g., crowdsourcing), it is sufficient to find an “approximate set” of top-K arms. To measure the quality of the selected arms, we adopt the notion of aggregate regret (or regret for short) from Zhou et al. [2014]. In particular, we assume that arms are ordered by their mean θ1 ≥ θ2 ≥ · · · ≥ θn so that the set of the best K arms is {1, . . . ,K}. For the selected arm set T with the size |T | = K, the aggregate regret RT is defined as,\nRT = 1\nK ( K∑ i=1 θi − ∑ i∈T θi ) . (1)\nThe set of arms T with the aggregate regret less than a pre-determined tolerance level (i.e. RT ≤ ) is called -top-K arms. In this paper, we consider the -top-K-arm problem in the “fixed-confidence” setting: given a target confidence level δ > 0, the goal is to find a set of -top-K arms with the probability at least 1− δ. This is also known as the PAC (probably approximately correct) learning setting. We are interested in achieving this goal with as few arm pulls (sample complexity) as possible.\nTo solve this problem, Zhou et al. [2014] proposed the OptMAI algorithm and established its sample complexity Θ ( n 2 ( 1 + ln δ −1\nK\n)) , which is shown to be asymptotically optimal. However, the algorithm\nand the corresponding sample complexity in Zhou et al. [2014] are non-adaptive to the underlying instance. In other words, the algorithm does not utilize the information obtained in known samples to adjust its future sampling strategy; and as a result, the sample complexity only involves the parameters K, n, δ and but is independent of {θi}ni=1. Chen et al. [2014] developed the CLUCB-PAC algorithm and established an instance-dependent sample complexity for a more general class of problems, including the -top-K arm identification problem as one of the key examples. When applying the CLUCB-PAC algorithm to identify -top-K arms, the sample complexity becomes O((logH(0, ) +log δ−1)H(0, )) where\nH(0, ) = ∑n i=1 min{(∆i)\n−2, −2}, ∆i = θi− θK+1 for i ≤ K, ∆i = θK − θi for i > K. The reason why we adopt the notation H(0, ) will be clear from Section 1.1. However, this bound may be improved for the following two reasons. First, intuitively, the hardness parameter H(0, ) is the total number of necessary pulls needed for each arm to identify whether it is among the top-K arms or the rest so that the algorithm can decide whether to accept or reject the arm (when the arm’s mean is -close to the boundary between the top-K arms and the rest arms, it can be either selected or rejected). However, in many cases, even if an arm’s mean is -far from the boundary, we may still be vague about the comparison between its mean and the boundary, i.e. either selecting or rejecting the arm satisfies the aggregate regret bound. This may lead to fewer number of pulls and a smaller hardness parameter for the same instance. Second, the worst-case sample complexity for CLUCB-PAC becomes O((logn + log −1 + log δ−1)n −2). When δ is a constant, this bound is logn times more than the best non-adaptive algorithm in Zhou et al. [2014].\nIn this paper, we explore towards the above two directions and introduce new instance-sensitive algorithms for the problem of identifying -top-K arms. These algorithms significantly improve the sample complexity by CLUCB-PAC for many common instances and almost match the best non-adaptive algorithm in the worst case.\nSpecifically, we first introduce a new parameter H to characterize the hardness of a given instance. This new hardness parameter H could be smaller than the hardness parameter H̃ used in the literature, in many natural instances. For example, we show in Lemma 1 that when {θi}ni=1 are sampled from a continuous distribution with bounded probability density function (which is a common assumption in Bayesian MAB and natural for many applications), for K = γn with γ ≤ 0.5, our hardness parameter H = O(n/ √ ) while H̃ = Ω(n/ ).\nUsing this new hardness parameter H, we first propose an easy-to-implement algorithm– AdaptiveTopK and relate its sample complexity to H. In Theorem 1, we show that AdaptiveTopK uses\nO (( log log( −1) + logn+ log δ−1 ) H )\nto identify -top-K arms with probability at least 1−δ. Note that this bound has a similar form as the one in Chen et al. [2014], but as mentioned above, we have an √ -factor improvement in the hardness parameter for those instances where Lemma 1 applies.\nWe then propose the second algorithm (ImprovedTopK) with even less sample complexity, which removes the logn factor in the sample complexity. In Theroem 2, we show that the algorithm uses\nO (( log −1 + log δ−1 ) H )\npulls to identify -top-K arms with probability 1 − δ. Since H is always Ω(n/ 2) (which will be clear when the H is defined in Section 1.1), the worst-case sample complexity of ImprovedTopK matches the best instance-independent shown in Zhou et al. [2014] up to an extra log( −1) factor (for constant δ). We are also able to show that this extra log( −1) factor is a necessary expense by being instance-adaptive (Theorem 3). It is also noteworthy that as a by-product of establishing ImprovedTopK, we developed an algorithm that approximately identifies the k-th best arm, which may be of independent interest. Please see Algorithm 2 for details.\nWe are now ready to introduce our new hardness parameters and summarize the main results in\ntechnical details."
    }, {
      "heading" : "1.1 Summary of Main Results",
      "text" : "Following the existing literature (see, e.g., Bubeck et al. [2013]), we first define the gap of the i-th arm\n∆i(K) = θi − θK+1 if i ≤ KθK − θi if i ≥ K + 1. (2) Note that when K = 1, ∆i(K) becomes θ1 − θi for all i ≥ 2 and ∆1(K) = θ1 − θ2. When K is clear from the context, we simply use ∆i for ∆i(K). One commonly used hardness parameter for quantifying the sample complexity in the existing literature (see, e.g., Bubeck et al. [2013], Karnin et al. [2013]) is\nH̃ , ∑n i=1 ∆ −2 i . If there is an extremely small gap ∆i, the value of H̃ and thus the corresponding sample complexity can be super large. This hardness parameter is natural when the goal is to identify the exact top-K arms, where a sufficient gap between an arm and the boundary (i.e. θK and θK+1) is necessary. However, in many applications (e.g., finding high-quality workers in crowdsourcing), it is an overkill to select the exact top-K arms. For example, if all the top-M arms with M > K have very close means, then any subset of them of size K forms an -top-K set in terms of the aggregate regret in (1). Therefore, to quantify the sample complexity when the metric is the aggregate regret, we need to construct a new hardness parameter.\nGiven K and an error bound , let us define t = t( ,K) to be the largest t ∈ {0, 1, 2, . . . ,K − 1} such\nthat\n∆K−t · t ≤ K and ∆K+t+1 · t ≤ K . (3)\nNote that ∆K−t · t = (θK−t − θK+1) · t upper-bounds the total gap of the t worst arms in the top K arms and ∆K+t+1 · t = (θK − θK+t+1) · t upper-bounds the total gap of the t best arms in the non-top-K arms. Intuitively, the definition in (3) means that we can tolerate exchanging at most t best arms in the non-top-K arms with the t worst arms in the top-K arms.\nGiven t = t( ,K), we define\nΨt = min(∆K−t,∆K+t+1), (4)\nand\nΨ t = max( ,Ψt). (5)\nWe now introduce the following parameter to characterize the hardness of a given instance,\nH = H(t, ) = n∑ i=1 min{(∆i)−2, (Ψ t)−2}. (6)\nIt is worthwhile to note that in this new definition of hardness parameter, no matter how small the gap ∆i is, since Ψ t ≥ , we always have H(t, ) ≤ n −2. We also note that since Ψt is non-decreasing in t, H(t, ) is non-increasing in t.\nOur first result is an easy-to-implement algorithm (see Algorithm 1) that identifies -top-K arms with\nsample complexity related to H(t, ).\nTheorem 1 There is an algorithm that computes -top-K arms with probability at least (1 − δ), and pulls the arms at most O (( log log −1 + logn+ log δ−1 ) H(t, ) ) times.\nWe also develop a more sophisticated algorithm (see Algorithm 5) with an improved sample complex-\nity.\nTheorem 2 There is an algorithm that computes -top-K arms with probability at least (1 − δ), and pulls the arms at most O (( log −1 + log δ−1 ) H(t, ) ) times.\nSince Ψ t ≥ andH(t, ) ≤ n −2, the worst-case sample complexity by Theorem 2 isO ( n 2 ( log −1 + log δ−1 )) .\nWhile the asymptotically optimal instance-independent sample complexity is Θ ( n 2 ( 1 + ln δ −1\nK\n)) , we\nshow that the log −1 factor in Theorem 2 is necessary for instance-dependent algorithms using H(t, ) as a hardness parameter. In particular, we prove the following lower-bound result.\nTheorem 3 For any n,K such that n = 2K, and any = Ω(n−1), there exists an instance on n arms so that H(t, ) = Θ(n) and it requires Ω(n log −1) pulls to identify a set of -top-K arms with probability at least 0.9.\nNote that since H(t, ) = Θ(n) in our lower bound instances, our Theorem 3 shows that the sample complexity has to be at least Ω(H(t, ) log −1) in these instances. In other words, our lower bound result shows that for any instance-dependent algorithm, and any = Ω(n−1), there exists an instance where sample complexity has to be Ω(H(t, ) log −1). While Theorem 3 shows the necessity of the log −1 factor in Theorem 2, it is not a lower bound for every instance of the problem."
    }, {
      "heading" : "1.2 Review of and Comparison with Related Works",
      "text" : "The problem of identifying the single best arm (i.e. the top-K arms with K = 1), has been studied extensively [Even-Dar et al., 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample\ncomplexity of O (∑n\ni=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1)\n) . In the worst case, this bound be-\ncomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al.\n[2006]. When K = 1, we have t( ,K) = 0 and thus H(t, ) = H(0, ) = Θ (∑n i=2 max{∆i, } −2). Therefore,\nthe sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013].\nFor the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n2)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper.\nKalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints. Audibert et al. [2010] and Bubeck et al. [2013] considered expected aggregate regret (i.e. 1 K (∑K i=1 θi −E (∑ i∈T θi )) , where the expectation is taken over the randomness of the algorithm. Note that this notion of expected aggregate regret is a weaker objective than the aggregate regret.\nMoreover, there are some other recent works studying the problem of best-arm identification in\ndifferent setups, e.g., linear contextual bandit [Soare et al., 2014], batch arm pulls [Jun et al., 2016].\nFor our -top-K arm problem, the state-of-the-art instance-dependent sample complexity was given by Chen et al. [2014] (see Section B.2 in Appendix of their paper). More specifically, Chen et al. [2014] proposed CLUCB-PAC algorithms that finds -top-K arms with probability at least (1− δ) using O (( log δ−1 + logH(0, ) ) H(0, ) ) pulls. Since we always have H(0, ) ≥ H(t, ) ≥ Ω(n) and H(0, ) ≥ (Ψ t) −2, our Theorem 1 is not worse than the bound in Chen et al. [2014]. Indeed, in many common settings, H(t, ) can be much smaller than H(0, ) so that Theorem 1 (and therefore Theorem 2) requires\nmuch less sample complexity. We explain this argument in more details as follows.\nIn many real-world applications, it is common to assume the arms θi are sampled from a prior distribution D over [0, 1] with cumulative distribution function FD(θ). In fact, this is the most fundamental assumption in Bayesian multi-armed bandit literature (e.g., best-arm identification in Bayesian setup Russo [2016]). In crowdsourcing applications, Chen et al. [2015] and Abbasi-Yadkori et al. [2015] also made this assumption for modeling workers’ accuracy, which correspond to the expected rewards. Under this assumption, it is natural to let θi be the (1− in ) quantile of the distribution D, i.e. F −1 D (1− i n ). If the prior distribution D’s probability density function fD = dFDdθ has bounded value (a few common examples include uniform distribution over [0, 1], Beta distribution, or the truncated Gaussian distribution), the arms’ mean rewards {θi}ni=1 can be characterized by the following property with c = O(1).\nDefinition 1 We call a set of n arms θ1 ≥ θ2 ≥ · · · ≥ θn c-spread (for some c ≥ 1) if for all i, j ∈ [n] we have |θi − θj | ∈ [ |i−j| cn , c|i−j| n ] .\nThe following lemma upper-bounds H(t, ) for O(1)-spread arms, and shows the improvement of our\nalgorithms compared to Chen et al. [2014] on O(1)-spread arms.\nLemma 1 Given a set of n c-spread arms, let K = γn ≤ n 2 . When c = O(1) and γ = Ω(1), we have H(t, ) = O(n/ √ ). In contrast, H(0, ) = Ω(n/ ) for O(1)-spread arms and every K ∈ [n].\nProof : Given a set of n c-spread arms, we have t+1 cn ≤ ∆K−t ≤ c(t+1)n and t+1 cn ≤ ∆K+t+1 ≤ c(t+1)n . Therefore t = t( ,K) ∈ [ √ Kn /c, √ cKn − 1] = [ √ γ /cn,\n√ cγ n − 1], and Ψt ≥ t+1cn ≥\n√ γ /c3.\nTherefore\nH(t, ) ≤ O(1) n∑ i=1 min { ci n ,Ψt }−2 ≤ O ( t ·Ψ−2t + n∑ i=t+1 ( i cn )−2)\n= O ( t ·Ψ−2t + c2n2/t ) = O( √ cγ n) · c 3\nγ +O ( c2n√ γ /c ) = O(c3.5γ−0.5) · n√ .\nOne the other hand, we have\nH(0, ) ≥ n−K∑ i=1 min{∆−2i+K , −2} ≥ n/2∑ i=1 min { n2 c2i2 , −2 } = [ n/c]∑ i=1 −2 + n/2∑ [ n/c]+1 n2 c2i2 = Ω ( n c ) .\n2 An Instance Dependent Algorithm for -top-K Arms\nIn this section, we show Theorem 1 by proving the following theorem.\nTheorem 4 Algorithm 1 computes -top-K arms with probability at least 1 − δ, and pulls the arms at most\nO (( log log(∆ t)\n−1 + logn+ log δ−1 ) n∑ i=1 min{(∆i)−2, (∆ t)−2} ) times, where t ∈ {0, 1, 2, . . . ,K−1} is the largest integer satisfying ∆K−t·t ≤ K , and ∆ t = max( ,∆K−t).\nNote that Theorem 4 implies Theorem 1 because of the following reasons: 1) t defined in Theorem 4 is always at least t( ,K) defined in (3); and 2) ∆ t ≥ Ψ t ≥ . Algorithm 1 is similar to the accept-reject types of algorithms in e.g. Bubeck et al. [2013]. The algorithm goes by rounds for r = 1, 2, 3, . . . , and keeps at set of undecided arms Sr ⊆ [n] at Round r.\nAlgorithm 1: AdaptiveTopK(n, ,K, δ)\nInput: n: number of arms; K and : parameters in -top-K arms; δ: error probability Output: -top-K arms\n1 Let r denote the current round, initialized to be 0. Let Sr ⊆ [n] denote the set of candidate arms at round r. S1 is initialized to be [n]. Set A,B ← ∅ 2 ∆← 2−r 3 while 2 ·∆ · (K − |A|) > K do 4 r ← r + 1 5 Pull each arm in Sr by ∆ −2 ln 2nr 2 δ times, and let θ̃ r i be the empirical-mean 6 Define θ̃a(Sr) and θ̃b(Sr) be the (K − |A|+ 1)th and (K − |A|)th largest empirical-means in Sr, and define\n∆̃i(Sr) = max ( θ̃ri − θ̃a(Sr), θ̃b(Sr)− θ̃ri ) (7)\n7 while maxi∈Sr ∆̃i(Sr) > 2 ·∆ do 8 x← arg maxi∈Sr ∆̃i(Sr) 9 if θ̃rx > θ̃a(Sr) then\n10 A← A ∪ {x} 11 else 12 B ← B ∪ {x} 13 Sr ← Sr\\{x} 14 Sr+1 ← Sr 15 ∆← 2−r 16 Set A′ as the (K − |A|) arms with the largest empirical-means in Sr+1 17 return A ∪A′\nAll other arms (in [n] \\ Sr) are either accepted (in A) or rejected (in B). At each round, all undecided arms are pulled by equal number of times. This number is designed in a way such that the event E , defined to be the empirical means of all arms within a small neighborhood of their true means, happens with probability 1 − δ (See Definition 2 and Claim 1). Note that E is defined for all rounds and the length of the neighborhood becomes smaller as the algorithm proceeds. We are able to prove that when E happens, the algorithm returns the desired set of -top-K armsand has small query complexity. To prove the correctness of the algorithm, we first show that when conditioning on E , the algorithm always accepts a top-K arm in A (Lemma 3) and rejects a non-top-K arm in B (Lemma 4). The key observation here is that our algorithm never introduces any regret due to arms in A and B. We then use the key Lemma 5 to upper bound the regret that may be introduced due to the remaining arms. Once this upper bound is not more than K (i.e. the total budget for regret), we can choose the remaining (K − |A|) arms without further samplings. Details about this analysis can be found in Section 2.1. We analyze of the query complexity of our algorithm in Section 2.2. We establish data-dependent bound by relating the number of pulls to each arms to both their ∆i’s and ∆K−t (Lemma 6 and Lemma 7)."
    }, {
      "heading" : "2.1 Correctness of Algorithm 1",
      "text" : "We first define an event E which we will condition on in the rest of the analysis.\nDefinition 2 Let E be the event that |θ̃ri − θi| < 2−r for all r ≥ 1 and i ∈ Sr.\nClaim 1 Pr[E ] ≥ 1− δ.\nProof : By Hoeffding’s inequality, we can show that for any fixed r and i, Pr [ |θ̃ri − θi| ≥ 2−r ] ≤ 2( δ 2nr2 )2 ≤ δ 2nr2 . By a union bound,\nPr[¬E ] ≤ ∞∑ r=1 ∑ i∈Sr Pr [ |θ̃ri − θi| ≥ 2−r ] ≤ ∞∑ r=1 δ 2r2 ≤ δ.\nThe following lemma will be a very useful tool for our analysis.\nLemma 2 Given µ1 ≥ . . . ≥ µn and ∆ > 0, assuming that |µ̃i − µi| ≤ ∆ for all i ∈ [n], and letting y1 ≥ . . . ≥ yn be the sorted version of µ̃1, . . . , µ̃n, we have |yi − µi| ≤ ∆ for all i ∈ [n].\nProof : Suppose yi > µi + ∆ for any i ∈ [n], we must have y1 ≥ . . . ≥ yi > µi + ∆. On the other hand, there can not be more than i− 1 numbers among µ̃1, . . . , µ̃n (the only candidates are µ̃1, . . . , µ̃i−1) that are larger than µi + ∆. A contradition. We thus have yi ≤ µi + ∆ for all i ∈ [n]. Similarly, we can show that yi ≥ µi −∆ for all i ∈ [n].\nWe now prove that conditioned on E , the algorithm always accepts a desired arm in A.\nLemma 3 Conditioned on E, during the run of Algorithm 1, A ⊆ {1, 2, . . . ,K}, that is, all arms in A are among the top-K arms.\nProof : We prove by induction on the round r. The lemma holds trivially when r = 0 (A = ∅). Now fix a round r ≥ 1, and let x be the arm that is added to A at Line 10 of Algorithm 1. By the induction hypothesis, assuming that before round r all arms in A are in [K], our goal is to show x ∈ [K].\nBy the inner while condition we have\nθ̃rx − θ̃a(Sr) > 2 · 2−r. (8)\nFor any m ∈ [K−|A|+1, |Sr|], let j be the arm of the m-th largest true-mean in Sr, and j′ be the arm of the m-th largest empirical-mean in Sr. Since m ≥ K − |A|+ 1, we must have j 6∈ [K] and θ̃rj′ ≤ θ̃a(Sr). By Lemma 2 we also have |θ̃rj′ − θj | < 2−r. We thus have\nθx > θ̃ r x − 2−r by (8) > θ̃a(Sr) + 2 −r > θ̃rj′ + 2 −r > θj .\nThat is, at least |Sr| − K + |A| arms in Sr have true-means smaller than arm x. On the other hand, |Sr| −K + |A| arms in Sr are not in [K]. We therefore conclude that x must be in [K].\nBy symmetry, we also have the following lemma, stating that when E happens, the algorithm always rejects a non-top-K arm in B. We omit the proof because it is almost identical to the proof of Lemma 3.\nLemma 4 Conditioning on E, during the run of Algorithm 1, B ⊆ {K + 1,K + 2, . . . , n}.\nLemma 5 Conditioned on E, for all rounds r and i ∈ Sr, it holds that\nθ̃ri − θ̃a(Sr) > θi − θK+1 − 2 · 2−r and θ̃b(Sr)− θ̃ri > θK − θi − 2 · 2−r.\nConsequently, we have ∆̃i(Sr) ≥ ∆i − 2 · 2−r for all rounds r and i ∈ Sr.\nProof : We look at a particular round r. Let j be the arm with (K − |A| + 1)-th largest true-mean in Sr. Since by Lemma 3 we have A ⊆ [K] , it holds that j ≥ K + 1. By Lemma 2, we also have\n|θ̃a(Sr)− θj | < 2−r. We therefore have for any i ∈ Sr\nθ̃ri − θ̃a(Sr) > θi − θj − 2 · 2−r ≥ θi − θK+1 − 2 · 2−r. (9)\nWith a similar argument (by symmetry and using Lemma 4), we can show that\nθ̃b(Sr)− θ̃ri > θK − θi − 2 · 2−r. (10)\nCombining (9), (10) and the definitions of ∆̃i(Sr) and ∆i, the lemma follows.\nNow we are ready to prove the correctness of Theorem 4. By Lemma 3, all the arms that we add into\nthe set A at Line 10 are in [K]. The rest of our job is to look at the arms in the set A′.\nWhen the algorithm exits the outer while loop (at round r = r∗) and arrives at Line 16, we have by\nthe condition of the outer while loop that\n2 · 2−r ∗ · (K − |A|) ≤ K. (11)\nLet m = K − |A|, and C = [K]\\A = {i1, i2, . . . , im} where i1 < i2 < . . . < im. Let θ̃j1 ≥ θ̃j2 ≥ . . . ≥ θ̃jm be the (K − |A|) empirical-means of the arms that we pick at Line 16. Note that it is not necessary that j1 < . . . < jm. By Lemma 2 and E , for any s ∈ [K−|A|], we have |θ̃js−θis | ≤ 2−r ∗ and |θ̃js−θjs | ≤ 2−r ∗ . By the triangle inequality, it holds that\n|θjs − θis | ≤ 2 · 2 −r∗ . (12)\nWe thus can bound the error introduced by arms in A′ by\n∑ i∈[K] θi − ∑ i∈A∪A′ θi = ∑ i∈C θi − ∑ i∈A′ θi by (12) ≤ 2 · 2−r ∗ · (K − |A|) by (11) ≤ K."
    }, {
      "heading" : "2.2 Query Complexity of Algorithm 1",
      "text" : "Recall (in the statement of Theorem 4) that t ∈ {0, 1, 2, . . . ,K − 1} is the largest integer satisfying\n∆K−t · t ≤ K. (13)\nLemma 6 If the algorithm exits the outer while loop at round r = r∗, then we must have\n8 · 2−r ∗ ≥ ∆K−t. (14)\nProof : We show that once 2−r < ∆K−t/4, the algorithm will exit the outer while loop after executing round r. So any valid round r must satisfy 2−r ≥ ∆K−t/8 and the lemma holds trivially. To this end, assume now we are in round r and 2−r < ∆K−t/4, we have that for any i ∈ Sr and i ≤ K − t,\n∆̃i(Sr) ≥ θ̃ri − θ̃a(Sr) > θi − θK+1 − 2 · 2−r (Lemma 5)\n= ∆i − 2 · 2−r ≥ ∆K−t − 2 · 2−r (since i ≤ K − t) > 2 · 2−r.\nThus the condition of the inner while loop is satisfied, which means that all arms i with i ≤ K − t will be added into A. Therefore we have |A| ≥ K− t when the algorithm exits the inner while loop. We then\nhave\n2 · 2−r · (K − |A|) ≤ 2 · 2−r · t < 1 2 ∆K−t · t by (13) ≤ K/2 ≤ K,\nso the algorithm exits the outter loop.\nLemma 7 For any arm i, let ri be the round where arm i is removed from the candidate set if this ever happens; otherwise set ri = r ∗. We must have\n8 · 2−ri ≥ ∆i. (15)\nProof : Suppose for contradiction that 8 · 2−ri < ∆i. By Lemma 5, we have\n∆̃i(Sri−1) ≥ ∆i − 2 · 2 −(ri−1) > 8 · 2−ri − 2 · 2−(ri−1) = 2 · 2−(ri−1).\nThis means that arm i would have been added either to A or B at or before round (ri − 1), which contradicts to the fact that i ∈ Sri .\nWith Lemma 6 and Lemma 7, we are ready to analyze the query complexity of the algorithm in\nTheorem 4. We can bound the number of pulls on each arm i by at most\nri∑ j=1 22j · log(2nj2/δ) ≤ O ( log(ri · nδ−1) · 22ri ) . (16)\nNow let us upper-bound the RHS of (16). First, if i ∈ A, then by (15) we know that ri ≤ log2 ∆ −1 i +O(1). Second, by (14) we have ri ≤ r∗ ≤ log2 ∆ −1 K−t +O(1). Third, since 2\n−r∗ ≥ /2 (otherwise the algorithm will exit the outer while loop), we have ri ≤ r∗ ≤ log2 −1 + O(1). To summarize, we have ri ≤ log2 min{∆ −1 i ,∆ −1 K−t, −1} + O(1) = log2 min{∆ −1 i , (∆ t) −1} (recall that ∆ t = max{ ,∆K−t}). We thus can upper-bound the RHS of (16) by\nO ( (log log(∆ t) −1 + logn+ log δ−1) ·min{(∆i)−2, (∆ t)−2} ) .\nThe total cost is a summation over all n arms.\n3 An Improved Algorithm for -top-K Arms\nIn this section, we present the improved algorithm for identifying the -top-K arms and prove that the algorithm succeeds with probability 1 − δ with query complexity O((log −1 + log δ−1)H(t, )) (Theorem 6). This algorithm reduces the logn factor in the query complexity of Algorithm 1 to log −1 and is substantially more complex than Algorithm 1.\nThe main procedure of the improved algorithm is described in Algorithm 5. For this algorithm, we that assume K ≤ n/2. For the case where K > n/2, we can apply the same algorithm to identify the -bottom-(n−K) arms and report the rest arms to be the -top-K arms. Similarly to Algorithm 1, the improved algorithm also goes by rounds and keeps a set A of accepted arms, a set B of rejected arms, and a set S of undecided arms. However, we can no longer guarantee that all the arms accepted in A and rejected in B are correctly classified – otherwise, we need to apply a union bound over all arms and this would incur an extra logn factor. To solve this problem, we have to allow a few number of mistakes. We now illustrate the high-level idea as follows.\nGiven a set of n arms {θ1 ≥ θ2 ≥ · · · ≥ θn}, if we pull every arm c · ∆−2.8n(log −1 + log δ−1) times for some large enough constant c, and discard the .1n arms with the lowest empirical means, it can be shown by standard probabilistic method that at most 2K top-K arms may be mistakenly discarded\nAlgorithm 2: EstKthArm(S,K, τ, φ, δ)\nInput: S: set of arms; K: top-K; τ : an relative error; δ: error probability; φ: an additive error Output: an arm whose true-mean is close to the K-th largest true-mean\n1 set R1 ← S, r ← 1 2 set τ1 ← τ4 , φ1 ← φ 4 , δ1 ← δ 8 3 while |Rr| > K do 4 for each i ∈ Rr, pull 8φ2r ln( 1 τrδrδ ) times; let θ̃ri be its empirical-mean 5 let Rr+1 be the set of max{K, d|Rr|/2e} arms that have the largest empirical-means among Rr 6 set τr+1 ← 3τr/4, φr+1 ← 3φr/4, δr+1 ← δr/2 7 r ← r + 1 8 set r∗ ← r 9 set p̃1 ≥ p̃2 ≥ . . . ≥ p̃|Rr∗ | be the sorted version of {θ̃r ∗\ni | i ∈ Rr∗} 10 uniformly sample an arm from {i ∈ Rr∗ | θ̃r ∗ i ≤ p̃(1−τ/2)K} and output it\nwith probability 1 − δ. Note that the constants .8 and .1 are arbitrary as long as K/n < .8 < 1 − .1. This procedure is described in Algorithm 2 and analyzed in Lemma 11. Similarly, if .2n < K and we pull every arm c ·∆−2.2n(log −1 +log δ−1) times for some large enough constant c, and accept the .1n arms with the highest empirical means, with probability 1 − δ, at most 2K non-top-K arms may be mistakenly accepted. This procedure is described in Algorithm 2 and analyzed in Lemma 12. Algorithm 5 uses these two subroutines to repeatedly accept and reject arms, and makes sure that with high probability, the total number of mistakenly accepted or rejected arms is at most O( 2K) (Lemma 13). These mistakes lead to O( 2K) total regret – negligible when compared to our K budget. In this way, the improved algorithm keeps accepting and rejecting arms as Algorithm 1 does, while introducing negligible regret (while Algorithm 1 introduces none). The termination condition is also similar to Algorithm 1 in Line 12 of Algorithm 5 so that the query complexity is related to H(t, ) rather than H(0, ).\nHowever, there is an extra termination condition and many extra efforts in the improved algorithm because of the few allowed mistakes. For our adaptive algorithm, in order to estimate ∆.8n and ∆.2n (and other gaps as the algorithm proceeds), we need to estimate θK , θ.8n and θ.2n with O(φ −2(log −1+log δ−1) pulls, where φ−2 = Ω(min{∆.8n,∆.2n}). However, using these many pulls, we can only estimate the mean of an arm that is close to the target index, rather than with the exact index. This procedure is presented in Section 3.1 and Algorithm 2. We use this subroutine to estimate θ.8n as θ +, θ.2n as θ − in Algorithm 5, and use two estimations θ+K and θ − K to sandwich θK . (The precise statement can be found in Lemma 14.) When θ+K and θ − K are close to each other, we can use θ − − θ−K and θ + K − θ + as estimations of ∆.2n and ∆.8n; otherwise, it means that there is a big gap in the neighborhood of the K-th arm, and we can easily separate the top-K arms from the rest using the subprocedure EpsSplit described in Lemma 9 and quit the procedure (in Line 14 of the algorithm).\nWe now dive into the details of the improved algorithm. We start by introducing the useful subrou-\ntines.\n3.1 Estimating the K-th Largest Arm\nIn the subsection we present an algorithm that try to find an arm whose true-mean is close to the K-th largest true-mean, which will be used as a subroutine in our improved algorithm for -top-K arms.\nTheorem 5 For a set of arms S = {θ1 ≥ . . . ≥ θ|S|}, there is an algorithm, denoted by EstKthArm(S,K, τ, φ, δ), that outputs an arm i such that θi ∈ [θK − φ, θ(1−τ)K + φ] with probability at least 1 − δ, using O ( |S| φ2 · (log τ−1 + log δ−1) ) pulls in total.\nWe described the algorithm in Algorithm 2. In the high level, the algorithm works in rounds, and in each round it tries to find the top half arms in the current set, and discard the rest. We continue until there are at most K arms left, and then we choose the output arm randomly from those with the lowest empirical-means in the remaining arms. We are going to prove the following theorem."
    }, {
      "heading" : "3.1.1 Correctness of Algorithm 2",
      "text" : "The following lemma is the key to the proof of correctness.\nLemma 8 With probability at least 1− δ/4, we have that\n|{i ∈ Rr∗ | θi < θK − φ}| ≤ τδK/4.\nProof : We first define a few notations. • Hr = {i ∈ S | θi ≥ θK − ∑ `∈[r] φ`}.\n• Lr = S\\Hr. • kr = (1− ∑ `∈[r] τ`δ/4)K. • For any i ∈ [n] and round r, let Xri = 1{|θ̃ri − θi| ≥ φr/2} where θ̃ri is the empirical-mean of arm i at round r (after been pulled by 8\nφ2r ln( 1 τrδrδ ) times at Line 4).\n• R′r ⊆ Rr: the top kr−1 arms in Rr with the largest true-means. • Ar = {i ∈ R′r | Xi = 0}. Ar ⊆ R′r ⊆ Rr.\n• Cr = {i ∈ Lr ∩Rr | Xi = 1}. Cr ⊆ Rr.\nWe define the following event. Intuitively, it tells that most of the arms we put in Rr for the next\nround processing fall into the set Hr of high true-means.\nEr(r ≥ 2) : |Hr−1 ∩Rr| ≤ kr−1,\nand we define E1 to be an always true event. We will prove by induction the following inequality.\nPr[Er+1 | ¬Er] ≤ δr for each r ≥ 1. (17)\nWe focus a particular round r ≥ 1. Define event EA : |Ar| ≤ kr, and event EC : |Cr| ≤ |Rr+1| − kr.\nClaim 2 Pr[EA | ¬Er] ≤ δr/4.\nProof : By a Hoeffding’s inequality, we have for each i ∈ Rr, we have Pr[Xri = 1] ≤ τrδrδ/16. We bound the probability the EA happens by a Markov’s inequality.\nPr[EA | ¬Er] = Pr[|Ar| ≤ kr | ¬Er] =Pr[|R′r| − |Ar| ≥ kr−1 − kr | ¬Er] ≤ E [∑ i∈R′r Xi | ¬Er] ] kr−1 − kr = E [∑ i∈R′r Xi ] kr−1 − kr\n≤τrδrδkr−1/16 τrδK/4 ≤ τrδrδK/16 τrδK/4\n=δr/4.\nClaim 3 Pr[EC | ¬EA,¬Er] ≤ 3δr/4.\nProof :\nPr[EC | ¬EA,¬Er] =Pr[|Cr| ≤ |Rr+1| − kr | ¬EA,¬Er]\n≤E[|Cr| | ¬EA,¬Er]|Rr+1| − kr (Markov’s inequality) (18) ≤ (|Rr| − kr) · τrδδr/16|Rr+1| − kr (19) ≤ (2 |Rr+1| − kr) · τrδδr/16|Rr+1| − kr (20) ≤3δr/4, (21)\nwhere (18) to (19) is due to the fact that conditioned on ¬Er, we have\n|Cr| ≤ |Lr ∩Rr| ≤ |Lr−1 ∩Rr| = |Rr| − |Hr−1 ∩Rr| ¬Er ≤ |Rr| − kr−1 ≤ |Rr| − kr.\nAnd (20) to (21) is due to the following: If |Rr+1| ≥ 2K, then since kr ≤ K we have 2|Rr+1|−kr |Rr+1|−kr ≤ 3. Otherwise if |Rr+1| < 2K, by the definition of kr, we have\n|Rr+1| − kr > K − kr = ∑\ni∈[r−1]\nτiδ/4 ≥ τrδK/3.\nOn the other hand, we have 2 |Rr+1| − kr ≤ 4K. We thus have (21) ≤ 3δr/4.\nClaim 4 Conditioned on EC ,¬EA,¬Er, we have |Hr ∩Rr+1| ≥ kr, or, Pr[Er+1 | EC ,¬EA,¬Er] = 0.\nProof : First, conditioned on ¬Er, we have\nAr ⊆ R′r ⊆ Hr−1. (22)\nWe prove the claim by analyzing two cases.\n1. ((Lr ∩Rr)\\Cr) ∩Rr+1 = ∅. We thus have (Lr ∩Rr+1) ⊆ Cr, which implies\n|Hr ∩Rr+1| ≥ |Rr+1| − |Lr ∩Rr+1| ≥ |Rr+1| − |Cr| EC ≥ kr.\n2. ((Lr ∩Rr)\\Cr) ∩Rr+1 6= ∅. We can show that\nAr ⊆ Rr+1 (23)\nIndeed, for any j ∈ Ar(⊆ Hr−1 by (22)) and any i ∈ (Lr ∩ Rr)\\Cr, we have θ̃j > θ̃i, since θj ≥ θK − ∑ `∈[r−1] φ`, while θi < θK − ∑ `∈[r] φ` (by the definition of Lr). Thus conditioned on ¬EA, (22) and (23) we have\n|Hr ∩Rr+1| ≥ |Hr−1 ∩Rr+1| ≥ |Ar| ≥ kr.\nNow we try to prove (17).\nPr[Er+1 | ¬Er] =Pr[EA | ¬Er] + Pr[EC | ¬EA,¬Er] + Pr[Er+1 | ¬EA,¬Er]\n≤δ/4 + 3δ/4 + 0 (Claim 2, Claim 3 and Claim 4)\n=δ.\nUsing (17) and summing over all ` ∈ [r − 1], we have Pr[Er] ≤ ∑ `∈[r−1] δi < δ/4 for any r ≥ 2. In other words, with probability at least 1 − δ/4, we have for any r ≤ r∗, |Hr−1 ∩Rr| ≥ kr−1, or |Lr−1 ∩Rr| ≤ K − kr−1 ≤ 1− (1− τδK/4) = τδK/4, which gives the lemma.\nNow we are ready to prove the correctness of Theorem 5. Let • P = {i ∈ Rr∗ | θ̃r ∗ i > p̃(1−τ/2)K}.\n• Q = Rr∗\\P . • L∗ = {i ∈ Rr∗ | θi < θK − φ}. • For each i ∈ Rr∗ , let Yi = 1{|θ̃r ∗ i − θi| > φ/2}.\nClaim 5 Pr[θa ≥ θK − φ] ≥ 1− 3δ/4.\nProof : At Line 10 of Algorithm 2, we randomly sampled an arm a from Q. Since |Q| ≥ τK and Pr[|L∗| < τδK/4] > 1− δ/4 (by Lemma 8), we have\nPr[a ∈ L∗] ≤ Pr[|L∗| ≥ τδK/4] + Pr[a ∈ L∗ | |L∗| < τδK/4] ≤ δ/4 + τδK/4 τK/2 = 3δ/4. (24)\nClaim 6 Pr[θa ≤ θ(1−τ)K + φ] ≥ 1− δ/4. Proof : We first show that if Ya = 0 and ∑ i∈P Yi ≤ τK/2, then θa ≤ θ(1−τ)K +φ. Let P0 = {i ∈ P | Yi =\n0}. By definition of P and the assumption that ∑ i∈P Yi ≤ τK/2, we have |P0| ≥ |P |−τK/2 ≥ (1−τ)K. Let b be the arm in P0 that has the minimum true-mean, then we must have\nθb ≤ θ|P0| ≤ θ(1−τ)K . (25)\nSince a ∈ Q and b ∈ P , we have θ̃a ≤ θ̃b, which, together with the facts that Ya = Yb = 0 and (25), gives\nθa ≤ θb + φ ≤ θ(1−τ)K + φ.\nWe now bound the probabilities that the two conditions hold. By a Hoeffding’s inequality, we have Pr[Yi = 1] ≤ τδ/16 for any i ∈ Rr∗ . By a Markov’s inequality and the fact that P ⊆ Rr∗ (by definition), we have\nPr [∑ i∈P Yi > τK/2 ] ≤ Pr  ∑ i∈Rr∗ Yi > τK/2  ≤ E [∑ i∈Rr∗ Yi ] τK/2 ≤ τδK/16 τK/2 = δ/8.\nWe thus have Pr [ (Ya = 0) ∧ ( ∑ i∈P Yi ≤ τK/2) ] ≥ 1− δ/16− δ/8 ≥ 1− δ/4.\nThe correctness of Theorem 5 immediately follows from Claim 6 and Claim 5."
    }, {
      "heading" : "3.1.2 Complexity Algorithm 2",
      "text" : "We can bound the total number of pulls of Algorithm 2 by simply summing up the number of pulls at each round.\nO log |S|/K∑ r=1 |Rr| φ2r log 1 τrδrδ  =O( ∞∑ r=1 2−r|S| (3/4)2rφ2 · ( log 1 (3/4)rτ + log\n1\n(1/2)rδ + log\n1 δ\n))\nAlgorithm 3: Elim(S,K, γ, φ, δ)\nInput: S: set of arms; K: top-K; γ: fraction of arms; δ: error probability; φ: an additive error\nOutput: Set of arms T with |T | = |S|10 such that at most γK arms in T are in the top-K arms in S 1 For each arm i in S, pull cφ2 · (log γ\n−1 + log δ−1) for some large enough constant c. Let θ̃i be the empirical-mean of the i-th arm.\n2 return |T | arms in S with the smallest empirical-means.\n=O ( |S| φ2 ∞∑ r=1 ( 8 9 )r · ( r + log 1 τ + log 1 δ ))\n=O ( |S| φ2 · ( log 1 τ + log 1 δ )) .\nThe last equality follows from the fact that ∑∞ r=1(8/9)\nr · r = O(1). Lemma 8 also implies the following lemma.\nLemma 9 For a set of arms S = {θ1 ≥ . . . ≥ θ|S|} such that θ(1−τ)K − θ(1+τ)K+1 ≥ φ, there is an algorithm, denoted by EpsSplit(S,K, τ, φ, δ), that computes (2τ)-top-K correctly with probability at least\n1− δ, using O ( |S| φ2 · (log τ−1 + log δ−1) ) pulls in total.\nProof : To prove the lemma, we just need to replace “K” in Algorithm 2 to be “(1− τ)K”. By Lemma 8 we have with probability 1− δ that\n|{i ∈ Rr∗ | θi < θ(1−τ)K − φ}| ≤ τδ(1− τ)K ≤ τδK.\nSince θ(1−τ)K − θ(1+τ)K+1 ≥ φ we have\n|{i ∈ Rr∗ | θi < θ(1+τ)K+1}| ≤ τδK.\nConsequently,\n|{i ∈ Rr∗ | θi < θK}| ≤ τK + τδK ≤ 2τK. (26)\nTherefore we can just choose all arms in Rr∗ , together with K−|Rr∗ | arbitrary arms in the rest n−|Rr∗ | arms. By (26) the total average error is bounded by 2τK/K = 2τ ."
    }, {
      "heading" : "3.2 The Improved Algorithm",
      "text" : "In this section, we introduce an improved algorithm that removes the log(n)-factor in the sample complexity.\nWe first introduce a few more subroutines (Lemma 10, Lemma 11, and Lemma 12) that will be useful\nfor our improved algorithm.\nLemma 10 [Zhou et al., 2014] For a set of arms S = {θ1 ≥ . . . ≥ θ|S|}, there is an algorithm, denoted by OptMAI(S,K, , δ), that computes -top-K arms with probability 1− δ, with O ( |S| 2 log(1/δ) ) pulls.\nThe following two lemmas show how to find a constant fraction of arms in the set of top-K arms and\na constant fraction of arms outside the set of top-K arms respectively.\nLemma 11 For a set of arms S = {θ1 ≥ . . . ≥ θ|S|} such that θK − θ |S|+K 2 ≥ φ, K ≤ 2 3 |S|, there is an algorithm, denoted by Elim(S,K, γ, φ, δ) in Algorithm 2, that computes T ⊆ S, |T | = |S| 10 successfully\nwith probability 1− δ using O ( |S| φ2 · (log γ−1 + log δ−1) ) pulls in total, such that at most γK arms in T are in the top-K arms in S.\nAlgorithm 4: ReverseElim(S,K, γ, φ, δ)\nInput: S: set of arms; K: top-K; γ: fraction of arms; δ: error probability; φ: an additive error Output: Set of arms T with |T | = |S|10 such that at most γK arms in T are in the top-(|S| −K) arms in S\n1 For each arm i in S, pull cφ2 · (log γ −1 + log δ−1) for some large enough constant c. Let θ̃i be the\nempirical-mean of the i-th arm. 2 return |T | arms in S with the largest empirical-means.\nProof : Let θ̃i be the empirical-mean of arm i after being pulled by c· 1φ2 log 1 γδ times for a sufficiently large constant c. By a Hoeffding’s inequality, we have Pr [ |θ̃i − θi| ≥ φ/2 ] ≤ γδ/2. LetXi = 1{|θ̃i−θi| ≥ φ/2},\nand thus E[Xi] ≤ γδ/2. Let X = ∑ i∈[K] Xi; we have E[X] ≤ γδK/2. By a Markov’s inequality, we have that with probability at least 1 − δ/2, X ≤ γK. Consequently, with probability at least 1 − δ/2, there are at most γK arms i ∈ [K] with θ̃i ≤ θi − φ/2 ≤ θK − φ/2.\nLet L = { |S|+K 2 +1, . . . , |S|}. Since K ≤ 2 3 |S|, we have |L| ≥ |S| 6 . Using similar argument we can show\nthat with probability 1−δ/2, there are at least |S| 10 arms i ∈ L with θ̃i ≤ θi+φ/2 ≤ θ |S|+K 2 +φ/2 ≤ θK−φ/2 (since θK − θ |S|+K\n2\n≥ φ).\nTherefore, if we choose T to be the |S| 10 arms with the smallest empirical-means, then with probability\nat least 1− δ, at most γK arms in T are in the top-K arms in S.\nLemma 12 For a set of arms S = {θ1 ≥ . . . ≥ θ|S|} such that θK 2 − θK ≥ φ, K ≥ |S|3 , there is an algorithm, denoted by ReverseElim(S,K, γ, φ, δ) in Algorithm 2, that computes T ⊆ S, |T | = |S| 10\nsuccessfully with probability 1− δ using O ( |S| φ2 · (log γ−1 + log δ−1) ) pulls in total, such that at most γK arms in T are in the bottom-(|S| −K) arms in S.\nBy symmetry, the proof to Lemma 12 is basically the same as that for Lemma 11,\nNow we are ready to show our main result.\nTheorem 6 Algorithm 5 computes -top-K arms with probability at least 1 − δ, and pulls the arms at most\nO ∑ j∈[n] min { (∆j) −2, (Ψ t) −2}(log 1 + log 1 δ ) (27) times, where t and Ψ t are defined in (3) and (5) respectively.\nIt is worthwhile to note that the proposed algorithm is mainly for the theoretical interest and is rather complicated in terms of implementation. Thus, we omit the empirical study of this algorithm in the experimental section.\nIn the rest of this section we prove Theorem 6 by showing the correctness of Algorithm 5 and the\nanalyzing its query complexity."
    }, {
      "heading" : "3.2.1 Correctness of Algorithm 5",
      "text" : "Define E1 to be the event that all calls to the subroutine EstKthArm succeed.\nClaim 7 Pr[E1] ≥ 1− δ/10.\nProof : Note that (r + rφ) increases every time we call the four EstKthArm’s at Line 8 and Line 9. Therefore by Theorem 5 we can bound the error probability of all calls to EstKthArm by 4· ∑∞ z=1 δ 100z2\n≤ δ 10 .\nAlgorithm 5: ImprovedTopK(n,K, , δ)\nInput: n: number of arms; K and : see the definition of -top-K arms; δ: error probability. Assume K ≤ n/2\nOutput: -top-K arms 1 set S ← [n], r ← 1, rφ ← 1 2 set A,B ← ∅ 3 set KL ← (1− 2)K,KR ← (1 + 2)K + 1 4 while S 6= ∅ do 5 rφ ← rφ − 1 6 repeat 7 rφ ← rφ + 1; φ← 2−rφ\n8 θ+K ← EstKthArm ( S,KR − |A| , 2 100r2 , φ, δ 100(r+rφ)2 ) ;\nθ−K ← EstKthArm ( S,KL − |A| , 2 100r2 , φ, δ 100(r+rφ)2 ) 9 θ+ ← EstKthArm ( S, |S|+K−|A|2 , 2 100r2 , φ, δ 100(r+rφ)2 ) ;\nθ− ← EstKthArm ( S, K−|A|2 , 2 100r2 , φ, δ 100(r+rφ)2 ) 10 until (10(K − |A|)φ < K ) or (θ−K − θ + K > 3φ) or ( K − |A| ≤ |S|2 ) ∧ (θ+K − θ+ > 3φ) or(\nK − |A| > |S|2 ) ∧ (θ+K − θ+ > 3φ) ∧ (θ− − θ − K > 3φ)\n11 if (10(K − |A|)φ < K ) then 12 return OptMAI ( S,K − |A| , φ, δ100 ) ∪A 13 if (θ−K − θ + K > 3φ) then\n14 return EpsSplit ( S,K − |A| , KR−KLK−|A| , φ, δ 100 ) ∪A\n15 U ← Elim ( S,K − |A| , 2\n100r2 , φ, δ 100r2 ) 16 if (K − |A|) > |S|2 then 17 V ← ReverseElim ( S,K − |A| , 2\n100r2 , φ, δ 100r2 ) 18 r ← r + 1; S ← S\\(U ∪ V ); A← A ∪ V ; B ← B ∪ U 19 return A.\nDefine E2 to be the event that all calls to the subroutines Elim and ReverseElim succeed. Since r increases every time we call the two subroutines, by similar arguments we have:\nClaim 8 Pr[E2] ≥ 1− δ/20.\nDefine E = E1 ∪ E2; we thus have Pr[E ] ≥ 1− δ/5.\nWe next show that the misclassified arms are negligible during the run of the algorithm.\nLemma 13 Conditioned on E, suppose that the conditions of Lemma 11 and Lemma 12 always hold during the run of the Algorithm 5, then we always have\n1. The number of non-top-K arms in A, denoted by ιA, is no more than 2K 40 . 2. The number of top-K arms in B, denoted by ιB, is no more than 2K 40 .\nProof : By Lemma 11 we have ιA ≤ ∑∞ r=1 2 100r2 · K ≤ 2K 40\n. Similarly, by Lemma 12 we have ιB ≤∑∞ r=1 2 100r2 ·K ≤ 2K 40 .\nWe now show that the conditions of Lemma 11 and Lemma 12 do hold. We first introducing a lemma\nshowing that θK is sandwiched by θ + K and θ − K during the run of Algorithm 5.\nLemma 14 Conditioned on E, at any point of the run of Algorithm 5, we have\nθ−K + φ ≥ θK− 2K 10 ≥ θK ≥ θK+1 ≥ θK+1+ 2K 10 ≥ θ+K − φ.\nProof : We consider a particular around r. The difference between θ+K and the fixed value θKR is generated by calling of the subroutine EstKthArm at Line 8, which can be bounded by the the error introduced when selecting the (KR − |A|)-th largest arm in S plus max{ιA, ιB}. By Theorem 5, Lemma 13 and E , we have θ+K ≤ θKR−τR + R, where R ≤ φ, and\nτR ≤ τ · (KR − |A|) + max{ιA, ιB} ≤ 2\n100r2 · (1 + 2)K +\n2K 40 ≤ 2K 20 ≤ KR −K − 2K 10 .\nWe thus have θ+K ≤ θK+1+ 2 10K + φ.\nSimilarly, by Theorem 5, Lemma 13 and E , we have θ−K ≥ θKL+τL − L, where L ≤ φ, and τL ≤ max{ιA, ιB} ≤ 2K 40 ≤ K −KL − 2K 10\n. We thus have θ−K ≥ θK− 2K 10 − φ.\nWe have the following immediate corollary.\nCorollary 1 If θ−K − θ + K ≤ 3φ, then θK , θK+1 ∈ [θ + K − φ, θ + K + 4φ] and θK , θK+1 ∈ [θ − K − 4φ, θ − K + φ].\nIn the following, for convenience, we always use S[i] to denote the true-mean of the i-th arm (sorted decreasingly) in the current set S during the run of Algorithm 5, and use S[i..j] to denote the set of true-means of the (i, i + 1, . . . , j)-th arms in S. Let K̃ , K − |A|. We call S[1..K̃] the head of S, and S[K̃ + 1.. |S|] the tail of S. The following claim follows directly from Lemma 13 and Lemma 14.\nClaim 9 At any point during the run of Algorithm 5, it holds that θ K+\n2K 40\n≤ S[K̃] ≤ θ K− 2K\n40\n, and\nconsequently θ−K + φ ≥ S[K̃] ≥ θ + K − φ.\nLemma 15 Conditioned on E, the conditions of Lemma 11 always hold during the run of Algorithm 5, that is, we have\nS[K̃]− S [ |S|+K̃\n2\n] ≥ φ and K̃ ≤ 2\n3 |S| . (28)\nProof : For the first item of (28), by Theorem 5 we have\nS [ |S|+K̃\n2\n] − φ ≤ θ+, (29)\nwhich together with θ+K − θ + > 3φ (testing condition at Line 10) and S[K̃] ≥ θ+K − φ (Claim 9) give S[K̃]− S [ |S|+K̃\n2\n] ≥ φ (by two triangle inequalities).\nFor the second item of (28), note that if K̃ ≤ |S| 2 , then K̃ ≤ 2 3 |S| holds directly. We thus consider\nthe case K̃ > |S| 2 . The observation is that at the beginning, before the first call to ReverseElim, we must have called Elim a number of times; each time we remove |S| 10 arms, most of which are from the tail of S. After the first time when K̃ > |S| 2 , we call both Elim and ReverseElim, with the intention of removing |S| 10 arms from the tail and the head respectively. It may happen that after calling both Elim and ReverseElim a few times, we again have K̃ ≤ |S| 2 , at which point we will again only call Elim until the point that we are back to the case that K̃ > |S| 2 and then we will call both Elim and ReverseElim. Basically, the two patterns ‘call Elim only’ and ‘call both Elim and ReverseElim’ interleave, and we only need to consider one run of this interleaved sequence.\nBy Lemma 11 and Lemma 12 we know that at most 2\n100r2 K̃ arms in the head of S will be removed\nwhen calling Elim, and at most 2\n100r2 K̃ arms in the tail of S will be removed when calling ReverseElim.\nTherefore, the worst case for causing the imbalance between K̃ and (|S| − K̃) is that each call of Elim\nremoves |S| 10 from the tail of S, and each call of ReverseElim removes ( |S| 10 − 2 100r2 K̃ ) arms from the head of S and 2\n100r2 K̃ arms from the tail of S. Note that the number of calls of Elim and ReverseElim\nis bounded by O(log 1 ) since when reaching Line 15 we always have |S| ≥ Ω(φ) ≥ Ω( ). We thus have\n|S| − K̃ |S| ≥\n( 1\n2 − 0.1\n) · O(log 1/ )∏\nr=1\n( 1− 2\n100r2\n) ≥ 1\n3 ,\nwhich implies K̃ ≤ 2 3 |S|.\nLemma 16 Conditioned on E, the conditions of Lemma 12 always hold during the run of Algorithm 5, that is, we have\nS [ K̃ 2 ] − S[K̃] ≥ φ and K̃ ≥ |S| 3 . (30)\nProof : In Algorithm 5, when calling ReverseElim, we always have\nθ− − θ−K > 3φ and K̃ > |S| 2 . (31)\nThus K̃ ≥ |S| 3 follows directly. By Theorem 5 we have\nS [ K̃ 2 ] + φ ≥ θ−, (32)\nwhich together with θ−−θ−K > 3φ (first item of (31)) and S[K̃] ≤ θ − K+φ (Claim 9), gives S [ K̃ 2 ] −S[K̃] ≥ φ (by two triangle inequalities).\nLemma 15, Lemma 16 and Lemma 13 give the following corollary.\nCorollary 2 Conditioned on E, during the run of Algorithm 5 we always have (1) the number of nontop-K arms in A is no more than ιA = 2K 40 , and (2) the number of top-K arms in B is no more than ιB = 2K 40 .\nWe now consider the boundary cases. At Line 11 when the condition is met, we have φ < K 10(K−|A|) ,\nand thus with probability (1 − δ 100 ) the total error introduced by subroutine OptMAI at Line 12 is bounded by (K − |A|)φ ≤ K 10 (Lemma 10). At Line 14, with probability (1− δ 100 ) the error introduced by subroutine EpsSplit is bounded by 2 · KR−KL K−|A| · (K − |A|) ≤ 2 · 2 2K = 4 2K. (Lemma 9).\nBy E , Corollary 2, and the errors introduced by boundary cases, we have that with probability 1− δ\n5 −2· δ 100 ≥ 1−δ, the total error introduced in our top-K estimation is at most ιA+ιB+ K10 +4 2K ≤ K."
    }, {
      "heading" : "3.2.2 Complexity of Algorithm 5",
      "text" : "In the whole analysis we assume that E holds. Recall that by definition ∆i = max(θi − θK+1, θK − θi), and t ∈ [K] is the largest integer such that ∆K−t · t ≤ K and ∆K+1+t · t ≤ K . Recall that Ψt = min{∆K−t,∆K+1+t}, and Ψ t = max( ,Ψt).\nBy Theorem 5, Lemma 11, Lemma 12, Lemma 10 and Lemma 9 we have: every call to EstKthArm costsO ( |S| φ2 log rrφ δ ) pulls; every call to Elim and ReverseElim costsO ( |S| φ2 log r δ ) ; the call to OptMAI\ncosts O ( |S| φ2 log 1 δ ) ; and the call to EpsSplit costs O ( |S| φ2 log K̃ δK ) = O ( |S| φ2 log 1 δ ) . So our task is to lower bound the value of φ when these subroutines are called, and the maximum values of rφ and r.\nLemma 17 Conditioned on E, at any point of the run of Algorithm 5, we have φ = Ω(Ψ t), and rφ = O(log 1\n), r = O(log n|S| ).\nProof : First, by the testing condition 10(K − |A|)φ < K at Line 10, together with the boundary cases at Line 11-12 and the fact that φ← φ/2 at every update, it holds that\n10(K − |A|) · 2φ ≥ K , (33)\nwhich implies φ = Ω( ) when we call all the subroutines.\nWe now show φ = Ω(Ψt). From the proof of Lemma 15 we know that during the run of the Algorithm\nwe always have K̃ ≤ 2|S| 3 . We focus on an arbitrary but fixed point during the run of the algorithm. By Theorem 5 we have\nS [ |S|+K̃\n2\n] − φ ≤ θ+ ≤ S [( 1− 2\n100r2\n) |S|+K̃\n2\n] + φ, (34)\nwhich, combined with the fact that K̃ ≤ 2|S| 3 , gives\nS [ |S|+K̃\n2\n] − φ ≤ θ+ ≤ S [ |S|+K̃− |S|\n2\n] + φ. (35)\nBy (33) we have 2K 40 ≤ 40 · 10K̃ · 2φ ≤ K̃ 2 . (36) Applying Claim 9 on both sides of (34), together with (36) and K̃ ≤ 2|S| 3 we have\nθ K+ |S|−K̃\n2 + 2K 40\n− φ ≤ θ+ ≤ θ K+ |S|−K̃− |S|\n2 − 2K 40\n+ φ\n⇒ θ K+ |S|−K̃\n2 + K̃ 2\n− φ ≤ θ+ ≤ θ K+ |S|−K̃− |S|\n2 − K̃ 2\n+ φ\n⇒ θ+ ∈ θK+η ± φ for an η ≥ |S|−K̃2 − |S| ≥ 0.16 |S| . (37)\nBy symmetry, using a similar argument we can show that for a sufficiently small constant cη′ , we\nhave\nθ− ∈ θK−η′ ± φ for an η′ ≥ cη′ |S| , (38)\nWe first consider the case where K − |A| ≤ |S| 2 . We analyze the following two sub-cases.\n1a) The case when η > t. We have:\nφ ≥θ + K − θ +\n6 (by the testing condition at Line 10 and φ← φ/2 at each update)\n≥ (θK − 4φ)− (θK+η + φ) 6 (by Corollary 1 and (37)) ≥θK − 4φ− (θK+t+1 + φ) 6 ≥Ψt − 5φ 6 (by the definition of Ψt).\n1b) The case when η ≤ t. We prove by contradiction. Suppose that φ ≤ Ψt/ct for a sufficiently large constant ct, then\nΨt · t ≥ ctφ · η (37) ≥ ctφ · 0.16 |S| K̃≤ 2|S| 3 ≥ ctφ · 0.16 · 1.5K̃ (33) > K ,\nA contradition to the definition of t.\nWe then consider the case where K−|A| > |S| 2 . Now by the testing condition at Line 10 and φ← φ/2\nat each update, we know that at least one of the following inequality holds: φ ≥ θ + K −θ+\n6 ; or φ ≥ θ\n−−θ− K\n6 . If\nthe first inequality holds, the case-analysis above suffices. Otherwise, we know that the second inequality holds, we analyze the following two sub-cases in a similar fashion.\n2a) The case when η′ > t.\nφ ≥θ − − θ−K\n6\n≥ (θK−η ′ − φ)− (θK+1 + 4φ)\n6 (by Corollary 1 and (38))\n≥ (θK−t − φ)− (θK+1 + 4φ) 6 ≥Ψt − 5φ 6 (by the definition of Ψt).\n2b) The case when η′ ≤ t. This case is symmetric to Case 1b), and we omit here.\nSince φ = 2−rφ , we immediately have rφ = O(log 1 Ψ t ) = O(log 1 ). By the testing condition at Line 13, and the fact that every time we call Elim and ReverseElim we remove a constant fraction of arms from S, we thus have r = O(log n|S| ).\nWe now look at a particular call to Elim which removes 1 10 -fraction of arms in S, and the tail of S.\nFrom the testing condition at Line 10 we know that\nθ+K − θ + ≤ 3 · 2φ. (39)\nFrom Corollary 1 we have that\nθK ≤ θ+K + 4φ. (40)\nFrom (39), (40) and the second inequality of (35), by applying two triangle inequalities we have\nθK − S [ |S|+K̃− |S|\n2\n] ≤ 11φ, (41)\nwhich implies that for all\nj ∈ Q = [ 1.01K̃, |S|+K̃− |S|\n2\n] (|Q| ≥ |S|\n10 since K̃ ≤ 2|S| 3 ), (42)\nletting m(j) ∈ [n] such that θm(j) = S[j], we have\n∆m(j) = θK − S [j] ≤ 11φ. (43)\nWe thus can charge all the previous cost spent on the 1 10 -fraction of arms in S that are removed by Elim, which is bounded by O ( |S| φ2 ( logdlog n|S|e+ log 1 + log 1 δ )) , to\nO (∑ j∈Q 1 ∆2m(j) ( log ⌈ log\nn\nm(j)−K\n⌉ + log 1 + log 1\nδ\n)) , (44)\nwhere we have used the fact that\n|S| = Ω(j − K̃) (by (42))\n≥ Ω(m(j)−K). (by (42), Corollary 2 and (36))\nNote that it is possible that in multiple calls to Elim with parameters (S1, ·, ·, φ1, ·), . . . , (Sκ, ·, ·, φκ, ·) where φ1 ≥ . . . ≥ φκ, we charge the same item j ∈ Q1 ∩ . . . ∩ Qκ multiple times. However, since φi+1 ≤ φi/2 for all i ∈ [κ− 1], the total charge on j is at most twice of that of the last charge (i.e., the one with parameter φκ).\nBy symmetry, we can use the same arguments for ReverseElim and the head of S, and get a same bound as (44) except that we need to replace m(j)−K with K −m(j). We thus conclude that the total\nnumber of pulls can be bounded by\nO ∑ j∈[n] 1 ∆2j ( log ⌈ log n∣∣j −K + 1 2 ∣∣ ⌉ + log 1 + log 1 δ ) . (45) We know from Lemma 17 that we always have φ = Ω(Ψ t), we can thus “truncate” Expression (45) and bound the total cost by\nO ∑ j∈[n]\n1\nmax{∆2j , (Ψ t)2}\n( log ⌈ log\nn∣∣j −K + 1 2 ∣∣ ⌉ + log 1 + log 1 δ ) . (46) Now we introduce the following lemma (the proof of which is deferred to the Appendix). Lemma 18 If M > a1 ≥ . . . ≥ an ≥ 1, then ∑ i∈[n] ai log(n/i) ≤ O(dlogMe) ∑ i∈[n] ai.\nWith Lemma 18 we can further simplify (46) to\nO ∑ j∈[n]\n1\nmax{∆2j , (Ψ t)2}\n( log max { 1\nmax{∆2j , (Ψ t)2} | j ∈ [n]\n} + log 1 + log 1\nδ ) = O\n∑ j∈[n]\n1\nmax{∆2j , (Ψ t)2}\n( log 1 + log 1\nδ ) ."
    }, {
      "heading" : "4 A Lower Bound",
      "text" : "In this section we prove Theorem 3. In Section 4.1, we introduce a lower-bound to a coin-tossing problem. In Section 4.2, we reduce the proof of Theorem 3 to the coin-tossing problem."
    }, {
      "heading" : "4.1 The Coin-Tossing Problem",
      "text" : "We say a coin is p-biased if the probability that a toss turns head is p, and we call p is the value of the coin. Set η = 10−4.\nDefinition 3 (Coin-Tossing) In this problem, given a coin that may be (0.5 + η)-biased or (0.5 − η)biased, we want to know its exact value by tosses, and we are allowed to give up and output ‘unknown’ with probability at most 0.9.\nWe have the following theorem.\nTheorem 7 Any algorithm that solves the coin-tossing problem correctly with probability (1 − ) needs Ω(log 1/ ) tosses.\nProof : Since the input is distributional we only need to focus on deterministic algorithms. Let m be the total number of tosses of the coin, and let B = (B1, . . . , Bm) ∈ {0, 1}m be the sequence of outcomes. Let Dβ be the distribution of B where each Bi is the outcome of tossing a β-biased coin. For v ∈ {0, 1}m, let |v| be the number of 1-coordinates in v.\nOur first observation is that for any b1,b2 ∈ {0, 1}m, if |b1| = |b2|, then Pr[B = b1] = Pr[B = b2]. Therefore, the final output should only depend on the value |B| but not the ordering of the 0/1 sequence. In other words, we can view the output of the algorithm as a function\nf : {0, 1, . . . ,m} → {0.5− η, 0.5 + η,⊥},\nwhere {0, 1, . . . ,m} stand for possible values of |B|, and ‘⊥’ represents ‘unknown’. Recall that the algorithm can give up and output ‘unknown’ with probability at most 0.9. By observing that B ∼ D0.5+η and B ∼ D0.5−η are symmetric, the best strategy must set f(x) =⊥ for x ∈ [0.5m− t, 0.5m+ t], where t ∈ N is the maximum value such that\nPrB∼D0.5−η [0.5m− t ≤ |B| ≤ 0.5m+ t] ≤ 0.9. (47)\nIntuitively, [0.5m − t, 0.5m + t] is the range where conditioned on |B| ∈ [0.5m − t, 0.5m + t] the value of the coin is the most uncertain (so that the algorithm simply outputs ‘⊥’). We set f(x) = 0.5 − η if x ∈ [0, 0.5m− t), and f(x) = 0.5 + η if x ∈ (0.5m+ t,m]. The error probability of this strategy is\nPrB∼D0.5−η [|B| > 0.5m+ t]. (48)\nWe now try to upper bound t. First, it is easy to see that 0.5m − t ≤ (0.5 − η)m, or t ≥ ηm, since otherwise LHS of (47) is at most 1/2, violating the choice of t. By a Hoeffding’s inequality we have\nPrB∼D0.5−η [|B| ≤ 0.5m− t] = PrB∼D0.5−η [|B| ≤ E[|B|]− (t− ηm)] ≤ e −m(t/m−η)2/2.\nWe thus have e−m(t/m−η) 2/2 ≥ (1− 0.9)/2, and consequently\nt ≤ ηm+ ct √ m (49)\nfor some large enough constant ct.\nWe now lower bound the expression (48). We will need the following anti-concentration result which\nis an easy consequence of Feller Feller [1943] (cf. Matousek and Vondrák. [2008]).\nFact 1 (Matousek and Vondrák. [2008]) Let Y be a sum of independent random variables, each attaining values in [0, 1], and let σ = √ Var[Y ] ≥ 200. Then for all t ∈ [0, σ2/100], we have\nPr[Y ≥ E[Y ] + t] ≥ c · e−t 2/(3σ2)\nfor a universal constant c > 0.\nIn our case, since |B| can be seen as a sum of Bernoulli variables with p = 0.5− η, Var|B| = m · (0.5− η) · (0.5 + η) ≥ 0.24m. By (49) we have ηm+ t ≤ 2ηm+ ct √ m ≤ Var|B|/100 by our choice of η. Thus by applying Fact 1 we have\nPrB∼D0.5−η [|B| > 0.5m+ t] = PrB∼D0.5−η [|B| > E[|B|] + (ηm+ t)]\n≥ c · e−(ηm+t) 2/(3·0.24m) ≥ e−Ω(m).\nTo make the best strategy succeeds with probability at least 1− , we have to make e−Ω(m) ≤ , which means we have to set m ≥ Ω(log 1/ )."
    }, {
      "heading" : "4.2 The Reduction",
      "text" : "We show a reduction from the coin-tossing problem to the -top-K arms problem. For technical convenience we set K = n/2, and assume that K ≥ cK for a large enough constant cK .\nLemma 19 If there is an algorithm for -top-K arms that succeeds with probability 0.9 using C ≤ f(n,K)/poly( ) tosses, then there is an algorithm for coin-tossing that succeeds with (1− ) using O(C/n)\ntosses. Moreover, the instances fed into the -top-K arms algorithm have the property that H(t, ) = Θ(nη−2) = Θ(n) for ≥ cK/K.\nWe prove Lemma 19 in two steps. We first perform an input reduction, and then show that we can\nconstruct an efficient algorithm for coin-tossing using an algorithm for -top-K arms.\nInput reduction. Given an input X for coin-tossing, we construct an input Y = (X1, . . . , Xn) for -topK arms as follows: we randomly pick a set S ⊆ [n] with |S| = K, and set Xi (i ∈ S) to be (0.5+η)-biased coins (denoted by Xi = 0.5+η for convenience), and Xi (i 6= [n]\\S) to be (0.5−η)-biased coins. We then pick a random index I ∈ [n], and reset XI = X. Since in our input Y , the number of (0.5 + η)-biased coins is either K − 1, K, or K + 1, while the rest are (0.5 − η)-biased coins, it can be checked that H(t, ) = Θ(nη−2) for ∈ [cK/K, η].\nClaim 10 If S′ is a set of γ-top-K arms (γ ≥ 2η/K) on Y , then with probability at least 1 − 2γ/η we can correctly determine the value of X by checking whether I ∈ S′.\nProof : If X = XI = 0.5 + η, then to compute -top-K arms correctly we need to output a set S ′ such that 1\nK · ∑ i∈S′ Xi ≥ 1 K · ∑ i∈S Xi − γ ≥ (0.5 + η)− γ.\nBy simple calculation we must have |{i ∈ S′ | Xi = 0.5 + η}| ≥ (\n1− γ 2η\n) K. Since all (0.5 + η)-biased\ncoins are symmetric, the probability that I ∈ S′ is at least( 1− γ\n2η ) K + 1 ≥ ( 1− γ η ) . (50)\nOtherwise if X = XI = 0.5− η, then to compute -top-K arms correctly we need to output a set S′\nsuch that 1 K · ∑ i∈S′ Xi ≥ 1 K · ∑ i∈S Xi − γ − 2η K ≥ 0.5 + η − γ − 2η K ,\nBy simple calculation we must have |{i ∈ S′ | Xi = 0.5 + η}| ≥ (\n1− γ η\n) K, or, |{i ∈ S′ | Xi = 0.5− η}| ≤\nγ η K. Again since all (0.5− η)-biased coins are symmetric, the probability that I ∈ S′ is at most\nγ η K\nn− (K − 1) ≤ 2γ η . (51)\nBy (50) and (51), we conclude that by observing whether I ∈ S′ or not we can determine whether X = XI = 0.5 + η or 0.5− η correctly with probability at least 1− 2γ/η.\nAn algorithm for coin-tossing. Let ′ = η/4 · . We now construct an algorithm A′ for coin-tossing using an algorithm A for ′-top-K arms. Given an input X for coin-tossing, we first perform the input reduction as described above, getting an input Y . We then runA on Y . We give up and output ‘unknown’ during the run of A if the number of tosses on XI is more than 20C/n. If A finishes then let S′ be the outputted set of top-K coins. We then perform a verification step to test whether S′ is indeed a set of\n′-top-K arms, and output ‘unknown’ if the verification fails. The verification is done as follows: we first compute ρ = 1|S′\\I| · ∑ i∈S′\\I Xi, and then verify whether ρ ≥ (0.5 + η)− ( ′+ 2η/K). Finally, if we have not outputted ‘unknown’, we output X = 0.5 + η if I ∈ S′, and X = 0.5− η if I 6∈ S′.\nWe now try to bound the probability that A′ outputs ‘unknown’.\nClaim 11 The probability that we give up during the run of A is at most 0.1.\nProof : We prove for the case X = 0.5 + η; same arguments hold for the case X = 0.5− η since we have set K = n/2. Note that if I ∈ S, then we have K coins (including XI) in Y that has value (0.5 + η); otherwise if I 6∈ S then we have K + 1 such coins. By symmetry, the expected tosses on XI is at most C/K = 2C/n. By a Markov inequality the probability that XI has been tossed by at least 20C/n is at most 0.1.\nClaim 12 Suppose we do not give up when running A, the verification step fails with probability at most 0.1.\nProof : Note that A′ knows the value of all other coins except XI , simply because {Xi | i ∈ [n]\\I} are all constructed by A′. The 2η/K factor in the test ρ ≥ (0.5 + η) − ( ′ + 2η/K) comes from the fact that we do not know the exact value of XI , which will affect the estimation of the\n1 K ∑ i∈S′ Xi by at\nmost an additive factor 2η/K. Therefore the failure probability of the verification is at most the failure probability of A, which is upper bounded by 0.1.\nNow we are ready to prove the lemma.\nProof :(of Lemma 19) First, note that if there is an algorithm for -top-K arms that succeeds with probability 0.9 using C ≤ f(n,K)·poly( ) tosses, then there is an algorithm for ′-top-K arms ( ′ = 4/η · for a constant η) that succeeds with probability 0.9 using O(C).\nWe now show that Algorithm A′ constructed above for coin-tossing has the following properties, which conclude the lemma.\n1. It tosses X at most O(C/n) times.\n2. It outputs ‘unknown’ with probability at most 0.9.\n3. When it does not output ‘unknown’, it successfully computes X with probability at least 1− .\nThe first item holds according to the construction of A′. For the second item, the probability that A′ outputs ‘unknown’ is upper bounded by the sum of the probability that we give up when running A and the failure probability of A, which is at most 0.1 + 0.1 < 0.9 by Claim 11 and Claim 12. For the third item, note that any S′ that passes the verification step in A′ is a set of ( ′ + 2η/K)-top-K arms. The item holds by applying Claim 10 (setting γ = ′+ 2η/K). Note that 2γ/η = (2/η) · ( ′+ 2η/K) ≤ since ′ = η/4 · and K ≥ cK for a sufficiently large constant cK .\nBy Theorem 7 and Lemma 19 we have the following theorem.\nTheorem 8 Any algorithm that computes that -top-K arms correctly with probability 0.9 needs Ω(n log −1) tosses.\nTogether with the bound for H(t, ) in Lemma 19, we prove Theorem 3."
    }, {
      "heading" : "5 Experiments",
      "text" : "In this section we present the experimental results. While our theorems are presented in the PAC form, it is in general difficult to verify them directly because the parameter is merely an upper bound and the actual aggregate regret may deviate from it. In our experiment, we convert our Algorithm 1 to the fixedbudget version (that is, fix the budget of the number of pulls and calculate the aggregate regret). We compare our Algorithm 1 (AdaptiveTopK ) with two state-of-the-art methods – OptMAI in Zhou et al. [2014] and CLUCB-PAC in Chen et al. [2014]. The comparison between OptMAI /CLUCB-PAC and previous methods (e.g., the methods in Bubeck et al. [2013] and Kalyanakrishnan et al. [2012]) have already been demonstrated in Zhou et al. [2014] and Chen et al. [2014], and thus omitted here for the\nclarity of the presentation. To convert our algorithm to the fixed-budget version, we remove the outer while loop of Algorithm 1. As a replacement, we keep track of the total number of pulls, and stop pulling the arms once the budget is exhausted.\nWe test our algorithm on both synthetic and real datasets as described as follows. For simulated datasets, we set the total number of arms n = 1, 000 and vary the parameter K. We set the tolerance parameter = 0.01. In AdaptiveTopK and CLUCB-PAC, another parameter δ (i.e., the failure probability) is required and we set δ = 0.01.\n• TwoGroup: the mean reward for the top K arms is set to 0.7 and that for the rest of the arms is set to 0.3.\n• Uniform: we set θi = 1− in for 1 ≤ i ≤ n. • Synthetic-p: we set θi = (1− Kn ) + K n · (1− i K )p for each i ≤ K and θi = (1− Kn )− n−K n · ( i−K n−K ) p\nfor each i > K. Note that Synthetic-1 is identical to Uniform. When p is larger than 1, arms are made closer to the boundary that separates the top-K from the rest (i.e. 1 − K n ). When p is smaller than 1, arms are made farther to the boundary. We normalize all the arms such that the mean values of the arms still span the whole interval [0, 1]. We consider p = .5, 1, 6.\n• Rte: We generate θ from a real recognizing textual entailment (RTE) dataset Snow et al. [2008]. There are n = 164 workers and we set each θi be the true labeling accuracy of the i-th worker.\nNote that the true label for each instance is provided in this dataset.\nFor each dataset, we first fix the budget (total number of pulls allowed) and run each algorithm 200 times. For each algorithm, we calculate the empirical probability (over 200 runs) that the aggregate regret of the selected arms is above the tolerance threshold = 0.01, which is called failure probability. A smaller failure probability means better performance. For each dataset and different K, we plot the curve of failure probability by varying the number of pulls. The results are shown in Figure 1-5.\nIt can be observed from the experimental results that AdaptiveTopK (Algorithm 1) outperforms CLUCB-PAC in almost all the datasets. When K is relatively small, OptMAI has the best performance in most datasets. When K is large, AdaptiveTopK outperforms OptMAI . The details of the experimental results are elaborated as follows.\n• For TwoGroup dataset (see Figure 1), AdaptiveTopK outperforms other algorithms significantly for all values ofK. The advantage comes from the adaptivity of our algorithm. In the TwoGroup dataset,\ntop-K arms are very well separated from the rest. Once our algorithm identifies this situation, it need only a few pulls to classify the arms. In details, the inner while loop (Line 7) of Algorithm 1 make it possible to accept/reject a large number of arms in one round as long as the algorithm is confident.\n• As K increases, the advantage of AdaptiveTopK over other algorithms (OptMAI in particular) becomes more significant. This can be explained by the definition of H(t, ): t = t( ,K) usually\nbecomes bigger as K grows, leading to a smaller hardness parameter H(t, ).\n• A comparison between Synthetic-.5, Uniform, Synthetic-6 reveals that the advantage of Adap-\ntiveTopK over other algorithms (OptMAI in particular) becomes significant in both extreme scenarios, i.e., when arms are very well separated (p 1) and when arms are very close to the separation boundary (p 1)."
    }, {
      "heading" : "6 Conclusion and Future Work",
      "text" : "In this paper, we proposed two algorithms for a PAC version of the multiple-arm identification problem in a stochastic multi-armed bandit (MAB) game. We introduced a new hardness parameter for characterizing the difficulty of an instance when using the aggregate regret as the evaluation metric, and established the instance-dependent sample complexity based on this hardness parameter. We also established lower bound results to show the optimality of our algorithm in the worst case. Although we only consider the case when the reward distribution is supported on [0, 1], it is straightforward to extend our results to sub-Gaussian reward distributions.\nFor future directions, it is worthwhile to consider more general problem of pure exploration of MAB under matroid constraints, which includes the multiple-arm identification as a special case, or other polynomial-time-computable combinatorial constraints such as matchings. It is also interesting to extend the current work to finding top-K arms in a linear contextual bandit framework.\nAppendix\nProof of Lemma 18\nProof : We partition all ai’s to groups G1, . . . , Gdlog2Me where Gj = {i ∈ [n] | ai ∈ [2 j−1, 2j)}. Let S = ∑n i=1 ai ≥ n. For each j ∈ {1, 2, . . . , dlog2 Me}, let δj = 1 S ∑ i∈Gj ai. Observe that we have∑\nj δj = 1. We will show for each Gj that\n∑ i∈Gj ai log(n/i) ≤ O ( δj logM + δj log δ −1 j + 1 ) S. (52)\nOnce we establish (52), we prove the lemma as follows. We sum up the inequalities for all j and get\n∑ i∈[n] ai log(n/i) ≤ dlog2Me∑ j=1 O ( δj logM + δj log δ −1 j + 1 ) S\n= O(dlogMe)S +O(S) dlog2Me∑ j=1 δj log δ −1 j ≤ O(dlogMe)S +O(S) · logdlog2 Me ≤ O(dlogMe)S,\nwhere the second last inequality is by Jensen’s inequality and the convexity of δ log δ over δ ∈ (0, 1). Now we prove (52) for each group G = Gj and δ = δj . Let b = maxi∈G{ai} ≤ M . By our partition rule we have that b ≤ 2ai for all i ∈ G. Observe that\n∑ i∈G ai log(n/i) ≤ b |G|∑ i=1 log(n/i) = b|G| logn− b log(|G|!) ≤ b|G| log(n/|G|) +O(b|G|). (53)\nThe last inequality of (53) is by Stirling’s approximation. Since b|G| ≥ ∑ i∈G ai = δS, we have |G| ≥ δS b ≥ δn b . We finish the proof of (52) by upper-bounding the RHS of (53) by\nb|G| log(bδ−1) +O(b|G|) ≤ 2δS log(bδ−1) +O(b|G|) ≤ O ( δS log(Mδ−1) + S ) ,\nwhere the first inequality is because b|G| ≤ ∑ i∈G 2ai = 2δS ."
    } ],
    "references" : [ {
      "title" : "Large-scale markov decision problems with KL control cost and its application to crowdsourcing",
      "author" : [ "Y. Abbasi-Yadkori", "P. Bartlett", "X. Chen", "A. Malek" ],
      "venue" : "In Proceedings of International Conference on Machine Learning (ICML),",
      "citeRegEx" : "Abbasi.Yadkori et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Abbasi.Yadkori et al\\.",
      "year" : 2015
    }, {
      "title" : "Best arm identification in multi-armed bandits",
      "author" : [ "J. Audibert", "S. Bubeck", "R. Munos" ],
      "venue" : "In Proceedings of the Conference on Learning Theory (COLT),",
      "citeRegEx" : "Audibert et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Audibert et al\\.",
      "year" : 2010
    }, {
      "title" : "Multiple identifications in multi-armed bandits",
      "author" : [ "S. Bubeck", "T. Wang", "N. Viswanathan" ],
      "venue" : "In Proceedings of the International Conference on Machine Learning (ICML),",
      "citeRegEx" : "Bubeck et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Bubeck et al\\.",
      "year" : 2013
    }, {
      "title" : "On top-k selection in multi-armed bandits and hidden bipartite graphs",
      "author" : [ "W. Cao", "J. Li", "Y. Tao", "Z. Li" ],
      "venue" : "In Proceedings of Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "Cao et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Cao et al\\.",
      "year" : 2015
    }, {
      "title" : "Pure exploration of multi-armed bandit under matroid constraints",
      "author" : [ "L. Chen", "A. Gupta", "J. Li" ],
      "venue" : "In Proceedings of the Conference on Learning Theory (COLT),",
      "citeRegEx" : "Chen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "Towards instance optimal bounds for best arm identification",
      "author" : [ "L. Chen", "J. Li", "M. Qiao" ],
      "venue" : "arXiv preprint arXiv:1608.06031,",
      "citeRegEx" : "Chen et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "Combinatorial pure exploration of multi-armed bandits",
      "author" : [ "S. Chen", "T. Lin", "I. King", "M.R. Lyu", "W. Chen" ],
      "venue" : "In Proceedings of Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "Chen et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2014
    }, {
      "title" : "Statistical decision making for optimal budget allocation in crowd labeling",
      "author" : [ "X. Chen", "Q. Lin", "D. Zhou" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Chen et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2015
    }, {
      "title" : "PAC bounds for multi-armed bandit and markov decision processes",
      "author" : [ "E. Even-Dar", "S. Mannor", "Y. Mansour" ],
      "venue" : "In Proceedings of the Annual Conference on Learning Theory (COLT),",
      "citeRegEx" : "Even.Dar et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Even.Dar et al\\.",
      "year" : 2002
    }, {
      "title" : "Action elimination and stopping conditions for the multiarmed bandit and reinforcement learning problems",
      "author" : [ "E. Even-Dar", "S. Mannor", "Y. Mansour" ],
      "venue" : "Journal of machine learning research,",
      "citeRegEx" : "Even.Dar et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Even.Dar et al\\.",
      "year" : 2006
    }, {
      "title" : "Generalization of a probability limit theorem of cramer",
      "author" : [ "W. Feller" ],
      "venue" : "Trans. Amer. Math. Soc,",
      "citeRegEx" : "Feller.,? \\Q1943\\E",
      "shortCiteRegEx" : "Feller.",
      "year" : 1943
    }, {
      "title" : "Multi-bandit best arm identification",
      "author" : [ "V. Gabillon", "M. Ghavamzadeh", "A. Lazaric", "S. Bubeck" ],
      "venue" : "In Proceedings of Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "Gabillon et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Gabillon et al\\.",
      "year" : 2011
    }, {
      "title" : "Best arm identification: A unified approach to fixed budget and fixed confidence",
      "author" : [ "V. Gabillon", "M. Ghavamzadeh", "A. Lazaric" ],
      "venue" : "In Proceedings of Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "Gabillon et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Gabillon et al\\.",
      "year" : 2012
    }, {
      "title" : "Improved learning complexity in combinatorial pure exploration bandits",
      "author" : [ "V. Gabillon", "A. Lazaric", "M. Ghavamzadeh", "R. Ortner", "P. Bartlett" ],
      "venue" : "In Proceedings of the International Conference on Artificial Intelligence and Statistics,",
      "citeRegEx" : "Gabillon et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Gabillon et al\\.",
      "year" : 2016
    }, {
      "title" : "UCB : An optimal exploration algorithm for multi-armed bandits",
      "author" : [ "K. Jamieson", "M. Malloy", "R. Nowak", "S. Bubeck" ],
      "venue" : "In Proceedings of the Conference on Learning Theory (COLT),",
      "citeRegEx" : "Jamieson et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Jamieson et al\\.",
      "year" : 2014
    }, {
      "title" : "Top arm identification in multi-armed bandits with batch arm pulls",
      "author" : [ "K.-S. Jun", "K. Jamieson", "R. Nowak", "X. Zhu" ],
      "venue" : "In Proceedings of the International Conference on Artificial Intelligence and Statistics (AISTATS),",
      "citeRegEx" : "Jun et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Jun et al\\.",
      "year" : 2016
    }, {
      "title" : "PAC subset selection in stochastic multi-armed bandits",
      "author" : [ "S. Kalyanakrishnan", "A. Tewari", "P. Auer", "P. Stone" ],
      "venue" : "In Proceedings of International Conference on Machine Learning (ICML),",
      "citeRegEx" : "Kalyanakrishnan et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Kalyanakrishnan et al\\.",
      "year" : 2012
    }, {
      "title" : "Almost optimal exploration in multi-armed bandits",
      "author" : [ "Z. Karnin", "T. Koren", "O. Somekh" ],
      "venue" : "In Proceedings of International Conference on Machine Learning (ICML),",
      "citeRegEx" : "Karnin et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Karnin et al\\.",
      "year" : 2013
    }, {
      "title" : "On the complexity of best arm identification in multi-armed bandit models",
      "author" : [ "E. Kaufmann", "O. Cappé", "A. Garivier" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Kaufmann et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Kaufmann et al\\.",
      "year" : 2016
    }, {
      "title" : "The sample complexity of exploration in the multi-armed bandit problem",
      "author" : [ "S. Mannor", "J.N. Tsitsiklis" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Mannor and Tsitsiklis.,? \\Q2004\\E",
      "shortCiteRegEx" : "Mannor and Tsitsiklis.",
      "year" : 2004
    }, {
      "title" : "The probabilistic method",
      "author" : [ "J. Matousek", "J. Vondrák" ],
      "venue" : "Lecture Notes,",
      "citeRegEx" : "Matousek and Vondrák.,? \\Q2008\\E",
      "shortCiteRegEx" : "Matousek and Vondrák.",
      "year" : 2008
    }, {
      "title" : "Simple bayesian algorithms for best arm identification",
      "author" : [ "D. Russo" ],
      "venue" : "In Proceedings of the Conference on Learning Theory (COLT),",
      "citeRegEx" : "Russo.,? \\Q2016\\E",
      "shortCiteRegEx" : "Russo.",
      "year" : 2016
    }, {
      "title" : "Cheap and fast—but is it good?: Evaluating nonexpert annotations for natural language tasks",
      "author" : [ "R. Snow", "B. O’Connor", "D. Jurafsky", "A.Y. Ng" ],
      "venue" : "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,",
      "citeRegEx" : "Snow et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Snow et al\\.",
      "year" : 2008
    }, {
      "title" : "Best-arm identification in linear bandits",
      "author" : [ "M. Soare", "A. Lazaric", "R. Munos" ],
      "venue" : "In Proceedings of Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "Soare et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Soare et al\\.",
      "year" : 2014
    }, {
      "title" : "Optimal PAC multiple arm identification with applications to crowdsourcing",
      "author" : [ "Y. Zhou", "X. Chen", "J. Li" ],
      "venue" : "In Proceedings of International Conference on Machine Learning (ICML),",
      "citeRegEx" : "Zhou et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Zhou et al\\.",
      "year" : 2014
    } ],
    "referenceMentions" : [ {
      "referenceID" : 24,
      "context" : "The notion of aggregate regret for multiple-arm identification was first introduced in Zhou et al. [2014] , which is defined as the difference of the averaged expected rewards between the selected set of arms and the best K arms.",
      "startOffset" : 87,
      "endOffset" : 106
    }, {
      "referenceID" : 24,
      "context" : "The notion of aggregate regret for multiple-arm identification was first introduced in Zhou et al. [2014] , which is defined as the difference of the averaged expected rewards between the selected set of arms and the best K arms. In contrast to Zhou et al. [2014] that only provides instance-independent sample complexity, we introduce a new hardness parameter for characterizing the difficulty of any given instance.",
      "startOffset" : 87,
      "endOffset" : 264
    }, {
      "referenceID" : 24,
      "context" : "To measure the quality of the selected arms, we adopt the notion of aggregate regret (or regret for short) from Zhou et al. [2014]. In particular, we assume that arms are ordered by their mean θ1 ≥ θ2 ≥ · · · ≥ θn so that the set of the best K arms is {1, .",
      "startOffset" : 112,
      "endOffset" : 131
    }, {
      "referenceID" : 20,
      "context" : "To solve this problem, Zhou et al. [2014] proposed the OptMAI algorithm and established its sample complexity Θ ( n 2 ( 1 + ln δ −1 K )) , which is shown to be asymptotically optimal.",
      "startOffset" : 23,
      "endOffset" : 42
    }, {
      "referenceID" : 20,
      "context" : "To solve this problem, Zhou et al. [2014] proposed the OptMAI algorithm and established its sample complexity Θ ( n 2 ( 1 + ln δ −1 K )) , which is shown to be asymptotically optimal. However, the algorithm and the corresponding sample complexity in Zhou et al. [2014] are non-adaptive to the underlying instance.",
      "startOffset" : 23,
      "endOffset" : 269
    }, {
      "referenceID" : 4,
      "context" : "Chen et al. [2014] developed the CLUCB-PAC algorithm and established an instance-dependent sample complexity for a more general class of problems, including the -top-K arm identification problem as one of the key examples.",
      "startOffset" : 0,
      "endOffset" : 19
    }, {
      "referenceID" : 4,
      "context" : "Chen et al. [2014] developed the CLUCB-PAC algorithm and established an instance-dependent sample complexity for a more general class of problems, including the -top-K arm identification problem as one of the key examples. When applying the CLUCB-PAC algorithm to identify -top-K arms, the sample complexity becomes O((logH ) +log δ−1)H(0, ) where H ) = ∑n i=1 min{(∆i) −2, −2}, ∆i = θi− θK+1 for i ≤ K, ∆i = θK − θi for i > K. The reason why we adopt the notation H ) will be clear from Section 1.1. However, this bound may be improved for the following two reasons. First, intuitively, the hardness parameter H ) is the total number of necessary pulls needed for each arm to identify whether it is among the top-K arms or the rest so that the algorithm can decide whether to accept or reject the arm (when the arm’s mean is -close to the boundary between the top-K arms and the rest arms, it can be either selected or rejected). However, in many cases, even if an arm’s mean is -far from the boundary, we may still be vague about the comparison between its mean and the boundary, i.e. either selecting or rejecting the arm satisfies the aggregate regret bound. This may lead to fewer number of pulls and a smaller hardness parameter for the same instance. Second, the worst-case sample complexity for CLUCB-PAC becomes O((logn + log −1 + log δ−1)n −2). When δ is a constant, this bound is logn times more than the best non-adaptive algorithm in Zhou et al. [2014].",
      "startOffset" : 0,
      "endOffset" : 1466
    }, {
      "referenceID" : 4,
      "context" : "Note that this bound has a similar form as the one in Chen et al. [2014], but as mentioned above, we have an √",
      "startOffset" : 54,
      "endOffset" : 73
    }, {
      "referenceID" : 24,
      "context" : "1), the worst-case sample complexity of ImprovedTopK matches the best instance-independent shown in Zhou et al. [2014] up to an extra log( −1) factor (for constant δ).",
      "startOffset" : 100,
      "endOffset" : 119
    }, {
      "referenceID" : 2,
      "context" : ", Bubeck et al. [2013]), we first define the gap of the i-th arm",
      "startOffset" : 2,
      "endOffset" : 23
    }, {
      "referenceID" : 2,
      "context" : ", Bubeck et al. [2013], Karnin et al.",
      "startOffset" : 2,
      "endOffset" : 23
    }, {
      "referenceID" : 2,
      "context" : ", Bubeck et al. [2013], Karnin et al. [2013]) is H̃ , ∑n i=1 ∆ −2 i .",
      "startOffset" : 2,
      "endOffset" : 45
    }, {
      "referenceID" : 23,
      "context" : ", linear contextual bandit [Soare et al., 2014], batch arm pulls [Jun et al.",
      "startOffset" : 27,
      "endOffset" : 47
    }, {
      "referenceID" : 15,
      "context" : ", 2014], batch arm pulls [Jun et al., 2016].",
      "startOffset" : 25,
      "endOffset" : 43
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]).",
      "startOffset" : 37,
      "endOffset" : 463
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]).",
      "startOffset" : 37,
      "endOffset" : 629
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al.",
      "startOffset" : 37,
      "endOffset" : 714
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) .",
      "startOffset" : 37,
      "endOffset" : 774
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2).",
      "startOffset" : 37,
      "endOffset" : 1026
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed.",
      "startOffset" : 37,
      "endOffset" : 1285
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al.",
      "startOffset" : 37,
      "endOffset" : 1657
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings.",
      "startOffset" : 37,
      "endOffset" : 1708
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al.",
      "startOffset" : 37,
      "endOffset" : 1784
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time.",
      "startOffset" : 37,
      "endOffset" : 1845
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.",
      "startOffset" : 37,
      "endOffset" : 1967
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret.",
      "startOffset" : 37,
      "endOffset" : 2284
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper.",
      "startOffset" : 37,
      "endOffset" : 2595
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm.",
      "startOffset" : 37,
      "endOffset" : 2706
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K.",
      "startOffset" : 37,
      "endOffset" : 2883
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al.",
      "startOffset" : 37,
      "endOffset" : 3220
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints.",
      "startOffset" : 37,
      "endOffset" : 3255
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints. Audibert et al. [2010] and Bubeck et al.",
      "startOffset" : 37,
      "endOffset" : 3334
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints. Audibert et al. [2010] and Bubeck et al. [2013] considered expected aggregate regret (i.",
      "startOffset" : 37,
      "endOffset" : 3359
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints. Audibert et al. [2010] and Bubeck et al. [2013] considered expected aggregate regret (i.e. 1 K (∑K i=1 θi −E (∑ i∈T θi )) , where the expectation is taken over the randomness of the algorithm. Note that this notion of expected aggregate regret is a weaker objective than the aggregate regret. Moreover, there are some other recent works studying the problem of best-arm identification in different setups, e.g., linear contextual bandit [Soare et al., 2014], batch arm pulls [Jun et al., 2016]. For our -top-K arm problem, the state-of-the-art instance-dependent sample complexity was given by Chen et al. [2014] (see Section B.",
      "startOffset" : 37,
      "endOffset" : 3924
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints. Audibert et al. [2010] and Bubeck et al. [2013] considered expected aggregate regret (i.e. 1 K (∑K i=1 θi −E (∑ i∈T θi )) , where the expectation is taken over the randomness of the algorithm. Note that this notion of expected aggregate regret is a weaker objective than the aggregate regret. Moreover, there are some other recent works studying the problem of best-arm identification in different setups, e.g., linear contextual bandit [Soare et al., 2014], batch arm pulls [Jun et al., 2016]. For our -top-K arm problem, the state-of-the-art instance-dependent sample complexity was given by Chen et al. [2014] (see Section B.2 in Appendix of their paper). More specifically, Chen et al. [2014] proposed CLUCB-PAC algorithms that finds -top-K arms with probability at least (1− δ) using O (( log δ−1 + logH ) ) H ) ) pulls.",
      "startOffset" : 37,
      "endOffset" : 4008
    }, {
      "referenceID" : 1,
      "context" : ", 2002, Mannor and Tsitsiklis, 2004, Audibert et al., 2010, Gabillon et al., 2011, 2012, Karnin et al., 2013, Jamieson et al., 2014, Kaufmann et al., 2016, Russo, 2016, Chen et al., 2016b]. More specifically, in the special case when K = 1, our problem reduces to identifying an -best arm, i.e. an arm whose expected reward is different from the best arm by an additive error of at most , with probability at least (1−δ). For this problem, Even-Dar et al. [2006] showed an algorithm with an instanceindependent sample complexity O ( n 2 log δ−1 ) (and this was proved to be asymptotically optimal by Mannor and Tsitsiklis [2004]). An instance-dependent algorithm for this problem was given by Bubeck et al. [2013] and an improved algorithm was given by Karnin et al. [2013] with an instance-dependent sample complexity of O (∑n i=2 max{∆i, } −2(log δ−1 + log log max{∆i, }−1) ) . In the worst case, this bound becomes O ( n 2 (log δ−1 + log log −1) ) , almost matching the instance-independent bound in Even-Dar et al. [2006]. When K = 1, we have t( ,K) = 0 and thus H ) = H ) = Θ (∑n i=2 max{∆i, } −2). Therefore, the sample complexity in our Theorem 2 becomes O((log −1 + log δ−1)H) = O ( n 2 (log −1 + log δ−1) ) in the worst-case, almost matching the bound by Karnin et al. [2013]. For the problem of identifying top-K arms with K > 1, different notions of -optimal solution have been proposed. One popular metric is the misidentification probability (MisProb), i.e. Pr(T 6= {1, . . . ,K}). In the PAC setting (i.e. controlling MisProb less than with probability at least 1 − δ), many algorithms have been developed recently, e.g., Bubeck et al. [2013] in the fixed budget setting and Chen et al. [2014] for both fixed confidence and fixed budget settings. Gabillon et al. [2016] further improved the sample complexity in Chen et al. [2014]; however the current implementations of their algorithm have an exponential running time. As argued in Zhou et al. [2014], the MisProb requires to identify the exact top-K arms, which might be too stringent for some applications (e.g., crowdsourcing). The MisProb requires a certain gap between θK and θK+1 to identify the top-K arms, and this requirement is not unnecessary when using the aggregate regret. As shown in Zhou et al. [2014], when the gap of any consecutive pair between θi and θi+1 among the first 2K arms is o(1/n), the sample complexity has to be huge (ω(n)) to make the MisProb less than , while any K arms among the first 2K form a desirably set of -top-K arms in terms of aggregate regret. Therefore, we follow Zhou et al. [2014] and adopt the aggregate regret to define the approximate solution in this paper. Kalyanakrishnan et al. [2012] proposed the so-called Explore-K metric, which requires for each arm i in the selected set T to satisfy θi ≥ θK − , where θK is the mean of the K-th best arm. Cao et al. [2015] proposed a more restrictive notion of optimality—Elementwise- -Optimal, which requires the mean reward of the i-th best arm in the selected set T be at least θi − for 1 ≤ i ≤ K. It is clear that the Elementwise- -Optimal is a stronger guarantee than our -top-K in regret, while the latter is stronger than Explore-K. Chen et al. [2016a] further extended Cao et al. [2015] to pure exploration problems under matroid constraints. Audibert et al. [2010] and Bubeck et al. [2013] considered expected aggregate regret (i.e. 1 K (∑K i=1 θi −E (∑ i∈T θi )) , where the expectation is taken over the randomness of the algorithm. Note that this notion of expected aggregate regret is a weaker objective than the aggregate regret. Moreover, there are some other recent works studying the problem of best-arm identification in different setups, e.g., linear contextual bandit [Soare et al., 2014], batch arm pulls [Jun et al., 2016]. For our -top-K arm problem, the state-of-the-art instance-dependent sample complexity was given by Chen et al. [2014] (see Section B.2 in Appendix of their paper). More specifically, Chen et al. [2014] proposed CLUCB-PAC algorithms that finds -top-K arms with probability at least (1− δ) using O (( log δ−1 + logH ) ) H ) ) pulls. Since we always have H ) ≥ H ) ≥ Ω(n) and H ) ≥ (Ψ t) −2, our Theorem 1 is not worse than the bound in Chen et al. [2014]. Indeed, in many common settings, H ) can be much smaller than H ) so that Theorem 1 (and therefore Theorem 2) requires",
      "startOffset" : 37,
      "endOffset" : 4259
    }, {
      "referenceID" : 16,
      "context" : ", best-arm identification in Bayesian setup Russo [2016]).",
      "startOffset" : 44,
      "endOffset" : 57
    }, {
      "referenceID" : 3,
      "context" : "In crowdsourcing applications, Chen et al. [2015] and Abbasi-Yadkori et al.",
      "startOffset" : 31,
      "endOffset" : 50
    }, {
      "referenceID" : 0,
      "context" : "[2015] and Abbasi-Yadkori et al. [2015] also made this assumption for modeling workers’ accuracy, which correspond to the expected rewards.",
      "startOffset" : 11,
      "endOffset" : 40
    }, {
      "referenceID" : 4,
      "context" : "The following lemma upper-bounds H ) for O(1)-spread arms, and shows the improvement of our algorithms compared to Chen et al. [2014] on O(1)-spread arms.",
      "startOffset" : 115,
      "endOffset" : 134
    }, {
      "referenceID" : 2,
      "context" : "Bubeck et al. [2013]. The algorithm goes by rounds for r = 1, 2, 3, .",
      "startOffset" : 0,
      "endOffset" : 21
    }, {
      "referenceID" : 24,
      "context" : "Lemma 10 [Zhou et al., 2014] For a set of arms S = {θ1 ≥ .",
      "startOffset" : 9,
      "endOffset" : 28
    }, {
      "referenceID" : 10,
      "context" : "We will need the following anti-concentration result which is an easy consequence of Feller Feller [1943] (cf.",
      "startOffset" : 85,
      "endOffset" : 106
    }, {
      "referenceID" : 10,
      "context" : "We will need the following anti-concentration result which is an easy consequence of Feller Feller [1943] (cf. Matousek and Vondrák. [2008]).",
      "startOffset" : 85,
      "endOffset" : 140
    }, {
      "referenceID" : 20,
      "context" : "Fact 1 (Matousek and Vondrák. [2008]) Let Y be a sum of independent random variables, each attaining values in [0, 1], and let σ = √ Var[Y ] ≥ 200.",
      "startOffset" : 8,
      "endOffset" : 37
    }, {
      "referenceID" : 18,
      "context" : "We compare our Algorithm 1 (AdaptiveTopK ) with two state-of-the-art methods – OptMAI in Zhou et al. [2014] and CLUCB-PAC in Chen et al.",
      "startOffset" : 89,
      "endOffset" : 108
    }, {
      "referenceID" : 3,
      "context" : "[2014] and CLUCB-PAC in Chen et al. [2014]. The comparison between OptMAI /CLUCB-PAC and previous methods (e.",
      "startOffset" : 24,
      "endOffset" : 43
    }, {
      "referenceID" : 2,
      "context" : ", the methods in Bubeck et al. [2013] and Kalyanakrishnan et al.",
      "startOffset" : 17,
      "endOffset" : 38
    }, {
      "referenceID" : 2,
      "context" : ", the methods in Bubeck et al. [2013] and Kalyanakrishnan et al. [2012]) have already been demonstrated in Zhou et al.",
      "startOffset" : 17,
      "endOffset" : 72
    }, {
      "referenceID" : 2,
      "context" : ", the methods in Bubeck et al. [2013] and Kalyanakrishnan et al. [2012]) have already been demonstrated in Zhou et al. [2014] and Chen et al.",
      "startOffset" : 17,
      "endOffset" : 126
    }, {
      "referenceID" : 2,
      "context" : ", the methods in Bubeck et al. [2013] and Kalyanakrishnan et al. [2012]) have already been demonstrated in Zhou et al. [2014] and Chen et al. [2014], and thus omitted here for the",
      "startOffset" : 17,
      "endOffset" : 149
    }, {
      "referenceID" : 22,
      "context" : "• Rte: We generate θ from a real recognizing textual entailment (RTE) dataset Snow et al. [2008]. There are n = 164 workers and we set each θi be the true labeling accuracy of the i-th worker.",
      "startOffset" : 78,
      "endOffset" : 97
    } ],
    "year" : 2017,
    "abstractText" : "We study the problem of selecting K arms with the highest expected rewards in a stochastic n-armed bandit game. This problem has a wide range of applications, e.g., A/B testing, crowdsourcing, simulation optimization. Our goal is to develop a PAC algorithm, which, with probability at least 1 − δ, identifies a set of K arms with the aggregate regret at most . The notion of aggregate regret for multiple-arm identification was first introduced in Zhou et al. [2014] , which is defined as the difference of the averaged expected rewards between the selected set of arms and the best K arms. In contrast to Zhou et al. [2014] that only provides instance-independent sample complexity, we introduce a new hardness parameter for characterizing the difficulty of any given instance. We further develop two algorithms and establish the corresponding sample complexity in terms of this hardness parameter. The derived sample complexity can be significantly smaller than state-of-the-art results for a large class of instances and matches the instance-independent lower bound upto a log( −1) factor in the worst case. We also prove a lower bound result showing that the extra log( −1) is necessary for instance-dependent algorithms using the introduced hardness parameter.",
    "creator" : "LaTeX with hyperref package"
  }
}