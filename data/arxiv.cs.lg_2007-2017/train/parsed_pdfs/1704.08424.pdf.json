{
  "name" : "1704.08424.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Multimodal Word Distributions",
    "authors" : [ "Ben Athiwaratkun", "Andrew Gordon Wilson" ],
    "emails" : [ "pa338@cornell.edu", "andrew@cornell.edu" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "To model language, we must represent words. We can imagine representing every word with a binary one-hot vector corresponding to a dictionary position. But such a representation contains no valuable semantic information: distances between word vectors represent only differences in alphabetic ordering. Modern approaches, by contrast, learn to map words with similar meanings to nearby points in a vector space (Mikolov et al., 2013a), from large datasets such as Wikipedia. These learned word embeddings have become ubiquitous in predictive tasks.\nVilnis and McCallum (2014) recently proposed an alternative view, where words are represented by a whole probability distribution instead of a deterministic point vector. Specifically, they model each word by a Gaussian distribution, and learn its mean and covariance matrix from data. This approach generalizes any deterministic point embedding, which can be fully captured by the mean vector of the Gaussian distribution. Moreover, the full distribution provides much richer information\nthan point estimates for characterizing words, representing probability mass and uncertainty across a set of semantics.\nHowever, since a Gaussian distribution can have only one mode, the learned uncertainty in this representation can be overly diffuse for words with multiple distinct meanings (polysemies), in order for the model to assign some density to any plausible semantics (Vilnis and McCallum, 2014). Moreover, the mean of the Gaussian can be pulled in many opposing directions, leading to a biased distribution that centers its mass mostly around one meaning while leaving the others not well represented.\nIn this paper, we propose to represent each word with an expressive multimodal distribution, for multiple distinct meanings, entailment, heavy tailed uncertainty, and enhanced interpretability. For example, one mode of the word ‘bank’ could overlap with distributions for words such as ‘finance’ and ‘money’, and another mode could overlap with the distributions for ‘river’ and ‘creek’. It is our contention that such flexibility is critical for both qualitatively learning about the meanings of words, and for optimal performance on many predictive tasks.\nIn particular, we model each word with a mixture of Gaussians (Section 3.1). We learn all the parameters of this mixture model using a maximum margin energy-based ranking objective (Joachims, 2002; Vilnis and McCallum, 2014) (Section 3.3), where the energy function describes the affinity between a pair of words. For analytic tractability with Gaussian mixtures, we use the inner product between probability distributions in a Hilbert space, known as the expected likelihood kernel (Jebara et al., 2004), as our energy function (Section 3.4). Additionally, we propose transformations for numerical stability and initialization A.2, resulting in a robust, straightforward, and ar X\niv :1\n70 4.\n08 42\n4v 1\n[ st\nat .M\nL ]\n2 7\nA pr\n2 01\n7\nscalable learning procedure, capable of training on a corpus with billions of words in days. We show that the model is able to automatically discover multiple meanings for words (Section 4.3), and significantly outperform other alternative methods across several tasks such as word similarity and entailment (Section 4.4, 4.5, 4.7). We have made code available at http://github.com/ benathi/word2gm, where we implement our model in Tensorflow (Abadi et. al, 2015)."
    }, {
      "heading" : "2 Related Work",
      "text" : "In the past decade, there has been an explosion of interest in word vector representations. word2vec, arguably the most popular word embedding, uses continuous bag of words and skipgram models, in conjunction with negative sampling for efficient conditional probability estimation (Mikolov et al., 2013a,b). Other popular approaches use feedforward (Bengio et al., 2003) and recurrent neural network language models (Mikolov et al., 2010, 2011b; Collobert and Weston, 2008) to predict missing words in sentences, producing hidden layers that can act as word embeddings that encode semantic information. They employ conditional probability estimation techniques, including hierarchical softmax (Mikolov et al., 2011a; Mnih and Hinton, 2008; Morin and Bengio, 2005) and noise contrastive estimation (Gutmann and Hyvärinen, 2012).\nA different approach to learning word embeddings is through factorization of word cooccurrence matrices such as GloVe embeddings (Pennington et al., 2014). The matrix factorization approach has been shown to have an implicit connection with skip-gram and negative sampling Levy and Goldberg (2014). Bayesian matrix factorization where row and columns are modeled as Gaussians has been explored in Salakhutdinov and Mnih (2008) and provides a different probabilistic perspective of word embeddings.\nIn exciting recent work, Vilnis and McCallum (2014) propose a Gaussian distribution to model each word. Their approach is significantly more expressive than typical point embeddings, with the ability to represent concepts such as entailment, by having the distribution for one word (e.g. ‘music’) encompass the distributions for sets of related words (‘jazz’ and ‘pop’). However, with a unimodal distribution, their approach cannot capture multiple distinct meanings, much like most deter-\nministic approaches. Recent work has also proposed deterministic embeddings that can capture polysemies, for example through a cluster centroid of context vectors (Huang et al., 2012), or an adapted skip-gram model with an EM algorithm to learn multiple latent representations per word (Tian et al., 2014). Neelakantan et al. (2014) also extends skip-gram with multiple prototype embeddings where the number of senses per word is determined by a non-parametric approach. Liu et al. (2015) learns topical embeddings based on latent topic models where each word is associated with multiple topics. Another related work by Nalisnick and Ravi (2015) models embeddings in infinite-dimensional space where each embedding can gradually represent incremental word sense if complex meanings are observed.\nProbabilistic word embeddings have only recently begun to be explored, and have so far shown great promise. In this paper, we propose, to the best of our knowledge, the first probabilistic word embedding that can capture multiple meanings. We use a Gaussian mixture model which allows for a highly expressive distributions over words. At the same time, we retain scalability and analytic tractability with an expected likelihood kernel energy function for training. The model and training procedure harmonize to learn descriptive representations of words, with superior performance on several benchmarks."
    }, {
      "heading" : "3 Methodology",
      "text" : "In this section, we introduce our Gaussian mixture (GM) model for word representations, and present a training method to learn the parameters of the Gaussian mixture. This method uses an energy-based maximum margin objective, where we wish to maximize the similarity of distributions of nearby words in sentences. We propose an energy function that compliments the GM model by retaining analytic tractability. We also provide critical practical details for numerical stability, hyperparameters, and initialization."
    }, {
      "heading" : "3.1 Word Representation",
      "text" : "We represent each word w in a dictionary as a Gaussian mixture with K components. Specifically, the distribution of w, fw, is given by the\ndensity\nfw(~x) = K∑ i=1 pw,i N [~x; ~µw,i,Σw,i] (1)\n= K∑ i=1 pw,i√ 2π|Σw,i| e− 1 2 (~x−~µw,i)>Σ−1w,i(~x−~µw,i) ,\nwhere ∑K\ni=1 pw,i = 1.\nThe mean vectors ~µw,i represent the location of the ith component of word w, and are akin to the point embeddings provided by popular approaches like word2vec. pw,i represents the component probability (mixture weight), and Σw,i is the component covariance matrix, containing uncertainty information. Our goal is to learn all of the model parameters ~µw,i, pw,i,Σw,i from a corpus of natural sentences to extract semantic information of words. Each Gaussian component’s mean vector of word w can represent one of the word’s distinct meanings. For instance, one component of a polysemous word such as ‘rock’ should represent the meaning related to ‘stone’ or ‘pebbles’, whereas another component should represent the meaning related to music such as ‘jazz’ or ‘pop’. Figure 1 illustrates our word embedding model, and the difference between multimodal and unimodal representations, for words with multiple meanings."
    }, {
      "heading" : "3.2 Skip-Gram",
      "text" : "The training objective for learning θ = {~µw,i, pw,i,Σw,i} draws inspiration from the continuous skip-gram model (Mikolov et al., 2013a), where word embeddings are trained to maximize the probability of observing a word given another nearby word. This procedure follows the distributional hypothesis that words occurring in natural contexts tend to be semantically related. For instance, the words ‘jazz’ and ‘music’ tend to occur near one another more often than ‘jazz’ and ‘cat’; hence, ‘jazz’ and ‘music’ are more likely to be related. The learned word representation contains useful semantic information and can be used to perform a variety of NLP tasks such as word similarity analysis, sentiment classification, modelling word analogies, or as a preprocessed input for complex system such as statistical machine translation."
    }, {
      "heading" : "3.3 Energy-based Max-Margin Objective",
      "text" : "Each sample in the objective consists of two pairs of words, (w, c) and (w, c′). w is sampled from a sentence in a corpus and c is a nearby word within a context window of length `. For instance, a word w = ‘jazz’ which occurs in the sentence ‘I listen to jazz music’ has context words (‘I’, ‘listen’, ‘to’ , ‘music’). c′ is a negative context word (e.g. ‘airplane’) obtained from random sampling.\nThe objective is to maximize the energy between words that occur near each other, w and c, and minimize the energy between w and its negative context c′. This approach is similar to neg-\native sampling (Mikolov et al., 2013a,b), which contrasts the dot product between positive context pairs with negative context pairs. The energy function is a measure of similarity between distributions and will be discussed in Section 3.4.\nWe use a max-margin ranking objective (Joachims, 2002), used for Gaussian embeddings in Vilnis and McCallum (2014), which pushes the similarity of a word and its positive context higher than that of its negative context by a margin m:\nLθ(w, c, c ′) = max(0,\nm− logEθ(w, c) + logEθ(w, c′))\nThis objective can be minimized by mini-batch stochastic gradient descent with respect to the parameters θ = {~µw,i, pw,i,Σw,i} – the mean vectors, covariance matrices, and mixture weights – of our multimodal embedding in Eq. (1).\nWord Sampling We use a word sampling scheme similar to the implementation in word2vec (Mikolov et al., 2013a,b) to balance the importance of frequent words and rare words. Frequent words such as ‘the’, ‘a’, ‘to’ are not as meaningful as relatively less frequent words such as ‘dog’, ‘love’, ‘rock’, and we are often more interested in learning the semantics of the less frequently observed words. We use subsampling to improve the performance of learning word vectors (Mikolov et al., 2013b). This technique discards word wi with probability P (wi) = 1 − √ t/f(wi), where f(wi) is the frequency of word wi in the training corpus and t is a frequency threshold.\nTo generate negative context words, each word type wi is sampled according to a distribution Pn(wi) ∝ U(wi)3/4 which is a distorted version of the unigram distribution U(wi) that also serves to diminish the relative importance of frequent words. Both subsampling and the negative distribution choice are proven effective in word2vec training (Mikolov et al., 2013b)."
    }, {
      "heading" : "3.4 Energy Function",
      "text" : "For vector representations of words, a usual choice for similarity measure (energy function) is a dot product between two vectors. Our word representations are distributions instead of point vectors and therefore need a measure that reflects not only the point similarity, but also the uncertainty.\nWe propose to use the expected likelihood kernel, which is a generalization of an inner product\nbetween vectors to an inner product between distributions (Jebara et al., 2004). That is,\nE(f, g) = ∫ f(x)g(x) dx = 〈f, g〉L2\nwhere 〈·, ·〉L2 denotes the inner product in Hilbert space L2. We choose this form of energy since it can be evaluated in a closed form given our choice of probabilistic embedding in Eq. (1).\nFor Gaussian mixtures f, g representing the words wf , wg, f(x) = ∑K i=1 piN (x; ~µf,i,Σf,i)\nand g(x) = ∑K i=1 qiN (x; ~µg,i,Σg,i), ∑K i=1 pi =\n1, and ∑K\ni=1 qi = 1, we find (see Section A.1) the log energy is\nlogEθ(f, g) = log K∑ j=1 K∑ i=1 piqje ξi,j (2)\nwhere\nξi,j ≡ logN (0; ~µf,i − ~µg,j ,Σf,i + Σg,j)\n= −1 2 log det(Σf,i + Σg,j)− D 2 log(2π)\n−1 2 (~µf,i − ~µg,j)>(Σf,i + Σg,j)−1(~µf,i − ~µg,j) (3)\nWe call the term ξi,j partial (log) energy. Observe that this term captures the similarity between the ith meaning of word wf and the jth meaning of word wg. The total energy in Equation 2 is the sum of possible pairs of partial energies, weighted accordingly by the mixture probabilities pi and qj .\nThe term−(~µf,i−~µg,j)>(Σf,i+Σg,j)−1(~µf,i− ~µg,j) in ξi,j explains the difference in mean vectors of semantic pair (wf , i) and (wg, j). If the semantic uncertainty (covariance) for both pairs are low, this term has more importance relative to other terms due to the inverse covariance scaling. We observe that the loss function Lθ in Section 3.3 attains a low value when Eθ(w, c) is relatively high. High values of Eθ(w, c) can be achieved when the component means across different words ~µf,i and ~µg,j are close together (e.g., similar point representations). High energy can also be achieved by large values of Σf,i and Σg,j , which washes out the importance of the mean vector difference. The term− log det(Σf,i+Σg,j) serves as a regularizer that prevents the covariances from being pushed too high at the expense of learning a good mean embedding.\nAt the beginning of training, ξi,j roughly are on the same scale among all pairs (i, j)’s. During this\ntime, all components learn the signals from the word occurrences equally. As training progresses and the semantic representation of each mixture becomes more clear, there can be one term of ξi,j’s that is predominantly higher than other terms, giving rise to a semantic pair that is most related.\nThe negative KL divergence is another sensible choice of energy function, providing an asymmetric metric between word distributions. However, unlike the expected likelihood kernel, KL divergence does not have a closed form if the two distributions are Gaussian mixtures."
    }, {
      "heading" : "4 Experiments",
      "text" : "We have introduced a model for multi-prototype embeddings, which expressively captures word meanings with whole probability distributions. We show that our combination of energy and objective functions, proposed in Section 3, enables one to learn interpretable multimodal distributions through unsupervised training, for describing words with multiple distinct meanings. By representing multiple distinct meanings, our model also reduces the unnecessarily large variance of a Gaussian embedding model, and has improved results on word entailment tasks.\nTo learn the parameters of the proposed mixture model, we train on a concatenation of two datasets: UKWAC (2.5 billion tokens) and Wackypedia (1 billion tokens) (Baroni et al., 2009). We discard words that occur fewer than 100 times in the corpus, which results in a vocabulary size of 314, 129 words. Our word sampling scheme, described at the end of Section 4.3, is similar to that of word2vec with one negative context word for each positive context word.\nAfter training, we obtain learned parameters {~µw,i,Σw,i, pi}Ki=1 for each word w. We treat the mean vector ~µw,i as the embedding of the ith mixture component with the covariance matrix Σw,i representing its subtlety and uncertainty. We perform qualitative evaluation to show that our embeddings learn meaningful multi-prototype representations and compare to existing models using a quantitative evaluation on word similarity datasets and word entailment.\nWe name our model as Word to Gaussian Mixture (w2gm) in constrast to Word to Gaussian (w2g) (Vilnis and McCallum, 2014). Unless stated otherwise, w2g refers to our implementation of w2gm model with one mixture component."
    }, {
      "heading" : "4.1 Hyperparameters",
      "text" : "Unless stated otherwise, we experiment with K = 2 components for the w2gm model, but we have results and discussion of K = 3 at the end of section 4.3. We primarily consider the spherical case for computational efficiency. We note that for diagonal or spherical covariances, the energy can be computed very efficiently since the matrix inversion would simply require O(d) computation instead of O(d3) for a full matrix. Empirically, we have found diagonal covariance matrices become roughly spherical after training. Indeed, for these relatively high dimensional embeddings, there are sufficient degrees of freedom for the mean vectors to be learned such that the covariance matrices need not be asymmetric. Therefore, we perform all evaluations with spherical covariance models.\nModels used for evaluation have dimension D = 50 and use context window ` = 10 unless stated otherwise. We provide additional hyperparameters and training details in the supplementary material (A.2)."
    }, {
      "heading" : "4.2 Similarity Measures",
      "text" : "Since our word embeddings contain multiple vectors and uncertainty parameters per word, we use the following measures that generalizes similarity scores. These measures pick out the component pair with maximum similarity and therefore determine the meanings that are most relevant."
    }, {
      "heading" : "4.2.1 Expected Likelihood Kernel",
      "text" : "A natural choice for a similarity score is the expected likelihood kernel, an inner product between distributions, which we discussed in Section 3.4. This metric incorporates the uncertainty from the covariance matrices in addition to the similarity between the mean vectors."
    }, {
      "heading" : "4.2.2 Maximum Cosine Similarity",
      "text" : "This metric measures the maximum similarity of mean vectors among all pairs of mixture components between distributions f and g. That is,\nd(f, g) = max i,j=1,...,K 〈µf,i,µg,j〉 ||µf,i|| · ||µg,j || , which corresponds to matching the meanings of f and g that are the most similar. For a Gaussian embedding, maximum similarity reduces to the usual cosine similarity."
    }, {
      "heading" : "4.2.3 Minimum Euclidean Distance",
      "text" : "Cosine similarity is popular for evaluating embeddings. However, our training objective directly involves the Euclidean distance in Eq. (3), as opposed to dot product of vectors such as in word2vec. Therefore, we also consider the Euclidean metric: d(f, g) = min\ni,j=1,...,K [||µf,i−µg,j ||]."
    }, {
      "heading" : "4.3 Qualitative Evaluation",
      "text" : "In Table 1, we show examples of polysemous words and their nearest neighbors in the embedding space to demonstrate that our trained embeddings capture multiple word senses. For instance, a word such as ‘rock’ that could mean either ‘stone’ or ‘rock music’ should have each of its meanings represented by a distinct Gaussian component. Our results for a mixture of two Gaussians model confirm this hypothesis, where we observe that the 0th component of ‘rock’ being related to (‘basalt’, ‘boulders’) and the 1st component being related to (‘indie’, ‘funk’, ‘hip-hop’). Similarly, the word bank has its 0th component representing the river bank and the 1st component representing the financial bank.\nBy contrast, in Table 1 (bottom), see that for Gaussian embeddings with one mixture component, nearest neighbors of polysemous words are predominantly related to a single meaning. For instance, ‘rock’ mostly has neighbors related to rock\nmusic and ‘bank’ mostly related to the financial bank. The alternative meanings of these polysemous words are not well represented in the embeddings. As a numerical example, the cosine similarity between ‘rock’ and ‘stone’ for the Gaussian representation of Vilnis and McCallum (2014) is only 0.029, much lower than the cosine similarity 0.586 between the 0th component of ‘rock’ and ‘stone’ in our multimodal representation.\nIn cases where a word only has a single popular meaning, the mixture components can be fairly close; for instance, one component of ‘stone’ is close to (‘stones’, ‘stonework’, ‘slab’) and the other to (‘carving, ‘relic’, ‘excavated’), which reflects subtle variations in meanings. In general, the mixture can give properties such as heavy tails and more interesting unimodal characterizations of uncertainty than could be described by a single Gaussian.\nEmbedding Visualization We provide an interactive visualization as part of our code repository: https://github.com/benathi/ word2gm#visualization that allows realtime queries of words’ nearest neighbors (in the embeddings tab) for K = 1, 2, 3 components. We use a notation similar to that of Table 1, where a token w:i represents the component i of a word w. For instance, if in the K = 2 link we search for bank:0, we obtain the nearest neigh-\nbors such as river:1, confluence:0, waterway:1, which indicates that the 0th component of ‘bank’ has the meaning ‘river bank’. On the other hand, searching for bank:1 yields nearby words such as banking:1, banker:0, ATM:0, indicating that this component is close to the ‘financial bank’. We also have a visualization of a unimodal (w2g) for comparison in the K = 1 link.\nIn addition, the embedding link for our Gaussian mixture model with K = 3 mixture components can learn three distinct meanings. For instance, each of the three components of ‘cell’ is close to (‘keypad’, ‘digits’), (‘incarcerated’, ‘inmate’) or (‘tissue’, ‘antibody’), indicating that the distribution captures the concept of ‘cellphone’, ‘jail cell’, or ‘biological cell’, respectively. Due to the limited number of words with more than 2 meanings, our model with K = 3 does not generally offer substantial performance differences to our model with K = 2; hence, we do not further display K = 3 results for compactness."
    }, {
      "heading" : "4.4 Word Similarity",
      "text" : "We evaluate our embeddings on several standard word similarity datasets, namely, SimLex (Hill et al., 2014), WS or WordSim-353, WS-S (similarity), WS-R (relatedness) (Finkelstein et al., 2002), MEN (Bruni et al., 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al., 2011; Halawi et al., 2012), and RW (Luong et al., 2013). Each dataset contains a list of word pairs with a human score of how related or similar the two words are.\nWe calculate the Spearman correlation (Spearman, 1904) between the labels and our scores generated by the embeddings. The Spearman correlation is a rank-based correlation measure that assesses how well the scores describe the true labels.\nThe correlation results are shown in Table 2 using the scores generated from the expected likelihood kernel, maximum cosine similarity, and maximum Euclidean distance.\nWe show the results of our Gaussian mixture model and compare the performance with that of word2vec and the original Gaussian embedding by Vilnis and McCallum (2014). We note that our model of a unimodal Gaussian embedding w2g also outperforms the original model, which differs in model hyperparameters and initialization,\nfor most datasets. Our multi-prototype model w2gm also performs better than skip-gram or Gaussian embedding methods on many datasets, namely, WS, WS-R, MEN, MC, RG, YP, MT-287, RW. The maximum cosine similarity yields the best performance on most datasets; however, the minimum Euclidean distance is a better metric for the datasets MC and RW. These results are consistent for both the single-prototype and the multi-prototype models.\nWe also compare out results on WordSim-353 with the multi-prototype embedding method by Huang et al. (2012) and Neelakantan et al. (2014), shown in Table 3. We observe that our singleprototype model w2g is competitive compared to models by Huang et al. (2012), even without using a corpus with stop words removed. This could be due to the auto-calibration of importance via the covariance learning which decrease the importance of very frequent words such as ‘the’, ‘to’, ‘a’, etc. Moreover, our multi-prototype model substantially outperforms the model of Huang et al. (2012) and the MSSG model of Neelakantan et al. (2014) on the WordSim-353 dataset."
    }, {
      "heading" : "4.5 Word Similarity for Polysemous Words",
      "text" : "We use the dataset SCWS introduced by Huang et al. (2012), where word pairs are chosen to have variations in meanings of polysemous and homonymous words.\nWe compare our method with multiprototype models by Huang (Huang et al., 2012), Tian (Tian et al., 2014), Chen (Chen et al., 2014), and MSSG model by (Neelakantan et al., 2014). We note that Chen model uses an external lexical source WordNet that gives it an extra advantage.\nWe use many metrics to calculate the scores for the Spearman correlation. MaxSim refers to the maximum cosine similarity. AveSim is the average of cosine similarities with respect to the component probabilities.\nIn Table 4, the model w2g performs the best among all single-prototype models for either 50 or 200 vector dimensions. Our model w2gm performs competitively compared to other multiprototype models. In SCWS, the gain in flexibility in moving to a probability density approach appears to dominate over the effects of using a multiprototype. In most other examples, we see w2gm surpass w2g, where the multi-prototype structure\nis just as important for good performance as the probabilistic representation. Note that other models also use AvgSimC metric which uses context information which can yield better correlation (Huang et al., 2012; Chen et al., 2014). We report the numbers using AvgSim or MaxSim from the existing models which are more comparable to our performance with MaxSim."
    }, {
      "heading" : "4.6 Reduction in Variance of Polysemous Words",
      "text" : "One motivation for our Gaussian mixture embedding is to model word uncertainty more accurately than Gaussian embeddings, which can have overly large variances for polysemous words (in order to assign some mass to all of the distinct mean-\nings). We see that our Gaussian mixture model does indeed reduce the variances of each component for such words. For instance, we observe that the word rock in w2g has much higher variance per dimension (e−1.8 ≈ 1.65) compared to that of Gaussian components of rock in w2gm (which has variance of roughly e−2.5 ≈ 0.82). We also see, in the next section, that w2gm has desirable quantitative behavior for word entailment."
    }, {
      "heading" : "4.7 Word Entailment",
      "text" : "We evaluate our embeddings on the word entailment dataset from Baroni et al. (2012). The lexical entailment between words is denoted by w1 |= w2 which means that all instances of w1 are w2. The entailment dataset contains positive pairs such as\naircraft |= vehicle and negative pairs such as aircraft 6|= insect.\nWe generate entailment scores of word pairs and find the best threshold, measured by Average Precision (AP) or F1 score, which identifies negative versus positive entailment. We use the maximum cosine similarity and the minimum KL divergence, d(f, g) = min\ni,j=1,...,K KL(f ||g), for en-\ntailment scores. The minimum KL divergence is similar to the maximum cosine similarity, but also incorporates the embedding uncertainty. In addition, KL divergence is an asymmetric measure, which is more suitable for certain tasks such as word entailment where a relationship is unidirectional. For instance, w1 |= w2 does not imply w2 |= w1. Indeed, aircraft |= vehicle does not imply vehicle |= aircraft, since all aircraft are vehicles but not all vehicles are aircraft. The difference between KL(w1||w2) versus KL(w2||w1) distinguishes which word distribution encompasses another distribution, as demonstrated in Figure 1.\nTable 5 shows the results of our w2gm model versus the Gaussian embedding model w2g. We observe a trend for both models with window size 5 and 10 that the KL metric yields improvement (both AP and F1) over cosine similarity. In addition, w2gm generally outperforms w2g.\nThe multi-prototype model estimates the meaning uncertainty better since it is no longer constrained to be unimodal, leading to better characterizations of entailment. On the other hand, the Gaussian embedding model suffers from overestimatating variances of polysemous words, which results in less informative word distributions and reduced entailment scores."
    }, {
      "heading" : "5 Discussion",
      "text" : "We introduced a model that represents words with expressive multimodal distributions formed from Gaussian mixtures. To learn the properties of each mixture, we proposed an analytic energy function for combination with a maximum margin objective. The resulting embeddings capture different semantics of polysemous words, uncertainty, and entailment, and also perform favorably on word similarity benchmarks.\nElsewhere, latent probabilistic representations are proving to be exceptionally valuable, able to capture nuances such as face angles with variational autoencoders (Kingma and Welling, 2013) or subtleties in painting strokes with the InfoGAN (Chen et al., 2016). Moreover, classically deterministic deep learning architectures are actively being generalized to probabilistic deep models, for full predictive distributions instead of point estimates, and significantly more expressive representations (Wilson et al., 2016b,a; Al-Shedivat et al., 2016; Gan et al., 2016; Fortunato et al., 2017).\nSimilarly, probabilistic word embeddings can capture a range of subtle meanings, and advance the state of the art. Multimodal word distributions naturally represent our belief that words do not have single precise meanings: indeed, the shape of a word distribution can express much more semantic information than any point representation.\nIn the future, multimodal word distributions could open the doors to a new suite of applications in language modelling, where whole word distributions are used as inputs to new probabilistic LSTMs, or in decision functions where uncertainty matters. As part of this effort, we can explore different metrics between distributions, such as KL divergences, which would be a natural choice for order embeddings that model entailment properties. It would also be informative to explore inference over the number of components in mixture models for word distributions. Such an approach could potentially discover an unbounded number of distinct meanings for words, but also distribute the support of each word distribution to express highly nuanced meanings. Alternatively, we could imagine a dependent mixture model where the distributions over words are evolving with time and other covariates. One could also build new types of supervised language models, constructed to more fully leverage the rich information provided by word distributions."
    }, {
      "heading" : "Acknowledgements",
      "text" : "We thank NSF IIS-1563887 for support."
    }, {
      "heading" : "A Supplementary Material",
      "text" : "A.1 Derivation of Expected Likelihood Kernel\nWe derive the form of expected likelihood kernel for Gaussian mixtures. Let f, g be Gaussian mixture distributions representing the words wf , wg . That is, f(x) =\n∑K i=1 piN (x;µf,i,Σf,i) and g(x) =∑K\ni=1 qiN (x;µg,i,Σg,i), ∑K i=1 pi = 1, and ∑K i=1 qi = 1.\nThe expected likelihood kernel is given by\nEθ(f, g) = ∫ ( K∑ i=1 piN (x;µf,i,Σf,i) ) ·(\nK∑ j=1 qjN (x;µg,j ,Σg,j)\n) dx\n= K∑ i=1 K∑ j=1 piqj ∫ N (x;µf,i,Σf,i) · N (x;µg,j ,Σg,j) dx\n= K∑ i=1 K∑ j=1 piqjN (0;µf,i − µg,j ,Σf,i + Σg,j) = K∑ i=1 K∑ j=1 piqje ξi,j\nwhere we note that ∫ N (x;µi,Σi)N (x;µj ,Σj) dx = N (0, µi − µj ,Σi + Σj) (Vilnis and McCallum, 2014) and ξi,j is the log partial energy, given by equation 3.\nA.2 Implementation In this section we discuss practical details for training the proposed model.\nReduction to Diagonal Covariance We use a diagonal Σ, in which case inverting the covariance matrix is trivial and computations are particularly efficient.\nLet df ,dg denote the diagonal vectors of Σf ,Σg The expression for ξi,j reduces to\nξi,j = − 1\n2 D∑ r=1 log(dpr + d q r)\n−1 2\n∑[ (µp,i − µq,j) ◦\n1\ndp + dq ◦ (µp,i − µq,j) ] where ◦ denotes element-wise multiplication. The spherical case which we use in all our experiments is similar since we simply replace a vector d with a single value.\nOptimization Constraint and Stability We optimize logd since each component of diagonal vector d is constrained to be positive. Similarly, we constrain the probability pi to be in [0, 1] and sum to 1 by optimizing over unconstrained scores si ∈ (−∞,∞) and using a softmax function to convert the scores to probability pi = e\nsi∑K j=1 e sj .\nThe loss computation can be numerically unstable if elements of the diagonal covariances are very small, due to the term log(dfr + dgr) and 1dq+dp . Therefore, we add a small constant = 10−4 so that dfr + dgr and dq + dp becomes dfr + d g r + and dq + dp + .\nIn addition, we observe that ξi,j can be very small which would result in eξi,j ≈ 0 up to machine precision. In order to\nstabilize the computation in eq. 2, we compute its equivalent form\nlogE(f, g) = ξi′,j′ + log K∑ j=1 K∑ i=1 piqje ξi,j−ξi′,j′\nwhere ξi′,j′ = maxi,j ξi,j .\nModel Hyperparameters and Training Details In the loss function Lθ , we use a margin m = 1 and a batch size of 128. We initialize the word embeddings with a uni-\nform distribution over [− √ 3 D , √ 3 D\n] so that the expectation of variance is 1 and the mean is zero (LeCun et al., 1998). We initialize each dimension of the diagonal matrix (or a single value for spherical case) with a constant value v = 0.05. We also initialize the mixture scores si to be 0 so that the initial probabilities are equal among all K components. We use the threshold t = 10−5 for negative sampling, which is the recommended value for word2vec skip-gram on large datasets.\nWe also use a separate output embeddings in addition to input embeddings, similar to word2vec implementation (Mikolov et al., 2013a,b). That is, each word has two sets of distributions qI and qO , each of which is a Gaussian mixture. For a given pair of word and context (w, c), we use the input distribution qI for w (input word) and the output distribution qO for context c (output word). We optimize the parameters of both qI and qO and use the trained input distributions qI as our final word representations.\nWe use mini-batch asynchronous gradient descent with Adagrad (Duchi et al., 2011) which performs adaptive learning rate for each parameter. We also experiment with Adam (Kingma and Ba, 2014) which corrects the bias in adaptive gradient update of Adagrad and is proven very popular for most recent neural network models. However, we found that it is much slower than Adagrad (≈ 10 times). This is because the gradient computation of the model is relatively fast, so a complex gradient update algorithm such as Adam becomes the bottleneck in the optimization. Therefore, we choose to use Adagrad which allows us to better scale to large datasets. We use a linearly decreasing learning rate from 0.05 to 0.00001."
    } ],
    "references" : [ {
      "title" : "Learning scalable deep kernels with recurrent structure",
      "author" : [ "Maruan Al-Shedivat", "Andrew Gordon Wilson", "Yunus Saatchi", "Zhiting Hu", "Eric P Xing." ],
      "venue" : "arXiv preprint arXiv:1610.08936 .",
      "citeRegEx" : "Al.Shedivat et al\\.,? 2016",
      "shortCiteRegEx" : "Al.Shedivat et al\\.",
      "year" : 2016
    }, {
      "title" : "Entailment above the word level in distributional semantics",
      "author" : [ "Marco Baroni", "Raffaella Bernardi", "Ngoc-Quynh Do", "Chung-chieh Shan." ],
      "venue" : "EACL 2012, 13th Conference of the European Chapter of the Association for Computational Linguistics, Avignon, France, April",
      "citeRegEx" : "Baroni et al\\.,? 2012",
      "shortCiteRegEx" : "Baroni et al\\.",
      "year" : 2012
    }, {
      "title" : "The wacky wide web: a collection of very large linguistically processed web-crawled corpora",
      "author" : [ "Marco Baroni", "Silvia Bernardini", "Adriano Ferraresi", "Eros Zanchetta." ],
      "venue" : "Language Resources and Evaluation 43(3):209– 226. https://doi.org/10.1007/s10579-009-9081-4.",
      "citeRegEx" : "Baroni et al\\.,? 2009",
      "shortCiteRegEx" : "Baroni et al\\.",
      "year" : 2009
    }, {
      "title" : "A neural probabilistic language model",
      "author" : [ "Yoshua Bengio", "Réjean Ducharme", "Pascal Vincent", "Christian Janvin." ],
      "venue" : "Journal of Machine Learning Research 3:1137– 1155.",
      "citeRegEx" : "Bengio et al\\.,? 2003",
      "shortCiteRegEx" : "Bengio et al\\.",
      "year" : 2003
    }, {
      "title" : "Multimodal distributional semantics",
      "author" : [ "Elia Bruni", "Nam Khanh Tran", "Marco Baroni." ],
      "venue" : "J. Artif. Int. Res. 49(1):1–47.",
      "citeRegEx" : "Bruni et al\\.,? 2014",
      "shortCiteRegEx" : "Bruni et al\\.",
      "year" : 2014
    }, {
      "title" : "Infogan: Interpretable representation learning by information maximizing generative adversarial nets",
      "author" : [ "Xi Chen", "Xi Chen", "Yan Duan", "Rein Houthooft", "John Schulman", "Ilya Sutskever", "Pieter Abbeel." ],
      "venue" : "Advances in Neural Information Processing Systems 29: Annual Conference",
      "citeRegEx" : "Chen et al\\.,? 2016",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2016
    }, {
      "title" : "A unified model for word sense representation and disambiguation",
      "author" : [ "Xinxiong Chen", "Zhiyuan Liu", "Maosong Sun." ],
      "venue" : "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, EMNLP 2014, October 25-29, 2014, Doha, Qatar, A meeting of",
      "citeRegEx" : "Chen et al\\.,? 2014",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2014
    }, {
      "title" : "A unified architecture for natural language processing: deep neural networks with multitask learning",
      "author" : [ "Ronan Collobert", "Jason Weston." ],
      "venue" : "Machine Learning, Proceedings of the Twenty-Fifth International Conference (ICML 2008), Helsinki, Finland, June 5-9, 2008. pages 160–167.",
      "citeRegEx" : "Collobert and Weston.,? 2008",
      "shortCiteRegEx" : "Collobert and Weston.",
      "year" : 2008
    }, {
      "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
      "author" : [ "John C. Duchi", "Elad Hazan", "Yoram Singer." ],
      "venue" : "Journal of Machine Learning Research 12:2121–2159.",
      "citeRegEx" : "Duchi et al\\.,? 2011",
      "shortCiteRegEx" : "Duchi et al\\.",
      "year" : 2011
    }, {
      "title" : "TensorFlow: Large-scale machine learning on heterogeneous systems. Software available from tensorflow.org",
      "author" : [ "Martı́n Abadi" ],
      "venue" : null,
      "citeRegEx" : "Abadi,? \\Q2015\\E",
      "shortCiteRegEx" : "Abadi",
      "year" : 2015
    }, {
      "title" : "Placing search in context: the concept revisited",
      "author" : [ "Lev Finkelstein", "Evgeniy Gabrilovich", "Yossi Matias", "Ehud Rivlin", "Zach Solan", "Gadi Wolfman", "Eytan Ruppin." ],
      "venue" : "ACM Trans. Inf. Syst. 20(1):116–131.",
      "citeRegEx" : "Finkelstein et al\\.,? 2002",
      "shortCiteRegEx" : "Finkelstein et al\\.",
      "year" : 2002
    }, {
      "title" : "Bayesian recurrent neural networks",
      "author" : [ "Meire Fortunato", "Charles Blundell", "Oriol Vinyals." ],
      "venue" : "arXiv preprint arXiv:1704.02798 .",
      "citeRegEx" : "Fortunato et al\\.,? 2017",
      "shortCiteRegEx" : "Fortunato et al\\.",
      "year" : 2017
    }, {
      "title" : "Scalable bayesian learning of recurrent neural networks for language modeling",
      "author" : [ "Zhe Gan", "Chunyuan Li", "Changyou Chen", "Yunchen Pu", "Qinliang Su", "Lawrence Carin." ],
      "venue" : "arXiv preprint arXiv:1611.08034 .",
      "citeRegEx" : "Gan et al\\.,? 2016",
      "shortCiteRegEx" : "Gan et al\\.",
      "year" : 2016
    }, {
      "title" : "Noisecontrastive estimation of unnormalized statistical models, with applications to natural image statistics",
      "author" : [ "Michael Gutmann", "Aapo Hyvärinen." ],
      "venue" : "Journal of Machine Learning Research 13:307–361.",
      "citeRegEx" : "Gutmann and Hyvärinen.,? 2012",
      "shortCiteRegEx" : "Gutmann and Hyvärinen.",
      "year" : 2012
    }, {
      "title" : "Large-scale learning of word relatedness with constraints",
      "author" : [ "Guy Halawi", "Gideon Dror", "Evgeniy Gabrilovich", "Yehuda Koren." ],
      "venue" : "The 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD ’12, Beijing, China, August 12-16, 2012. pages",
      "citeRegEx" : "Halawi et al\\.,? 2012",
      "shortCiteRegEx" : "Halawi et al\\.",
      "year" : 2012
    }, {
      "title" : "Simlex999: Evaluating semantic models with (genuine) similarity estimation",
      "author" : [ "Felix Hill", "Roi Reichart", "Anna Korhonen." ],
      "venue" : "CoRR abs/1408.3456.",
      "citeRegEx" : "Hill et al\\.,? 2014",
      "shortCiteRegEx" : "Hill et al\\.",
      "year" : 2014
    }, {
      "title" : "Improving word representations via global context and multiple word prototypes",
      "author" : [ "Eric H. Huang", "Richard Socher", "Christopher D. Manning", "Andrew Y. Ng." ],
      "venue" : "The 50th Annual Meeting of the Association for Computational Linguistics, Proceedings of the Conference, July 8-14, 2012,",
      "citeRegEx" : "Huang et al\\.,? 2012",
      "shortCiteRegEx" : "Huang et al\\.",
      "year" : 2012
    }, {
      "title" : "Probability product kernels",
      "author" : [ "Tony Jebara", "Risi Kondor", "Andrew Howard." ],
      "venue" : "Journal of Machine Learning Research 5:819–844.",
      "citeRegEx" : "Jebara et al\\.,? 2004",
      "shortCiteRegEx" : "Jebara et al\\.",
      "year" : 2004
    }, {
      "title" : "Optimizing search engines using clickthrough data",
      "author" : [ "Thorsten Joachims." ],
      "venue" : "Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, July 23-26, 2002, Edmonton, Alberta, Canada. pages 133–142.",
      "citeRegEx" : "Joachims.,? 2002",
      "shortCiteRegEx" : "Joachims.",
      "year" : 2002
    }, {
      "title" : "Adam: A method for stochastic optimization",
      "author" : [ "Diederik P. Kingma", "Jimmy Ba." ],
      "venue" : "CoRR abs/1412.6980.",
      "citeRegEx" : "Kingma and Ba.,? 2014",
      "shortCiteRegEx" : "Kingma and Ba.",
      "year" : 2014
    }, {
      "title" : "Autoencoding variational bayes",
      "author" : [ "Diederik P. Kingma", "Max Welling." ],
      "venue" : "CoRR abs/1312.6114. http://arxiv.org/abs/1312.6114.",
      "citeRegEx" : "Kingma and Welling.,? 2013",
      "shortCiteRegEx" : "Kingma and Welling.",
      "year" : 2013
    }, {
      "title" : "Efficient backprop",
      "author" : [ "Y. LeCun", "L. Bottou", "G. Orr", "K. Muller." ],
      "venue" : "G. Orr and Muller K., editors, Neural Networks: Tricks of the trade. Springer.",
      "citeRegEx" : "LeCun et al\\.,? 1998",
      "shortCiteRegEx" : "LeCun et al\\.",
      "year" : 1998
    }, {
      "title" : "Neural word embedding as implicit matrix factorization",
      "author" : [ "Omer Levy", "Yoav Goldberg." ],
      "venue" : "Advances in Neural Information Processing Systems 27: Annual Conference on Neural Information Processing Systems 2014, December 8-13 2014, Montreal, Quebec, Canada. pages",
      "citeRegEx" : "Levy and Goldberg.,? 2014",
      "shortCiteRegEx" : "Levy and Goldberg.",
      "year" : 2014
    }, {
      "title" : "Topical word embeddings",
      "author" : [ "Yang Liu", "Zhiyuan Liu", "Tat-Seng Chua", "Maosong Sun." ],
      "venue" : "Proceedings of the Twenty-Ninth AAAI Conference on Artificial Intelligence, January 25-30, 2015, Austin, Texas, USA.. pages 2418–2424.",
      "citeRegEx" : "Liu et al\\.,? 2015",
      "shortCiteRegEx" : "Liu et al\\.",
      "year" : 2015
    }, {
      "title" : "Better word representations with recursive neural networks for morphology",
      "author" : [ "Minh-Thang Luong", "Richard Socher", "Christopher D. Manning." ],
      "venue" : "CoNLL. Sofia, Bulgaria.",
      "citeRegEx" : "Luong et al\\.,? 2013",
      "shortCiteRegEx" : "Luong et al\\.",
      "year" : 2013
    }, {
      "title" : "Efficient estimation of word representations in vector space",
      "author" : [ "Tomas Mikolov", "Kai Chen", "Greg Corrado", "Jeffrey Dean." ],
      "venue" : "CoRR abs/1301.3781.",
      "citeRegEx" : "Mikolov et al\\.,? 2013a",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Strategies for training large scale neural network language models",
      "author" : [ "Tomas Mikolov", "Anoop Deoras", "Daniel Povey", "Lukás Burget", "Jan Cernocký." ],
      "venue" : "2011 IEEE Workshop on Automatic Speech Recognition & Understanding, ASRU 2011, Waikoloa,",
      "citeRegEx" : "Mikolov et al\\.,? 2011a",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2011
    }, {
      "title" : "Recurrent neural network based language model",
      "author" : [ "Tomas Mikolov", "Martin Karafiát", "Lukás Burget", "Jan Cernocký", "Sanjeev Khudanpur." ],
      "venue" : "INTERSPEECH 2010, 11th Annual Conference of the International Speech Communication Association, Makuhari, Chiba, Japan,",
      "citeRegEx" : "Mikolov et al\\.,? 2010",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2010
    }, {
      "title" : "Extensions of recurrent neural network language model",
      "author" : [ "Tomas Mikolov", "Stefan Kombrink", "Lukás Burget", "Jan Cernocký", "Sanjeev Khudanpur." ],
      "venue" : "Proceedings of the IEEE International Conference on Acoustics, Speech, and Signal Processing,",
      "citeRegEx" : "Mikolov et al\\.,? 2011b",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2011
    }, {
      "title" : "Distributed representations of words and phrases and their compositionality",
      "author" : [ "Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Gregory S. Corrado", "Jeffrey Dean." ],
      "venue" : "Advances in Neural Information Processing Systems 26: 27th Annual Conference on Neural Information Process-",
      "citeRegEx" : "Mikolov et al\\.,? 2013b",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Contextual Correlates of Semantic Similarity",
      "author" : [ "George A. Miller", "Walter G. Charles." ],
      "venue" : "Language & Cognitive Processes 6(1):1–28. https://doi.org/10.1080/01690969108406936.",
      "citeRegEx" : "Miller and Charles.,? 1991",
      "shortCiteRegEx" : "Miller and Charles.",
      "year" : 1991
    }, {
      "title" : "A scalable hierarchical distributed language model",
      "author" : [ "Andriy Mnih", "Geoffrey E. Hinton." ],
      "venue" : "Advances in Neural Information Processing Systems 21, Proceedings of the Twenty-Second Annual Conference on Neural Information Processing Systems, Vancouver, British Columbia,",
      "citeRegEx" : "Mnih and Hinton.,? 2008",
      "shortCiteRegEx" : "Mnih and Hinton.",
      "year" : 2008
    }, {
      "title" : "Hierarchical probabilistic neural network language model",
      "author" : [ "Frederic Morin", "Yoshua Bengio." ],
      "venue" : "Proceedings of the Tenth International Workshop on Artificial Intelligence and Statistics, AISTATS 2005, Bridgetown, Barbados, January 6-8, 2005.",
      "citeRegEx" : "Morin and Bengio.,? 2005",
      "shortCiteRegEx" : "Morin and Bengio.",
      "year" : 2005
    }, {
      "title" : "Infinite dimensional word embeddings",
      "author" : [ "Eric T. Nalisnick", "Sachin Ravi." ],
      "venue" : "CoRR abs/1511.05392. http://arxiv.org/abs/1511.05392.",
      "citeRegEx" : "Nalisnick and Ravi.,? 2015",
      "shortCiteRegEx" : "Nalisnick and Ravi.",
      "year" : 2015
    }, {
      "title" : "Efficient non-parametric estimation of multiple embeddings per word in vector space",
      "author" : [ "Arvind Neelakantan", "Jeevan Shankar", "Alexandre Passos", "Andrew McCallum." ],
      "venue" : "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, EMNLP 2014,",
      "citeRegEx" : "Neelakantan et al\\.,? 2014",
      "shortCiteRegEx" : "Neelakantan et al\\.",
      "year" : 2014
    }, {
      "title" : "Glove: Global vectors for word representation",
      "author" : [ "Jeffrey Pennington", "Richard Socher", "Christopher D. Manning." ],
      "venue" : "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, EMNLP",
      "citeRegEx" : "Pennington et al\\.,? 2014",
      "shortCiteRegEx" : "Pennington et al\\.",
      "year" : 2014
    }, {
      "title" : "A word at a time: Computing word relatedness using temporal semantic analysis",
      "author" : [ "Kira Radinsky", "Eugene Agichtein", "Evgeniy Gabrilovich", "Shaul Markovitch." ],
      "venue" : "Proceedings of the 20th International Conference on World Wide Web. WWW ’11, pages 337–346.",
      "citeRegEx" : "Radinsky et al\\.,? 2011",
      "shortCiteRegEx" : "Radinsky et al\\.",
      "year" : 2011
    }, {
      "title" : "Contextual correlates of synonymy",
      "author" : [ "Herbert Rubenstein", "John B. Goodenough." ],
      "venue" : "Commun. ACM 8(10):627– 633.",
      "citeRegEx" : "Rubenstein and Goodenough.,? 1965",
      "shortCiteRegEx" : "Rubenstein and Goodenough.",
      "year" : 1965
    }, {
      "title" : "Bayesian probabilistic matrix factorization using markov chain monte carlo",
      "author" : [ "Ruslan Salakhutdinov", "Andriy Mnih." ],
      "venue" : "Machine Learning, Proceedings of the Twenty-Fifth International Conference (ICML 2008), Helsinki, Finland, June 5-9, 2008. pages 880–887.",
      "citeRegEx" : "Salakhutdinov and Mnih.,? 2008",
      "shortCiteRegEx" : "Salakhutdinov and Mnih.",
      "year" : 2008
    }, {
      "title" : "The proof and measurement of association between two things",
      "author" : [ "C. Spearman." ],
      "venue" : "American Journal of Psychology 15:88–103.",
      "citeRegEx" : "Spearman.,? 1904",
      "shortCiteRegEx" : "Spearman.",
      "year" : 1904
    }, {
      "title" : "A probabilistic model for learning multi-prototype word embeddings",
      "author" : [ "Fei Tian", "Hanjun Dai", "Jiang Bian", "Bin Gao", "Rui Zhang", "Enhong Chen", "Tie-Yan Liu." ],
      "venue" : "COLING 2014, 25th International Conference on Computational Linguistics, Proceedings of the Conference:",
      "citeRegEx" : "Tian et al\\.,? 2014",
      "shortCiteRegEx" : "Tian et al\\.",
      "year" : 2014
    }, {
      "title" : "Word representations via gaussian embedding",
      "author" : [ "Luke Vilnis", "Andrew McCallum." ],
      "venue" : "CoRR abs/1412.6623.",
      "citeRegEx" : "Vilnis and McCallum.,? 2014",
      "shortCiteRegEx" : "Vilnis and McCallum.",
      "year" : 2014
    }, {
      "title" : "Stochastic variational deep kernel learning",
      "author" : [ "Andrew G Wilson", "Zhiting Hu", "Ruslan R Salakhutdinov", "Eric P Xing." ],
      "venue" : "Advances in Neural Information Processing Systems. pages 2586–2594.",
      "citeRegEx" : "Wilson et al\\.,? 2016a",
      "shortCiteRegEx" : "Wilson et al\\.",
      "year" : 2016
    }, {
      "title" : "Deep kernel learning",
      "author" : [ "Andrew Gordon Wilson", "Zhiting Hu", "Ruslan Salakhutdinov", "Eric P Xing." ],
      "venue" : "Proceedings of the 19th International Conference on Artificial Intelligence and Statistics. pages 370–378.",
      "citeRegEx" : "Wilson et al\\.,? 2016b",
      "shortCiteRegEx" : "Wilson et al\\.",
      "year" : 2016
    }, {
      "title" : "Verb similarity on the taxonomy of wordnet",
      "author" : [ "Dongqiang Yang", "David M.W. Powers." ],
      "venue" : "In the 3rd International WordNet Conference (GWC-06), Jeju Island, Korea.",
      "citeRegEx" : "Yang and Powers.,? 2006",
      "shortCiteRegEx" : "Yang and Powers.",
      "year" : 2006
    }, {
      "title" : "x;μi,Σi)N (x;μj ,Σj) dx = N (0, μi − μj ,Σi + Σj) (Vilnis and McCallum, 2014) and ξi,j is the log partial energy, given by equation 3",
      "author" : [ ],
      "venue" : null,
      "citeRegEx" : "∫,? \\Q2014\\E",
      "shortCiteRegEx" : "∫",
      "year" : 2014
    } ],
    "referenceMentions" : [ {
      "referenceID" : 25,
      "context" : "Modern approaches, by contrast, learn to map words with similar meanings to nearby points in a vector space (Mikolov et al., 2013a), from large datasets such as Wikipedia.",
      "startOffset" : 108,
      "endOffset" : 131
    }, {
      "referenceID" : 41,
      "context" : "However, since a Gaussian distribution can have only one mode, the learned uncertainty in this representation can be overly diffuse for words with multiple distinct meanings (polysemies), in order for the model to assign some density to any plausible semantics (Vilnis and McCallum, 2014).",
      "startOffset" : 261,
      "endOffset" : 288
    }, {
      "referenceID" : 18,
      "context" : "We learn all the parameters of this mixture model using a maximum margin energy-based ranking objective (Joachims, 2002; Vilnis and McCallum, 2014) (Section 3.",
      "startOffset" : 104,
      "endOffset" : 147
    }, {
      "referenceID" : 41,
      "context" : "We learn all the parameters of this mixture model using a maximum margin energy-based ranking objective (Joachims, 2002; Vilnis and McCallum, 2014) (Section 3.",
      "startOffset" : 104,
      "endOffset" : 147
    }, {
      "referenceID" : 17,
      "context" : "For analytic tractability with Gaussian mixtures, we use the inner product between probability distributions in a Hilbert space, known as the expected likelihood kernel (Jebara et al., 2004), as our energy function (Section 3.",
      "startOffset" : 169,
      "endOffset" : 190
    }, {
      "referenceID" : 3,
      "context" : "Other popular approaches use feedforward (Bengio et al., 2003) and recurrent neural network language models (Mikolov et al.",
      "startOffset" : 41,
      "endOffset" : 62
    }, {
      "referenceID" : 7,
      "context" : ", 2003) and recurrent neural network language models (Mikolov et al., 2010, 2011b; Collobert and Weston, 2008) to predict missing words in sentences, producing hidden layers that can act as word embeddings that encode semantic information.",
      "startOffset" : 53,
      "endOffset" : 110
    }, {
      "referenceID" : 26,
      "context" : "They employ conditional probability estimation techniques, including hierarchical softmax (Mikolov et al., 2011a; Mnih and Hinton, 2008; Morin and Bengio, 2005) and noise contrastive estimation (Gutmann and Hyvärinen, 2012).",
      "startOffset" : 90,
      "endOffset" : 160
    }, {
      "referenceID" : 31,
      "context" : "They employ conditional probability estimation techniques, including hierarchical softmax (Mikolov et al., 2011a; Mnih and Hinton, 2008; Morin and Bengio, 2005) and noise contrastive estimation (Gutmann and Hyvärinen, 2012).",
      "startOffset" : 90,
      "endOffset" : 160
    }, {
      "referenceID" : 32,
      "context" : "They employ conditional probability estimation techniques, including hierarchical softmax (Mikolov et al., 2011a; Mnih and Hinton, 2008; Morin and Bengio, 2005) and noise contrastive estimation (Gutmann and Hyvärinen, 2012).",
      "startOffset" : 90,
      "endOffset" : 160
    }, {
      "referenceID" : 13,
      "context" : ", 2011a; Mnih and Hinton, 2008; Morin and Bengio, 2005) and noise contrastive estimation (Gutmann and Hyvärinen, 2012).",
      "startOffset" : 89,
      "endOffset" : 118
    }, {
      "referenceID" : 35,
      "context" : "occurrence matrices such as GloVe embeddings (Pennington et al., 2014).",
      "startOffset" : 45,
      "endOffset" : 70
    }, {
      "referenceID" : 22,
      "context" : "The matrix factorization approach has been shown to have an implicit connection with skip-gram and negative sampling Levy and Goldberg (2014). Bayesian matrix factorization where row and columns are modeled as Gaussians has been explored in Salakhutdinov and Mnih (2008) and provides a different probabilistic perspective of word embeddings.",
      "startOffset" : 117,
      "endOffset" : 142
    }, {
      "referenceID" : 22,
      "context" : "The matrix factorization approach has been shown to have an implicit connection with skip-gram and negative sampling Levy and Goldberg (2014). Bayesian matrix factorization where row and columns are modeled as Gaussians has been explored in Salakhutdinov and Mnih (2008) and provides a different probabilistic perspective of word embeddings.",
      "startOffset" : 117,
      "endOffset" : 271
    }, {
      "referenceID" : 41,
      "context" : "In exciting recent work, Vilnis and McCallum (2014) propose a Gaussian distribution to model each word.",
      "startOffset" : 25,
      "endOffset" : 52
    }, {
      "referenceID" : 16,
      "context" : "Recent work has also proposed deterministic embeddings that can capture polysemies, for example through a cluster centroid of context vectors (Huang et al., 2012), or an adapted skip-gram model with an EM algorithm to learn multiple latent representations per word (Tian et al.",
      "startOffset" : 142,
      "endOffset" : 162
    }, {
      "referenceID" : 40,
      "context" : ", 2012), or an adapted skip-gram model with an EM algorithm to learn multiple latent representations per word (Tian et al., 2014).",
      "startOffset" : 110,
      "endOffset" : 129
    }, {
      "referenceID" : 16,
      "context" : "Recent work has also proposed deterministic embeddings that can capture polysemies, for example through a cluster centroid of context vectors (Huang et al., 2012), or an adapted skip-gram model with an EM algorithm to learn multiple latent representations per word (Tian et al., 2014). Neelakantan et al. (2014) also extends skip-gram with multiple prototype embeddings where the number of senses per word is determined by a non-parametric approach.",
      "startOffset" : 143,
      "endOffset" : 312
    }, {
      "referenceID" : 16,
      "context" : "Recent work has also proposed deterministic embeddings that can capture polysemies, for example through a cluster centroid of context vectors (Huang et al., 2012), or an adapted skip-gram model with an EM algorithm to learn multiple latent representations per word (Tian et al., 2014). Neelakantan et al. (2014) also extends skip-gram with multiple prototype embeddings where the number of senses per word is determined by a non-parametric approach. Liu et al. (2015) learns topical embeddings based on latent topic models where each word is associated with multiple topics.",
      "startOffset" : 143,
      "endOffset" : 468
    }, {
      "referenceID" : 16,
      "context" : "Recent work has also proposed deterministic embeddings that can capture polysemies, for example through a cluster centroid of context vectors (Huang et al., 2012), or an adapted skip-gram model with an EM algorithm to learn multiple latent representations per word (Tian et al., 2014). Neelakantan et al. (2014) also extends skip-gram with multiple prototype embeddings where the number of senses per word is determined by a non-parametric approach. Liu et al. (2015) learns topical embeddings based on latent topic models where each word is associated with multiple topics. Another related work by Nalisnick and Ravi (2015) models embeddings in infinite-dimensional space where each embedding can gradually represent incremental word sense if complex meanings are observed.",
      "startOffset" : 143,
      "endOffset" : 625
    }, {
      "referenceID" : 25,
      "context" : "The training objective for learning θ = {~ μw,i, pw,i,Σw,i} draws inspiration from the continuous skip-gram model (Mikolov et al., 2013a), where word embeddings are trained to maximize the probability of observing a word given another nearby word.",
      "startOffset" : 114,
      "endOffset" : 137
    }, {
      "referenceID" : 41,
      "context" : "Bottom: A Gaussian embedding model (Vilnis and McCallum, 2014).",
      "startOffset" : 35,
      "endOffset" : 62
    }, {
      "referenceID" : 18,
      "context" : "We use a max-margin ranking objective (Joachims, 2002), used for Gaussian embeddings in Vilnis and McCallum (2014), which pushes the similarity of a word and its positive context higher than that of its negative context by a margin m:",
      "startOffset" : 38,
      "endOffset" : 54
    }, {
      "referenceID" : 18,
      "context" : "We use a max-margin ranking objective (Joachims, 2002), used for Gaussian embeddings in Vilnis and McCallum (2014), which pushes the similarity of a word and its positive context higher than that of its negative context by a margin m:",
      "startOffset" : 39,
      "endOffset" : 115
    }, {
      "referenceID" : 29,
      "context" : "We use subsampling to improve the performance of learning word vectors (Mikolov et al., 2013b).",
      "startOffset" : 71,
      "endOffset" : 94
    }, {
      "referenceID" : 29,
      "context" : "Both subsampling and the negative distribution choice are proven effective in word2vec training (Mikolov et al., 2013b).",
      "startOffset" : 96,
      "endOffset" : 119
    }, {
      "referenceID" : 17,
      "context" : "We propose to use the expected likelihood kernel, which is a generalization of an inner product between vectors to an inner product between distributions (Jebara et al., 2004).",
      "startOffset" : 154,
      "endOffset" : 175
    }, {
      "referenceID" : 2,
      "context" : "5 billion tokens) and Wackypedia (1 billion tokens) (Baroni et al., 2009).",
      "startOffset" : 52,
      "endOffset" : 73
    }, {
      "referenceID" : 41,
      "context" : "We name our model as Word to Gaussian Mixture (w2gm) in constrast to Word to Gaussian (w2g) (Vilnis and McCallum, 2014).",
      "startOffset" : 92,
      "endOffset" : 119
    }, {
      "referenceID" : 41,
      "context" : "As a numerical example, the cosine similarity between ‘rock’ and ‘stone’ for the Gaussian representation of Vilnis and McCallum (2014) is only 0.",
      "startOffset" : 108,
      "endOffset" : 135
    }, {
      "referenceID" : 15,
      "context" : "We evaluate our embeddings on several standard word similarity datasets, namely, SimLex (Hill et al., 2014), WS or WordSim-353, WS-S (similarity), WS-R (relatedness) (Finkelstein et al.",
      "startOffset" : 88,
      "endOffset" : 107
    }, {
      "referenceID" : 10,
      "context" : ", 2014), WS or WordSim-353, WS-S (similarity), WS-R (relatedness) (Finkelstein et al., 2002), MEN (Bruni et al.",
      "startOffset" : 66,
      "endOffset" : 92
    }, {
      "referenceID" : 4,
      "context" : ", 2002), MEN (Bruni et al., 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al.",
      "startOffset" : 13,
      "endOffset" : 33
    }, {
      "referenceID" : 30,
      "context" : ", 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al.",
      "startOffset" : 12,
      "endOffset" : 38
    }, {
      "referenceID" : 37,
      "context" : ", 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al.",
      "startOffset" : 43,
      "endOffset" : 76
    }, {
      "referenceID" : 44,
      "context" : ", 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al.",
      "startOffset" : 81,
      "endOffset" : 104
    }, {
      "referenceID" : 36,
      "context" : ", 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al., 2011; Halawi et al., 2012), and RW (Luong et al.",
      "startOffset" : 122,
      "endOffset" : 166
    }, {
      "referenceID" : 14,
      "context" : ", 2014), MC (Miller and Charles, 1991), RG (Rubenstein and Goodenough, 1965), YP (Yang and Powers, 2006), MTurk(287,-771) (Radinsky et al., 2011; Halawi et al., 2012), and RW (Luong et al.",
      "startOffset" : 122,
      "endOffset" : 166
    }, {
      "referenceID" : 24,
      "context" : ", 2012), and RW (Luong et al., 2013).",
      "startOffset" : 16,
      "endOffset" : 36
    }, {
      "referenceID" : 39,
      "context" : "We calculate the Spearman correlation (Spearman, 1904) between the labels and our scores generated by the embeddings.",
      "startOffset" : 38,
      "endOffset" : 54
    }, {
      "referenceID" : 41,
      "context" : "We show the results of our Gaussian mixture model and compare the performance with that of word2vec and the original Gaussian embedding by Vilnis and McCallum (2014). We note that our model of a unimodal Gaussian embedding w2g also outperforms the original model, which differs in model hyperparameters and initialization, for most datasets.",
      "startOffset" : 139,
      "endOffset" : 166
    }, {
      "referenceID" : 16,
      "context" : "We also compare out results on WordSim-353 with the multi-prototype embedding method by Huang et al. (2012) and Neelakantan et al.",
      "startOffset" : 88,
      "endOffset" : 108
    }, {
      "referenceID" : 16,
      "context" : "We also compare out results on WordSim-353 with the multi-prototype embedding method by Huang et al. (2012) and Neelakantan et al. (2014), shown in Table 3.",
      "startOffset" : 88,
      "endOffset" : 138
    }, {
      "referenceID" : 16,
      "context" : "We also compare out results on WordSim-353 with the multi-prototype embedding method by Huang et al. (2012) and Neelakantan et al. (2014), shown in Table 3. We observe that our singleprototype model w2g is competitive compared to models by Huang et al. (2012), even without using a corpus with stop words removed.",
      "startOffset" : 88,
      "endOffset" : 260
    }, {
      "referenceID" : 16,
      "context" : "We also compare out results on WordSim-353 with the multi-prototype embedding method by Huang et al. (2012) and Neelakantan et al. (2014), shown in Table 3. We observe that our singleprototype model w2g is competitive compared to models by Huang et al. (2012), even without using a corpus with stop words removed. This could be due to the auto-calibration of importance via the covariance learning which decrease the importance of very frequent words such as ‘the’, ‘to’, ‘a’, etc. Moreover, our multi-prototype model substantially outperforms the model of Huang et al. (2012) and the MSSG model of Neelakantan et al.",
      "startOffset" : 88,
      "endOffset" : 577
    }, {
      "referenceID" : 16,
      "context" : "We also compare out results on WordSim-353 with the multi-prototype embedding method by Huang et al. (2012) and Neelakantan et al. (2014), shown in Table 3. We observe that our singleprototype model w2g is competitive compared to models by Huang et al. (2012), even without using a corpus with stop words removed. This could be due to the auto-calibration of importance via the covariance learning which decrease the importance of very frequent words such as ‘the’, ‘to’, ‘a’, etc. Moreover, our multi-prototype model substantially outperforms the model of Huang et al. (2012) and the MSSG model of Neelakantan et al. (2014) on the WordSim-353 dataset.",
      "startOffset" : 88,
      "endOffset" : 625
    }, {
      "referenceID" : 16,
      "context" : "We use the dataset SCWS introduced by Huang et al. (2012), where word pairs are chosen to have variations in meanings of polysemous and homonymous words.",
      "startOffset" : 38,
      "endOffset" : 58
    }, {
      "referenceID" : 16,
      "context" : "We compare our method with multiprototype models by Huang (Huang et al., 2012), Tian (Tian et al.",
      "startOffset" : 58,
      "endOffset" : 78
    }, {
      "referenceID" : 40,
      "context" : ", 2012), Tian (Tian et al., 2014), Chen (Chen et al.",
      "startOffset" : 14,
      "endOffset" : 33
    }, {
      "referenceID" : 6,
      "context" : ", 2014), Chen (Chen et al., 2014), and MSSG model by (Neelakantan et al.",
      "startOffset" : 14,
      "endOffset" : 33
    }, {
      "referenceID" : 34,
      "context" : ", 2014), and MSSG model by (Neelakantan et al., 2014).",
      "startOffset" : 27,
      "endOffset" : 53
    }, {
      "referenceID" : 39,
      "context" : "Table 2: Spearman correlation for word similarity datasets. The models sg, w2g, w2gm denote word2vec skip-gram, Gaussian embedding, and Gaussian mixture embedding (K=2). The measures mc, el, me denote maximum cosine similarity, expected likelihood kernel, and minimum Euclidean distance. For each of w2g and w2gm, we underline the similarity metric with the best score. For each dataset, we boldface the score with the best performance across all models. The correlation scores for sg*, w2g* are taken from Vilnis and McCallum (2014) and correspond to cosine distance.",
      "startOffset" : 9,
      "endOffset" : 534
    }, {
      "referenceID" : 16,
      "context" : "Table 3: Spearman’s correlation (ρ) on WordSim353 datasets for our Word to Gaussian Mixture embeddings, as well as the multi-prototype embedding by Huang et al. (2012) and the MSSG model by Neelakantan et al.",
      "startOffset" : 148,
      "endOffset" : 168
    }, {
      "referenceID" : 16,
      "context" : "Table 3: Spearman’s correlation (ρ) on WordSim353 datasets for our Word to Gaussian Mixture embeddings, as well as the multi-prototype embedding by Huang et al. (2012) and the MSSG model by Neelakantan et al. (2014). Huang* is trained using data with all stop words removed.",
      "startOffset" : 148,
      "endOffset" : 216
    }, {
      "referenceID" : 16,
      "context" : "Note that other models also use AvgSimC metric which uses context information which can yield better correlation (Huang et al., 2012; Chen et al., 2014).",
      "startOffset" : 113,
      "endOffset" : 152
    }, {
      "referenceID" : 6,
      "context" : "Note that other models also use AvgSimC metric which uses context information which can yield better correlation (Huang et al., 2012; Chen et al., 2014).",
      "startOffset" : 113,
      "endOffset" : 152
    }, {
      "referenceID" : 1,
      "context" : "We evaluate our embeddings on the word entailment dataset from Baroni et al. (2012). The lexical entailment between words is denoted by w1 |= w2 which means that all instances of w1 are w2.",
      "startOffset" : 63,
      "endOffset" : 84
    }, {
      "referenceID" : 20,
      "context" : "Elsewhere, latent probabilistic representations are proving to be exceptionally valuable, able to capture nuances such as face angles with variational autoencoders (Kingma and Welling, 2013) or subtleties in painting strokes with the InfoGAN (Chen et al.",
      "startOffset" : 164,
      "endOffset" : 190
    }, {
      "referenceID" : 5,
      "context" : "Elsewhere, latent probabilistic representations are proving to be exceptionally valuable, able to capture nuances such as face angles with variational autoencoders (Kingma and Welling, 2013) or subtleties in painting strokes with the InfoGAN (Chen et al., 2016).",
      "startOffset" : 242,
      "endOffset" : 261
    }, {
      "referenceID" : 0,
      "context" : "Moreover, classically deterministic deep learning architectures are actively being generalized to probabilistic deep models, for full predictive distributions instead of point estimates, and significantly more expressive representations (Wilson et al., 2016b,a; Al-Shedivat et al., 2016; Gan et al., 2016; Fortunato et al., 2017).",
      "startOffset" : 237,
      "endOffset" : 329
    }, {
      "referenceID" : 12,
      "context" : "Moreover, classically deterministic deep learning architectures are actively being generalized to probabilistic deep models, for full predictive distributions instead of point estimates, and significantly more expressive representations (Wilson et al., 2016b,a; Al-Shedivat et al., 2016; Gan et al., 2016; Fortunato et al., 2017).",
      "startOffset" : 237,
      "endOffset" : 329
    }, {
      "referenceID" : 11,
      "context" : "Moreover, classically deterministic deep learning architectures are actively being generalized to probabilistic deep models, for full predictive distributions instead of point estimates, and significantly more expressive representations (Wilson et al., 2016b,a; Al-Shedivat et al., 2016; Gan et al., 2016; Fortunato et al., 2017).",
      "startOffset" : 237,
      "endOffset" : 329
    } ],
    "year" : 2017,
    "abstractText" : "Word embeddings provide point representations of words containing useful semantic information. We introduce multimodal word distributions formed from Gaussian mixtures, for multiple word meanings, entailment, and rich uncertainty information. To learn these distributions, we propose an energy-based max-margin objective. We show that the resulting approach captures uniquely expressive semantic information, and outperforms alternatives, such as word2vec skip-grams, and Gaussian embeddings, on benchmark datasets such as word similarity and entailment.",
    "creator" : "LaTeX with hyperref package"
  }
}