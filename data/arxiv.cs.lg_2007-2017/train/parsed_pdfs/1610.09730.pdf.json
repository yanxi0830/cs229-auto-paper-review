{
  "name" : "1610.09730.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Active Learning from Imperfect Labelers",
    "authors" : [ "Songbai Yan" ],
    "emails" : [ "yansongbai@eng.ucsd.edu", "kamalika@cs.ucsd.edu", "tjavidi@eng.ucsd.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n61 0.\n09 73\n0v 1\n[ cs\n.L G\n] 3\n0 O"
    }, {
      "heading" : "1 Introduction",
      "text" : "In active learning, the learner is given an input space X , a label space L, and a hypothesis class H such that one of the hypotheses in the class generates ground truth labels. Additionally, the learner has at its disposal a labeler to which it can pose interactive queries about the labels of examples in the input space. Note that the labeler may output a noisy version of the ground truth label (a flipped label). The goal of the learner is to learn a hypothesis in H which is close to the hypothesis that generates the ground truth labels.\nThere has been a significant amount of literature on active learning, both theoretical and practical. Previous theoretical work on active learning has mostly focused on the above basic setting [2, 4, 7, 10, 25] and has developed algorithms under a number of different models of label noise. A handful of exceptions include [3] which allows class conditional queries, [5] which allows requesting counterexamples to current version spaces, and [23, 26] where the learner has access to a strong labeler and one or more weak labelers.\nIn this paper, we consider a more general setting where, in addition to providing a possibly noisy label, the labeler can sometimes abstain from labeling. This scenario arises naturally in difficult labeling tasks and has been considered in computer vision by [11, 15]. Our goal in this paper is to investigate this problem from a foundational perspective, and explore what kind of conditions are needed, and how an abstaining labeler can affect properties such as consistency and query complexity of active learning algorithms.\nThe setting of active learning with an abstaining noisy labeler was first considered by [24], who looked at learning binary threshold classifiers based on queries to an labeler whose abstention rate is higher closer to the decision boundary. They primarily looked at the case when the abstention rate at a distance ∆ from the decision boundary is less than 1−Θ(∆α), and the rate of label flips at the same distance is less than 12 − Θ(∆β); under these conditions, they provided an active learning algorithm that given parameters α and β, outputs a classifier with error ǫ using Õ(ǫ−α−2β) queries\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nto the labeler. However, there are several limitations to this work. The primary limitation is that parameters α and β need to be known to the algorithm, which is not usually the case in practice. A second major limitation is that even if the labeler has nice properties, such as, the abstention rates increase sharply close to the boundary, their algorithm is unable to exploit these properties to reduce the number of queries. A third and final limitation is that their analysis only applies to one dimensional thresholds, and not to more general decision boundaries.\nIn this work, we provide an algorithm which is able to exploit nice properties of the labeler. Our algorithm is statistically consistent under very mild conditions — when the abstention rate is nondecreasing as we get closer to the decision boundary. Under slightly stronger conditions as in [24], our algorithm has the same query complexity. However, if the abstention rate of the labeler increases strictly monotonically close to the decision boundary, then our algorithm adapts and does substantially better. It simply exploits the increasing abstention rate close to the decision boundary, and does not even have to rely on the noisy labels! Specifically, when applied to the case where the noise rate is at most 12−Θ(∆β) and the abstention rate is 1−Θ(∆α) at distance ∆ from the decision boundary, our algorithm can output a classifier with error ǫ based on only Õ(ǫ−α) queries.\nAn important property of our algorithm is that the improvement of query complexity is achieved in a completely adaptive manner; unlike previous work [24], our algorithm needs no information whatsoever on the abstention rates or rates of label noise. Thus our result also strengthens existing results on active learning from (non-abstaining) noisy labelers by providing an adaptive algorithm that achieves that same performance as [6] without knowledge of noise parameters.\nWe extend our algorithm so that it applies to any smooth d-dimensional decision boundary in a nonparametric setting, not just one-dimensional thresholds, and we complement it with lower bounds on the number of queries that need to be made to any labeler. Our lower bounds generalize the lower bounds in [24], and shows that our upper bounds are nearly optimal. We also present an example that shows that at least a relaxed version of the monotonicity property is necessary to achieve this performance gain; if the abstention rate plateaus around the decision boundary, then our algorithm needs to query and rely on the noisy labels (resulting in higher query complexity) in order to find a hypothesis close to the one generating the ground truth labels."
    }, {
      "heading" : "1.1 Related work",
      "text" : "There has been a considerable amount of work on active learning, most of which involves labelers that are not allowed to abstain. Theoretical work on this topic largely falls under two categories — the membership query model [6, 13, 18, 19], where the learner can request label of any example in the instance space, and the PAC model, where the learner is given a large set of unlabeled examples from an underlying unlabeled data distribution, and can request labels of a subset of these examples. Our work and also that of [24] builds on the membership query model.\nThere has also been a lot of work on active learning under different noise models. The problem is relatively easy when the labeler always provides the ground truth labels – see [8, 9, 12] for work in this setting in the PAC model, and [13] for the membership query model. Perhaps the simplest setting of label noise is random classification noise, where each label is flipped with a probability that is independent of the unlabeled instance. [14] shows how to address this kind of noise in the PAC model by repeatedly querying an example until the learner is confident of its label; [18, 19] provide more sophisticated algorithms with better query complexities in the membership query model. A second setting is when the noise rate increases closer to the decision boundary; this setting has been studied under the membership query model by [6] and in the PAC model by [10, 4, 25]. A final setting is agnostic PAC learning — when a fixed but arbitrary fraction of labels may disagree with the label assigned by the optimal hypothesis in the hypothesis class. Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.\nOur work expands on the membership query model, and our abstention and noise models are related to a variant of the Tsybakov noise condition. A setting similar to ours was considered by [6, 24]. [6] considers a non-abstaining labeler, and provides a near-optimal binary search style active learning algorithm; however, their algorithm is non-adaptive. [24] gives a nearly matching lower and upper query complexity bounds for active learning with abstention feedback, but they only give a nonadaptive algorithm for learning one dimensional thresholds, and only study the situation where the\nabstention rate is upper-bounded by a polynomial function. Besides [24] , [11, 15] study active learning with abstention feedback in computer vision applications. However, these works are based on heuristics and do not provide any theoretical guarantees."
    }, {
      "heading" : "2 Settings",
      "text" : "Notation. 1 [A] is the indicator function: 1 [A] = 1 if A is true, and 0 otherwise. For x = (x1, . . . , xd) ∈ Rd (d > 1), denote (x1, . . . , xd−1) by x̃. Define lnx = loge x, log x = log 43 x, [ln ln]+ (x) = ln lnmax{x, ee}. We use Õ and Θ̃ to hide logarithmic factors in 1ǫ , 1δ , and d. Definition. Suppose γ ≥ 1. A function g : [0, 1]d−1 → R is (K, γ)-Hölder smooth, if it is continuously differentiable up to ⌊γ⌋-th order, and for any x,y ∈ [0, 1]d−1, ∣ ∣\n∣g(y)− ∑⌊γ⌋ m=0 ∂mg(x) m! (y − x)m ∣ ∣ ∣ ≤ K ‖y − x‖γ . We denote this class of functions by Σ(K, γ).\nWe consider active learning for binary classification. We are given an instance space X = [0, 1]d and a label space L = {0, 1}. Each instance x ∈ X is assigned to a label l ∈ {0, 1} by an underlying function h∗ : X → {0, 1} unknown to the learning algorithm in a hypothesis space H of interest. The learning algorithm has access to any x ∈ X , but no access to their labels. Instead, it can only obtain label information through interactions with a labeler, whose relation to h∗ is to be specified later. The objective of the algorithm is to sequentially select the instances to query for label information and output a classifier ĥ that is close to h∗ while making as few queries as possible.\nWe consider a non-parametric setting as in [6, 17] where the hypothesis space is the smooth boundary fragment class H = {hg(x) = 1 [xd > g(x̃)] | g : [0, 1]d−1 → [0, 1] is (K, γ)-Hölder smooth}. In other words, the decision boundaries of classifiers in this class are epigraph of smooth functions (see Figure 1 for example). We assume h∗(x) = 1 [xd > g∗(x̃)] ∈ H. When d = 1, H reduces to the space of threshold functions {hθ(x) = 1 [x > θ] : θ ∈ [0, 1]}. The performance of a classifier h(x) = 1 [xd > g(x̃)] is evaluated by the L1 distance between the decision boundaries ‖g − g∗‖ = ´\n[0,1]d−1 |g(x̃)− g∗(x̃)| dx̃.\nThe learning algorithm can only obtain label information by querying a labeler who is allowed to abstain from labeling or return an incorrect label (flipping between 0 and 1). For each query x ∈ [0, 1]d, the labeler L will return y ∈ Y = {0, 1,⊥} (⊥ means that the labeler abstains from providing a 0/1 label) according to some distribution PL(Y = y | X = x). When it is clear from the context, we will drop the subscript from PL(Y | X). Note that while the labeler can declare its indecision by outputting ⊥, we do not allow classifiers in our hypothesis space to output ⊥. In our active learning setting, our goal is to output a boundary g that is close to g∗ while making as few interactive queries to the labeler as possible. In particular, we want to find an algorithm with low query complexity Λ(ǫ, δ,A, L, g∗), which is defined as the minimum number of queries that Algorithm A, acting on samples with ground truth g∗, should make to a labeler L to ensure that the output classifier hg(x) = 1 [xd > g(x̃)] has the property ‖g − g∗‖ = ´ [0,1]d−1 |g(x̃)− g∗(x̃)| dx̃ ≤ ǫ with probability at least 1− δ over the responses of L."
    }, {
      "heading" : "2.1 Conditions",
      "text" : "We now introduce three conditions on the response of the labeler with increasing strictness. Later we will provide an algorithm whose query complexity improves with increasing strictness of conditions. Condition 1. The response distribution of the labeler P (Y | X) satisfies:\n• (abstention) For any x̃ ∈ [0, 1]d−1, xd, x′d ∈ [0, 1], if |xd − g∗(x̃)| ≥ |x′d − g∗(x̃)| then P (⊥| (x̃, xd)) ≤ P (⊥| (x̃, x′d));\n• (noise) For any x ∈ [0, 1]d, P (Y 6= 1 [xd > g∗(x̃)] | x, Y 6=⊥) ≤ 12 .\nCondition 1 means that the closer x is to the decision boundary (x̃, g∗(x̃)), the more likely the labeler is to abstain from labeling. This complies with the intuition that instances closer to the decision boundary are harder to classify. We also assume the 0/1 labels can be flipped with probability as large as 12 . In other words, we allow unbounded noise.\nCondition 2. Let C, β be non-negative constants, and f : [0, 1] → [0, 1] be a nondecreasing function. The response distribution P (Y | X) satisfies:\n• (abstention) P (⊥| x) ≤ 1− f (|xd − g∗(x̃)|);\n• (noise) P (Y 6= 1 [xd > g∗(x̃)] | x, Y 6=⊥) ≤ 12 ( 1− C |xd − g∗(x̃)|β ) .\nCondition 2 requires the abstention and noise probabilities to be upper-bounded, and these upper bounds decrease as x moves further away from the decision boundary. The abstention rate can be 1 at the decision boundary, so the labeler may always abstain at the decision boundary. The condition on the noise satisfies the popular Tsybakov noise condition [22].\nCondition 3. Let f : [0, 1] → [0, 1] be a nondecreasing function such that ∃0 < c < 1, ∀0 < a ≤ 1 ∀0 ≤ b ≤ 23a, f(b) f(a) ≤ 1− c. The response distribution satisfies: P (⊥| x) = 1− f (|xd − g∗(x̃)|).\nAn example where Condition 3 holds is P (⊥| x) = 1− (x− 0.3)α (α > 0). Condition 3 requires the abstention rate to increase monotonically close to the decision boundary as in Condition 1. In addition, it requires the abstention probability P (⊥ |(x̃, xd)) not to be too flat with respect to xd. For example, when d = 1, P (⊥| x) = 0.68 for 0.2 ≤ x ≤ 0.4 (shown as Figure 2) does not satisfy Condition 3, and abstention responses are not informative since this abstention rate alone yields no information on the location of the decision boundary. In contrast, P (⊥| x) = 1 − √\n|x− 0.3| (shown as Figure 3) satisfies Condition 3, and the learner could infer it is getting close to the decision boundary when it starts receiving more abstention responses.\nNote that here c, f, C, β are unknown and arbitrary parameters that characterize the complexity of the learning task. We want to design an algorithm that does not require knowledge of these parameters but still achieves nearly optimal query complexity."
    }, {
      "heading" : "3 Learning one-dimensional thresholds",
      "text" : "In this section, we start with the one dimensional case (d = 1) to demonstrate the main idea. We will generalize these results to multidimensional instance space in the next section.\nWhen d = 1, the decision boundary g∗ becomes a point in [0, 1], and the corresponding classifier is a threshold function over [0,1]. In other words the hypothesis space becomes H = {fθ(x) = 1 [x > θ] : θ ∈ [0, 1]}). We denote the ground truth decision boundary by θ∗ ∈ [0, 1]. We want to find a θ̂ ∈ [0, 1] such that |θ̂ − θ∗| is small while making as few queries as possible."
    }, {
      "heading" : "3.1 Algorithm",
      "text" : "The proposed algorithm is a binary search style algorithm shown as Algorithm 1. (For the sake of simplicity, we assume log 12ǫ is an integer.) Algorithm 1 takes a desired precision ǫ and confidence\nAlgorithm 1 The active learning algorithm for learning thresholds 1: Input: δ, ǫ 2: [L0, R0] ← [0, 1] 3: for k = 0, 1, 2, . . . , log 12ǫ − 1 do 4: Define three quartiles: Uk ← 3Lk+Rk4 , Mk ← Lk+Rk 2 , Vk ← Lk+3Rk 4\n5: A(u), A(m), A(v), B(u), B(v) ← Empty Array 6: for n = 1, 2, . . . do 7: Query at Uk,Mk, Vk, and receive labels X (u) n , X (m) n , X (v) n 8: for w ∈ {u,m, v} do 9: ⊲ We record whether X(w) =⊥ in A(w), and the 0/1 label (as -1/1) in B(w) if\nX(w) 6=⊥ 10: if X(w) 6=⊥ then 11: A(w) ← A(w).append(1) , B(w) ← B(w).append(21 [ X(w) = 1 ]\n− 1) 12: else 13: A(w) ← A(w).append(0) 14: end if 15: end for 16: ⊲ Check if the differences of abstention responses are statistically significant 17: if CHECKSIGNIFICANT-VAR( {\nA (u) i −A (m) i\n}n\ni=1 , δ 4 log 12ǫ ) then\n18: [Lk+1, Rk+1] ← [Uk, Rk]; break 19: else if CHECKSIGNIFICANT-VAR( {\nA (v) i −A (m) i\n}n\ni=1 , δ 4 log 12ǫ ) then\n20: [Lk+1, Rk+1] ← [Lk, Vk]; break 21: end if 22: ⊲ Check if the differences between 0 and 1 labels are statistically significant\n23: if CHECKSIGNIFICANT( { −B(u)i }B(u) .length\ni=1 , δ 4 log 12ǫ ) then\n24: [Lk+1, Rk+1] ← [Uk, Rk]; break\n25: else if CHECKSIGNIFICANT( {\nB (v) i\n}B(v) .length\ni=1 , δ 4 log 12ǫ ) then\n26: [Lk+1, Rk+1] ← [Lk, Vk]; break 27: end if 28: end for 29: end for 30: Output: θ̂ = (\nLlog 12ǫ +Rlog 1 2ǫ\n)\n/2\nlevel δ as its input, and returns an estimation θ̂ of the decision boundary θ∗. The algorithm maintains an interval [Lk, Rk] in which θ∗ is believed to lie, and shrinks this interval iteratively. To find the subinterval that contains θ∗, Algorithm 1 relies on two auxiliary functions (marked in Procedure 2) to conduct adaptive sequential hypothesis tests regarding subintervals of interval [Lk, Rk].\nSuppose θ∗ ∈ [Lk, Rk]. Algorithm 1 tries to shrink this interval to a 34 of its length in each iteration by repetitively querying on quartiles Uk = 3Lk+Rk4 , Mk = Lk+Rk 2 , Vk = Lk+3Rk 4 . To determine which specific subinterval to choose, the algorithm uses 0/1 labels and abstention responses simultaneously. Since the ground truth labels are determined by 1 [x > θ∗], one can infer that if the number of queries that return label 0 at Uk (Vk) is statistically significantly more (less) than label 1, then θ∗ should be on the right (left) side of Uk (Vk). Similarly, from Condition 1, if the number of nonabstention responses at Uk (Vk) is statistically significantly more than non-abstention responses at Mk, then θ∗ should be closer to Mk than Uk (Vk).\nAlgorithm 1 relies on the ability to shrink the search interval via statistically comparing the numbers of obtained labels at locations Uk,Mk, Vk. As a result, a main building block of Algorithm 1 is to test whether i.i.d. bounded random variables Yi are greater in expectation than i.i.d. bounded random variables Zi with statistical significance. In Procedure 2, we have two test functions CheckSignificant and CheckSignificant-Var that take i.i.d. random variables {Xi = Yi − Zi} (|Xi| ≤ 1)\nProcedure 2 Adaptive sequential testing 1: ⊲ D0, D1 are absolute constants defined in Proposition 1 and Proposition 2 2: ⊲ {Xi} are i.i.d. random variables bounded by 1. δ is the confidence level. Detect if EX > 0 3: function CHECKSIGNIFICANT({Xi}ni=1 , δ) 4: p(n, δ) ← D0 ( 1 + ln 1δ + √ 4n ( [ln ln]+ 4n+ ln 1 δ ) )\n5: Return ∑n i=1 Xi ≥ p(n, δ) 6: end function 7: function CHECKSIGNIFICANT-VAR({Xi}ni=1 , δ) 8: Calculate the empirical variance Var = nn−1 ( ∑n i=1 Xi 2 − 1n ( ∑n i=1 Xi) 2 ) 9: q(n,Var, δ) ← D1 ( 1 + ln 1δ + √ ( Var + ln 1δ + 1 ) ( [ln ln]+ ( Var + ln 1δ + 1 ) + ln 1δ ) )\n10: Return n ≥ ln 1δ AND ∑n i=1 Xi ≥ q(n,Var, δ) 11: end function\nand confidence level δ as their input, and output whether it is statistically significant to conclude EXi > 0.\nCheckSignificant is based on the following uniform concentration result regarding the empirical mean: Proposition 1. Suppose X1, X2, . . . are a sequence of i.i.d. random variables with X1 ∈ [−2, 2], EX1 = 0. Take any 0 < δ < 1. Then there is an absolute constant D0 such that with probability at least 1− δ, for all n > 0 simultaneously,\n∣ ∣ ∣ ∣ ∣ n ∑\ni=1\nXi\n∣ ∣ ∣ ∣ ∣ ≤ D0 ( 1 + ln 1 δ +\n√\n4n\n(\n[ln ln]+ 4n+ ln 1\nδ\n)\n)\nIn Algorithm 1, we use CheckSignificant to detect whether the expected number of queries that return label 0 at location Uk (Vk) is more/less than the expected number of label 1 with a statistical significance.\nCheckSignificant-Var is based on the following uniform concentration result which further utilizes\nthe empirical variance Vn = nn−1\n(\n∑n i=1 X 2 i − 1n ( ∑n i=1 Xi)\n2 )\n:\nProposition 2. There is an absolute constant D1 such that with probability at least 1 − δ, for all n ≥ ln 1δ simultaneously,\n∣ ∣ ∣ ∣ ∣ n ∑\ni=1\nXi\n∣ ∣ ∣ ∣ ∣ ≤ D1 ( 1 + ln 1 δ +\n√\n(\n1 + ln 1\nδ + Vn\n)(\n[ln ln]+ (1 + ln 1\nδ + Vn) + ln\n1\nδ\n)\n)\nThe use of variance results in a tighter bound when Var(Xi) is small.\nIn Algorithm 1, we use CheckSignificant-Var to detect the statistical significance of the relative order of the number of queries that return non-abstention responses at Uk (Vk) compared to the number of non-abstention responses at Mk. This results in a better query complexity than using CheckSignificant under Condition 3, since the variance of the number of abstention responses approaches 0 when the interval [Lk, Rk] zooms in on θ∗.1"
    }, {
      "heading" : "3.2 Analysis",
      "text" : "For Algorithm 1 to be statistically consistent, we only need Condition 1. Theorem 1. Let θ∗ be the ground truth. If the labeler L satisfies Condition 1 and Algorithm 1 stops to output θ̂, then ∣ ∣ ∣θ∗ − θ̂ ∣ ∣\n∣ ≤ ǫ with probability at least 1− δ2 . 1We do not apply CheckSignificant-Var to 0/1 labels, because unlike the difference between the numbers of abstention responses at Uk (Vk) and Mk, the variance of the difference between the numbers of 0 and 1 labels stays above a positive constant.\nUnder additional Conditions 2 and 3, we can derive upper bounds of the query complexity for our algorithm. (Recall f and β are defined in Conditions 2 and 3.)\nTheorem 2. Let θ∗ be the ground truth, and θ̂ be the output of Algorithm 1. Under Conditions 1 and 2, with probability at least 1− δ, Algorithm 1 makes at most Õ (\n1 f( ǫ2 )\nǫ−2β ) queries.\nTheorem 3. Let θ∗ be the ground truth, and θ̂ be the output of Algorithm 1. Under Conditions 1 and 3, with probability at least 1− δ, Algorithm 1 makes at most Õ (\n1 f( ǫ2 )\n)\nqueries.\nThe query complexity given by Theorem 3 is independent of β that decides the flipping rate, and consequently smaller than the bound in Theorem 2. This improvement is due to the use of abstention responses, which become much more informative under Condition 3."
    }, {
      "heading" : "3.3 Lower Bounds",
      "text" : "In this subsection, we give lower bounds of query complexity in the one-dimensional case and establish near optimality of Algorithm 1. We will give corresponding lower bounds for the highdimensional case in the next section.\nThe lower bound in [24] can be easily generalized to Condition 2:\nTheorem 4. ([24]) There is a universal constant δ0 ∈ (0, 1) and a labeler L satisfying Conditions 1 and 2, such that for any active learning algorithm A, there is a θ∗ ∈ [0, 1], such that for small enough ǫ, Λ(ǫ, δ0,A, L, θ∗) ≥ Ω ( 1 f(ǫ)ǫ −2β ) .\nOur query complexity (Theorem 3) for the algorithm is also almost tight under Conditions 1 and 3 with a polynomial abstention rate.\nTheorem 5. There is a universal constant δ0 ∈ (0, 1) and a labeler L satisfying Conditions 1, 2, and 3 with f(x) = C′xα (C′ > 0 and 0 < α ≤ 2 are constants), such that for any active learning algorithm A, there is a θ∗ ∈ [0, 1], such that for small enough ǫ, Λ(ǫ, δ0,A, L, θ∗) ≥ Ω (ǫ−α)."
    }, {
      "heading" : "3.4 Remarks",
      "text" : "Our results confirm the intuition that learning with abstention is easier than learning with noisy labels. This is true because a noisy label might mislead the learning algorithm, but an abstention response never does. Our analysis shows, in particular, that if the labeler never abstains, and outputs completely noisy labels with probability bounded by 1 − |x− θ∗|γ (i.e., P (Y 6= I [x > θ∗] | x) ≤ 1 2 (1− |x− θ∗| γ )), then the near optimal query complexity of Õ ( ǫ−2γ )\nis significantly larger than the near optimal Õ (ǫ−γ) query complexity associated with a labeler who only abstains with probability P (Y =⊥| x) ≤ 1 − |x− θ∗|γ and never flips a label. More precisely, while in both cases the labeler outputs the same amount of corrupted labels, the query complexity of the abstention-only case is significantly smaller than the noise-only case.\nNote that the query complexity of Algorithm 1 consists of two kinds of queries: queries which return 0/1 labels and are used by function CheckSignificant, and queries which return abstention and are used by function CheckSignificant-Var. Algorithm 1 will stop querying when the responses of one of the two kinds of queries are statistically significant. Under Condition 2, our proof actually shows that the optimal number of queries is dominated by the number of queries used by CheckSignificant function. In other words, a simplified variant of Algorithm 1 which excludes use of abstention feedback is near optimal. Similarly, under Condition 3, the optimal query complexity is dominated by the number of queries used by CheckSignificant-Var function. Hence the variant of Algorithm 1 which disregards 0/1 labels would be near optimal."
    }, {
      "heading" : "4 The multidimensional case",
      "text" : "We follow [6] to generalize the results from one-dimensional thresholds to the d-dimensional (d > 1) smooth boundary fragment class Σ(K, γ).\nAlgorithm 3 The active learning algorithm for the smooth boundary fragment class 1: Input: δ, ǫ, γ\n2: M ← Θ ( ǫ−1/γ ) . L ← { 0 M , 1 M , . . . , M−1 M\n}d−1\n3: For each l ∈ L, apply Algorithm 1 with parameter (ǫ, δ/Md−1) to learn a threshold gl that approximates g∗(l) 4: Partition the instance space into cells {Iq} indexed by q ∈ { 0, 1, . . . , Mγ − 1 }d−1 , where\nIq =\n[\nq1γ M , (q1 + 1)γ M\n] × · · · × [ qd−1γ M , (qd−1 + 1)γ M ]\n5: For each cell Iq , perform a polynomial interpolation: gq(x̃) = ∑\nl∈Iq∩L glQq,l(x̃), where\nQq,l(x̃) =\nd−1 ∏\ni=1\nγ ∏\nj=0,j 6=Mli−γqi\nx̃i − (γqi + j)/M li − (γqi + j)/M\n6: Output: g(x̃) = ∑ q∈{0,1,...,Mγ −1}d−1 gq(x̃)1 [x̃ ∈ q]"
    }, {
      "heading" : "4.1 Lower bounds",
      "text" : "Theorem 6. There are universal constants δ0 ∈ (0, 1), c0 > 0, and a labeler L satisfying Conditions 1 and 2, such that for any active learning algorithm A, there is a g∗ ∈ Σ(K, γ), such that for small enough ǫ, Λ(ǫ, δ0,A, L, g∗) ≥ Ω (\n1 f(c0ǫ)\nǫ−2β− d−1 γ\n)\n.\nTheorem 7. There is a universal constant δ0 ∈ (0, 1) and a labeler L satisfying Conditions 1, 2, and Condition 3 with f(x) = C′xα (C′ > 0 and 0 < α ≤ 2 are constants), such that for any active learning algorithm A, there is a g∗ ∈ Σ(K, γ), such that for small enough ǫ, Λ(ǫ, δ0,A, L, g∗) ≥ Ω ( ǫ−α− d−1 γ ) ."
    }, {
      "heading" : "4.2 Algorithm and Analysis",
      "text" : "Recall the decision boundary of the smooth boundary fragment class can be seen as the epigraph of a smooth function [0, 1]d−1 → [0, 1]. For d > 1, we can reduce the problem to the one-dimensional problem by discretizing the first d− 1 dimensions of the instance space and then perform a polynomial interpolation. The algorithm is shown as Algorithm 3. For the sake of simplicity, we assume γ, M/γ in Algorithm 3 are integers.\nWe have similar consistency guarantee and upper bounds as in the one-dimensional case. Theorem 8. Let g∗ be the ground truth. If the labeler L satisfies Condition 1 and Algorithm 3 stops to output g, then ‖g∗ − g‖ ≤ ǫ with probability at least 1− δ2 . Theorem 9. Let g∗ be the ground truth, and g be the output of Algorithm 3. Under Conditions 1 and 2, with probability at least 1− δ, Algorithm 3 makes at most Õ (\nd f(ǫ/2)ǫ\n−2β−d−1 γ\n)\nqueries.\nTheorem 10. Let g∗ be the ground truth, and g be the output of Algorithm 3. Under Conditions 1 and 3, with probability at least 1− δ, Algorithm 3 makes at most Õ (\nd f(ǫ/2)ǫ\n− d−1 γ\n)\nqueries.\nAcknowledgments. We thank NSF under IIS-1162581, CCF-1513883, and CNS-1329819 for research support."
    }, {
      "heading" : "A Proof of query complexities",
      "text" : "A.1 Properties of adaptive sequential testing in Procedure 2\nLemma 1. Suppose {Xi}∞i=1 is a sequence of i.i.d. random variables such that EXi ≤ 0, |Xi| ≤ 1. Let δ > 0. Then with probability at least 1 − δ, for all n ∈ N simultaneously CheckSignificant({Xi}ni=1 , δ) in Procedure 2 returns false.\nProof. This is immediate by applying Proposition 1 to Xi − EXi.\nLemma 2. Suppose {Xi}∞i=1 is a sequence of i.i.d. random variables such that EXi > ǫ > 0, |Xi| ≤ 1. Let δ ∈ [0, 13 ], N ≥ ξ ǫ2 ln 1 δ [ln ln]+ 1 ǫ (ξ is an absolute constant specified in the proof). Then with probability at least 1− δ, CheckSignificant (\n{Xi}Ni=1 , δ ) in Procedure 2 returns true.\nProof. Let SN = ∑N i=1 Xi. CheckSignificant ( {Xi}Ni=1 , δ ) returns false if and only if SN ≤ D0 ( 1 + ln 1δ + √ N ( [ln ln]+N + ln 1 δ ) ) .\nPr\n( SN ≤ D0 ( 1 + ln 1\nδ +\n√\nN\n(\n[ln ln]+N + ln 1\nδ\n)\n))\n≤Pr ( SN ≤ D0 ( 1 + ln 1\nδ + √ N [ln ln]+N +\n√\nN ln 1\nδ\n))\n≤Pr ( SN −NEXi ≤ D0 ( 1 + ln 1\nδ + √ N [ln ln]+N +\n√\nN ln 1\nδ\n) −Nǫ )\nSuppose N = cξǫ2 ln 1 δ [ln ln]+ 1 ǫ for constant c ≥ 1 and ξ. ξ is set to be sufficiently large, such that (1) ξ ≥ 4D20; (2) 2D0√ξ +D0 ( 3 + √ [ln ln]+ξ ) +D0 − √ ξ/2 ≤ − √ 1 2 ; (3) f(x) = D0 √\n[ln ln]+x − √ x/2 is decreasing when x > ξ. Here (2) is satisfiable since D0√\nξ + D0\n√ [ln ln]+ξ − √ ξ/2 →\n−∞ as ξ → ∞, (3) is satisfiable since f ′(x) → −∞ as x → ∞. (2) and (3) together implies 2D0√\nξ +D0\n(\n3 + √ [ln ln]+cξ ) +D0 − √ cξ/2 ≤ − √ 1 2 .\n1√ N\n(\nD0\n(\n1 + ln 1 δ + √ N [ln ln]+N +\n√\nN ln 1\nδ\n) −Nǫ )\n=\n√\nln 1\nδ\n\n\n\nD0ǫ(1 + ln 1 δ )\n√\ncξ[ln ln]+ 1 ǫ ln 1 δ\n+D0\n√ √ √ √ [ln ln]+ ( cξ ǫ2 ln 1 δ [ln ln]+ 1 ǫ )\nln 1δ +D0 −\n√\ncξ[ln ln]+ 1\nǫ\n\n\n\nSince [ln ln]+ 1ǫ , c, ln 1 δ ≥ 1 and ǫ < 1, we have\nD0ǫ(1+ln 1 δ )√\ncξ[ln ln]+ 1 ǫ ln 1 δ\n≤ 2D0√ ξ .\nSince [ln ln]+x ≥ 1 if x ≥ 1, we have [ln ln]+ 1ǫ ≤ 1ǫ , and thus\n√ [ln ln]+ ( cξ\nǫ2 ln\n1 δ [ln ln]+ 1 ǫ\n)\n=\n√\nln\n[\nmax\n{\ne, 2 ln 1\nǫ + ln cξ + ln ln\n1 δ + ln[ln ln]+ 1 ǫ\n}]\n≤ √ ln [ max { e, 3 ln 1\nǫ + ln cξ + [ln ln]+\n1\nδ\n}]\n(a) ≤ √ ln [ max { e, 9 ln 1\nǫ ln cξ[ln ln]+\n1\nδ\n}]\n≤ √ 3 + [ln ln]+ 1\nǫ + [ln ln]+cξ + ln[ln ln]+\n1\nδ (b)\n≤ √ 3 + √\n[ln ln]+cξ +\n√\n[ln ln]+ 1\nǫ +\n√\nln[ln ln]+ 1\nδ\nwhere (a) follows by a + b + c ≤ 3abc if a, b, c ≥ 1, and (b) follows by √ ∑ i xi ≤ ∑ i √ xi if xi ≥ 0. Thus, we have\n1√ N\n(\nD0\n(\n1 + ln 1 δ + √ N [ln ln]+N +\n√\nN ln 1\nδ\n) −Nǫ )\n≤ √ ln 1\nδ\n\n 2D0√ ξ +D0\n√ 3 + √ [ln ln]+cξ + √ [ln ln]+ 1 ǫ + √ ln[ln ln]+ 1 δ\n√\nln 1δ\n+D0 − √ cξ[ln ln]+ 1\nǫ\n\n\n(c) ≤ √ ln 1\nδ\n(\n2D0√ ξ +D0 ( 3 + √ [ln ln]+cξ ) +D0 − √ cξ/2\n)\n(d) ≤ − √ ln 1\nδ /2\n(c) follows by √ ln 1δ ≥ max { 1, √ ln[ln ln]+ 1 δ } , D0 ≥ 1, and √ [ln ln]+ 1 ǫ\n(\nD0√ ln 1\nδ\n−√cξ ) ≤\nD0 − √ cξ ≤ − √ cξ/2 if cξ ≥ 4D20. (d) follows by our choose of ξ.\nTherefore,\nPr\n( SN −NEXi ≤ D0 ( 1 + ln 1\nδ + √ N [ln ln]+N +\n√\nN ln 1\nδ\n) −Nǫ )\n≤Pr ( SN −NEXi ≤ − √ N ln 1\nδ /2\n)\nwhich is at most δ by Hoeffding Bound.\nLemma 3. Suppose {Xi}∞i=1 is a sequence of i.i.d. random variables such that EXi ≤ 0, |Xi| ≤ 1. Let δ > 0. Then with probability at least 1 − δ, for all n simultaneously CheckSignificantVar({Xi}ni=1 , δ) in Procedure 2 returns false.\nProof. Define Yi = Xi − EXi. It is easy to check nn−1 ( ∑n i=1 Y 2 i − 1n ( ∑n i=1 Yi) 2 ) =\nn n−1\n(\n∑n i=1 X 2 i − 1n ( ∑n i=1 Xi)\n2 )\n. The result is immediate from Proposition 2.\nLemma 4. Suppose {Xi}∞i=1 is a sequence of i.i.d. random variables such that EXi > τǫ, |Xi| ≤ 1, Var (Xi) ≤ 2ǫ where 0 < ǫ ≤ 1, τ > 0. Let δ < 1, N = ξτǫ ln 2δ (ξ is a constant specified in the proof). Then with probability at least 1 − δ, CheckSignificant-Var (\n{Xi}Ni=1 , δ )\nin Procedure 2 returns true.\nProof. Let Yi = Xi − EXi, η be the constant η in Lemma 14. Set ξ = max(η, 16τ + 83 ).\nCheckSignificant-Var ( {Xi}Ni=1 , δ ) returns false if and only if ∑N i=1 Xi ≤ q(N,Var, δ).\nBy applying Lemma 14 to Xi, q(N,Var,δ) N − EXi ≤ −τǫ/2 with probability at least 1− δ/2. Applying Bernstein’s inequality to Yi, we have\nPr\n(\n1\nN\nN ∑\ni=1\nYi ≤ −τǫ/2 ) ≤ exp ( −N (−τǫ) 2 /4\n4ǫ+ 2τǫ/3\n)\n= exp\n( − ξ ln 2 δ\n16/τ + 8/3\n)\n≤ δ/2\nThus, by a union bound,\nPr\n(\nN ∑\ni=1\nXi ≤ q(N,Var, δ) )\n≤Pr ( q(N,Var, δ) N − EXi ≥ −τǫ/2 )\n+ Pr\n(\nq(N,Var, δ) N − EXi ≤ −τǫ/2 and 1 N\nN ∑\ni=1\nXi ≤ q(N,Var, δ)\nN\n)\n≤δ/2 + Pr (\nq(N,Var, δ) N − EXi ≤ −τǫ/2 and 1 N\nN ∑\ni=1\nYi ≤ q(n,Var, δ)\nN − EXi\n)\n≤δ/2 + Pr ( 1\nN\nN ∑\ni=1\nYi ≤ −τǫ/2 )\n≤δ\nA.2 The one-dimensional case\nProof of Theorem 1. Since θ̂ = (\nLlog 12ǫ +Rlog 1 2ǫ\n) /2 and Rlog 12ǫ − Llog 12ǫ = 2ǫ, ∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ > ǫ is\nequivalent to θ∗ /∈ [Llog 12ǫ , Rlog 12ǫ ]. We have\nPr (∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ > ǫ ) = Pr ( θ∗ /∈ [Llog 12ǫ , Rlog 12ǫ ] )\n= Pr (∃k : θ∗ ∈ [Lk, Rk] and θ∗ /∈ [Lk+1, Rk+1])\n≤ log 12ǫ−1 ∑\nk=0\nPr (θ∗ ∈ [Lk, Rk] and θ∗ /∈ [Lk+1, Rk+1])\nFor any k = 0, . . . , log 12ǫ − 1, define Qk = { (p, q) : p, q ∈ Q ∩ [0, 1] and q − p = ( 3 4 )k } where Q is the set of rational numbers. Note that Lk, Rk ∈ Qk, and Q is countable. So we have\nPr (θ∗ ∈ [Lk, Rk] and θ∗ /∈ [Lk+1, Rk+1]) = ∑\n(p,q)∈Qk:p≤θ∗≤q Pr (Lk = p,Rk = q and θ\n∗ /∈ [Lk+1, Rk+1])\n= ∑ (p,q)∈Qk:p≤θ∗≤q Pr (θ∗ /∈ [Lk+1, Rk+1]|Lk = p,Rk = q) Pr (Lk = p,Rk = q)\nDefine event Ek,p,q to be the event Lk = p,Rk = q. To show Pr (∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ > ǫ )\n≤ δ2 , it suffices to show Pr (θ∗ /∈ [Lk+1, Rk+1]|Ek,p,q) ≤ δ2 log 12ǫ for any k = 0, . . . , log 1 2ǫ − 1, (p, q) ∈ Qk and p ≤ θ∗ ≤ q. Conditioning on event Ek,p,q , event θ∗ /∈ [Lk+1, Rk+1] happens only if some calls of CheckSignificant and CheckSignificant-Var between Line 16 and 27 of Algorithm 1 return true incorrectly. In other words, at least one of following events happens for some n:\n• O(1)k,p,q: θ∗ ∈ [Lk, Uk] and CheckSignificant-Var( { A (u) i −A (m) i\n}n\ni=1 , δ 4 log 12ǫ ) returns true;\n• O(2)k,p,q: θ∗ ∈ [Vk, Rk] and CheckSignificant-Var( { A (v) i −A (m) i\n}n\ni=1 , δ 4 log 12ǫ ) returns true;\n• O(3)k,p,q: θ∗ ∈ [Lk, Uk] and CheckSignificant( { −B(u)i }n\ni=1 , δ 4 log 12ǫ ) returns true;\n• O(4)k,p,q: θ∗ ∈ [Vk, Rk] and CheckSignificant( { B (v) i\n}n\ni=1 , δ 4 log 12ǫ ) returns true;\nNote that since [Uk, Vk] ⊂ [Lk+1, Rk+1] for any k by our construction, if θ∗ ∈ [Uk, Vk] then θ∗ ∈ [Lk+1, Rk+1]. Besides, event θ∗ ∈ [Lk, Uk] and event θ∗ ∈ [Vk, Rk] are mutually exclusive. Conditioning on event Ek,p,q , suppose for now θ∗ ∈ [Lk, Uk].\nPr (\nO (1) k,p,q | Ek,p,q\n)\n=Pr\n(\n∃n : CheckSignificant-Var( {\nD (u,m) i\n}n\ni=1 ,\nδ\n4 log 12ǫ ) returns true | θ∗ ∈ [Lk, Uk], Ek,p,q\n)\nOn event θ∗ ∈ [Lk, Uk] and Ek,p,q , the sequences { A (u) i } and { A (m) i } are i.i.d., and E [ A (u) i −\nA (m) i | θ∗ ∈ [Lk, Uk], Ek,p,q\n]\n≤ 0. By Lemma 3, the probability above is at most δ 4 log 12ǫ .\nLikewise,\nPr (\nO (3) k,p,q | Ek,p,q\n)\n=Pr\n(\n∃n : CheckSignificant( { −B(u)i }n\ni=1 ,\nδ\n4 log 12ǫ ) returns true | θ∗ ∈ [Lk, Uk], Ek,p,q\n)\nOn event θ∗ ∈ [Lk, Uk] and Ek,p,q , the sequence { B (u) i } is i.i.d., and\nE\n[ −B(u)i | θ∗ ∈ [Lk, Uk], Ek,p,q ]\n≤ 0. By Lemma 1, the probability above is at most δ 4 log 12ǫ .\nThus, Pr (θ∗ /∈ [Lk+1, Rk+1] | Ek,p,q) ≤ δ2 log 12ǫ when θ ∗ ∈ [Lk, Uk]. Similarly, when θ∗ ∈ [Vk, Rk], we can show Pr (θ∗ /∈ [Lk+1, Rk+1] | Ek,p,q) ≤ Pr ( O (2) k,p,q | Ek,p,q ) + Pr (\nO (4) k,p,q | Ek,p,q\n)\n≤ δ 2 log 12ǫ .\nTherefore, Pr (θ∗ /∈ [Lk+1, Rk+1] | Ek,p,q) ≤ δ2 log 12ǫ , and thus Pr (∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ > ǫ ) ≤ δ/2.\nProof of Theorem 2. Define Tk to be the number of iterations of the loop at Line 6, T = ∑log 12ǫ−1\nk=0 Tk. For any numbers m1,m2, . . . ,mlog 12ǫ−1, we have:\nPr (T ≥ m) ≤ Pr (∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ > ǫ ) + Pr\n\n\n∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ < ǫ and T ≥ log 12ǫ−1 ∑\nk=0\nmk\n\n\n≤ δ 2 + Pr\n T ≥ log 12ǫ−1 ∑\nk=0\nmk and ∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ < ǫ\n\n (1)\n≤ δ 2 +\nlog 12ǫ−1 ∑\nk=0\nPr ( Tk ≥ mk and ∣ ∣ ∣θ̂ − θ∗ ∣ ∣ ∣ < ǫ )\n≤ δ 2 +\nlog 12ǫ−1 ∑\nk=0\nPr (Tk ≥ mk and θ∗ ∈ [Lk, Rk])\nThe first and the third inequality follows by union bounds. The second follows by Theorem 1. The last follows since ∣ ∣ ∣ θ̂ − θ∗ ∣ ∣\n∣ < ǫ is equivalent to θ∗ ∈ [Llog 12ǫ , Rlog 12ǫ ], which implies θ ∗ ∈ [Lk, Rk] for all k = 0, . . . , log 12ǫ − 1. We define Qk as in the previous proof. For all k = 0, . . . , log 12ǫ − 1,\nPr (Tk ≥ mk and θ∗ ∈ [Lk, Rk]) = ∑\n(p,q)∈Qk:p≤θ∗≤q Pr (Tk ≥ mk, Lk = p,Rk = q)\n= ∑\n(p,q)∈Qk:p≤θ∗≤q Pr (Tk ≥ mk|Lk = p,Rk = q) Pr (Lk = p,Rk = q)\nThus, in order to prove the query complexity of Algorithm 1 is O ( ∑log 12ǫ−1 k=0 mk ) , it suffices to show that Pr (Tk ≥ mk | Lk = p,Rk = q) ≤ δ2 log 12ǫ for any k = 0, . . . , log 1 2ǫ − 1, (p, q) ∈"
    }, {
      "heading" : "Qk and p ≤ θ∗ ≤ q.",
      "text" : "For each k, p, q, define event Ek,p,q to be the event Lk = p,Rk = q. Define lk = q− p = ( 3 4 )k , Nk to be Θ̃ (\n1 f(lk/4) l−2βk\n)\n. The logarithm factor of Nk is to be specified later. Define S (u) n and S (v) n to\nbe the size of array B(u) and B(v) before Line 16 respectively.\nTo show Pr (Tk ≥ Nk | Ek,p,q) ≤ δ2 log 12ǫ , it suffices to show that on event Ek,p,q , with probability at least 1 − δ\n2 log 12ǫ , if n = Nk then at least one of the two calls to CheckSignificant between Line\n22 and Line 27 will return true.\nOn event Ek,p,q , if θ∗ ∈ [Lk,Mk] (note that on event Ek,p,q , Lk and Mk are deterministic), then |Vk − θ∗| ≥ lk4 . We will show\np1 := Pr\n(\nCheckSignificant\n(\n{\nB (v) i\n}S (v) Nk\ni=1 ,\nδ\n4 log 12ǫ\n) returns false | Ek,p,q )\n≤ δ 2 log 12ǫ\nTo prove this, we will first show that S(v)Nk , the length of the array B (v), is large with high probability, and then apply Lemma 2 to show that CheckSignificant will return true if S(v)Nk is large.\nBy definition, S(v)Nk = ∑Nk i=1 A (v) i . By Condition 2, E\n[\nA (v) i | Ek,p,q\n]\n=\nPr (Y 6=⊥| X = Vk, Ek,p,q) ≥ f ( lk 4 ) .\nOn event Ek,p,q , { A (v) i } is a sequence of i.i.d. random variables. By the multiplicative Chernoff bound, Pr (\nS (v) Nk ≤ 12Nkf ( lk 4 )\n| Ek,p,q ) ≤ exp ( −Nkf ( lk 4 ) /8 ) .\nNow,\np1 ≤Pr ( CheckSignificant ( { B (v) i }S (v) Nk\ni=1 ,\nδ\n4 log 12ǫ\n)\nreturns false, S(v)Nk ≥ 1\n2 Nkf\n(\nlk 4\n) | Ek,p,q )\n+ Pr\n(\nS (v) Nk\n< 1\n2 Nkf\n(\nlk 4\n) | Ek,p,q )\nBy Condition 2 and |Vk − θ∗| ≥ lk4 , E [ B (v) i | Ek,p,q ] ≥ C ( lk 4 )β . On event Ek,p,q , { B (v) i } is a sequence of i.i.d. random variables. Thus, On event Ek,p,q , by Lemma 2, with probability at least\n1 − δ 4 log 12ǫ , CheckSignificant will return true if 12Nkf ( lk 4 )\n= Θ ( 1\nl2β k\nln ln 1/ǫδ [ln ln]+ 1\nl2β k\n)\n. We\nhave already proved Pr (\nS (v) Nk ≤ 12Nkf ( lk 4 )\n| Ek,p,q ) ≤ exp ( −Nkf ( lk 4 ) /8 ) . By setting Nk =\nΘ (\n1 f(lk/4) l−2βk ln ln 1/ǫ δ [ln ln]+ 1\nl2β k\n)\n, we can ensure p1 is at most δ/2 log 12ǫ .\nNow we have proved on event Ek,p,q , if θ∗ ∈ [Lk,Mk], then\nPr\n(\nCheckSignificant\n(\n{\nB (v) i\n}S (v) Nk\ni=1 ,\nδ\n4 log 12ǫ\n) returns true | Ek,p,q )\n≥ 1− δ 2 log 12ǫ\nLikewise, on event Ek,p,q , if θ∗ ∈ [Mk, Rk], then\nPr\n(\nCheckSignificant\n(\n{ −B(u)i }S\n(u) Nk\ni=1 ,\nδ\n4 log 12ǫ\n) returns true | Ek,p,q )\n≥ 1− δ 2 log 12ǫ\nTherefore, we have shown Pr (Tk ≥ Nk | Ek,p,q) ≤ δ2 log 12ǫ for any k, p, q. By (1), with probability at least 1− δ, the number of samples queried is at most\nlog 12ǫ−1 ∑\nk=0\nO\n(\n1\nf( ( 3 4 )k /4)\n(\n3\n4\n)−2βk ln ln 1/ǫ\nδ [ln ln]+\n(\n3\n4\n)−2kβ)\n=O\n( ǫ−2β\nf(ǫ/2) ln\n1\nǫ\n(\nln 1\nδ + ln ln\n1\nǫ\n)\n[ln ln]+ 1\nǫ\n)\nProof of Theorem 3. For each k in Algorithm 1 at Line 3, Let lk = Rk − Lk. Let Nk = η 1f(lk/4) ln 4 log 12ǫ δ , where η is a constant to be specified later. As with the previous proof, it suffices to show Pr (Tk ≥ Nk | Ek,p,q) ≤ δ2 log 12ǫ where event Ek,p,q is defined to be Lk = p,Rk = q, Tk is the number of iterations at the loop at Line 6.\nOn event Ek,p,q , we will show that the loop at Line 6 will terminate after n = Nk with probability at least 1− δ\n2 log 12ǫ .\nSuppose for now θ∗ ∈ [Mk, Rk]. Let Zi = A(u)i − A (m) i , ζ = θ ∗ − Mk. Clearly, |Zi| ≤ 1. On event Ek,p,q , sequence {Zi} is i.i.d.. By Condition 3, E [Zi | Ek,p,q ] = f(ζ + lk4 ) − f(ζ) ≥\ncf(ζ + lk4 ) since ζ ≤ 23 (ζ + lk 4 ). Var [Zi|Ek,p,q ] = Var\n[\nA (u) i | Ek,p,q\n] + Var [\nA (m) i | Ek,p,q\n] (a)\n≤\nE\n[\nA (u) i | Ek,p,q\n] + E [\nA (m) i | Ek,p,q\n] = f(ζ + lk4 ) + f(ζ) (b) ≤ 2f(ζ + lk4 ) where (a) follows by\nAi ∈ {0, 1} and (b) follows by the monotonicity of f . Thus, on event Ek,p,q , by Lemma 4, if we set η sufficiently large (independent of lk, ǫ, δ), then with probability at least 1 − δ4 log 12ǫ CheckSignificant-Var (\n{Zi}Nki=1 , δ4 log 12ǫ ) in Procedure 2 returns true.\nSimilarly, we can show that on event Ek,p,q , if θ∗ ∈ [Lk,Mk], by Lemma 4, with probability at least 1− δ\n4 log 12ǫ , CheckSignificant-Var\n(\n{\nA (v) i −A (m) i\n}Nk\ni=1 , δ 4 log 12ǫ\n)\nreturns true.\nTherefore, the loop at Line 6 will terminate after n = Nk with probability at least 1 − δ4 log 12ǫ on event Ek,p,q . Therefore, with probability at least 1 − δ, the number of samples queried is at most ∑log 12ǫ−1\nk=0 1\nf(( 34 ) k /4)\nln ln 1/ǫδ = O ( 1 f(ǫ/2) ln 1 ǫ ( ln 1δ + ln ln 1 ǫ ) ) .\nA.3 The d-dimensional case\nTo prove the d-dimensional case, we only need to use a union bound to show that with high probability all calls of Algorithm 1 succeed, and consequently the output boundary g produced by polynomial interpolation is close to the true underlying boundary due to the smoothness assumption of g∗.\nProof of Theorem 8. For q ∈ { 0, 1, . . . , Mγ − 1 }d−1 , define the “polynomial interpolation” version of g∗ as g∗q (x̃) = ∑\nl∈Iq∩L g∗(l)Qq,l(x̃)\nRecall that we choose M = O ( ǫ−1/γ ) .\nBy Theorem 1, each run of Algorithm 1 at the line 3 of Algorithm 3 will return a gl such that ∣ ∣gl − g∗q (l) ∣ ∣ ≤ ǫ with probability at least 1− δ/2Md−1.\n‖g − g∗‖ = ∑\nq∈{0,...,M/γ−1}d−1 ‖(gq − g∗)1{x̃ ∈ Iq}‖\n≤ ∑\nq∈{0,...,M/γ−1}d−1\n∥ ∥ ( gq − g∗q ) 1{x̃ ∈ Iq} ∥ ∥+ ∥ ∥ ( g∗q − g∗ ) 1{x̃ ∈ Iq} ∥ ∥\n∥ ∥ ( g∗q − g∗ ) 1{x̃ ∈ Iq} ∥ ∥ =\nˆ\nIq\n∣ ∣g∗q (x̃)− g∗(x̃) ∣ ∣ dx̃\n= O\n(\nˆ\nIq\nM−γdx̃\n)\n= O ( M−γ−d+1 )\nThe second equality follows from Lemma 3 of [6] that |gq(x̃)− g∗(x̃)| = O (M−γ) since g∗ is γ-Hölder smooth.\n∥ ∥ ( gq − g∗q ) 1{x̃ ∈ Iq} ∥ ∥\n= ∑\nl∈Iq∩L\n∣ ∣gl − g∗q (l) ∣ ∣ ‖Qq,l‖\n≤ ∑\nl∈Iq∩L ǫ ‖Qq‖\n=O(ǫM−d+1)\nTherefore, overall we have ‖g − g∗‖ ≤ O ( M−γ−d+1 + ǫM−d+1 )\n(\nM γ\n)d−1 = O(ǫ).\nProof of Theorem 9. By Theorem 2, each run of Algorithm 1 at the line 3 of Algorithm 3 will make Õ (\nd f(ǫ/2)ǫ\n−2β )\nqueries with probability at least 1 − δ/Md−1, thus by a union bound, the total\nnumber of queries made is Õ (\nd f(ǫ/2)ǫ\n−2β−d−1 γ\n)\nwith probability at least 1− δ.\nProof of Theorem 10. The proof is similar to the previous proof."
    }, {
      "heading" : "B Proof of lower bounds",
      "text" : "First, we introduce some notations for this section. Given a labeler L and an active learning algorithm A, denote by PnL,A the distribution of n samples {(Xi, Yi)} n i=1 where Yi is drawn from distribution PL(Y |Xi) and Xi is drawn by the active learning algorithm based solely on the knowledge of {(Xj , Yj)}i−1j=1. We will drop the subscripts from PnL,A and PL(Y |X) when it is clear from the context. For a sequence {Xi}∞i=1 denote by Xn the subsequence {X1, . . . , Xn}. Definition 1. For any distributions P,Q on a countable support, define KL-divergence as dKL (P,Q) = ∑\nx P (x) ln P (x)Q(x) . For two random variables X,Y , define the mutual information\nas I(X ;Y ) = dKL (P (X,Y ) ‖ P (X)P (Y )). We will use Fano’s method shown as below to prove the lower bounds.\nLemma 5. Let Θ be a class of parameters, and {Pθ : θ ∈ Θ} be a class of probability distributions indexed by Θ over some sample space X . Let d : Θ × Θ → R be a semi-metric. Let V = {θ1, . . . , θM} ⊆ Θ such that ∀i 6= j, d(θi, θj) ≥ 2s > 0. Let P̄ = 1M ∑ θ∈V Pθ . If dKL ( Pθ ‖ P̄ )\n≤ δ for any θ ∈ V , then for any algorithm θ̂ that given a sample X drawn from Pθ outputs θ̂(X) ∈ Θ, the following inequality holds:\nsup θ∈Θ Pθ\n( d(θ, θ̂(X)) ≥ s ) ≥ 1− δ + ln 2 lnM\nProof. For any algorithm θ̂, define a test function Ψ̂ : X → {1, . . . ,M} such that Ψ̂(X) = argmini∈{1,...,M} d(θ̂(X), θi). We have\nsup θ∈Θ Pθ\n( d(θ, θ̂(X)) ≥ s )\n≥ max θ∈V Pθ\n( d(θ, θ̂(X)) ≥ s )\n≥ max i∈{1,...,M} Pθi\n( Ψ̂(X) 6= i )\nLet V be a random variable uniformly taking values from V , and X be drawn from PV . By Fano’s Inequality, for any test function Ψ : X → {1, . . . ,M}\nmax i∈{1,...,M}\nPθi (Ψ(X) 6= i) ≥ 1− I(V ;X) + ln 2\nlnM\nThe desired result follows by the fact that I(V ;X) = 1M ∑ θ∈V dKL ( Pθ ‖ P̄ ) .\nB.1 The one dimensional case\nProof of Theorem 5. 2 Without lose of generality, let C = C′ = 1 (C is defined in Condition 2). Let ǫ ≤ 14 min { ( 1 2 )1/β , ( 4 5 )1/α , 14 } . We will prove the desired result using Lemma 5.\nFirst, we construct V and Pθ . For any k ∈ {0, 1, 2, 3}, let PLk(Y | X) be the distribution of the labeler Lk’s response with the ground truth θk = kǫ:\n2Actually we can use Le Cam’s method to prove this one dimensional case (which only needs to construct 2 distributions instead of 4 here), but this proof can be generalized to the multidimensional case more easily.\nPLk (Y =⊥ |x) = 1− ∣ ∣ ∣\n∣ x− 1 2 − kǫ\n∣ ∣ ∣ ∣ α\nPLk (Y = 0|x) =\n\n\n\n( x− 12 − kǫ )α\n(\n1− ( x− 12 − kǫ )β )\n/2 x > 12 + kǫ (\n1 2 + kǫ− x\n)α (\n1 + ( 1 2 + kǫ− x\n)β )\n/2 x ≤ 12 + kǫ\nPLk (Y = 1|x) =\n\n\n\n( x− 12 − kǫ )α\n(\n1 + ( x− 12 − kǫ )β )\n/2 x > 12 + kǫ (\n1 2 + kǫ− x\n)α (\n1− ( 1 2 + kǫ− x\n)β )\n/2 x ≤ 12 + kǫ\nClearly, PLk complies with Conditions 1, 2 and 3. Define Pnk to be the distribution of n samples {(Xi, Yi)} n i=1 where Yi is drawn from distribution PLk(Y |Xi) and Xi is drawn by the active learning algorithm based solely on the knowledge of {(Xj , Yj)}i−1j=1.\nDefine P̄L = 14 ∑ j PLj and P̄ n = 14 ∑ j P n k . We take Θ to be [0, 1], and d(θ1, θ2) = |θ1 − θ2| in Lemma 5. To use Lemma 5, we need to bound dKL ( Pnk ‖ P̄n )\nfor k ∈ {0, 1, 2, 3}. For any k ∈ {0, 1, 2, 3} ,\ndKL ( Pnk ‖ P̄n0 )\n=EPn k\n(\nln Pnk ({(Xi, Yi)} n i=1)\nP̄n ({(Xi, Yi)}ni=1)\n)\n=EPn k\n(\nln Pnk (X1)P n k (Y1 | X1)Pnk (X2 | X1, Y1) · · ·Pnk (Yn | X1, Y1, . . . , Xn)\nP̄n (X1) P̄n (Y1 | X1) P̄n (X2 | X1, Y1) · · · P̄n (Yn | X1, Y1, . . . , Xn)\n)\n(a) =EPn\nk\n(\nln Πni=1PLk (Yi|Xi) Πni=1P̄L (Yi|Xi)\n)\n(2)\n=\nn ∑\ni=1\nEPn k\n(\nEPn k\n(\nln PLk (Yi|Xi) P̄L (Yi|Xi) | Xn ))\n≤n max x∈[0,1] dKL ( PLk(Y | x) ‖ P̄L(Y | x) )\n(a) follows by the fact that Pnk (Xi+1 | X1, Y1, . . . Xi, Yi) = P̄n (Xi+1 | X1, Y1, . . . , Xi, Yi) since Xi+1 is drawn by the same active learning algorithm based solely on the knowledge of {(Xj , Yj)}ij=1 regardless of the labeler’s response distribution, and the fact that Pnk (Yi | X1, Y1, . . . , Xi) = PLk (Yi|Xi) and P̄n (Yi | X1, Y1, . . . , Xi) = P̄L (Yi|Xi) by definition.\nFor any k ∈ {1, 2, 3}, x ∈ [0, 1],\nP̄L(· | x) ≥ PL0(· | x) + PLk(· | x)\n4 (3)\nFor any k ∈ {0, 1, 2, 3}, x ∈ [0, 1], y ∈ {1,−1,⊥}\n( P̄L(Y = y | x)− PLk(Y = y | x) )2\n=\n\n\n∑\nj\n1\n4\n( PLj (Y = y | x)− PL0(Y = y | x) ) + (PL0(Y = y | x)− PLk(Y = y | x))\n\n\n2\n≤\n\n\n5\n16\n∑\nj>0\n( PLj (Y = y | x)− PL0(Y = y | x) )2 + 5 (PL0(Y = y | x)− PLk(Y = y | x))2  \n≤6 ∑\nj>0\n( PLj (Y = y | x)− PL0(Y = y | x) )2\n(4)\nwhere the first inequality follows by (\n∑4 i=0 ai\n)2\n≤ 5 ∑4 i=0 a 2 i by letting aj =\n1 4\n( PLj (Y = y | x) − PL0(Y = y | x) ) for j = 0, . . . , 3 and a4 = PL0(Y = y | x)−PLk(Y = y | x), and noting that a0 = 0 under this setting.\nThus,\ndKL ( PLk(Y | x) ‖ P̄L(Y | x) )\n≤ ∑\ny\n1\nP̄L(Y = y | x) ( PLk(Y = y | x)− P̄L(Y = y | x) )2\n≤24 ∑\nj>0\n∑\ny\n1\nPLj (y | x) + PL0(y | x) ( PLj (Y = y | x)− PL0(Y = y | x) )2\n≤O(ǫα)\nThe first inequality follows from Lemma 10. The second inequality follows by (3) and (4). The last inequality follows by applying Lemma 11 to PL0(· | x) and PLj (· | x) and the assumption α ≤ 2. Therefore, we have dKL ( Pnk ‖ P̄n0 ) = nO(ǫα). By setting n = ǫ−α, we get dKL ( Pnk ‖ P̄n0 )\n≤ O (1), and thus by Lemma 5,\nsup θ Pθ\n( d(θ, θ̂(X)) ≥ Ω (ǫ) ) ≥ 1− O (1) + ln 2 ln 4 = O (1)\nB.2 The d-dimensional case\nAgain, we will use Lemma 5 to prove the lower bounds for d-dimensional cases. We first construct {Pθ : θ ∈ Θ} using a similar idea with [6], and then use Lemma 12 to select a subset Θ̃ ⊂ Θ to apply Lemma 5.\nProof of Theorem 6. Again, without lose of generality, let C = 1. Recall that for x = (x1, . . . , xd) ∈ Rd, we have defined x̃ to be (x1, . . . , xd−1). Define m = ( 1 ǫ )1/γ . L = {\n0, 1m , . . . , m−1 m }d−1 , h(x̃) = Πd−1i=1 exp\n(\n− 1 1−4x2i\n)\n1 { |xi| < 12 } , φl(x̃) = Km−γh(m(x̃− l)− 1 2 ) where l ∈ L. It is easy to check φl(x̃) is (K, γ)-Hölder smooth and has bounded support [l1, l1 + 1 m ]× · · · × [ld−1, ld−1 + 1m ], which implies that for different l1, l2 ∈ L, the support of φl1 and φl2 do not intersect.\nLet Ω = {0, 1}md−1. For any ω ∈ Ω, define gω(x̃) = ∑ l∈L ωlφl(x̃). For each ω ∈ Ω, define the conditional distribution of labeler Lω’s response as follows:\nFor xd ≤ A, PLω (y =⊥ |x) = 1 − f(A), PLω (y 6= I(xd > gω(x̃))|x, y 6=⊥) = 1 2 ( 1− |xd − gω(x̃)|β ) ;\nFor xd ≥ A, PLω (y =⊥ |x) = 1− f(xd), PLω (y 6= I(xd > gω(x̃))|x, y 6=⊥) = 12 ( 1− xβd ) .\nHere, A = cmaxφ(x̃) = c′ǫ for some constants c, c′.\nIt can be easily verified that PLω satisfies Conditions 1 and 2. Note that gω(x̃) can be seen as the underlying decision boundary for labeler PLω .\nDefine Pn ω to be the distribution of n samples {(Xi, Yi)}ni=1 where Yi is drawn from distribution PLω (Y |Xi) and Xi is drawn by the active learning algorithm based solely on the knowledge of {(Xj , Yj)}i−1j=1.\nBy Lemma 12, when ǫ is small enough so that md−1 is large enough, there is a subset {\nω (1), . . . ,ω(M)\n} ⊂ Ω such that ∥ ∥ω (i) − ω(j) ∥ ∥ 0 ≥ md−1/12 for any 0 ≤ i < j ≤ M and\nM ≥ 2md−1/48. Define Pni = Pnω(i) , P̄n = 1 M ∑M i=1 P n i .\nNext, we will apply Lemma 5 to { ω (1), . . . ,ω(M) } with d(ω(i),ω(j)) = ‖g ω (i) − g ω (j)‖. We will lower-bound d(ω(i),ω(j)) and upper-bound dKL ( Pni ‖ P̄n ) .\nFor any 1 ≤ i < j ≤ M , ‖g\nω (i) − g ω (j)‖\n= ∑\nl∈{1,...,m}d−1\n∣ ∣ ∣ω (i) l − ω (j) l ∣ ∣ ∣Km−γ−(d−1) ‖h‖\n≥md−1/12 ∗Km−γ−(d−1) ‖h‖ =Km−γ ‖h‖ /12 =Θ (ǫ)\nBy the convexity of KL-divergence, dKL ( Pni ‖ P̄n ) ≤ 1M ∑M j=1 dKL ( Pni ‖ Pnj )\n, so it suffices to upper-bound dKL ( Pni ‖ Pnj ) for any i, j.\nFor any 1 < i, j ≤ M , dKL ( Pni ‖ Pnj )\n≤n max x∈[0,1]d dKL\n(\nPnL ω (i) (Y | x) ‖ PnL ω (j)\n(Y | x) )\n=n max x∈[0,1]d PnL ω (i) (Y 6=⊥| x)dKL\n(\nPnL ω (i) (Y | x, Y 6=⊥) ‖ PnL ω (j)\n(Y | x, Y 6=⊥) )\nThe inequality follows as (2) in the proof of Theorem 5. The equality follows since Pω(y =⊥ |x) is the same for all ω ∈ Ω. If xd ≥ A, then PnL\nω (i) (Y | x, Y 6=⊥) = PnL ω (j) (Y | x, Y 6=⊥), so dKL (\nPnL ω (i) (Y | x, Y 6=⊥) ‖ PnL ω (j)\n(Y | x, Y 6=⊥) )\n= 0. If xd < A, then PnL ω (i) (Y 6=⊥| x) =\nf(A). Therefore,\ndKL ( Pni ‖ Pnj ) ≤ nf(A) max x∈[0,1]d dKL\n(\nPnL ω (i) (Y | x, Y 6=⊥) ‖ PnL ω (j)\n(Y | x, Y 6=⊥) )\n.\nApply Lemma 10 to PnL ω (i) (Y | x, Y 6=⊥) and PnL ω (i) (Y | x, Y 6=⊥), and noting they are bounded\nabove by a constant, we have max x∈[0,1]d dKL\n(\nPnL ω (i) (Y | x, Y 6=⊥) ‖ PnL ω (j)\n(Y | x, Y 6=⊥) ) =\nO ( A2β ) . Thus,\ndKL ( Pni ‖ Pnj ) ≤ nf(A)O ( A2β ) = nf(c′ǫ)O(ǫ2β)\nBy setting n = 1f(c′ǫ)ǫ −2β− d−1 γ , we get dKL ( Pni ‖ Pnj ) ≤ O ( ǫ− d−1 γ ) . The desired results follows by Lemma 5.\nThe proof of Theorem 7 follows the same structure.\nProof of Theorem 7. As in the proof of Theorem 6, let C = C′ = 1, and define m = ( 1 ǫ )1/γ . L = {\n0, 1m , . . . , m−1 m }d−1 , h(x̃) = Πd−1i=1 exp\n(\n− 1 1−4x2i\n)\n1 { |xi| < 12 } , φl(x̃) = Km−γh(m(x̃− l) − 12 ) where l ∈ L. Let Ω = {0, 1}m d−1 . For any ω ∈ Ω, define gω(x̃) = 12 + ∑\nl∈L ωlφl(x̃), which can be seen as a decision boundary. A = maxφ(x̃) = c′ǫ for some constants c′.\nLet g+(x̃) = g(1,1,...,1)(x̃) = ∑\nl∈L φl(x̃), g−(x̃) = g(0,0,...,0)(x̃) = 0. In other words, g+ is the “highest” boundary, and g− is the “lowest” boundary.\nFor each ω ∈ Ω, define the conditional distribution of labeler Lω’s response as follows:\nPLω (y =⊥ |x) = 1− |xd − gω(x̃)|α\nPLω (y 6= I(xd > gω(x̃))|x, y 6=⊥) = 1\n2\n( 1− |xd − gω(x̃)|β )\nIt can be easily verified that PLω satisfies Conditions 1, 2, and 3.\nLet P+(· | x) = PL(1,1,...,1)(· | x), P−(· | x) = PL(0,0,...,0)(· | x). By the construction of g, for any x ∈ [0, 1]d, any ω ∈ Ω, PLω (· | x) equals either P+(· | x) or P−(· | x). Define Pn\nω to be the distribution of n samples {(Xi, Yi)}ni=1 where Yi is drawn from distribution\nPLω (Y |Xi) and Xi is drawn by the active learning algorithm based solely on the knowledge of {(Xj , Yj)}i−1j=1.\nBy Lemma 12, when ǫ is small enough so that md−1 is large enough„ there is a subset Ω′ = {\nω (1), . . . ,ω(M)\n} ⊂ Ω such that (i) (well-separated) ∥ ∥ω (i) − ω(j) ∥ ∥ 0 ≥ md−1/12 for any 0 ≤ i <\nj ≤ M , M ≥ 2md−1/48; and (ii) (well-balanced) for any j = 1, . . . ,md−1, 124 ≤ 1M ∑M i=1 ω (i) j ≤\n3 24 .\nDefine Pni = P n ω (i) , P̄ n = 1M ∑M i=1 P n i . Define PLi = PL ω (i) , P̄L = 1M ∑M i=1 PLi . By the well-balanced property, for any x ∈ [0, 1]d, P̄L(· | x) is between 124P+(· | x) + 2324P−(· | x) and 3 24P+(· | x) + 2124P−(· | x). Therefore\nP̄L(· | x) ≥ 1\n24 (P+(· | x) + P−(· | x)) (5)\nMoreover, since PLi(· | x) can only take P+(· | x) or P−(· | x) for any x, ∣\n∣PLi(· | x)− P̄L(· | x) ∣ ∣ ≤ |P+(· | x)− P−(· | x)| (6)\nNext, we will apply Lemma 5 to { ω (1), . . . ,ω(M) } with d(ω(i),ω(j)) = ‖g ω (i) − g ω (j)‖. We already know from the proof of Theorem 6 ‖g\nω (i) − g ω (j)‖ = Ω(ǫ).\nFor any 0 < i ≤ M , dKL ( Pni ‖ P̄n0 ) ≤ nmax x∈[0,1]d dKL ( PLi(Y | x) ‖ P̄L(Y | x) )\n. For any x ∈ [0, 1]d,\ndKL ( PLi(Y | x) ‖ P̄L(Y | x) )\n≤ ∑\ny\n1\nP̄L(Y = y | x) ( PLi(Y = y | x)− P̄L(Y = y | x) )2\n≤ ∑\ny\n24\nP+(y | x) + P−(y | x) (P+(Y = y | x)− P−(Y = y | x))2\n≤O(Aα)\nThe first inequality follows from Lemma 10. The second inequality follows by (5) and (6). The last inequality follows by applying Lemma 11 to P+(· | x) and P−(· | x), setting the ǫ in Lemma 11 to be gω(x̃), and using gω(x̃) ≤ A and the assumption α ≤ 2.\nTherefore, we have\ndKL (P n i ‖ Pn0 ) ≤ nO (Aα) = nO(ǫα)\nBy setting n = ǫ−α− d−1 γ , we get dKL (Pni ‖ Pn0 ) ≤ O\n(\nǫ− d−1 γ\n)\n. Thus by Lemma 5,\nsup θ Pθ\n( d(θ, θ̂(X)) ≥ Ω (ǫ) ) ≥ 1− O ( ǫ− d−1 γ ) + ln 2\nǫ− d−1 γ /48\n= O (1)\n, from which the desired result follows."
    }, {
      "heading" : "C Technical lemmas",
      "text" : "C.1 Concentration bounds\nIn this subsection, we define Y1, Y2, . . . to be a sequence of i.i.d. random variables. Assume Y1 ∈ [−2, 2], EY1 = 0, Var(Y1) = σ2 ≤ 4. Define Vn = nn−1 ( ∑n i=1 Y 2 i − 1n ( ∑n i=1 Yi) 2 ) . It is easy to check EVn = nσ2.\nWe need following two results from [21]\nLemma 6. ([21], Theorem 2) Take any 0 < δ < 1. Then there is an absolute constant D0 such that with probability at least 1− δ, for all n simultaneously,\n∣ ∣ ∣ ∣ ∣ n ∑\ni=1\nYi\n∣ ∣ ∣ ∣ ∣ ≤ D0 ( 1 + ln 1 δ + √ nσ2 [ln ln]+ (nσ 2) + nσ2 ln 1 δ )\nLemma 7. ([21], Lemma 3) Take any 0 < δ < 1. Then there is an absolute constant K0 such that with probability at least 1− δ, for all n simultaneously,\nnσ2 ≤ K0 ( 1 + ln 1\nδ +\nn ∑\ni=1\nY 2i\n)\nWe note that Proposition 1 is immediate from Lemma 6 since Var(Yi) ≤ 4. Lemma 8. Take any 0 < δ < 1. Then there is an absolute constant K3 such that with probability at least 1− δ, for all n ≥ ln 1δ simultaneously,\nnσ2 ≤ K3 ( 1 + ln 1\nδ + Vn\n)\nProof. By Lemma 7, with probability at least 1− δ/2, for all n,\nnσ2 ≤ K0 ( n ∑\ni=1\nY 2i + ln 2\nδ + 1\n)\n= K0\n\n n− 1 n Vn + 1 n\n(\nn ∑\ni=1\nYi\n)2\n+ ln 2\nδ + 1\n\n\nBy Lemma 6, with probability at least 1− δ/2, for all n,\n1\nn\n(\nn ∑\ni=1\nYi\n)2\n< 1\nn\n(\nD0\n(\n1 + ln 2\nδ +\n√\nnσ2 [ln ln]+ (nσ 2) + nσ2 ln\n2\nδ\n))2\n= D20 n\n(\n1 + ln 2\nδ\n)2\n+D20σ 2 [ln ln]+ (nσ 2) +D20σ 2 ln\n2\nδ\n+2D20\n(\n1 + ln 2\nδ\n)\n√\nσ2 [ln ln]+ (nσ 2) + σ2 ln 2δ\nn\n≤ K1 ( 1 + ln 1\nδ + [ln ln]+ (nσ\n2)\n)\nfor some absolute constant K1. The last inequality follows by n ≥ ln 1δ . Thus, by a union bound, with probability at least 1− δ, for all n, nσ2 ≤ K0Vn +K0(K1+2) ln 1δ + K0K1 [ln ln]+ (nσ 2) +K0(K1 + 3).\nLet K2 > 0 be an absolute constant such that ∀x ≥ K2, K0K1 [ln ln]+ x ≤ x2 .\nNow if nσ2 ≥ K2, then nσ2 ≤ K0Vn +K0(K1 + 2) ln 1δ + nσ 2 2 +K0(K1 + 3), and thus\nnσ2 ≤ 2K0Vn + 2K0(K1 + 2) ln 1\nδ + 2K0(K1 + 3) +K2 (7)\nIf nσ2 ≤ K2, clearly (7) holds. This concludes the proof.\nWe note that Proposition 2 is immediate by applying above lemma to Lemma 6.\nLemma 9. Take any δ, n > 0. Then with probability at least 1− δ,\nVn ≤ 4nσ2 + 8 ln 1\nδ\nProof. Applying Bernstein’s Inequality to Y 2i , and noting that Var(Y 2 i ) ≤ 4σ2 since |Yi| ≤ 2, we have with probability at least 1− δ, n ∑\ni=1\nY 2i ≤ 4\n3 ln\n1 δ + nσ2 +\n√\n8nσ2 ln 1\nδ\n≤ 4 ln 1 δ + 2nσ2\nThe last inequality follows by the fact that √ 4ab ≤ a+ b.\nThe desired result follows by noting that Vn = nn−1\n(\n∑n i=1 Y 2 i − 1n ( ∑n i=1 Yi)\n2 )\n≤ 2∑ni=1 Y 2i .\nC.2 Bounds of distances among probability distributions\nLemma 10. If P,Q are two probability distributions on a countable support X , then\ndKL (P ‖ Q) ≤ ∑\nx\n(P (x)−Q(x))2 Q(x)\nProof.\ndKL (P ‖ Q) = ∑\nx\nP (x) ln P (x)\nQ(x)\n≤ ∑\nx\nP (x)\n(\nP (x) Q(x) − 1\n)\n= ∑\nx\n(P (x) −Q(x))2 Q(x)\nThe first inequality follows by lnx ≤ x−1. The second equality follows by∑x P (x) ( P (x) Q(x) − 1 )\n= ∑\nx\n(\nP 2(x)−P (x)Q(x) Q(x) − P (x) +Q(x)\n)\n= ∑ x (P (x)−Q(x))2 Q(x) .\nDefine\nP0 (Y =⊥ |x) = 1− ∣ ∣ ∣\n∣ x− 1 2\n∣ ∣ ∣ ∣ α\nP0 (Y = 0|x) =\n\n\n\n( x− 12 )α\n(\n1− ( x− 12 )β )\n/2 x > 12 (\n1 2 − x\n)α (\n1 + ( 1 2 − x\n)β )\n/2 x ≤ 12\nP0 (Y = 1|x) =\n\n\n\n( x− 12 )α\n(\n1 + ( x− 12 )β )\n/2 x > 12 (\n1 2 − x\n)α (\n1− ( 1 2 − x\n)β )\n/2 x ≤ 12\nand\nP1 (Y =⊥ |x) = 1− ∣ ∣ ∣\n∣ x− ǫ − 1 2\n∣ ∣ ∣ ∣ α\nP1 (Y = 0|x) =\n\n\n\n( x− ǫ− 12 )α\n(\n1− ( x− ǫ− 12 )β )\n/2 x > ǫ+ 12 (\nǫ+ 12 − x )α\n(\n1 + ( ǫ+ 12 − x )β\n)\n/2 x ≤ ǫ+ 12\nP1 (Y = 1|x) =\n\n\n\n( x− ǫ− 12 )α\n(\n1 + ( x− ǫ− 12 )β )\n/2 x > ǫ+ 12 (\nǫ+ 12 − x )α\n(\n1− ( ǫ+ 12 − x )β\n)\n/2 x ≤ ǫ+ 12 Lemma 11. Let P0, P1 be the distributions defined above. If x ∈ [0, 1], ǫ ≤ min { (\n1 2\n)1/β , (\n4 5 )1/α , 14\n}\n, then\n∑\ny\n(P0(Y = y|x)− P1(Y = y|x))2 P0(Y = y|x) + P1(Y = y|x) = O ( ǫα + ǫ2 )\n(8)\nProof. By symmetry, it suffices to show for 0 ≤ x ≤ 1+ǫ2 . Let t = 12 + ǫ− x. We first show (8) holds for ǫ2 ≤ t ≤ ǫ (i.e. 12 ≤ x ≤ 1+ǫ2 ).\nWe claim miny (P0(Y = y|X = t) + P1(Y = y|X = t)) ≥ 12 ( ǫ 2 )α . This is because:\n• P0(Y =⊥ |X = t) + P1(Y =⊥ |X = t) = 1 − (ǫ − t)α + 1 − tα ≥ 2− 2ǫα ≥ 12 ( ǫ 2\n)α\nwhere the last inequality follows by ǫ ≤ ( 4 5 )1/α ;\n• 2 (P0(Y = 0|X = t) + P1(Y = 0|X = t)) = (ǫ− t)α ( 1− (ǫ− t)β ) + tα ( 1 + tβ )\n≥ tα ( 1 + tβ ) ≥ (\nǫ 2 )α . Therefore, P0(Y = 0|X = t) + P1(Y = 0|X = t) ≥ 12 ( ǫ 2 )α .\n• Similarly, P0(Y = 1|X = t) + P1(Y = 1|X = t) ≥ 12 ( ǫ 2 )α .\nBesides,\n∑\ny\n(P0(Y = y|X = t)− P1(Y = y|X = t))2\n=(tα − (ǫ− t)α)2 + 1 4 ( tα ( 1− tβ ) − (ǫ − t)α ( 1 + (ǫ− t)β ))2\n+ 1\n4\n(\ntα ( 1 + tβ ) − (ǫ− t)α ( 1− (ǫ − t)β ))2\n=(tα − (ǫ− t)α)2 + 1 4 ( tα − (ǫ− t)α − tα+β − (ǫ− t)α+β )2\n+ 1\n4\n( tα − (ǫ− t)α + tα+β + (ǫ− t)α+β )2\n(a) ≤ (tα − (ǫ− t)α)2 + 1 2 (tα − (ǫ− t)α)2 + 1 2 ( tα+β + (ǫ− t)α+β )2\n+ 1 2 (tα − (ǫ− t)α)2 + 1 2 ( tα+β + (ǫ− t)α+β )2\n=2 (tα − (ǫ− t)α)2 + ( tα+β + (ǫ− t)α+β )2\n≤2ǫ2α + 4ǫ2α+2β\n≤6ǫ2α\nwhere (a) follows by the inequality (a+ b)2 ≤ 2a2 + 2b2 for any a, b.\nTherefore, we get ∑ y (P0(Y =y|x)−P1(Y =y|x))2 P0(Y=y|x)+P1(Y=y|x) ≤\n∑ y(P0(Y =y|x)−P1(Y =y|x))2 miny(P0(Y =y|x)+P1(Y=y|x)) ≤ 12 ∗ 2 αǫα when\n1 2 ≤ x ≤ 1+ǫ2 . Next, We show (8) holds for ǫ ≤ t ≤ 12 + ǫ (i.e. 0 ≤ x ≤ 12 ). We will show (P0(Y=y|x)−P1(Y =y|x))2 P0(Y =y|x)+P1(Y=y|x) = O ( ǫα + ǫ2 )\nfor Y =⊥, 1, 0. For Y =⊥, for the denominator,\nP0(Y =⊥ |X = t) + P1(Y =⊥ |X = t) = 2− tα − (t− ǫ)α ≥ 2− ( 3\n4\n)α\n− ( 1\n2\n)α\nFor the numerator,\n(P0(Y =⊥ |X = t)− P1(Y =⊥ |X = t))2 = (tα − (t− ǫ)α)2 = t2α ( 1− ( 1− ǫ t\n)α)2\nBy Lemma 13, if α ≥ 1, t2α ( 1− ( 1− ǫt )α)2 ≤ t2α ( α ǫt )2 = t2α−2 (αǫ)2 = O ( ǫ2 ) . If 0 ≤ α ≤ 1, t2α ( 1− (\n1− ǫt )α)2 ≤ t2α ( ǫ t )2 = t2α−2ǫ2 ≤ ǫ2α.\nThus, we have (P0(Y=⊥|x)−P1(Y=⊥|x)) 2 P0(Y =⊥|x)+P1(Y =⊥|x) = O ( ǫ2α + ǫ2 ) .\nFor Y = 1, for the denominator,\n2 (P0(Y = 1|X = t) + P1(Y = 1|X = t)) = tα ( 1− tβ ) + (t− ǫ)α ( 1− (t− ǫ)β )\n≥ tα ( 1− tβ )\n≥ tα ( 1− ( 3\n4\n)β )\nFor the numerator,\n(P0(Y = 1|X = t)− P1(Y = 1|X = t))2\n= 1\n4\n(\ntα ( 1− tβ ) − (t− ǫ)α ( 1− (t− ǫ)β ))2\n≤1 2 (tα − (t− ǫ)α)2 + 1 2 ( tα+β − (t− ǫ)α+β )2 = 1\n2 t2α\n( 1− (1− ǫ t )α )2 + 1 2 t2α+2β ( 1− (1− ǫ t )α+β )2\n≤1 2 t2α ( 1− (1− ǫ t )α )2 + 1 2 t2α ( 1− (1− ǫ t )α+β )2\nIf α ≥ 1, by Lemma 13, 12 t2α ( 1− (1− ǫt )α )2 + 12 t 2α ( 1− (1− ǫt )α+β )2 ≤ 12 t2α ( α ǫt )2\n+ 1 2 t 2α ( (α+ β) ǫt )2 = ( 1 2α 2 + 12 (α+ β) 2 ) t2α−2ǫ2. Thus, (P0(Y=1|x)−P1(Y=1|x)) 2\nP0(Y =1|x)+P1(Y=1|x) ≤ (\n1 2α 2 + 12 (α+ β) 2 ) tα−2ǫ2/ ( 1− ( 3 4 )β ) which is O(ǫ2) if α ≥ 2 and O (ǫα) if α ≤ 2.\nIf α ≤ 1 and α + β ≥ 1, by Lemma 13, 12 t2α ( 1− (1 − ǫt )α )2 + 12 t 2α ( 1− (1− ǫt )α+β )2 ≤ 1 2 t 2α ( ǫ t )2 + 12 t 2α ( (α+ β) ǫt )2 = ( 1 2 + 1 2 (α+ β) 2 ) t2α−2ǫ2 ≤ ( 1 2 + 1 2 (α+ β) 2 ) t2α−2ǫ2. Thus, (P0(Y=1|x)−P1(Y=1|x))2 P0(Y =1|x)+P1(Y=1|x) ≤ ( 1 2 + 1 2 (α+ β) 2 ) tα−2ǫ2/ ( 1− ( 3 4 )β ) = O (ǫα).\nIf α ≤ 1, α+β ≤ 1, by Lemma 13, 12 t2α ( 1− (1− ǫt )α )2 + 12 t 2α ( 1− (1 − ǫt )α+β )2 ≤ 12 t2α ( ǫ t )2 + 1 2 t 2α ( ǫ t )2 = t2α−2ǫ2. Thus, (P0(Y=1|x)−P1(Y=1|x)) 2 P0(Y =1|x)+P1(Y=1|x) ≤ t α−2ǫ2/ ( 1− ( 3 4 )β ) = O (ǫα).\nTherefore, we have (P0(Y=1|x)−P1(Y=1|x)) 2 P0(Y=1|x)+P1(Y=1|x) = O ( ǫα + ǫ2 ) .\nLikewise, we can get (P0(Y=0|x)−P1(Y=0|x)) 2 P0(Y=0|x)+P1(Y=0|x) = O ( ǫα + ǫ2 )\n. So we prove ∑\ny (P0(Y=y|x)−P1(Y=y|x))2 P0(Y=y|x)+P1(Y=y|x) = O ( ǫα + ǫ2 ) when x ≤ 12 . This concludes the proof.\nC.3 Other lemmas\nLemma 12. ([20], Lemma 4) For sufficiently large d > 0, there is a subset M ⊂ {0, 1}d with following properties: (i) |M | ≥ 2d/48; (ii) ‖v − v′‖0 > d12 for any two distinct v, v′ ∈ M ; (iii) for any i = 1, . . . , d, 124 ≤ 1M ∑\nv∈M vi ≤ 324 . Lemma 13. If x ≤ 1,r ≥ 1, then (1− x)r ≥ 1− rx and 1− (1− x)r ≤ rx. If 0 ≤ x ≤ 1,0 ≤ r ≤ 1, then (1− x)r ≥ 1−x1−x+rx and 1− (1 − x)r ≤ rx1−(1−r)x ≤ x.\nInequalities above are know as Bernoulli’s inequalities. One proof can be found in [16]. Lemma 14. Suppose ǫ, τ are positive numbers and δ ≤ 12 . Suppose {Zi} ∞ i=1 is a sequence of i.i.d random variables bounded by 1, EZi ≥ τǫ, and Var(Zi) = σ2 ≤ 2ǫ. Define Vn = n n−1 ( ∑n i=1 Zi − 1n ( ∑n i=1 Zi) 2 )\n, qn = q (n, Vn, δ) as Procedure 2. If n ≥ ητǫ ln 1δ for some sufficiently large number η (to be specified in the proof), then with probability at least 1 − δ , qn n − EZi ≤ −τǫ/2.\nProof. By Lemma 9, with probability at least 1− δ, Vn ≤ 4nσ2 + 8 ln 1δ , which implies\nqn ≤ D1 ( 1 + ln 1\nδ +\n√\n(\n4nσ2 + 9 ln 1\nδ + 1\n)(\n[ln ln]+ (4nσ 2 + 9 ln\n1 δ + 1) + ln 1 δ\n)\n)\nWe denote the RHS by q.\nOn this event, we have\nqn n − EZi ≤ q n − τǫ\n= τǫ ( q\nnτǫ − 1\n)\n(a) ≤ τǫ (\n2D1 η + D1\nη ln 1δ\n√\n9η\nτ ln\n1\nδ\n(\n[ln ln]+ ( 9η\nτ ln\n1 δ ) + ln 1 δ\n) − 1 )\n= τǫ\n(\n2D1 η +D1\n√\n9\nητ ln 1δ [ln ln]+ (\n9η\nτ ln\n1 δ ) + 9 ητ − 1\n)\nwhere (a) follows from qn being monotonically decreasing with respect to n. By choosing η sufficiently large, we have 2D1η +D1 √ 9 ητ ln 1\nδ\n[ln ln]+ ( 9η τ ln 1 δ ) + 9 ητ − 1 ≤ − 12 , and thus qn n − EZi ≤\n−τǫ/2."
    } ],
    "references" : [ {
      "title" : "Active and passive learning of linear separators under log-concave distributions",
      "author" : [ "M.-F. Balcan", "P.M. Long" ],
      "venue" : "In COLT,",
      "citeRegEx" : "1",
      "shortCiteRegEx" : "1",
      "year" : 2013
    }, {
      "title" : "Agnostic active learning",
      "author" : [ "Maria-Florina Balcan", "Alina Beygelzimer", "John Langford" ],
      "venue" : "In Proceedings of the 23rd international conference on Machine learning,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2006
    }, {
      "title" : "Robust interactive learning",
      "author" : [ "Maria-Florina Balcan", "Steve Hanneke" ],
      "venue" : "In Proceedings of The 25th Conference on Learning Theory,",
      "citeRegEx" : "3",
      "shortCiteRegEx" : "3",
      "year" : 2012
    }, {
      "title" : "Agnostic active learning without constraints",
      "author" : [ "A. Beygelzimer", "D. Hsu", "J. Langford", "T. Zhang" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "4",
      "shortCiteRegEx" : "4",
      "year" : 2010
    }, {
      "title" : "Search improves label for active learning",
      "author" : [ "Alina Beygelzimer", "Daniel Hsu", "John Langford", "Chicheng Zhang" ],
      "venue" : "arXiv preprint arXiv:1602.07265,",
      "citeRegEx" : "5",
      "shortCiteRegEx" : "5",
      "year" : 2016
    }, {
      "title" : "Minimax bounds for active learning",
      "author" : [ "Rui M. Castro", "Robert D. Nowak" ],
      "venue" : "IEEE Transactions on Information Theory,",
      "citeRegEx" : "6",
      "shortCiteRegEx" : "6",
      "year" : 2008
    }, {
      "title" : "Sequential information maximization: When is greedy near-optimal",
      "author" : [ "Yuxin Chen", "S Hamed Hassani", "Amin Karbasi", "Andreas Krause" ],
      "venue" : "In Proceedings of The 28th Conference on Learning Theory,",
      "citeRegEx" : "7",
      "shortCiteRegEx" : "7",
      "year" : 2015
    }, {
      "title" : "Improving generalization with active learning",
      "author" : [ "D.A. Cohn", "L.E. Atlas", "R.E. Ladner" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "8",
      "shortCiteRegEx" : "8",
      "year" : 1994
    }, {
      "title" : "Coarse sample complexity bounds for active learning",
      "author" : [ "S. Dasgupta" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "9",
      "shortCiteRegEx" : "9",
      "year" : 2005
    }, {
      "title" : "A general agnostic active learning algorithm",
      "author" : [ "S. Dasgupta", "D. Hsu", "C. Monteleoni" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "10",
      "shortCiteRegEx" : "10",
      "year" : 2007
    }, {
      "title" : "I don’t know the label: Active learning with blind knowledge",
      "author" : [ "Meng Fang", "Xingquan Zhu" ],
      "venue" : "In Pattern Recognition (ICPR),",
      "citeRegEx" : "11",
      "shortCiteRegEx" : "11",
      "year" : 2012
    }, {
      "title" : "Teaching dimension and the complexity of active learning",
      "author" : [ "Steve Hanneke" ],
      "venue" : "In Learning Theory,",
      "citeRegEx" : "12",
      "shortCiteRegEx" : "12",
      "year" : 2007
    }, {
      "title" : "Generalized teaching dimensions and the query complexity of learning",
      "author" : [ "Tibor Hegedűs" ],
      "venue" : "In Proceedings of the eighth annual conference on Computational learning theory,",
      "citeRegEx" : "13",
      "shortCiteRegEx" : "13",
      "year" : 1995
    }, {
      "title" : "Active learning in the non-realizable case",
      "author" : [ "M. Kääriäinen" ],
      "venue" : "In ALT,",
      "citeRegEx" : "14",
      "shortCiteRegEx" : "14",
      "year" : 2006
    }, {
      "title" : "Active learning and discovery of object categories in the presence of unnameable instances",
      "author" : [ "Christoph Kading", "Alexander Freytag", "Erik Rodner", "Paul Bodesheim", "Joachim Denzler" ],
      "venue" : "In Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "15",
      "shortCiteRegEx" : "15",
      "year" : 2015
    }, {
      "title" : "Some equivalent forms of bernoulli’s inequality: A survey",
      "author" : [ "Yuan-Chuan Li", "Cheh-Chih Yeh" ],
      "venue" : "Applied Mathematics,",
      "citeRegEx" : "16",
      "shortCiteRegEx" : "16",
      "year" : 2013
    }, {
      "title" : "Plug-in approach to active learning",
      "author" : [ "Stanislav Minsker" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "17",
      "shortCiteRegEx" : "17",
      "year" : 2012
    }, {
      "title" : "Bayesian active learning with nonpersistent noise",
      "author" : [ "Mohammad Naghshvar", "Tara Javidi", "Kamalika Chaudhuri" ],
      "venue" : "IEEE Transactions on Information Theory,",
      "citeRegEx" : "18",
      "shortCiteRegEx" : "18",
      "year" : 2015
    }, {
      "title" : "The geometry of generalized binary search",
      "author" : [ "R.D. Nowak" ],
      "venue" : "IEEE Transactions on Information Theory,",
      "citeRegEx" : "19",
      "shortCiteRegEx" : "19",
      "year" : 2011
    }, {
      "title" : "Lower bounds for passive and active learning",
      "author" : [ "Maxim Raginsky", "Alexander Rakhlin" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "20",
      "shortCiteRegEx" : "20",
      "year" : 2011
    }, {
      "title" : "Sequential nonparametric testing with the law of the iterated logarithm",
      "author" : [ "Aaditya Ramdas", "Akshay Balsubramani" ],
      "venue" : "In Proceedings of the Conference on Uncertainty in Artificial Intelligence,",
      "citeRegEx" : "21",
      "shortCiteRegEx" : "21",
      "year" : 2016
    }, {
      "title" : "Optimal aggregation of classifiers in statistical learning",
      "author" : [ "A.B. Tsybakov" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "22",
      "shortCiteRegEx" : "22",
      "year" : 2004
    }, {
      "title" : "Learning from weak teachers",
      "author" : [ "Ruth Urner", "Shai Ben-david", "Ohad Shamir" ],
      "venue" : "In International Conference on Artificial Intelligence and Statistics,",
      "citeRegEx" : "23",
      "shortCiteRegEx" : "23",
      "year" : 2012
    }, {
      "title" : "Active learning from noisy and abstention feedback",
      "author" : [ "Songbai Yan", "Kamalika Chaudhuri", "Tara Javidi" ],
      "venue" : "In Communication, Control, and Computing (Allerton),",
      "citeRegEx" : "24",
      "shortCiteRegEx" : "24",
      "year" : 2015
    }, {
      "title" : "Beyond disagreement-based agnostic active learning",
      "author" : [ "Chicheng Zhang", "Kamalika Chaudhuri" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "25",
      "shortCiteRegEx" : "25",
      "year" : 2014
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "Previous theoretical work on active learning has mostly focused on the above basic setting [2, 4, 7, 10, 25] and has developed algorithms under a number of different models of label noise.",
      "startOffset" : 91,
      "endOffset" : 108
    }, {
      "referenceID" : 3,
      "context" : "Previous theoretical work on active learning has mostly focused on the above basic setting [2, 4, 7, 10, 25] and has developed algorithms under a number of different models of label noise.",
      "startOffset" : 91,
      "endOffset" : 108
    }, {
      "referenceID" : 6,
      "context" : "Previous theoretical work on active learning has mostly focused on the above basic setting [2, 4, 7, 10, 25] and has developed algorithms under a number of different models of label noise.",
      "startOffset" : 91,
      "endOffset" : 108
    }, {
      "referenceID" : 9,
      "context" : "Previous theoretical work on active learning has mostly focused on the above basic setting [2, 4, 7, 10, 25] and has developed algorithms under a number of different models of label noise.",
      "startOffset" : 91,
      "endOffset" : 108
    }, {
      "referenceID" : 24,
      "context" : "Previous theoretical work on active learning has mostly focused on the above basic setting [2, 4, 7, 10, 25] and has developed algorithms under a number of different models of label noise.",
      "startOffset" : 91,
      "endOffset" : 108
    }, {
      "referenceID" : 2,
      "context" : "A handful of exceptions include [3] which allows class conditional queries, [5] which allows requesting counterexamples to current version spaces, and [23, 26] where the learner has access to a strong labeler and one or more weak labelers.",
      "startOffset" : 32,
      "endOffset" : 35
    }, {
      "referenceID" : 4,
      "context" : "A handful of exceptions include [3] which allows class conditional queries, [5] which allows requesting counterexamples to current version spaces, and [23, 26] where the learner has access to a strong labeler and one or more weak labelers.",
      "startOffset" : 76,
      "endOffset" : 79
    }, {
      "referenceID" : 22,
      "context" : "A handful of exceptions include [3] which allows class conditional queries, [5] which allows requesting counterexamples to current version spaces, and [23, 26] where the learner has access to a strong labeler and one or more weak labelers.",
      "startOffset" : 151,
      "endOffset" : 159
    }, {
      "referenceID" : 10,
      "context" : "This scenario arises naturally in difficult labeling tasks and has been considered in computer vision by [11, 15].",
      "startOffset" : 105,
      "endOffset" : 113
    }, {
      "referenceID" : 14,
      "context" : "This scenario arises naturally in difficult labeling tasks and has been considered in computer vision by [11, 15].",
      "startOffset" : 105,
      "endOffset" : 113
    }, {
      "referenceID" : 23,
      "context" : "The setting of active learning with an abstaining noisy labeler was first considered by [24], who looked at learning binary threshold classifiers based on queries to an labeler whose abstention rate is higher closer to the decision boundary.",
      "startOffset" : 88,
      "endOffset" : 92
    }, {
      "referenceID" : 23,
      "context" : "Under slightly stronger conditions as in [24], our algorithm has the same query complexity.",
      "startOffset" : 41,
      "endOffset" : 45
    }, {
      "referenceID" : 23,
      "context" : "An important property of our algorithm is that the improvement of query complexity is achieved in a completely adaptive manner; unlike previous work [24], our algorithm needs no information whatsoever on the abstention rates or rates of label noise.",
      "startOffset" : 149,
      "endOffset" : 153
    }, {
      "referenceID" : 5,
      "context" : "Thus our result also strengthens existing results on active learning from (non-abstaining) noisy labelers by providing an adaptive algorithm that achieves that same performance as [6] without knowledge of noise parameters.",
      "startOffset" : 180,
      "endOffset" : 183
    }, {
      "referenceID" : 23,
      "context" : "Our lower bounds generalize the lower bounds in [24], and shows that our upper bounds are nearly optimal.",
      "startOffset" : 48,
      "endOffset" : 52
    }, {
      "referenceID" : 5,
      "context" : "Theoretical work on this topic largely falls under two categories — the membership query model [6, 13, 18, 19], where the learner can request label of any example in the instance space, and the PAC model, where the learner is given a large set of unlabeled examples from an underlying unlabeled data distribution, and can request labels of a subset of these examples.",
      "startOffset" : 95,
      "endOffset" : 110
    }, {
      "referenceID" : 12,
      "context" : "Theoretical work on this topic largely falls under two categories — the membership query model [6, 13, 18, 19], where the learner can request label of any example in the instance space, and the PAC model, where the learner is given a large set of unlabeled examples from an underlying unlabeled data distribution, and can request labels of a subset of these examples.",
      "startOffset" : 95,
      "endOffset" : 110
    }, {
      "referenceID" : 17,
      "context" : "Theoretical work on this topic largely falls under two categories — the membership query model [6, 13, 18, 19], where the learner can request label of any example in the instance space, and the PAC model, where the learner is given a large set of unlabeled examples from an underlying unlabeled data distribution, and can request labels of a subset of these examples.",
      "startOffset" : 95,
      "endOffset" : 110
    }, {
      "referenceID" : 18,
      "context" : "Theoretical work on this topic largely falls under two categories — the membership query model [6, 13, 18, 19], where the learner can request label of any example in the instance space, and the PAC model, where the learner is given a large set of unlabeled examples from an underlying unlabeled data distribution, and can request labels of a subset of these examples.",
      "startOffset" : 95,
      "endOffset" : 110
    }, {
      "referenceID" : 23,
      "context" : "Our work and also that of [24] builds on the membership query model.",
      "startOffset" : 26,
      "endOffset" : 30
    }, {
      "referenceID" : 7,
      "context" : "The problem is relatively easy when the labeler always provides the ground truth labels – see [8, 9, 12] for work in this setting in the PAC model, and [13] for the membership query model.",
      "startOffset" : 94,
      "endOffset" : 104
    }, {
      "referenceID" : 8,
      "context" : "The problem is relatively easy when the labeler always provides the ground truth labels – see [8, 9, 12] for work in this setting in the PAC model, and [13] for the membership query model.",
      "startOffset" : 94,
      "endOffset" : 104
    }, {
      "referenceID" : 11,
      "context" : "The problem is relatively easy when the labeler always provides the ground truth labels – see [8, 9, 12] for work in this setting in the PAC model, and [13] for the membership query model.",
      "startOffset" : 94,
      "endOffset" : 104
    }, {
      "referenceID" : 12,
      "context" : "The problem is relatively easy when the labeler always provides the ground truth labels – see [8, 9, 12] for work in this setting in the PAC model, and [13] for the membership query model.",
      "startOffset" : 152,
      "endOffset" : 156
    }, {
      "referenceID" : 13,
      "context" : "[14] shows how to address this kind of noise in the PAC model by repeatedly querying an example until the learner is confident of its label; [18, 19] provide more sophisticated algorithms with better query complexities in the membership query model.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 17,
      "context" : "[14] shows how to address this kind of noise in the PAC model by repeatedly querying an example until the learner is confident of its label; [18, 19] provide more sophisticated algorithms with better query complexities in the membership query model.",
      "startOffset" : 141,
      "endOffset" : 149
    }, {
      "referenceID" : 18,
      "context" : "[14] shows how to address this kind of noise in the PAC model by repeatedly querying an example until the learner is confident of its label; [18, 19] provide more sophisticated algorithms with better query complexities in the membership query model.",
      "startOffset" : 141,
      "endOffset" : 149
    }, {
      "referenceID" : 5,
      "context" : "A second setting is when the noise rate increases closer to the decision boundary; this setting has been studied under the membership query model by [6] and in the PAC model by [10, 4, 25].",
      "startOffset" : 149,
      "endOffset" : 152
    }, {
      "referenceID" : 9,
      "context" : "A second setting is when the noise rate increases closer to the decision boundary; this setting has been studied under the membership query model by [6] and in the PAC model by [10, 4, 25].",
      "startOffset" : 177,
      "endOffset" : 188
    }, {
      "referenceID" : 3,
      "context" : "A second setting is when the noise rate increases closer to the decision boundary; this setting has been studied under the membership query model by [6] and in the PAC model by [10, 4, 25].",
      "startOffset" : 177,
      "endOffset" : 188
    }, {
      "referenceID" : 24,
      "context" : "A second setting is when the noise rate increases closer to the decision boundary; this setting has been studied under the membership query model by [6] and in the PAC model by [10, 4, 25].",
      "startOffset" : 177,
      "endOffset" : 188
    }, {
      "referenceID" : 0,
      "context" : "Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.",
      "startOffset" : 152,
      "endOffset" : 173
    }, {
      "referenceID" : 1,
      "context" : "Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.",
      "startOffset" : 152,
      "endOffset" : 173
    }, {
      "referenceID" : 3,
      "context" : "Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.",
      "startOffset" : 152,
      "endOffset" : 173
    }, {
      "referenceID" : 9,
      "context" : "Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.",
      "startOffset" : 152,
      "endOffset" : 173
    }, {
      "referenceID" : 11,
      "context" : "Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.",
      "startOffset" : 152,
      "endOffset" : 173
    }, {
      "referenceID" : 24,
      "context" : "Active learning is known to be particularly difficult in this setting; however, algorithms and associated label complexity bounds have been provided by [1, 2, 4, 10, 12, 25] among others.",
      "startOffset" : 152,
      "endOffset" : 173
    }, {
      "referenceID" : 5,
      "context" : "A setting similar to ours was considered by [6, 24].",
      "startOffset" : 44,
      "endOffset" : 51
    }, {
      "referenceID" : 23,
      "context" : "A setting similar to ours was considered by [6, 24].",
      "startOffset" : 44,
      "endOffset" : 51
    }, {
      "referenceID" : 5,
      "context" : "[6] considers a non-abstaining labeler, and provides a near-optimal binary search style active learning algorithm; however, their algorithm is non-adaptive.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 23,
      "context" : "[24] gives a nearly matching lower and upper query complexity bounds for active learning with abstention feedback, but they only give a nonadaptive algorithm for learning one dimensional thresholds, and only study the situation where the 2",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 23,
      "context" : "Besides [24] , [11, 15] study active learning with abstention feedback in computer vision applications.",
      "startOffset" : 8,
      "endOffset" : 12
    }, {
      "referenceID" : 10,
      "context" : "Besides [24] , [11, 15] study active learning with abstention feedback in computer vision applications.",
      "startOffset" : 15,
      "endOffset" : 23
    }, {
      "referenceID" : 14,
      "context" : "Besides [24] , [11, 15] study active learning with abstention feedback in computer vision applications.",
      "startOffset" : 15,
      "endOffset" : 23
    }, {
      "referenceID" : 0,
      "context" : "A function g : [0, 1]d−1 → R is (K, γ)-Hölder smooth, if it is continuously differentiable up to ⌊γ⌋-th order, and for any x,y ∈ [0, 1]d−1, ∣",
      "startOffset" : 15,
      "endOffset" : 21
    }, {
      "referenceID" : 0,
      "context" : "A function g : [0, 1]d−1 → R is (K, γ)-Hölder smooth, if it is continuously differentiable up to ⌊γ⌋-th order, and for any x,y ∈ [0, 1]d−1, ∣",
      "startOffset" : 129,
      "endOffset" : 135
    }, {
      "referenceID" : 0,
      "context" : "We are given an instance space X = [0, 1] and a label space L = {0, 1}.",
      "startOffset" : 35,
      "endOffset" : 41
    }, {
      "referenceID" : 5,
      "context" : "We consider a non-parametric setting as in [6, 17] where the hypothesis space is the smooth boundary fragment class H = {hg(x) = 1 [xd > g(x̃)] | g : [0, 1]d−1 → [0, 1] is (K, γ)-Hölder smooth}.",
      "startOffset" : 43,
      "endOffset" : 50
    }, {
      "referenceID" : 16,
      "context" : "We consider a non-parametric setting as in [6, 17] where the hypothesis space is the smooth boundary fragment class H = {hg(x) = 1 [xd > g(x̃)] | g : [0, 1]d−1 → [0, 1] is (K, γ)-Hölder smooth}.",
      "startOffset" : 43,
      "endOffset" : 50
    }, {
      "referenceID" : 0,
      "context" : "We consider a non-parametric setting as in [6, 17] where the hypothesis space is the smooth boundary fragment class H = {hg(x) = 1 [xd > g(x̃)] | g : [0, 1]d−1 → [0, 1] is (K, γ)-Hölder smooth}.",
      "startOffset" : 150,
      "endOffset" : 156
    }, {
      "referenceID" : 0,
      "context" : "We consider a non-parametric setting as in [6, 17] where the hypothesis space is the smooth boundary fragment class H = {hg(x) = 1 [xd > g(x̃)] | g : [0, 1]d−1 → [0, 1] is (K, γ)-Hölder smooth}.",
      "startOffset" : 162,
      "endOffset" : 168
    }, {
      "referenceID" : 0,
      "context" : "When d = 1, H reduces to the space of threshold functions {hθ(x) = 1 [x > θ] : θ ∈ [0, 1]}.",
      "startOffset" : 83,
      "endOffset" : 89
    }, {
      "referenceID" : 0,
      "context" : "The performance of a classifier h(x) = 1 [xd > g(x̃)] is evaluated by the L distance between the decision boundaries ‖g − g∗‖ = ́ [0,1]d−1 |g(x̃)− g∗(x̃)| dx̃.",
      "startOffset" : 130,
      "endOffset" : 135
    }, {
      "referenceID" : 0,
      "context" : "For each query x ∈ [0, 1], the labeler L will return y ∈ Y = {0, 1,⊥} (⊥ means that the labeler abstains from providing a 0/1 label) according to some distribution PL(Y = y | X = x).",
      "startOffset" : 19,
      "endOffset" : 25
    }, {
      "referenceID" : 0,
      "context" : "In particular, we want to find an algorithm with low query complexity Λ(ǫ, δ,A, L, g∗), which is defined as the minimum number of queries that Algorithm A, acting on samples with ground truth g∗, should make to a labeler L to ensure that the output classifier hg(x) = 1 [xd > g(x̃)] has the property ‖g − g∗‖ = ́ [0,1]d−1 |g(x̃)− g∗(x̃)| dx̃ ≤ ǫ with probability at least 1− δ over the responses of L.",
      "startOffset" : 313,
      "endOffset" : 318
    }, {
      "referenceID" : 0,
      "context" : "The response distribution of the labeler P (Y | X) satisfies: • (abstention) For any x̃ ∈ [0, 1]d−1, xd, xd ∈ [0, 1], if |xd − g∗(x̃)| ≥ |xd − g∗(x̃)| then P (⊥| (x̃, xd)) ≤ P (⊥| (x̃, xd)); • (noise) For any x ∈ [0, 1], P (Y 6= 1 [xd > g∗(x̃)] | x, Y 6=⊥) ≤ 1 2 .",
      "startOffset" : 90,
      "endOffset" : 96
    }, {
      "referenceID" : 0,
      "context" : "The response distribution of the labeler P (Y | X) satisfies: • (abstention) For any x̃ ∈ [0, 1]d−1, xd, xd ∈ [0, 1], if |xd − g∗(x̃)| ≥ |xd − g∗(x̃)| then P (⊥| (x̃, xd)) ≤ P (⊥| (x̃, xd)); • (noise) For any x ∈ [0, 1], P (Y 6= 1 [xd > g∗(x̃)] | x, Y 6=⊥) ≤ 1 2 .",
      "startOffset" : 110,
      "endOffset" : 116
    }, {
      "referenceID" : 0,
      "context" : "The response distribution of the labeler P (Y | X) satisfies: • (abstention) For any x̃ ∈ [0, 1]d−1, xd, xd ∈ [0, 1], if |xd − g∗(x̃)| ≥ |xd − g∗(x̃)| then P (⊥| (x̃, xd)) ≤ P (⊥| (x̃, xd)); • (noise) For any x ∈ [0, 1], P (Y 6= 1 [xd > g∗(x̃)] | x, Y 6=⊥) ≤ 1 2 .",
      "startOffset" : 213,
      "endOffset" : 219
    }, {
      "referenceID" : 0,
      "context" : "Let C, β be non-negative constants, and f : [0, 1] → [0, 1] be a nondecreasing function.",
      "startOffset" : 44,
      "endOffset" : 50
    }, {
      "referenceID" : 0,
      "context" : "Let C, β be non-negative constants, and f : [0, 1] → [0, 1] be a nondecreasing function.",
      "startOffset" : 53,
      "endOffset" : 59
    }, {
      "referenceID" : 21,
      "context" : "The condition on the noise satisfies the popular Tsybakov noise condition [22].",
      "startOffset" : 74,
      "endOffset" : 78
    }, {
      "referenceID" : 0,
      "context" : "Let f : [0, 1] → [0, 1] be a nondecreasing function such that ∃0 < c < 1, ∀0 < a ≤ 1 ∀0 ≤ b ≤ 23a, f(b) f(a) ≤ 1− c.",
      "startOffset" : 8,
      "endOffset" : 14
    }, {
      "referenceID" : 0,
      "context" : "Let f : [0, 1] → [0, 1] be a nondecreasing function such that ∃0 < c < 1, ∀0 < a ≤ 1 ∀0 ≤ b ≤ 23a, f(b) f(a) ≤ 1− c.",
      "startOffset" : 17,
      "endOffset" : 23
    }, {
      "referenceID" : 0,
      "context" : "When d = 1, the decision boundary g∗ becomes a point in [0, 1], and the corresponding classifier is a threshold function over [0,1].",
      "startOffset" : 56,
      "endOffset" : 62
    }, {
      "referenceID" : 0,
      "context" : "When d = 1, the decision boundary g∗ becomes a point in [0, 1], and the corresponding classifier is a threshold function over [0,1].",
      "startOffset" : 126,
      "endOffset" : 131
    }, {
      "referenceID" : 0,
      "context" : "In other words the hypothesis space becomes H = {fθ(x) = 1 [x > θ] : θ ∈ [0, 1]}).",
      "startOffset" : 73,
      "endOffset" : 79
    }, {
      "referenceID" : 0,
      "context" : "We denote the ground truth decision boundary by θ∗ ∈ [0, 1].",
      "startOffset" : 53,
      "endOffset" : 59
    }, {
      "referenceID" : 0,
      "context" : "We want to find a θ̂ ∈ [0, 1] such that |θ̂ − θ∗| is small while making as few queries as possible.",
      "startOffset" : 23,
      "endOffset" : 29
    }, {
      "referenceID" : 0,
      "context" : "Algorithm 1 The active learning algorithm for learning thresholds 1: Input: δ, ǫ 2: [L0, R0] ← [0, 1] 3: for k = 0, 1, 2, .",
      "startOffset" : 95,
      "endOffset" : 101
    }, {
      "referenceID" : 23,
      "context" : "The lower bound in [24] can be easily generalized to Condition 2: Theorem 4.",
      "startOffset" : 19,
      "endOffset" : 23
    }, {
      "referenceID" : 23,
      "context" : "([24]) There is a universal constant δ0 ∈ (0, 1) and a labeler L satisfying Conditions 1 and 2, such that for any active learning algorithm A, there is a θ∗ ∈ [0, 1], such that for small enough ǫ, Λ(ǫ, δ0,A, L, θ∗) ≥ Ω ( 1 f(ǫ)ǫ −2β )",
      "startOffset" : 1,
      "endOffset" : 5
    }, {
      "referenceID" : 0,
      "context" : "([24]) There is a universal constant δ0 ∈ (0, 1) and a labeler L satisfying Conditions 1 and 2, such that for any active learning algorithm A, there is a θ∗ ∈ [0, 1], such that for small enough ǫ, Λ(ǫ, δ0,A, L, θ∗) ≥ Ω ( 1 f(ǫ)ǫ −2β )",
      "startOffset" : 159,
      "endOffset" : 165
    }, {
      "referenceID" : 0,
      "context" : "There is a universal constant δ0 ∈ (0, 1) and a labeler L satisfying Conditions 1, 2, and 3 with f(x) = C′xα (C′ > 0 and 0 < α ≤ 2 are constants), such that for any active learning algorithm A, there is a θ∗ ∈ [0, 1], such that for small enough ǫ, Λ(ǫ, δ0,A, L, θ∗) ≥ Ω (ǫ−α).",
      "startOffset" : 210,
      "endOffset" : 216
    }, {
      "referenceID" : 5,
      "context" : "4 The multidimensional case We follow [6] to generalize the results from one-dimensional thresholds to the d-dimensional (d > 1) smooth boundary fragment class Σ(K, γ).",
      "startOffset" : 38,
      "endOffset" : 41
    }, {
      "referenceID" : 0,
      "context" : "2 Algorithm and Analysis Recall the decision boundary of the smooth boundary fragment class can be seen as the epigraph of a smooth function [0, 1]d−1 → [0, 1].",
      "startOffset" : 141,
      "endOffset" : 147
    }, {
      "referenceID" : 0,
      "context" : "2 Algorithm and Analysis Recall the decision boundary of the smooth boundary fragment class can be seen as the epigraph of a smooth function [0, 1]d−1 → [0, 1].",
      "startOffset" : 153,
      "endOffset" : 159
    }, {
      "referenceID" : 0,
      "context" : "References [1] M.",
      "startOffset" : 11,
      "endOffset" : 14
    }, {
      "referenceID" : 1,
      "context" : "[2] Maria-Florina Balcan, Alina Beygelzimer, and John Langford.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 2,
      "context" : "[3] Maria-Florina Balcan and Steve Hanneke.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 3,
      "context" : "[4] A.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 4,
      "context" : "[5] Alina Beygelzimer, Daniel Hsu, John Langford, and Chicheng Zhang.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 5,
      "context" : "[6] Rui M.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 6,
      "context" : "[7] Yuxin Chen, S Hamed Hassani, Amin Karbasi, and Andreas Krause.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 7,
      "context" : "[8] D.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 8,
      "context" : "[9] S.",
      "startOffset" : 0,
      "endOffset" : 3
    }, {
      "referenceID" : 9,
      "context" : "[10] S.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 10,
      "context" : "[11] Meng Fang and Xingquan Zhu.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 11,
      "context" : "[12] Steve Hanneke.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 12,
      "context" : "[13] Tibor Hegedűs.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 13,
      "context" : "[14] M.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 14,
      "context" : "[15] Christoph Kading, Alexander Freytag, Erik Rodner, Paul Bodesheim, and Joachim Denzler.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 15,
      "context" : "[16] Yuan-Chuan Li and Cheh-Chih Yeh.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 16,
      "context" : "[17] Stanislav Minsker.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 17,
      "context" : "[18] Mohammad Naghshvar, Tara Javidi, and Kamalika Chaudhuri.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 18,
      "context" : "[19] R.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 19,
      "context" : "[20] Maxim Raginsky and Alexander Rakhlin.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 20,
      "context" : "[21] Aaditya Ramdas and Akshay Balsubramani.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 21,
      "context" : "[22] A.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 22,
      "context" : "[23] Ruth Urner, Shai Ben-david, and Ohad Shamir.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 23,
      "context" : "[24] Songbai Yan, Kamalika Chaudhuri, and Tara Javidi.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 24,
      "context" : "[25] Chicheng Zhang and Kamalika Chaudhuri.",
      "startOffset" : 0,
      "endOffset" : 4
    }, {
      "referenceID" : 12,
      "context" : "Let δ ∈ [0, 13 ], N ≥ ξ ǫ2 ln 1 δ [ln ln]+ 1 ǫ (ξ is an absolute constant specified in the proof).",
      "startOffset" : 8,
      "endOffset" : 16
    }, {
      "referenceID" : 0,
      "context" : ", log 1 2ǫ − 1, define Qk = { (p, q) : p, q ∈ Q ∩ [0, 1] and q − p = ( 3 4 k }",
      "startOffset" : 50,
      "endOffset" : 56
    }, {
      "referenceID" : 5,
      "context" : "= O ( M−γ−d+1 ) The second equality follows from Lemma 3 of [6] that |gq(x̃)− g∗(x̃)| = O (M−γ) since g∗ is γ-Hölder smooth.",
      "startOffset" : 60,
      "endOffset" : 63
    }, {
      "referenceID" : 0,
      "context" : "We take Θ to be [0, 1], and d(θ1, θ2) = |θ1 − θ2| in Lemma 5.",
      "startOffset" : 16,
      "endOffset" : 22
    }, {
      "referenceID" : 0,
      "context" : "≤n max x∈[0,1] dKL ( PLk(Y | x) ‖ P̄L(Y | x) )",
      "startOffset" : 9,
      "endOffset" : 14
    }, {
      "referenceID" : 0,
      "context" : "For any k ∈ {1, 2, 3}, x ∈ [0, 1], P̄L(· | x) ≥ PL0(· | x) + PLk(· | x) 4 (3) For any k ∈ {0, 1, 2, 3}, x ∈ [0, 1], y ∈ {1,−1,⊥} 18",
      "startOffset" : 27,
      "endOffset" : 33
    }, {
      "referenceID" : 0,
      "context" : "For any k ∈ {1, 2, 3}, x ∈ [0, 1], P̄L(· | x) ≥ PL0(· | x) + PLk(· | x) 4 (3) For any k ∈ {0, 1, 2, 3}, x ∈ [0, 1], y ∈ {1,−1,⊥} 18",
      "startOffset" : 108,
      "endOffset" : 114
    }, {
      "referenceID" : 5,
      "context" : "We first construct {Pθ : θ ∈ Θ} using a similar idea with [6], and then use Lemma 12 to select a subset Θ̃ ⊂ Θ to apply Lemma 5.",
      "startOffset" : 58,
      "endOffset" : 61
    }, {
      "referenceID" : 0,
      "context" : "≤n max x∈[0,1]d dKL ( P L ω (i) (Y | x) ‖ P L ω (j) (Y | x) )",
      "startOffset" : 9,
      "endOffset" : 14
    }, {
      "referenceID" : 0,
      "context" : "=n max x∈[0,1]d P L ω (i) (Y 6=⊥| x)dKL ( P L ω (i) (Y | x, Y 6=⊥) ‖ P L ω (j) (Y | x, Y 6=⊥) )",
      "startOffset" : 9,
      "endOffset" : 14
    }, {
      "referenceID" : 0,
      "context" : "Therefore, dKL ( P i ‖ P j ) ≤ nf(A) max x∈[0,1]d dKL ( P L ω (i) (Y | x, Y 6=⊥) ‖ P L ω (j) (Y | x, Y 6=⊥) )",
      "startOffset" : 43,
      "endOffset" : 48
    }, {
      "referenceID" : 0,
      "context" : "Apply Lemma 10 to P L ω (i) (Y | x, Y 6=⊥) and P L ω (i) (Y | x, Y 6=⊥), and noting they are bounded above by a constant, we have max x∈[0,1]d dKL ( P L ω (i) (Y | x, Y 6=⊥) ‖ P L ω (j) (Y | x, Y 6=⊥) )",
      "startOffset" : 136,
      "endOffset" : 141
    }, {
      "referenceID" : 0,
      "context" : "By the construction of g, for any x ∈ [0, 1], any ω ∈ Ω, PLω (· | x) equals either P+(· | x) or P−(· | x).",
      "startOffset" : 38,
      "endOffset" : 44
    }, {
      "referenceID" : 0,
      "context" : "By the well-balanced property, for any x ∈ [0, 1], P̄L(· | x) is between 1 24P+(· | x) + 23 24P−(· | x) and 3 24P+(· | x) + 21 24P−(· | x).",
      "startOffset" : 43,
      "endOffset" : 49
    }, {
      "referenceID" : 0,
      "context" : "For any 0 < i ≤ M , dKL ( P i ‖ P̄ 0 ) ≤ nmax x∈[0,1]d dKL ( PLi(Y | x) ‖ P̄L(Y | x) ) .",
      "startOffset" : 48,
      "endOffset" : 53
    }, {
      "referenceID" : 0,
      "context" : "For any x ∈ [0, 1], dKL ( PLi(Y | x) ‖ P̄L(Y | x) )",
      "startOffset" : 12,
      "endOffset" : 18
    }, {
      "referenceID" : 20,
      "context" : "We need following two results from [21] Lemma 6.",
      "startOffset" : 35,
      "endOffset" : 39
    }, {
      "referenceID" : 20,
      "context" : "([21], Theorem 2) Take any 0 < δ < 1.",
      "startOffset" : 1,
      "endOffset" : 5
    }, {
      "referenceID" : 20,
      "context" : "([21], Lemma 3) Take any 0 < δ < 1.",
      "startOffset" : 1,
      "endOffset" : 5
    }, {
      "referenceID" : 0,
      "context" : "If x ∈ [0, 1], ǫ ≤ min { ( 1 2 1/β , ( 4 5 1/α , 1 4 }",
      "startOffset" : 7,
      "endOffset" : 13
    }, {
      "referenceID" : 19,
      "context" : "([20], Lemma 4) For sufficiently large d > 0, there is a subset M ⊂ {0, 1} with following properties: (i) |M | ≥ 2; (ii) ‖v − v‖0 > d 12 for any two distinct v, v′ ∈ M ; (iii) for any i = 1, .",
      "startOffset" : 1,
      "endOffset" : 5
    }, {
      "referenceID" : 15,
      "context" : "One proof can be found in [16].",
      "startOffset" : 26,
      "endOffset" : 30
    } ],
    "year" : 2016,
    "abstractText" : "We study active learning where the labeler can not only return incorrect labels but also abstain from labeling. We consider different noise and abstention conditions of the labeler. We propose an algorithm which utilizes abstention responses, and analyze its statistical consistency and query complexity under fairly natural assumptions on the noise and abstention rate of the labeler. This algorithm is adaptive in a sense that it can automatically request less queries with a more informed or less noisy labeler. We couple our algorithm with lower bounds to show that under some technical conditions, it achieves nearly optimal query complexity.",
    "creator" : "gnuplot 4.6 patchlevel 4"
  }
}