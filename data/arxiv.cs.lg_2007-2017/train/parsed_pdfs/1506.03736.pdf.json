{
  "name" : "1506.03736.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "GAP Safe screening rules for sparse multi-task and multi-class models",
    "authors" : [ "Eugène Ndiaye", "Olivier Fercoq", "Alexandre Gramfort", "Joseph Salmon" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "The computational burden of solving high dimensional regularized regression problem has lead to a vast literature in the last couple of decades to accelerate the algorithmic solvers. With the increasing popularity of `1-type regularization ranging from the Lasso [18] or group-Lasso [24] to regularized logistic regression and multi-task learning, many algorithmic methods have emerged to solve the associated optimization problems. Although for the simple `1 regularized least square a specific algorithm (e.g., the LARS [8]) can be considered, for more general formulations, penalties, and possibly larger dimension, coordinate descent has proved to be a surprisingly efficient strategy [12].\nOur main objective in this work is to propose a technique that can speed-up any solver for such learning problems, and that is particularly well suited for coordinate descent method, thanks to active set strategies.\nThe safe rules introduced by [9] for generalized `1 regularized problems, is a set of rules that allows to eliminate features whose associated coefficients are proved to be zero at the optimum. Relaxing the safe rule, one can obtain some more speed-up at the price of possible mistakes. Such heuristic strategies, called strong rules [19] reduce the computational cost using an active set strategy, but require difficult post-precessing to check for features possibly wrongly discarded. Another road to speed-up screening method has been the introduction of sequential safe rules [21, 23, 22]. The idea is to improve the screening thanks to the computations done for a previous regularization parameter. This scenario is particularly relevant in machine learning, where one computes solutions over a grid of regularization parameters, so as to select the best one (e.g., to perform cross-validation). Nevertheless, such strategies suffer from the same problem as strong rules, since relevant features can be wrongly disregarded: sequential rules usually rely on theoretical quantities that are not known by the solver, but only approximated. Especially, for such rules to work one needs the exact dual optimal solution from the previous regularization parameter.\nRecently, the introduction of safe dynamic rules [6, 5] has opened a promising venue by letting the screening to be done not only at the beginning of the algorithm, but all along the iterations. Following a\nar X\niv :1\n50 6.\n03 73\n6v 2\n[ st\nat .M\nL ]\n1 8\nN ov\nmethod introduced for the Lasso [11], we generalize this dynamical safe rule, called GAP Safe rules (because it relies on duality gap computation) to a large class of learning problems with the following benefits:\n• a unified and flexible framework for a wider family of problems, • easy to insert in existing solvers, • proved to be safe, • more efficient that previous safe rules, • achieves fast true active set identification.\nWe introduce our general GAP Safe framework in Section 2. We then specialize it to important machine learning use cases in Section 3. In Section 4 we apply our GAP Safe rules to a multi-task Lasso problem, relevant for brain imaging with magnetoencephalography data, as well as to multinomial logistic regression regularized with `1{`2 norm for joint feature selection."
    }, {
      "heading" : "2 GAP Safe rules",
      "text" : ""
    }, {
      "heading" : "2.1 Model and notations",
      "text" : "We denote by rds the set t1, . . . , du for any integer d P N, and by QJ the transpose of a matrix Q. Our observation matrix is Y P Rnˆq where n represents the number of samples, and q the number of tasks or classes. The design matrix X “ rxp1q, . . . , xppqs “ rx1, . . . , xnsJ P Rnˆp has p explanatory variables (or features) column-wise, and n observations row-wise. The standard `2 norm is written } ¨ }2, the `1 norm } ¨ }1, the `8 norm } ¨ }8. The `2 unit ball is denoted by B2 (or simply B) and we write Bpc, rq the `2 ball with center c and radius r. For a matrix B P Rpˆq, we denote by }B}22 “ řp j“1 řq k“1 B2j,k the Frobenius norm, and by x¨, ¨y the associated inner product. We consider the general optimization problem of minimizing a separable function with a group-Lasso regularization. The parameter to recover is a matrix B P Rpˆq, and for any j in Rp,Bj,: is the j-th row of B, while for any k in Rq, B:,k is the k-th column. We would like to find\npBpλq P arg min BPRpˆq\nnÿ i“1 fipxJi Bq ` λΩpBq\nloooooooooooomoooooooooooon PλpBq\n, (1)\nwhere fi : R1ˆq ÞÑ R is a convex function with 1{γ-Lipschitz gradient. So F : B Ñ řni“1 fipxJi Bq is also convex with Lipschitz gradient. The function Ω : Rpˆq ÞÑ R` is the `1{`2 norm ΩpBq “ řpj“1 }Bj,:}2 promoting a few lines of B to be non-zero at a time. The λ parameter is a non-negative constant controlling the trade-off between data fitting and regularization.\nSome elements of convex analysis used in the following are introduced here. For a convex function f : Rd Ñ r´8,`8s the Fenchel-Legendre transform1 of f , is the function f˚ : Rd Ñ r´8,`8s defined by f˚puq “ supzPRdxz, uy ´ fpzq. The sub-differential of a function f at a point x is denoted by Bfpxq. The dual norm of Ω is the `8{`2 norm and reads Ω˚pBq “ maxjPrps }Bj,:}2. Remark 1. For the ease of reading, all groups are weighted with equal strength, but extension of our results to non-equal weights as proposed in the original group-Lasso [24] paper would be straightforward."
    }, {
      "heading" : "2.2 Basic properties",
      "text" : "First we recall the associated Fermat’s condition and a dual formulation of the optimization problem:\n1this is also often referred to as the (convex) conjugate of a function\nTheorem 1. Fermat’s condition (see [3, Proposition 26.1] for a more general result) For any convex function f : Rn Ñ R:\nx P arg min xPRn fpxq ô 0 P Bfpxq. (2)\nTheorem 2 ([9]). A dual formulation of (1) is given by\npΘpλq “ arg max ΘP∆X\n´ nÿ\ni“1 fi̊ p´λΘi,:q\nlooooooooomooooooooon DλpΘq\n. (3)\nwhere ∆X “ tΘ P Rnˆq : @j P rps, }xpjqJΘ}2 ď 1u “ tΘ P Rnˆq : Ω˚pXJΘq ď 1u. The primal and dual solutions are linked by @i P rns, pΘpλqi,: “ ´∇fipxJi pBpλqq{λ. (4) Furthermore, Fermat’s condition reads:\n@j P rps, xpjqJpΘpλq P $ & % \" B̂λj,; }B̂λj,;}2 * , if pBpλqj,: ‰ 0,\nB2, if pBpλqj,: “ 0. (5)\nRemark 2. Contrarily to the primal, the dual problem has a unique solution under our assumption on fi. Indeed, the dual function is strongly concave, hence strictly concave. Remark 3. For any Θ P Rnˆq let us introduce GpΘq “ r∇f1pΘ1,:qJ, . . . ,∇fnpΘn,:qJs P Rnˆq. Then the primal/dual link can be written pΘpλq “ ´GpXpBpλqq{λ ."
    }, {
      "heading" : "2.3 Critical parameter: λmax",
      "text" : "For λ large enough the solution of the primal problem is simply 0. Thanks to the Fermat’s rule (2), 0 is optimal if and only if ´∇F p0q{λ P BΩp0q. Thanks to the property of the dual norm Ω˚, this is equivalent to Ω˚p∇F p0q{λq ď 1 where Ω˚ is the dual norm of Ω. Since ∇F p0q “ XJGp0q, 0 is a primal solution of Pλ if and only if λ ě λmax :“ maxjPrps }xpjqJGp0q}2 “ Ω˚pXJGp0qq.\nThis development shows that for λ ě λmax, Problem (1) is trivial. So from now on, we will only focus on the case where λ ď λmax."
    }, {
      "heading" : "2.4 Screening rules description",
      "text" : "Safe screening rules rely on a simple consequence of the Fermat’s condition: }xpjqJpΘpλq}2 ă 1 ñ pBpλqj,: “ 0 . (6) Stated in such a way, this relation is useless because pΘpλq is unknown (unless λ ą λmax). However, it is often possible to construct a set R Ă Rnˆq, called a safe region, containing it. Then, note that\nmax ΘPR }x pjqJΘ}2 ă 1 ñ pBpλqj,: “ 0 . (7) The so called safe screening rules consist in removing the variable j from the problem whenever the previous test is satisfied, since pBpλqj,: is then guaranteed to be zero. This property leads to considerable speed-up in practice especially with active sets strategies, see for instance [11] for the Lasso case. A natural goal is to find safe regions as narrow as possible: smaller safe regions can only increase the number of screened out variables. However, complex regions could lead to a computational burden limiting the benefit of screening. Hence, we focus on constructing R satisfying the trade-off: • R is as small as possible and contains pΘpλq. • Computing maxΘPR }xpjqJΘ}2 is cheap."
    }, {
      "heading" : "2.5 Spheres as safe regions",
      "text" : "Various shapes have been considered in practice for the set R such as balls (referred to as spheres) [9], domes [11] or more refined sets (see [23] for a survey). Here we consider the so-called “sphere regions” choosing a ball R “ Bpc, rq as a safe region. One can easily obtain a control on maxΘPBpc,rq }xpjqJΘ}2 by extending the computation of the support function of a ball [11, Eq. (9)] to the matrix case: max\nΘPBpc,rq }xpjqJΘ}2 ď\n}xpjqJc}2 ` r}xpjq}2 . Note that here the center c is a matrix in Rpˆq. We can now state the safe sphere test:\nSphere test: If }xpjqJc}2 ` r}xpjq}2 ă 1, then pBpλqj,: “ 0. (8)"
    }, {
      "heading" : "2.6 GAP Safe rule description",
      "text" : "In this section we derive a GAP Safe screening rule extending the one introduced in [11]. For this, we rely on the strong convexity of the dual objective function and on weak duality.\nFinding a radius: Remember that @i P rns, fi is differentiable with a 1{γ-Lipschitz gradient. As a consequence, @i P rns, fi̊ is γ-strongly convex [14, Theorem 4.2.2, p. 83] and so Dλ is γλ2-strongly concave:\n@pΘ1,Θ2q P Rnˆq ˆ Rnˆq, DλpΘ2q ď DλpΘ1q ` x∇DλpΘ1q,Θ2 ´Θ1y ´ γλ 2\n2 }Θ1 ´Θ2}2.\nSpecifying the previous inequality for Θ1 “ pΘpλq,Θ2 “ Θ P ∆X , one has\nDλpΘq ď DλppΘpλqq ` x∇DλppΘpλqq,Θ´ pΘpλqy ´ γλ 2\n2 }pΘpλq ´Θ}2.\nBy definition, pΘpλq maximizes Dλ on ∆X , so we have: x∇DλppΘpλqq,Θ´ pΘpλqy ď 0. This implies\nDλpΘq ď DλppΘpλqq ´ γλ 2\n2 }pΘpλq ´Θ}2."
    }, {
      "heading" : "By weak duality @B P Rpˆq, DλppΘpλqq ď PλpBq, so : @B P Rpˆq,@Θ P ∆X , DλpΘq ď PλpBq´ γλ22 }pΘpλq´Θ}2,",
      "text" : "and we deduce the following theorem:\nTheorem 3.\n@B P Rpˆq,@Θ P ∆X , ∥∥∥pΘpλq ´Θ ∥∥∥ 2 ď d 2pPλpBq ´DλpΘqq γλ2 “: r̂λpB,Θq. (9)\nProvided one knows a dual feasible point Θ P ∆X and a B P Rpˆq , it is possible to construct a safe sphere with radius r̂λpB,Θq centered on Θ. We now only need to build a (relevant) dual point to center such a ball. Results from Section 2.3, ensure that ´Gp0q{λmax P ∆X , but it leads to a static rule, a introduced in [9]. We need a dynamic center to improve the screening as the solver proceeds.\nFinding a center: Remember that pΘpλq “ ´GpXpBpλqq{λ. Now assume that one has a converging algorithm for the primal problem, i.e., Bk Ñ pBpλq. Hence, a natural choice for creating a dual feasible point Θk is to choose it proportional to ´GpXBkq, for instance by setting:\nΘk “ # Rk λ , if Ω˚pXJRkq ď λ,\nRk Ω˚pXJRkq , otherwise.\nwhere Rk “ ´GpXBkq . (10)\nA refined method consists in solving the one dimensional problem: arg maxΘP∆XXSpanpRkqDλpΘq. In the Lasso and group-Lasso case [5, 6, 11] such a step is simply a projection on the intersection of a line and the (polytope) dual set and can be computed efficiently. However for logistic regression the computation is more involved, so we have opted for the simpler solution in Equation (10). This still provides converging safe rules (see Proposition 1).\nDynamic GAP Safe rule summarized\nWe can now state our dynamical GAP Safe rule at the k-th step of an iterative solver:\n1. Compute Bk, and then obtain Θk and r̂λpBk,Θkq using (10). 2. If }xpjqJΘk}2 ` r̂λpBk,Θkq}xpjq}2 ă 1, then set pBpλqj,: “ 0 and remove xpjq from X. Dynamic safe screening rules are more efficient than existing methods in practice because they can increase the ability of screening as the algorithm proceeds. Since one has sharper and sharper dual regions available along the iterations, support identification is improved. Provided one relies on a primal converging algorithm, one can show that the dual sequence we propose is converging too.\nThe convergence of the primal is unaltered by our GAP Safe rule: screening out unnecessary coefficients of Bk can only decrease its distance with its original limits. Moreover, a practical consequence is that one can observe surprising situations where lowering the tolerance of the solver can reduce the computation time. This can happen for sequential setups.\nProposition 1. Let Bk be the current estimate of pBpλq and Θk defined in Eq. (10) be the current estimate of pΘpλq. Then limkÑ`8 Bk “ pBpλq implies limkÑ`8Θk “ pΘpλq.\nNote that if the primal sequence is converging to the optimal, our dual sequence is also converging. But we know that the radius of our safe sphere is p2pPλpBkq ´DλpΘkqq{pγλ2qq1{2. By strong duality, this radius converges to 0, hence we have certified that our GAP Safe regions sequence BpΘk, r̂λpBk,Θkqq is a converging safe rules (in the sense introduced in [11, Definition 1]).\nRemark 4. The active set obtained by our GAP Safe rule (i.e., the indexes of non screened-out variables) converges to the equicorrelation set [20] Eλ :“ tj P p : }xpjqJpΘpλq}2 “ 1u, allowing us to early identify relevant features (see Proposition 2 in the supplementary material for more details)."
    }, {
      "heading" : "3 Special cases of interest",
      "text" : "We now specialize our results to relevant supervised learning problems, see also Table 1."
    }, {
      "heading" : "3.1 Lasso",
      "text" : "In the Lasso case q “ 1, the parameter is a vector: B “ β P Rp, F pβq “ 1{2}y ´Xβ}22 “ řn i“1pyi ´ xJi βq2, meaning that fipzq “ pyi ´ zq2{2 and Ωpβq “ }β}1.\n3.2 `1{`2 multi-task regression In the multi-task Lasso, which is a special case of group-Lasso, we assume that the observation is Y P Rnˆq, F pBq “ 12}Y ´XB}22 “ 12 řn i“1 }Yi,: ´ xJi B}22 (i.e., fipzq “ }Yi,: ´ z}2{2) and ΩpBq “ řp j“1 }Bj,:}2. In signal processing, this model is also referred to as Multiple Measurement Vector (MMV) problem. It allows to jointly select the same features for multiple regression tasks [1, 2].\nRemark 5. Our framework could encompass easily the case of non-overlapping groups with various size and weights presented in [6]. Since our aim is mostly for multi-task and multinomial applications, we have rather presented a matrix formulation."
    }, {
      "heading" : "3.3 `1 regularized logistic regression",
      "text" : "Here, we consider the formulation given in [7, Chapter 3] for the two classes logistic regression. In such a context, one observes for each i P rns a class label ci P t1, 2u. This information can be recast as yi “ 1tci“1u, and it is then customary to minimize (1) where\nF pβq “ nÿ\ni“1\n`´yixJi β ` log ` 1` exp `xJi β ˘˘˘ , (11)\nwith B “ β P Rp (i.e., q “ 1), fipzq “ ´yiz ` logp1 ` exppzqq and the penalty is simply the `1 norm: Ωpβq “ }β}1. Let us introduce Nh, the (binary) negative entropy function defined by 2:\nNhpxq “ # x logpxq ` p1´ xq logp1´ xq, if x P r0, 1s , `8, otherwise . (12)\nThen, one can easily check that fi̊ pziq “ Nhpzi ` yiq and γ “ 4.\n3.4 `1{`2 multinomial logistic regression We adapt the formulation given in [7, Chapter 3] for the multinomial regression. In such a context, one observes for each i P rns a class label ci P t1, . . . , qu. This information can be recast into a matrix Y P Rnˆq filled by 0’s and 1’s: Yi,k “ 1tci“ku. In the same spirit as the multi-task Lasso, a matrix B P Rpˆq is formed by q vectors encoding the hyperplanes for the linear classification. The multinomial `1{`2 regularized regression reads:\nF pBq “ nÿ\ni“1\n˜ qÿ\nk“1 ´Yi,kxJi B:,k ` log\n˜ qÿ\nk“1 exp\n` xJi B:,k\n˘ ¸¸\n, (13)\nwith fipzq “ řqk“1´Yi,kzk ` log p řq k“1 exp pzkqq to recover the formulation as in (1). Let us introduce NH, the negative entropy function defined by (still with the convention 0 logp0q “ 0)\nNHpxq “ #řq i“1 xi logpxiq, if x P Σq “ tx P Rq` : řq i“1 xi “ 1u,\n`8, otherwise. (14)\nAgain, one can easily check that fi̊ pzq “ NHpz ` Yi,:q and γ “ 1. Remark 6. For multinomial logistic regression, Dλ implicitly encodes the additional constraint Θ P domDλ “ tΘ1 : @i P rns,´λΘ1i,: ` Yi,: P Σqu where Σq is the q dimensional simplex, see (14). As 0 and Rk{λ both belong to this set, any convex combination of them, such as Θk defined in (10), satisfies this additional constraint.\nRemark 7. The intercept has been neglected in our models for simplicity. Our GAP Safe framework can also handle such a feature at the cost of more technical details (by adapting the results from [15] for instance). However, in practice, the intercept can be handled in the present formulation by adding a constant column to the design matrix X. The intercept is then regularized. However, if the constant is set high enough, regularization is small and experiments show that it has little to no impact for high-dimensional problems. This is the strategy used by the Liblinear package [10].\n2with the convention 0 logp0q “ 0"
    }, {
      "heading" : "4 Experiments",
      "text" : "In this section we present results obtained with the GAP Safe rule. Results are on high dimensional data, both dense and sparse. Implementation have been done in Python and Cython for low critical parts. They are based on the multi-task Lasso implementation of Scikit-Learn [17] and coordinate descent logistic regression solver in the Lightning software [4]. In all experiments, the coordinate descent algorithm used follows the pseudo code from [11] with a screening step every 10 iterations.\nNote that we have not performed comparison with the sequential screening rule commonly acknowledge as the state-of-the-art “safe” screening rule (such as th EDDP+ [21]), since we can show that this kind of rule is not safe. Indeed, the stopping criterion is based on dual gap accuracy, and comparisons would be unfair since such methods sometimes do not converge to the prescribed accuracy. This is backed-up by a counter example given in the supplementary material. Nevertheless, modifications of such rules, inspired by our GAP Safe rules, can make them safe. However the obtained sequential rules are still outperformed by our dynamic strategies (see Figure 2 for an illustration).\n4.1 `1{`2 multi-task regression To demonstrate the benefit of the GAP Safe screening rule for a multi-task Lasso problem we used neuroimaging data. Electroencephalography (EEG) and magnetoencephalography (MEG) are brain imaging modalities that allow to identify active brain regions. The problem to solve is a multi-task regression problem with squared loss where every task corresponds to a time instant. Using a multi-task Lasso one can constrain the recovered sources to be identical during a short time interval [13]. This corresponds to a temporal stationary assumption. In this experiment we used a joint MEG/EEG data with 301 MEG and 59 EEG sensors leading to n “ 360. The number of possible sources is p “ 22, 494 and the number of time instants q “ 20. With a 1 kHz sampling rate it is equivalent to say that the sources stay the same for 20 ms.\nResults are presented in Figure 1. The GAP Safe rule is compared with the dynamic safe rule from [6]. The experimental setup consists in estimating the solutions of the multi-task Lasso problem for 100 values of λ on a logarithmic grid from λmax to λmax{103. For the experiments on the left a fixed number of iterations from 2 to 211 is allowed for each λ. The fraction of active variables is reported. Figure 1 illustrates that the GAP Safe rule screens out much more variables than the compared method, as well as the converging nature of our safe regions. Indeed, the more iterations performed the more the rule allows to screen variables. On\nthe right, computation time confirms the effective speed-up. Our rule significantly improves the computation time for all duality gap tolerance from 10´2 to 10´8, especially when accurate estimates are required, e.g., for feature selection."
    }, {
      "heading" : "4.2 `1 binary logistic regression",
      "text" : "Results on the Leukemia dataset are reported in Figure 2. We compare the dynamic strategy of GAP Safe to a sequential and non dynamic rule such as Slores [22]. We do not compare to the actual Slores rule as it requires the previous dual optimal solution, which is not available. Slores is indeed not a safe method (see Section B in the supplementary materials). Nevertheless one can observe that dynamic strategies outperform pure sequential one, see Section C in the supplementary material).\n4.3 `1{`2 multinomial logistic regression We also applied GAP Safe to an `1{`2 multinomial logistic regression problem on a sparse dataset. Data are bag of words features extracted from the News20 dataset (TF-IDF removing English stop words and words occurring only once or more than 95% of the time). One can observe on Figure 3 the dynamic screening and its benefit as more iterations are performed. GAP Safe leads to a significant speedup: to get a duality gap smaller than 10´2 on the 100 values of λ, we needed 1,353 s without screening and only 485 s when GAP Safe was activated."
    }, {
      "heading" : "5 Conclusion",
      "text" : "This contribution detailed new safe rules for accelerating algorithms solving generalized linear models regularized with `1 and `1{`2 norms. The rules proposed are safe, easy to implement, dynamic and converging, allowing to discard significantly more variables than alternative safe rules. The positive impact in terms of computation time was observed on all tested datasets and demonstrated here on a high dimensional regression task using brain imaging data as well as binary and multiclass classification problems on dense and sparse data. Extensions to other generalized linear model, e.g., Poisson regression, are expected to reach the same conclusion. Future work could investigate optimal screening frequency, determining when the screening has correctly detected the support."
    }, {
      "heading" : "Acknowledgment",
      "text" : "We acknowledge the support from Chair Machine Learning for Big Data at Télécom ParisTech and from the Orange/Télécom ParisTech think tank phi-TAB. This work benefited from the support of the ”FMJH Program Gaspard Monge in optimization and operation research”, and from the support to this program from EDF."
    }, {
      "heading" : "A Proofs",
      "text" : "A.1 Proof of variable identification\nProposition 2. There exists k0 P N such that for all k ě k0, an index j P rps is screened out by the GAP Safe rule if and only if j P Eλ :“ tj P p : }xpjqJpΘpλq}2 “ 1u. Proof. For simplicity we use the notation Rk “ BpΘk, r̂λpBk,Θkqq for the safe region at step k. Define maxjREλ |xpjqJpΘpλq| “ t ă 1. Fix ą 0 such that ă p1´ tq{pmaxjREλ }xpjq}q. As Θk is converging to pΘpλq, and limkÑ8 r̂λpBk,Θkq “ 0, there exists k0 P N such that @k ě k0,@Θ P Rk, }Θ ´ pΘpλq} ď . Hence, for any j R Eλ and any Θ P Rk, |xpjqJpΘ´ pΘpλqq| ď pmaxjREλ }xpjq}q}Θ´ pΘpλq} ď pmaxjREλ }xpjq}q . Using the triangle inequality, one gets\n|xpjqJΘ| ďpmax jREλ }xpjq}q `max jREλ |xpjqJpΘpλq| ďpmax\njREλ }xpjq}q ` t ă 1,\nprovided that ă p1´ tq{pmaxjREλ }xpjq}q. Hence, for all k ě k0, j R Eλ implies that j is screened out by the GAP Safe rule thanks to the last inequality. For the reverse inclusion take j P Eλ, i.e., |xpjqJpΘpλq| “ 1. Since by construction of our GAP Safe screening rule @k P N, pΘpλq P Rk, then j P tj1 P rps : maxΘPRk |xpj\n1qJΘ| ě 1u. This means that the variable j can not be eliminated by our safe rule, and we have shown that in the limit we have exactly identified the equicorrelation set.\nA.2 Proof that the GAP Safe rule is converging (Proposition 1)\nProof. We consider two cases. First let us assume that θk “ Rk{Ω˚pXJGpXBkqq\n∥∥∥Θk ´ pΘpλq ∥∥∥\n2 “\n∥∥∥∥ ´GpXBkq\nΩ˚pXJGpXBkqq ` 1 λ GpXpBpλqq ∥∥∥∥ 2\nď ∥∥∥∥ GpXBkq λ ´ GpXBkq Ω˚pXJGpXBkqq ∥∥∥∥\n2\n` ∥∥∥∥∥ GpXpBpλqq ´GpXBkq λ ∥∥∥∥∥ 2\nď ˇ̌ ˇ̌ 1 λ ´ 1 Ω˚pXJGpXBkqq ˇ̌ ˇ̌ ‖GpXBkq‖2 ` ∥∥∥∥∥ GpXpBpλqq ´GpXBkq λ ∥∥∥∥∥ 2\nThe second term converges to zero whenever Bk Ñ pBpλq since G is continuous (it is γ-Lipschitz). For the first term, note that Ω˚pXJGpXBkqq Ñ Ω˚pXJGpXpBpλqqq “ λΩ˚pXJpΘpλqq “ λ (thanks to the primal/dual link, and that pΘpλq is dual feasible). Then, as G is a Lipschitz function and all norms are equivalent in a finite dimension space, the right hand side converges to zero in the previous inequality, and the results stated follows.\nIn the second case Θk “ Rk{λ, so ∥∥∥Θk ´ pΘpλq ∥∥∥ 2 “ ∥∥∥´GpXBkq`GpX pB pλqq λ ∥∥∥ 2 and the proof proceeds as in\nthe first case."
    }, {
      "heading" : "B EDPP is not safe",
      "text" : "In the two last sections, we present a study on the EDDP method [21], a screening rule that relies on the dual optimal point obtained for the previous λ in the path. Note that the same conclusion would hold true for generalization of the sequential approach given in [22], as well as for any other screening rule that needs exact dual solution at one step. To simplify the reading we use the vectorial (with no capital letters) notation used earlier. In the remainder we consider λ0 “ λmax and a non-increasing sequence of T ´1 tuning parameters pλtqtPrT´1s in p0, λmaxq. In practice, we choose the common grid [7][2.12.1]): λt “ λ010´δt{pT´1q. Wang et al. [21] proposed a sequential screening rule based on properties of the projection onto a convex set. Their rule is based on the exact knowledge of the true optimal solution for the previous parameter. Such a rule can be used to compute θ̂pλ1q since θ̂pλ0q “ y{λ0 p“ y{λmaxq is known. However for t ą 1, θ̂pλtq is only known approximately and the rules introduced in [21] are not safe anymore: some active groups may be wrongly disregarded if one does not use the exact value of θ̂pλtq. We first first recall the property they proved. Then, we give a counter-example that shows that the rule is indeed not safe. In Section C, we propose to modify their rule in order to make it safe in all cases. Recall that in this case q “ 1, the parameters are vectors: B “ β P Rp and Θ “ θ P Rn.\nProposition 3 ([21, Theorem 19]). Assume that λt´1 ă λmax, then the dual optimal solution of the groupLasso with parameter λt, satisfies\nθ̂pλtq P B`θ̂pλt´1q ` 1 2 vKpλt´1, λtq, 1 2 ∥∥vKpλt´1, λtq ∥∥ 2 ˘ (15)\nwhere\nvKpλt´1, λtq “ y λt ´ θ̂pλt´1q ´ αrθ̂pλt´1qsp y λt´1 ´ θ̂pλt´1qq\nand\nαrθ̂pλt´1qs :“ arg min αPR`\n∥∥∥∥ y\nλt ´ θ̂pλt´1q ´ αp y λt´1 ´ θ̂pλt´1qq ∥∥∥∥ 2\n“ x yλt´1 ´ θ̂pλt´1q, yλt ´ θ̂pλt´1qy\n‖ yλt´1 ´ θ̂pλt´1q‖22 . (16)\nNote that the rule proposed by [21] (as pointed out in [6]) relies on the exact knowledge of a dual optimal solution for a previously solved Lasso problem. This is impossible to obtain in practice and even if it is possible to find accurate solutions, the search for high accuracy may hinder the benefits of the screening when it was not actually needed. Using inaccurate solutions may lead to discarding variables that should have been active and so the screened optimization algorithm will not converge to a solution of the original problem.\nWe illustrate this issue on Figure 4. Knowing an approximation β to the optimal primal point, returned by the optimization algorithm at the previous regularization parameter λt´1, we need to choose an approximation θ to the optimal dual point to run EDPP.\n• If we choose to approximate the dual optimal point by θ “ 1λt´1 py´Xβq (blue curve with diamonds), then the result is catastrophic. Indeed, at λ1, β “ 0 is a valid -solution for “ 10´1.5 and the screening rule tries to perform a division by 0 when computing αrθs.\n• If we choose to approximate the dual optimal point by 1maxpλt´1,‖XJpy´Xβq‖8q py´Xβq, we have a better behavior (purple curve with triangles) but we may still have an algorithm which does not converge to an -solution. Here, for the 13th Lasso problem a variable is erroneously removed and the problem can only be solved to accuracy 0.03515 ą 10´1.5 « 0.03162. This may look like a small issue but when the stopping criterion is based on the duality gap, this causes the algorithm to continue until the maximum number of iterations is reached."
    }, {
      "heading" : "C Making EDDP screening rule safe",
      "text" : "C.1 The simpler screening rule\nIn the present paper, we give computable guarantees on the distance between the current dual feasible point and the solution of the problem. We show here how we can combine our result with Wang et al. ’s in order to make their screening rule work even with approximate solutions to the previous Lasso problem.\nFor simplicity, we first consider the initial version of Wang et al. ’s sphere test:\nθ̂pλtq P B`θ̂pλt´1q,∥∥vKpλt´1, λtq ∥∥\n2\n˘ , (17)\nproved in [21, Theorem 7]. As we do not know θ̂pλt´1q, we cannot readily use this ball. However, we can modify it to make it a safe screening rules as follows:\nProposition 4. Assume that λt´1 ă λmax, θ P ∆X is a dual feasible point and rλt´1 ą 0 is a radius satisfying θ̂pλt´1q P Bpθ, rλt´1q, then\nθ̂pλtq P B ´ θ, rλt´1p1` |1´ αrθs|q ` ∥∥∥∥ y\nλt ´ θ ´ αrθsp y λt´1 ´ θq ∥∥∥∥ 2 ¯ , (18)\nwhere\nαrθs :“ arg min αPR`\n∥∥∥∥ y\nλt ´ θ ´ αp y λt´1 ´ θq ∥∥∥∥ 2 “ ˜x yλt´1 ´ θ, yλt ´ θy ‖ yλt´1 ´ θ‖22 ¸ ` , (19)\nand for any t P R, ptq` “ maxp0, tq. Proof. Start first by noting that (17) implies\nθ̂pλtq P ď θ1PBpθ,rλt´1 q B ´ θ1, min αPR` ∥∥∥∥ y λt ´ θ1 ´ αp y λt´1 ´ θ1q ∥∥∥∥ 2 ¯ .\nLet us denote\nH “ max θ1PBpθ,rλt´1 q min αPR`\n∥∥∥∥ y\nλt ´ θ1 ´ αp y λt´1 ´ θ1q ∥∥∥∥ 2 ,\nthen θ̂pλtq P Bpθ, rλt´1 ` Hq. We now need to upper bound H. A simple choice is to take α to be αrθs defined in Eq. (19) The motivation for such a choice is because it is optimal when rλt´1 “ 0. This provides the following bound on H:\nH ď max θ1PBpθ,rλt´1 q\n∥∥∥∥ y\nλt ´ θ1 ´ αrθsp y λt´1 ´ θ1q ∥∥∥∥ 2 ,\n“ ∥∥∥∥∥∥ y λt ´ θ ´ αrθsp y λt´1 ´ θq ` rλt´1pαrθs ´ 1q y λt ´ θ ´ αrθsp yλt´1 ´ θq∥∥∥ yλt ´ θ ´ αrθsp yλt´1 ´ θq ∥∥∥ ∥∥∥∥∥∥ 2 , ď rλt´1 |αrθs ´ 1| ` ∥∥∥∥ y\nλt ´ θ ´ αrθs.p y λt´1 ´ θq\n∥∥∥∥ . (20)\nHence, after some simplifications:\nθ̂pλtq P B ´ θ, rλt´1p1` |1´ αrθs|q ` ∥∥∥∥ y\nλt ´ θ ´ αrθsp y λt´1 ´ θq ∥∥∥∥ 2 ¯ .\nRemark 8. In the case that ‖y{λt´1‖ ď ‖y{λt´1 ´ θ‖ ď 1 then with the definition of αrθs and the CauchySchwartz inequality one has that 1` |αrθs ´ 1| ď λt´1λt . This means that the multiplicative ratio in front of rλt´1 is λt´1{λt. In [11, Proposition 3], the bound obtained would only lead to the smaller ratio: a λt´1{λt. Remark 9. From the proof of Theorem 7 in [21], it holds that for λ ă λmax then ∥∥∥θ̂pλq\n∥∥∥ ď ‖y‖ λ ô θ̂pλq P B ˆ 0, ‖y‖ λ ˙ . (21)\nC.2 The complete screening rule (EDDP+) Let us now consider the EDDP+ screening rule [21] relying on the property (15): θ̂pλtq P B`θ̂pλt´1q ` 1 2v Kpλt´1, λtq, 12 ∥∥vKpλt´1, λtq ∥∥ 2 ˘ . Using the same technique as for Proposition 4, we can strengthen our previous proposition with the following result.\nProposition 5. Assume that λt´1 ă λmax, θ P ∆X is a dual feasible point and rλt´1 ą 0 is a radius satisfying θ̂pλt´1q P Bpθ, rλt´1q. Define αrθs as in (19),\nrλt “ |1´ αrθs|` 1` αrθs\n2 rλt´1 `\n1\n2\n∥∥∥∥ y\nλt ´ θ ´ αrθsp y λt´1 ´ θq ∥∥∥∥ 2\n` ∥∥∥ yλt ´ yλt´1 ∥∥∥ 2 rλt´1\n2‖ yλt´1 ´ θ‖22 ´ 3 ∥∥∥∥ y λt´1 ´ θ ∥∥∥∥ 2 ` 2rλt´1 ¯\nand vKpθ, λt´1, λtq “ y\nλt ´ θ ´ αrθsp y λt´1 ´ θq. (22)\nThen θ̂pλtq P B ´ θ ` 12vKpθ, λt´1, λtq, rλt ¯ .\nProof. As before, we do not know exactly θ̂pλt´1q but we know that denoting\nvKpθ1, λt´1, λtq “ y λt ´ θ1 ´ αrθ1sp y λt´1 ´ θ1q (23)\nwith\nαrθ1s “ ˜x yλt´1 ´ θ1, yλt ´ θ1y\n‖ yλt´1 ´ θ1‖22\n¸\n` , (24)\nwe have\nθ̂pλtq P ď θ1PBpθ,rλt´1 q B ´ θ1 ` 1 2 vKpθ1, λt´1, λtq, 1 2 ∥∥vKpθ1, λt´1, λtq ∥∥ 2 ¯ .\nOur goal is to find a ball centered at θ` 12vKpθ, λt´1, λtq that contains all these balls, thus containing θ̂pλtq. First, reminding (20)\n∥∥vKpθ1, λt´1, λtq ∥∥\n2 “ min αPR`\n∥∥∥∥ y\nλt ´ θ1 ´ αp y λt´1 ´ θ1q ∥∥∥∥ 2\nď max θ1PBpθ,rλt´1 q min αPR`\n∥∥∥∥ y\nλt ´ θ1 ´ αp y λt´1 ´ θ1q ∥∥∥∥ 2\nď rλt´1 |1´ αrθs|` ∥∥∥∥ y\nλt ´ θ ´ αrθsp y λt´1 ´ θq ∥∥∥∥ 2 .\nWe continue as\nθ1 ` 1 2 vKpθ1,λt´1, λtq ´ θ ´ 1 2 vKpθ, λt´1, λtq\n“ pθ1 ´ θq ` 1 2 ´ y λt ´ θ1 ´ αrθ1sp y λt´1 ´ θ1q ´ y λt ` θ ` αrθsp y λt´1 ´ θq ¯ “ 1 2 ´ θ1 ´ θ ´ pαrθ1s ´ αrθsqp y λt´1 ´ θ1q ` αrθspθ1 ´ θq ¯ .\nTaking the norm on both sides of the previous display,\n∥∥∥∥θ1 ` 1 2 vKpθ1, λt´1, λtq ´ θ ´ 1 2 vKpθ, λt´1, λtq ∥∥∥∥ 2 ď 1` αrθs 2 ∥∥θ1 ´ θ∥∥ 2 ` |αrθ 1s ´ αrθs| 2 ∥∥∥∥ y λt´1 ´ θ1 ∥∥∥∥ 2 .\nNow, reminding that x ÞÑ pxq` is a 1-Lipschitz function, ∣∣αrθ1s ´ αrθs∣∣ ď\n∣∣∣∣∣ x yλt´1 ´ θ1, yλt ´ θ1y ‖ yλt´1 ´ θ1‖22 ´ x yλt´1 ´ θ, yλt ´ θy ‖ yλt´1 ´ θ‖22 ∣∣∣∣∣\n“ ∣∣∣∣∣ x yλt´1 ´ θ1, yλt ´ yλt´1 y ‖ yλt´1 ´ θ1‖22 ` 1´ x yλt´1 ´ θ, yλt ´ yλt´1 y ‖ yλt´1 ´ θ‖22 ´ 1 ∣∣∣∣∣ “ ∣∣∣∣∣ x‖ yλt´1 ´ θ‖22p yλt´1 ´ θ1q ´ ‖ yλt´1 ´ θ1‖22p yλt´1 ´ θq, yλt ´ yλt´1 y\n‖ yλt´1 ´ θ1‖22‖ yλt´1 ´ θ‖22\n∣∣∣∣∣\nď ∥∥∥ yλt ´ yλt´1 ∥∥∥ 2\n‖ yλt´1 ´ θ1‖22‖ yλt´1 ´ θ‖22 ´ ‖ y λt´1 ´ θ1‖2 ∣∣∣∣‖ y λt´1 ´ θ‖22 ´ ‖ y λt´1 ´ θ1‖22 ∣∣∣∣` ∥∥θ ´ θ1∥∥ 2 ‖ y λt´1 ´ θ1‖22 ¯\nď ∥∥∥ yλt ´ yλt´1 ∥∥∥ 2\n‖ yλt´1 ´ θ1‖2‖ yλt´1 ´ θ‖22 ´ 2‖ y λt´1 ´ θ 1 ` θ 2 ‖2‖θ ´ θ1‖2 ` ∥∥θ ´ θ1∥∥ 2 ‖ y λt´1 ´ θ1‖2 ¯\nď ∥∥∥ yλt ´ yλt´1 ∥∥∥ 2 ‖θ ´ θ1‖2\n‖ yλt´1 ´ θ1‖2‖ yλt´1 ´ θ‖22 ´ 2‖ y λt´1 ´ θ‖2 ` ∥∥θ ´ θ1∥∥ 2 ` ‖ y λt´1 ´ θ‖2 ` ∥∥θ ´ θ1∥∥ 2 ¯ . (25)\nwhere the second inequality comes from the triangle inequality and the Cauchy-Schwartz Inequality, and the\nthird is obtained by factorizing the difference of squares. Plugging this in the former, we get:\n∥∥∥θ1 ` 1 2 vKpθ1,λt´1, λtq ´ θ ´ 1 2 vKpθ, λt´1, λtq ∥∥∥ 2\nď 1` αrθs 2 ∥∥θ1 ´ θ∥∥ 2 ` 1 2\n∥∥∥ yλt ´ yλt´1 ∥∥∥ 2 ‖θ ´ θ1‖2\n‖ yλt´1 ´ θ‖22 ´ 3 ∥∥∥∥ y λt´1 ´ θ ∥∥∥∥ 2 ` 2 ∥∥θ ´ θ1∥∥ 2 ¯ .\nOne could check that there exists θ1 P Bpθ, rλt´1q satisfying θ̂pλtq P B ` θ1` 12vKpθ1, λt´1, λtq, 12 ∥∥vKpθ1, λt´1, λtq ∥∥ 2 ˘ and so combining the last inequality with (25)\n∥∥∥∥θ̂pλtq ´ θ ´ 1 2 vKpθ, λt´1, λtq ∥∥∥∥ 2 ď ∥∥∥∥θ̂pλtq ´ θ1 ´ 1 2 vKpθ1, λt´1, λtq ∥∥∥∥ 2\n` ∥∥∥θ1 ` 1\n2 vKpθ1, λt´1, λtq ´ θ ´ 1 2 vKpθ, λt´1, λtq ∥∥∥ 2\nď |1´ αrθs|` 1` αrθs 2 rλt´1 ` 1 2 ∥∥∥∥ y λt ´ θ ´ αrθsp y λt´1 ´ θq ∥∥∥∥ 2\n` ∥∥∥ yλt ´ yλt´1 ∥∥∥ 2 rλt´1\n2‖ yλt´1 ´ θ‖22 ´ 3 ∥∥∥∥ y λt´1 ´ θ ∥∥∥∥ 2 ` 2rλt´1 ¯"
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2015,
    "abstractText" : "<lb>High dimensional regression benefits from sparsity promoting regularizations. Screening rules leverage<lb>the known sparsity of the solution by ignoring some variables in the optimization, hence speeding up<lb>solvers. When the procedure is proven not to discard features wrongly the rules are said to be safe. In<lb>this paper we derive new safe rules for generalized linear models regularized with `1 and<lb>`1{`2 norms.<lb>The rules are based on duality gap computations and spherical safe regions whose diameters converge to<lb>zero. This allows to discard safely more variables, in particular for low regularization parameters. The<lb>GAP Safe rule can cope with any iterative solver and we illustrate its performance on coordinate descent<lb>for multi-task Lasso, binary and multinomial logistic regression, demonstrating significant speed ups on<lb>all tested datasets with respect to previous safe rules.",
    "creator" : "LaTeX with hyperref package"
  }
}