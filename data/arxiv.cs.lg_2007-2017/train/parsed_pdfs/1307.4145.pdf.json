{
  "name" : "1307.4145.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "A Safe Screening Rule for Sparse Logistic Regression",
    "authors" : [ "Jie Wang", "Jiayu Zhou", "Jun Liu", "Peter Wonka", "Jieping Ye" ],
    "emails" : [ ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "Logistic regression (LR) is a popular and well established classification method that has been widely used in many domains such as machine learning [5, 8], text mining [4, 9], image processing [10, 17], bioinformatics [1, 15, 22, 30, 31], medical and social sciences [2, 19] etc. When the number of feature variables is large compared to the number of training samples, logistic regression is prone to over-fitting. To reduce overfitting, regularization has been shown to be a promising approach. Typical examples include `2 and `1 regularization. Although `1 regularized LR is more challenging to solve compared to `2 regularized LR, it has received much attention in the last few years and the interest in it is growing [23, 27, 31] due to the increasing prevalence of high-dimensional data. The most appealing property of `1 regularized LR is the sparsity of the resulting models, which is equivalent to feature selection.\nIn the past few years, many algorithms have been proposed to efficiently solve the `1 regularized LR [6, 14, 13, 20]. However, for large-scale problems, solving the `1 regularized LR with higher accuracy remains challenging. One promising solution is by “screening”, that is, we first identify the “inactive” features, which have 0 coefficients in the solution and then discard them from the optimization. This would result in a reduced feature matrix and substantial savings in computational cost and memory size. In [7], El Ghaoui et al. proposed novel screening rules, called “SAFE”, to accelerate the optimization for a class of `1 regularized problems, including LASSO [25], `1 regularized LR and `1 regularized support vector machines. Inspired by SAFE, Tibshirani et al. [24] proposed “strong rules” for a large class of `1 regularized problems, including LASSO, elastic net, `1 regularized LR and more general convex problems. In [29, 28], Xiang et al. proposed “DOME” rules to further improve SAFE rules for LASSO based on the observation that SAFE rules can be understood as a special case of the general “sphere test”. Although both strong rules and the sphere tests are more effective in discarding features than SAFE for solving\nar X\niv :1\n30 7.\n41 45\nv2 [\ncs .L\nG ]\n1 8\nJu l 2\n01 3\nLASSO, it is worthwhile to mention that strong rules may mistakenly discard features that have non-zero coefficients in the solution and the sphere tests are not easy to be generalized to handle the `1 regularized LR. To the best of our knowledge, the SAFE rule is the only screening test for the `1 regularized LR that is “safe”, that is, it only discards features that are guaranteed to be absent from the resulting models.\nIn this paper, we develop novel screening rules, called “Slores”, for the `1 regularized LR. The proposed screening tests detect inactive features by estimating an upper bound of the inner product between each feature vector and the “dual optimal solution” of the `1 regularized LR, which is unknown. The more accurate the estimation is, the more inactive features can be detected. An accurate estimation of such an upper bound turns out to be quite challenging. Indeed most of the key ideas/insights behind existing “safe” screening rules for LASSO heavily rely on the least square loss, which are not applicable for the `1 regularized LR case due to the presence of the logistic loss. To this end, we propose a novel framework to accurately estimate an upper bound. Our key technical contribution is to formulate the estimation of an upper bound of the inner product as a constrained convex optimization problem and show that it admits a closed form solution. Therefore, the\nestimation of the inner product can be computed efficiently. Our extensive experiments have shown that Slores discards far more features than SAFE yet requires much less computational efforts. In contrast with strong rules, Slores is “safe”, i.e., it never discards features which have non-zero coefficients in the solution. To illustrate the effectiveness of Slores, we compare Slores, strong rule and SAFE on a data set of prostate cancer along a sequence of 86 parameters equally spaced on the λ/λmax scale from 0.1 to 0.95, where λ is the parameter for the `1 penalty and λmax is the smallest tuning parameter [12] such that the solution of the `1 regularized LR is 0 [please refer to Eq. (1)]. The data matrix contains 132 patients with 15154 features. To measure the performance of different screening rules, we compute the rejection ratio which is the ratio between the number of features discarded by screening rules and the number of features with 0 coefficients in the solution. Therefore, the larger the rejection ratio is, the more effective the screening rule is. The results are shown in Fig. 1. Clearly, Slores discards far more features than SAFE especially when λ/λmax is large while the strong rule is not applicable when λ/λmax ≤ 0.5. We present more experimental results and discussions to demonstrate the effectiveness of Slores in Section 6."
    }, {
      "heading" : "2 Basics and Motivations",
      "text" : "In this section, we briefly review the basics of the `1 regularized LR and then motivate the general screening rules via the KKT conditions. Suppose we are given a set of training samples {xi}mi=1 and the associate labels b ∈ <m, where xi ∈ <p and bi ∈ {1,−1} for all i ∈ {1, . . . ,m}. The `1 regularized logistic regression is:\nmin β,c\n1\nm m∑ i=1 log(1 + exp(−〈β, x̄i〉 − bic)) + λ‖β‖1, (LRPλ)\nwhere β ∈ <p and c ∈ < are the model parameters to be estimated, x̄i = bixi, and λ > 0 is the tuning parameter. Let the data matrix be X ∈ <m×p with the ith row being x̄i and the jth column being x̄j .\nLet C = {θ ∈ <m : θi ∈ (0, 1), i = 1, . . . ,m} and f(y) = y log(y) + (1 − y) log(1 − y) for y ∈ (0, 1). The dual problem of (LRPλ) (please refer to the supplement) is given by\nmin θ\n{ g(θ) = 1\nm m∑ i=1 f(θi) : ‖X̄T θ‖∞ ≤ mλ, 〈θ,b〉 = 0, θ ∈ C\n} . (LRDλ)\nTo simplify notations, we denote the feasible set of problem (LRDλ) as Fλ, and let (β∗λ, c∗λ) and θ∗λ be the optimal solutions of problems (LRPλ) and (LRDλ) respectively. In [12], the authors have shown that for some special choice of the tuning parameter λ, both of (LRPλ) and (LRDλ) have closed form solutions. In fact, let P = {i : bi = 1}, N = {i : bi = −1}, and m+ and m− be the cardinalities of P and N respectively. We define\nλmax = 1 m‖X̄ T θ∗λmax‖∞, (1)\nwhere\n[θ∗λmax ]i =\n{ m−\nm , if i ∈ P, m+\nm , if i ∈ N , i = 1, . . . ,m. (2)\n([·]i denotes the ith component of a vector.) Then, it is known [12] that β∗λ = 0 and θ∗λ = θ∗λmax whenever λ ≥ λmax. When λ ∈ (0, λmax], it is known that (LRDλ) has a unique optimal solution. (For completeness, we include the proof in the supplement.) We can now write the KKT conditions of problems (LRPλ) and (LRDλ) as\n〈θ∗λ, x̄j〉 ∈  mλ, if [β∗λ]j > 0,\n−mλ, if [β∗λ]j < 0, [−mλ,mλ], if [β∗λ]j = 0. j = 1, . . . , p. (3)\nIn view of Eq. (3), we can see that\n|〈θ∗λ, x̄j〉| < mλ⇒ [β∗λ]j = 0. (R1)\nIn other words, if |〈θ∗λ, x̄j〉 < mλ, then the KKT conditions imply that the coefficient of x̄j in the solution β∗λ is 0 and thus the j\nth feature can be safely removed from the optimization of (LRPλ). However, for the general case in which λ < λmax, (R1) is not applicable since it assumes the knowledge of θ ∗ λ. Although it is unknown, we can still estimate a region Aλ which contains θ∗λ. As a result, if maxθ∈A |〈θ, x̄j〉| < mλ, we can also conclude that [β∗λ]j = 0 by (R1). In other words, (R1) can be relaxed as\nT (θ∗λ, x̄ j) := max θ∈Aλ |〈θ, x̄j〉| < mλ⇒ [β∗λ]j = 0. (R1′)\nIn this paper, (R1′) serves as the foundation for constructing our screening rules, Slores. From (R1′), it is easy to see that screening rules with smaller T (θ∗λ, x̄\nj) are more aggressive in discarding features. To give a tight estimation of T (θ∗λ, x̄\nj), we need to restrict the region Aλ which includes θ∗λ as small as possible. In Section 3, we show that the estimation of the upper bound T (θ∗λ, x̄\nj) can be obtained via solving a convex optimization problem. We show in Section 4 that the convex optimization problem admits a closed form solution and derive Slores in Section 5 based on (R1′)."
    }, {
      "heading" : "3 Estimating the Upper Bound via Solving a Convex Optimiza-",
      "text" : "tion Problem\nIn this section, we present a novel framework to estimate an upper bound T (θ∗λ, x̄ j) of |〈θ∗λ, x̄j〉|. In the subsequent development, we assume a parameter λ0 and the corresponding dual optimal θ ∗ λ0\nare given. In our Slores rule to be presented in Section 5, we set λ0 and θ ∗ λ0 to be λmax and θ ∗ λmax given in Eqs. (1) and (2). We formulate the estimation of T (θ∗λ, x̄ j) as a constrained convex optimization problem in this section, which will be shown to admit a closed form solution in Section 4. For the dual function g(θ), it follows that [∇g(θ)]i = 1m log( θi 1−θi ), [∇ 2g(θ)]i,i = 1 m 1 θi(1−θi) ≥ 4 m . Since ∇2g(θ) is a diagonal matrix, it follows that ∇2g(θ) 4mI, where I is the identity matrix. Thus, g(θ) is strongly convex with modulus µ = 4m [18]. Rigorously, we have the following lemma.\nLemma 1. Let λ > 0 and θ1, θ2 ∈ Fλ, then\na). g(θ2)− g(θ1) ≥ 〈∇g(θ1), θ2 − θ1〉+ 2m‖θ2 − θ1‖ 2 2. (4)\nb). If θ1 6= θ2, the inequality in (4) becomes a strict inequality, i.e., “≥” becomes “>”.\nGiven λ ∈ (0, λ0], it is easy to see that both of θ∗λ and θ∗λ0 belong to Fλ0 . Therefore, Lemma 1 can be a useful tool to bound θ∗λ with the knowledge of θ ∗ λ0 . In fact, we have the following theorem.\nTheorem 2. Let λmax ≥ λ0 > λ > 0, then the following holds:\na). ‖θ∗λ − θ∗λ0‖ 2 2 ≤\nm\n2\n[ g ( λ λ0 θ∗λ0 ) − g(θ∗λ0) + ( 1− λλ0 ) 〈∇g(θ∗λ0), θ ∗ λ0〉 ]\n(5)\nb). If θ∗λ 6= θ∗λ0 , the inequality in (5) becomes a strict inequality, i.e., “≤” becomes “<”. Proof. a). It is easy to see that Fλ ⊆ Fλ0 , θ∗λ ∈ Fλ and θ∗λ0 ∈ Fλ0 . Therefore, both of θ ∗ λ0\nand θ∗λ belong to the set Fλ0 . By Lemma 1, we have\n‖θ∗λ − θ∗λ0‖ 2 2 ≤ m2 [ g(θ∗λ)− g(θ∗λ0) + 〈∇g(θ ∗ λ0), θ ∗ λ0 − θ ∗ λ〉 ] . (6)\nLet θλ = λ λ0 θ∗λ0 . It is easy to see that\nθλ ∈ C, ‖X̄T θλ‖∞ = λλ0 ‖X̄ T θ∗λ0‖∞ ≤ mλ, 〈θλ,b〉 = λ λ0 〈θ∗λ0 ,b〉 = 0.\nTherefore, we can see that θλ ∈ Fλ and thus\ng(θ∗λ) = min θ∈Fλ g(θ) ≤ g(θλ) = g ( λ λ0 θ∗λ0 ) .\nThen the inequality in (6) becomes\n‖θ∗λ − θ∗λ0‖ 2 2 ≤ m2 [ g ( λ λ0 θ∗λ0 ) − g(θ∗λ0) + 〈∇g(θ ∗ λ0), θ ∗ λ0 − θ ∗ λ〉 ] . (7)\nOn the other hand, by noting that (LRDλ) is feasible, we can see that the Slater’s conditions holds and thus the KKT conditions [21] lead to:\n0 ∈ ∇g(θ∗λ) + p∑ j=1 η+j x̄ j + p∑ j′=1 η−i (−x̄ i) + γb +NC(θ ∗ λ), (8)\nwhere η+, η− ∈ <p+, γ ∈ < and NC(θ∗λ) is the normal cone of C at θ∗λ [21]. Because θ∗λ ∈ C and C is an open set, θ∗λ is an interior point of C and thus NC(θ∗λ) = ∅ [21]. Therefore, Eq. (8) becomes:\n∇g(θ∗λ) + p∑ j=1 η+j x̄ j + p∑ j′=1 η−j′ (−x̄ j′) + γb = 0. (9)\nLet I+λ0 = {j : 〈θ ∗ λ0 , x̄j〉 = mλ0, j = 1, . . . , p}, I−λ0 = {j ′ : 〈θ∗λ0 , x̄ j′〉 = −mλ0, j = 1, . . . , p} and Iλ0 = I+λ0 ∪ I − λ0 . We can see that I+λ0 ∩ I − λ0\n= ∅. By the complementary slackness condition, if k /∈ Iλ0 , we have η+k = η − k = 0. Therefore,\n〈∇g(θ∗λ0), θ ∗ λ0〉+ ∑ j∈I+λ0 η+j 〈θ ∗ λ0 , x̄ j〉+ ∑ j′∈I−λ0 η−j′ 〈θ ∗ λ0 ,−x̄ j′〉+ γ〈θ∗λ0 ,b〉 = 0\n⇔− 1mλ0 〈∇g(θ ∗ λ0), θ ∗ λ0〉 = ∑ j∈I+λ0 η+j + ∑ j′∈I−λ0 η−j′\nSimilarly, we have\n〈∇g(θ∗λ0), θ ∗ λ〉+ ∑ j∈I+λ0 η+j 〈θ ∗ λ, x̄ j〉+ ∑ j′∈I−λ0 η−j′ 〈θ ∗ λ,−x̄j ′ 〉+ γ〈θ∗λ,b〉 = 0\n⇔− 〈∇g(θ∗λ0), θ ∗ λ〉 = ∑ j∈I+λ0 η+j 〈θ ∗ λ, x̄ j〉+ ∑ j′∈I−λ0 η−j′ 〈θ ∗ λ,−x̄j ′ 〉\n≤ ∑ j∈I+λ0 η+j |〈θ ∗ λ, x̄ j〉|+ ∑ j′∈I−λ0 η−j′ |〈θ ∗ λ,−x̄j ′ 〉|\n≤ mλ { ∑ j∈I+λ0 η+j + ∑ j′∈I−λ0 η−j′ } = − λλ0 〈g(θ ∗ λ0), θ ∗ λ0〉\nRecall (7), the inequality in (5) follows. b). The proof is the same as part a) by noting part b) of Lemma 1.\nTheorem 2 implies that θ∗λ is inside a ball centred at θ ∗ λ0 with radius\nr = √ m 2 [ g ( λ λ0 θ∗λ0 ) − g(θ∗λ0) + (1− λ λ0 )〈∇g(θ∗λ0), θ ∗ λ0 〉 ] . (10)\nRecall that to make our screening rules more aggressive in discarding features, we need to get a tight upper bound T (θ∗λ, x̄\nj) of |〈θ∗λ, x̄j〉| [please see (R1′)]. Thus, it is desirable to further restrict the possible region Aλ of θ∗λ. Clearly, we can see that\n〈θ∗λ,b〉 = 0 (11)\nsince θ∗λ is feasible for problem (LRDλ). On the other hand, we call the set Iλ0 defined in the proof of Theorem 2 the “active set” of θ∗λ0 . In fact, we have the following lemma for the active set. Lemma 3. Given the optimal solution θ∗λ of problem (LRDλ), the active set Iλ = {j : |〈θ∗λ, x̄j〉| = mλ, j = 1, . . . , p} is not empty if λ ∈ (0, λmax].\nSince λ0 ∈ (0, λmax], we can see that Iλ0 is not empty by Lemma 3. We pick j0 ∈ Iλ0 and set\nx̄∗ = sign(〈θ∗λ0 , x̄ j0〉)x̄j0 . (12)\nIt follows that 〈x̄∗, θ∗λ0〉 = mλ0. Due to the feasibility of θ ∗ λ for problem (LRDλ), θ ∗ λ satisfies\n〈θ∗λ, x̄∗〉 ≤ mλ. (13)\nAs a result, Theorem 2, Eq. (11) and (13) imply that θ∗λ is contained in the following set:\nAλλ0 := {θ : ‖θ − θ ∗ λ0‖ 2 2 ≤ r2, 〈θ,b〉 = 0, 〈θ, x̄∗〉 ≤ mλ}.\nSince θ∗λ ∈ Aλλ0 , we can see that |〈θ ∗ λ, x̄ j〉| ≤ maxθ∈Aλλ0 |〈θ, x̄ j〉|. Therefore, (R1′) implies that if\nT (θ∗λ, x̄ j ; θ∗λ0) := max θ∈Aλλ0 |〈θ, x̄j〉| (UBP)\nis smaller than mλ, we can conclude that [β∗λ]j = 0 and x̄ j can be discarded from the optimization of (LRPλ). Notice that, we replace the notations Aλ and T (θ∗λ, x̄j) with T (θ∗λ, x̄j ; θ∗λ0) and A λ λ0 to emphasize their dependence on θ∗λ0 . Clearly, as long as we can solve for T (θ ∗ λ, x̄ j ; θ∗λ0), (R1 ′) would be an applicable screening rule to discard features which have 0 coefficients in β∗λ. We give a closed form solution of problem (42) in the next section."
    }, {
      "heading" : "4 Solving the Convex Optimization Problem (UBP)",
      "text" : "In this section, we show how to solve the convex optimization problem (42) based on the standard Lagrangian multiplier method. We first transform problem (42) into a pair of convex minimization problem (UBP′) via Eq. (15) and then show that the strong duality holds for (UBP′) in Lemma 6. The strong duality guarantees the applicability of the Lagrangian multiplier method. We then give the closed form solution of (UBP′) in Theorem 8. After we solve problem (UBP′), it is straightforward to compute the solution of problem (42) via Eq. (15).\nBefore we solve (42) for the general case, it is worthwhile to mention a special case in which Px̄j = x̄j − 〈x̄j ,b〉 ‖b‖22 b = 0. Clearly, P is the projection operator which projects a vector onto the orthogonal complement of the space spanned by b. In fact, we have the following theorem.\nTheorem 4. Let λmax ≥ λ0 > λ > 0, and assume θ∗λ0 is known. For j ∈ {1, . . . , p}, if Px̄ j = 0, then T (θ∗λ, x̄ j ; θ∗λ0) = 0.\nBecause of (R1′), we immediately have the following corollary.\nCorollary 5. Let λ ∈ (0, λmax) and j ∈ {1, . . . , p}. If Px̄j = 0, then [β∗λ]j = 0.\nFor the general case in which Px̄j 6= 0, let\nT+(θ ∗ λ, x̄ j ; θ∗λ0) := max θ∈Aλλ0 〈θ,+x̄j〉, T−(θ∗λ, x̄j ; θ∗λ0) := max θ∈Aλλ0 〈θ,−x̄j〉. (14)\nClearly, we have\nT (θ∗λ, x̄ j ; θ∗λ0) = max{T+(θ ∗ λ, x̄ j ; θ∗λ0), T−(θ ∗ λ, x̄ j ; θ∗λ0)}. (15)\nTherefore, we can solve problem (42) by solving the two sub-problems in (14). Let ξ ∈ {+1,−1}. Then problems in (14) can be written uniformly as\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = max θ∈Aλλ0 〈θ, ξx̄j〉. (UBPs)\nTo make use of the standard Lagrangian multiplier method, we transform problem (UBPs) to the following minimization problem:\n−Tξ(θ∗λ, x̄j ; θ∗λ0) = min θ∈Aλλ0 〈θ,−ξx̄j〉 (UBP′)\nby noting that maxθ∈Aλλ0 〈θ, ξx̄j〉 = −minθ∈Aλλ0 〈θ,−ξx̄ j〉.\nLemma 6. Let λmax ≥ λ0 > λ > 0 and assume θ∗λ0 is known. The strong duality holds for problem (UBP ′). Moreover, problem (UBP′) admits an optimal solution in Aλλ0 .\nBecause the strong duality holds for problem (UBP′) by Lemma 6, the Lagrangian multiplier method is applicable for (UBP′). In general, we need to first solve the dual problem and then recover the optimal solution of the primal problem via KKT conditions. Recall that r and x̄∗ are defined by Eq. (10) and (12) respectively. Lemma 7 derives the dual problems of (UBP′) for different cases.\nLemma 7. Let λmax ≥ λ0 > λ > 0 and assume θ∗λ0 is known. For j ∈ {1, . . . , p} and Px̄ j 6= 0, let x̄ = −ξx̄j. Denote\nU1 = {(u1, u2) : u1 > 0, u2 ≥ 0} and U2 = { (u1, u2) : u1 = 0, u2 = − 〈Px̄,Px̄ ∗〉\n‖Px̄∗‖22\n} .\na). If 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ (−1, 1], the dual problem of (UBP ′) is equivalent to:\nmax (u1,u2)∈U1\nḡ(u1, u2) = − 12u1 ‖Px̄ + u2Px̄ ∗‖22 + u2m(λ0 − λ) + 〈θ∗λ0 , x̄〉 − 1 2u1r 2. (UBD′)\nMoreover, ḡ(u1, u2) attains its maximum in U1. b). If 〈Px̄,Px̄\n∗〉 ‖Px̄‖2‖Px̄∗‖2 = −1, the dual problem of (UBP ′) is equivalent to:\nmax (u1,u2)∈U1∪U2 ḡ(u1, u2) = { ḡ(u1, u2), if (u1, u2) ∈ U1, − ‖Px̄‖2‖Px̄∗‖2mλ, if (u1, u2) ∈ U2.\n(UBD′′)\nWe can now solve problem (UBP′) in the following theorem.\nTheorem 8. Let λmax ≥ λ0 > λ > 0, d = m(λ0−λ)r‖Px̄∗‖2 and assume θ ∗ λ0 is known. For j ∈ {1, . . . , p} and Px̄j 6= 0, let x̄ = −ξx̄j.\na). If 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ≥ d, then Tξ(θ ∗ λ, x̄ j ; θ∗λ0) = r‖Px̄‖2 − 〈θ ∗ λ0 , x̄〉; (16)\nb). If 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 < d, then\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = r‖Px̄ + u ∗ 2Px̄ ∗‖2 − u∗2m(λ0 − λ)− 〈θ∗λ0 , x̄〉, (17)\nwhere\nu∗2 = −a1 +\n√ ∆\n2a2 , (18)\na2 = ‖Px̄∗‖42(1− d2), a1 = 2〈Px̄,Px̄∗〉‖Px̄∗‖22(1− d2), a0 = 〈Px̄,Px̄∗〉2 − d2‖Px̄‖22‖Px̄∗‖22, ∆ = a21 − 4a2a0 = 4d2(1− d2)‖Px̄∗‖42(‖Px̄‖22‖Px̄∗‖22 − 〈Px̄,Px̄∗〉2).\nNotice that, although the dual problems of (UBP′) in Lemma 7 are different, the resulting upper bound Tξ(θ ∗ λ, x̄ j ; θ∗λ0) can be given by Theorem 8 in a uniform way. The tricky part is how to deal with the extremal cases in which 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ {−1,+1}. To avoid the lengthy discussion of Theorem 8, we omit the proof in the main text and include the details in the supplement."
    }, {
      "heading" : "5 The proposed Slores Rule for `1 Regularized Logistic Regression",
      "text" : "Using (R1′), we are now ready to construct the screening rules for the `1 Regularized Logistic Regression. By Corollary 5, we can see that the orthogonality between the jth feature and the response vector b implies the absence of x̄j from the resulting model. For the general case in which Px̄j 6= 0, (R1′) implies that if T (θ∗λ, x̄ j ; θ∗λ0) = max{T+(θ ∗ λ, x̄ j ; θ∗λ0), T−(θ ∗ λ, x̄ j ; θ∗λ0)} < mλ, then the j th feature can be discarded from the optimization of (LRPλ). Notice that, letting ξ = ±1, T+(θ∗λ, x̄j ; θ∗λ0) and T−(θ ∗ λ, x̄\nj ; θ∗λ0) have been solved by Theorem 8. Rigorously, we have the following theorem.\nTheorem 9 (Slores). Let λ0 > λ > 0 and assume θ ∗ λ0 is known.\n1. If λ ≥ λmax, then β∗λ = 0;\n2. If λmax ≥ λ0 > λ > 0 and either of the following holds:\n(a) Px̄j = 0,\n(b) max{Tξ(θ∗λ, x̄j ; θ∗λ0) : ξ = ±1} < mλ,\nthen [β∗λ]j = 0.\nBased on Theorem 9, we construct the Slores rule as summarized below in Algorithm 1.\nAlgorithm 1 R = Slores(X,b, λ, λ0, θ∗λ0) Initialize R := {1, . . . , p}; if λ ≥ λmax then\nset R = ∅; else\nfor j = 1 to p do\nif Px̄j = 0 then remove j from R; else if max{Tξ(θ∗λ, x̄j ; θ∗λ0) : ξ = ±1} < mλ then remove j from R;\nend if end for\nend if Return: R\nNotice that, the output R of Slores is the indices of the features that need to be entered to the optimization. As a result, suppose the output of Algorithm 1 is R = {j1, . . . , jk}, we can substitute the full matrix X in problem (LRPλ) with the submatrix XR = (x̄\nj1 , . . . , x̄jk) and just solve for [β∗λ]R and c∗λ.\nOn the other hand, Algorithm 1 implies that Slores needs five inputs. Since X and b come with the data and λ is chosen by the user, we only need to specify θ∗λ0 and λ0. In other words, we need to provide Slores with an dual optimal solution of problem (LRDλ) for an arbitrary parameter. A natural choice is by setting λ0 = λmax and θ ∗ λ0\n= θ∗λmax given in Eq. (1) and Eq. (2)."
    }, {
      "heading" : "6 Experiments",
      "text" : "We evaluate our screening rules using the newgroup data set [12] and Yahoo web pages data sets [26]. The newgroup data set is cultured from the data by Koh et al. [12]. The Yahoo data sets include 11 top-level categories, each of which is further divided into a set of subcategories. In our experiment we construct five balanced binary classification datasets from the topics of Computers, Education, Health, Recreation, and Science. For each topic, we choose samples from one subcategory as the positive class and randomly sample an equal number of samples from the rest of subcategories as the negative class. The statistics of the data sets are given in Table 1.\nWe compare the performance of Slores and the strong rule which achieves state-of-the-art performance for `1 regularized LR. We do not include SAFE because it is less effective in discarding features than strong rules and requires much higher computational time [24]. Fig. 1 has shown the performance of Slores, strong rule and SAFE. We compare the efficiency of the three screening rules on the same prostate cancer data set in Table 2. All of the screening rules are tested along a sequence of 86 parameter values equally spaced on the λ/λmax scale from 0.1 to 0.95. We repeat the procedure 100 times and during each time we undersample 80% of the data. We report the total running time of the three screening rules over the 86 values of λ/λmax in Table 2. For reference, we also report the total\nrunning time of the solver1. We observe that the running time of Slores and strong rule is negligible compared to that of the solver. However, SAFE takes much longer time even than the solver.\n1In this paper, the ground truth is computed by SLEP [16].\nIn Section 6.1, we evaluate the performance of Slores and strong rule. Recall that we use the rejection ratio, i.e., the ratio between the number of features discarded by the screening rules and the number of features with 0 coefficients in the solution, to measure the performance of screening rules. Note that, because no features with non-zero coefficients in the solution would be mistakenly discarded by Slores, its rejection ratio is no larger than one. We then compare the efficiency of Slores and strong rule in Section 6.2.\nThe experiment settings are as follows. For each data set, we undersample 80% of the date and run Slores and strong rules along a sequence of 86 parameter values equally spaced on the λ/λmax scale from 0.1 to 0.95. We repeat the procedure 100 times and report the average performance and running time at each of the 86 values of λ/λmax. Slores, strong rules and SAFE are all implemented in Matlab. All of the experiments are carried out on a Intel(R) (i7-2600) 3.4Ghz processor."
    }, {
      "heading" : "6.1 Comparison of Performance",
      "text" : "In this experiment, we evaluate the performance of the Slores and the strong rule via the rejection ratio. Fig. 2 shows the rejection ratio of Slores and strong rule on six real data sets. When λ/λmax > 0.5, we can see that both Slores and strong rule are able to identify almost 100% of the inactive features, i.e., features with 0 coefficients in the solution vector. However, when λ/λmax ≤ 0.5, strong rule can not detect the inactive features. In contrast, we observe that Slores exhibits much stronger capability in discarding inactive features for small λ, even when λ/λmax is close to 0.1. Taking the data point at which λ/λmax = 0.1 for example, Slores discards about 99% inactive features for the newsgroup data set. For the other data sets, more than 80% inactive features are identified by Slores. Therefore, in terms of rejection ratio, Slores significantly outperforms the strong rule. It is also worthwhile to mention that the discarded features by Slores are guaranteed to have 0 coefficients in the solution. But strong rule may mistakenly discard features which have non-zero coefficients in the solution."
    }, {
      "heading" : "6.2 Comparison of Efficiency",
      "text" : "We compare efficiency of Slores and the strong rule in this experiment. The data sets for evaluating the rules are the same as Section 6.1. The running time of the screening rules reported in Fig. 3 includes the computational cost of the rules themselves and that of the solver after screening. We plot the running time of the screening rules against that of the solver without screening. As indicated by Fig. 2, when λ/λmax > 0.5, Slores and strong rule discards almost 100% of the inactive features. As a result, the size of the feature matrix involved in the optimization of problem (LRPλ) is greatly reduced. From Fig. 3, we can observe that the efficiency is improved by about one magnitude on average compared to that of the solver without screening. However, when λ/λmax < 0.5, strong rule can not identify any inactive features and thus the running time is almost the same as that of the solver without screening. In contrast, Slores is still able to identify more than 80% of the inactive features for the data sets cultured from the Yahoo web pages data sets and thus the efficiency is improved by roughly 5 times. For the newgroup data set, about 99% inactive features are identified by Slores which leads to about 10 times savings in running time. These results demonstrate the power of the proposed Slores rule in improving the efficiency of solving the `1 regularized LR."
    }, {
      "heading" : "7 Conclusions",
      "text" : "In this paper, we propose novel screening rules to effectively discard features for `1 regularized LR. Extensive numerical experiments on real data demonstrate that Slores outperforms the existing state-of-the-art screening rules. We plan to extend the framework of Slores to more general sparse formulations, including convex ones, like group Lasso, fused Lasso, `1 regularized SVM, and non-convex ones, like `p regularized problems where 0 < p < 1."
    }, {
      "heading" : "A Deviation of the Dual Problem of the Sparse Logistic Regres-",
      "text" : "sion\nSuppose we are given a set of training samples {xi}mi=1 and the associate labels b ∈ <m, where xi ∈ <p and bi ∈ {1,−1} for all i ∈ {1, . . . ,m}. The logistic regression problem takes the form as follows:\nmin β,c\n1\nm m∑ i=1 log(1 + exp(−〈β, x̄i〉 − bic)) + λ‖β‖1,\nwhere β ∈ <p and c ∈ < are the model parameters to be estimated, x̄i = bixi and λ > 0. Let X̄ denote the data matrix whose rows consist of x̄i. Denote the columns of X̄ as x̄ j , j ∈ {1, . . . , p}.\nA.1 Dual Formulation\nBy introducing the slack variables qi = 1 m (−〈β, x̄i〉 − bic) for all i ∈ {1, . . . ,m}, problem (LRPλ) can be formulated as:\nmin β,c\n1\nm m∑ i=1 log [ 1 + exp(mqi) ] + λ‖β‖1, (19)\ns.t. qi = 1\nm (−〈β, x̄i〉 − bic), i ∈ {1, . . . ,m}.\nThe Lagrangian is\nL(q, β, c; θ) = 1\nm m∑ i=1 log [ 1 + exp(mqi) ] + λ‖β‖1 + m∑ i=1 θi [ 1 m (−〈β, x̄i〉 − bic)− qi ]\n(20)\n= 1\nm m∑ i=1 log [ 1 + exp(mqi) ] − 〈θ,q〉+ λ‖β‖1 − 1 m 〈 m∑ i=1 θix̄i, β〉 − c m 〈θ,b〉\nIn order to find the dual function, we need to solve the following subproblems:\nmin q f1(q) =\n1\nm m∑ i=1 log [ 1 + exp(mqi) ] − 〈θ,q〉, (21)\nmin β f2(β) = λ‖β‖1 −\n1 m 〈 m∑ i=1 θix̄i, β〉, (22)\nmin c f3(c) = −\nc\nm 〈θ,b〉. (23)\nConsider f1(q). It is easy to see\n[∇f1(q)]i = exp(mqi)\n1 + exp(mqi) − θi.\nBy setting [∇f1(q)]i = 0, we get\nexp(mq′i) = θi\n1− θi , q′i =\n1 m log( θi 1− θi ).\nClearly, we can see that θi ∈ (0, 1) for all i ∈ {1, . . . ,m}. Therefore,\nmin q f1(q) = f1(q ′) = − 1 m m∑ i=1 [ θi log(θi) + (1− θi) log(1− θi) ] .\nConsider f2(β) and let β ′ = argminβ f2(β). The optimality condition is\n0 ∈ λv − 1 m θix̄i, ‖v‖∞ ≤ 1, 〈v, β′〉 = ‖β′‖1.\nIt is easy to see that\n〈 1 m m∑ i=1 θix̄i, β ′〉 = ‖β′‖1,\nand thus\n〈θ, x̄j〉 ∈  mλ, if β′j > 0,\n−mλ, if β′j < 0, [−mλ,mλ], if β′j = 0.\nMoreover, it follows that\nmin β f2(β) = f2(β\n′) = 0.\nFor f3(c), we can see that\nf ′3(c) = − 1\nm 〈θ,b〉.\nTherefore, we have\n〈θ,b〉 = 0,\nsince otherwise infc f3(c) = −∞ and the dual problem is infeasible. Clearly, minc f3(c) = 0. All together, the dual problem is\nmin θ\ng(θ) = 1\nm m∑ i=1 [ θi log(θi) + (1− θi) log(1− θi) ] , (LRDλ)\ns.t. ‖X̄T θ‖∞ ≤ mλ, 〈θ,b〉 = 0, θ ∈ C,\nwhere C = {θ ∈ <m : θi ∈ (0, 1), i = 1, . . . ,m}."
    }, {
      "heading" : "B Proof of the Existence of the Optimal Solution of (LRDλ)",
      "text" : "In this section, we prove that problem (LRDλ) has a unique optimal solution for all λ > 0. Therefore, in Lemma A, we first show that problem (LRDλ) is feasible for all λ > 0. Then Lemma B confirms the existence of the dual optimal solution θ∗λ.\nLemma 10. A 1. For λ > 0, problem (LRDλ) is feasible, i.e., Fλ 6= ∅. 2. The Slater’s condition holds for problem (LRDλ) in which λ > 0.\nProof. 1. When λ ≥ λmax, the feasibility of (LRDλ) is trivial because of the existence of θ∗λmax . We focus on the case in which λ ∈ (0, λmax] below. Recall that [12] λmax is the smallest tuning parameter such that β ∗ λ = 0 and θ ∗ λ = θ ∗ λmax\nwhenever λ ≥ λmax. For convenience, we rewrite the definition of λmax and θ∗λmax as follows.\nλmax = max j∈{1,...,p}\n1 m |〈θ∗λmax , x̄ j〉|,\n[θ∗λmax ]i =  m− m , if i ∈ P,\nm+ m , if i ∈ N , i = 1, . . . ,m.\nClearly, we have θ∗λmax ∈ Fλmax , i.e., θ ∗ λmax ∈ C, ‖X̄T θ∗λmax‖∞ ≤ mλmax and 〈θ ∗ λmax ,b〉 = 0. Let us define:\nθλ = λ\nλmax θ∗λmax .\nSince 0 < λλmax ≤ 1, we can see that θλ ∈ C. Moreover, it is easy to see that\n‖X̄T θλ‖∞ = λ\nλmax ‖X̄T θ∗λmax‖∞ ≤ mλ,\nand\n〈θλ,b〉 = λ\nλmax 〈θ∗λmax ,b〉 = 0.\nTherefore, θλ ∈ Fλ, i.e., Fλ is not empty and thus (LRDλ) is feasible.\n2. The constraints of (LRDλ) are all affine. Therefore, the Slater’s condition reduces to the feasibility of (LRDλ) [3]. When λ ≥ λmax, θ∗λmax is clearly a feasible solution of (LRDλ). When λ ∈ (0, λmax], we have shown the feasibility of (LRDλ) in part 1. Therefore, the Slater’s condition always holds for (LRDλ) in which λ > 0.\nLemma 11. B Given λ ∈ (0, λmax], problem (LRDλ) has a unique optimal solution, i.e., there exists a unique θ∗λ ∈ Fλ such that g(θ) achieves its minimum over Fλ at θ∗λ.\nProof. Let C̃ := {θ ∈ <m : θi ∈ [0, 1], i = 1, . . . ,m} and\nF̃λ := {θ ∈ <m : θ ∈ C̃, ‖X̄T θ‖∞ ≤ mλ, 〈θ,b〉 = 0}.\nClearly, Fλ ⊆ F̃λ and F̃λ is compact. We show that g(θ) can be continuously extended to F̃λ. For y ∈ (0, 1), define\nf(y) = y log(y) + (1− y) log(1− y).\nBy L′Hôpital′s rule, it is easy to see that limy↓0 f(y) = limy↑1 f(y) = 0. Therefore, let\nf̃(y) = { f(y), y ∈ (0, 1), 0, y ∈ {0, 1},\nand\ng̃(θ) = 1\nm m∑ i=1 f̃(θi).\nClearly, when θ ∈ Fλ, we have g̃(θ) = g(θ), i.e., g(θ) is the restriction of g̃(θ) over Fλ. On the other hand, the definition of g̃(θ) implies that g̃(θ) is continuous over F̃λ. Together with the fact that F̃λ is compact, we can see that there exists θ∗λ ∈ F̃λ and g̃(θ∗λ) = minθ∈F̃λ g̃(θ). Consider the optimization problem\nmin θ∈F̃λ\ng̃(θ) (LRD′λ)\nBecause of Lemma A, we know that Fλ 6= ∅ and thus F̃λ 6= ∅ either. Therefore, problem (LRD′λ) is feasible. By noting that the constraints of problem (LRD′λ) are all linear, the Slater’s condition is satisfied. Hence, there exists a set of Lagrangian multipliers η+, η− ∈ <p+, ξ+, ξ− ∈ <m+ and γ ∈ < such that\n∇g̃(θ∗λ) + m∑ i=1 η+i x̄ i + m∑ i=1 η−i (−x̄ i) + ξ+ − ξ− + γb = 0. (24)\nWe can see that if there is an i0 such that [θ ∗ λ]i0 ∈ {0, 1}, i.e., θ∗λ /∈ Fλ, Eq. (24) does not hold since |[∇g̃(θ∗λ)]i0 | = ∞. Therefore, we can conclude that θ∗λ ∈ Fλ. Moreover, it is easy to see that θ∗λ = argminθ∈F̃λ g̃(θ) = argminθ∈Fλ g(θ), i.e. θ ∗ λ is a minimum of g(θ) over Fλ. The uniqueness of θ∗λ is due to the strict convexity of g(θ) (strong convexity implies strict convexity), which completes the proof."
    }, {
      "heading" : "C Proof of Lemma 1",
      "text" : "Proof. Recall that the domain of g is C = {θ ∈ <m : [θ]i ∈ (0, 1), i = 1, . . . ,m}.\na. It is easy to see that\n[∇g(θ)]i = 1\nm log( [θ]i 1− [θ]i ), [∇2g(θ)]i,i = 1 m\n1 [θ]i(1− [θ]i) ≥ 4 m , [∇2g(θ)]i,j = 0, i 6= j.\nClearly, ∇2g(θ) is a diagonal matrix and\n∇2g(θ) ≥ 4 m I. (25)\nTherefore, g is a strong convex function with convexity parameter µ = 4m [18]. The claim then follows directly from the definition of strong convex functions.\nb. If θ1 6= θ2, then there exists at least one i′ ∈ {1, . . . ,m} such that [θ1]i′ 6= [θ2]i′ . Moreover, at most one of [θ1]i′ and [θ2]i′ can be 1 2 . Without loss of generality, assume [θ1]i′ 6= 1 2 .\nFor t ∈ (0, 1), let θ(t) = tθ2 + (1− t)θ1. Since [θ1]i′ 6= 12 , we can find t ′ ∈ (0, 1) such that [θ(t′)]i′ 6= 12 . Therefore, we can see that\n〈∇2g(θ(t′))(θ2 − θ1), θ2 − θ1〉 = m∑ i=1 [∇2g(θ(t′))]i,i([θ2]i − [θ1]i)2 (26)\n= ∑\ni∈{1,...,m}, i 6=i′\n[∇2g(θ(t′))]i,i([θ2]i − [θ1]i)2\n+ [∇2g(θ(t′))]i′,i′([θ2]i′ − [θ1]i′)2.\nClearly, when i ∈ {1, . . . ,m} \\ i′, we have [∇2g(θ(t′))]i,i ≥ 4m and thus∑ i∈{1,...,m},\ni 6=i′\n[∇2g(θ(t′))]i,i([θ2]i − [θ1]i)2 ≥ ∑\ni∈{1,...,m}, i 6=i′\n4 m ([θ2]i − [θ1]i)2. (27)\nSince [θ(t′)]i′ 6= 12 , we have [∇ 2g(θ(t′))]i,i > 4 m which results in\n[∇2g(θ(t′))]i′,i′([θ2]i′ − [θ1]i′)2 > 4\nm ([θ2]i′ − [θ1]i′)2. (28)\nMoreover, because [θ1]i′ 6= [θ2]i′ , we can see that\n([θ2]i′ − [θ1]i′)2 6= 0. (29)\nTherefore, Eq. (26) and the inequalities in (27), (28) and (29) imply that\n〈∇2g(θ(t′))(θ2 − θ1), θ2 − θ1〉 > 4\nm ‖θ2 − θ1‖22. (30)\nDue to the continuity of∇2g(θ(t)), there exist a small number > 0 such that for all t ∈ (t′− 12 , t ′+ 12 ), we have\n〈∇2g(θ(t))(θ2 − θ1), θ2 − θ1〉 > 4\nm ‖θ2 − θ1‖22, (31)\nIt follows that g(θ2)− g(θ1) = ∫ 1\n0\n∇g(θ(t))(θ2 − θ1)dt (32)\n= ∫ 1 0 [ ∇g(θ(0)) + ∫ t 0 ∇2g(θ(τ))(θ2 − θ1)dτ ] (θ2 − θ1)dt\n= 〈∇g(θ1), θ2 − θ1〉+ ∫ 1\n0 ∫ t 0 〈∇2g(θ(τ))(θ2 − θ1), θ2 − θ1〉dτdt.\nLet\n∆t2t1 := ∫ t2 t1 ∫ t 0 〈∇2g(θ(τ))(θ2 − θ1), θ2 − θ1〉dτdt.\nClearly, the second term on the right hand side of Eq. (32) is ∆10, which can be written as\n∆10 = ∆ t′− 12 0 + ∆ t′+ 12\nt′− 12 + ∆1t′+ 12 .\nDue to the inequality in (31), we can see that\n∆ t′+ 12\nt′− 12 = ∫ t′+ 12 t′− 12 ∫ t 0 〈∇2g(θ(τ))(θ2 − θ1), θ2 − θ1〉dτdt (33)\n> ∫ t′+ 12 t′− 12 4 m ‖θ2 − θ1‖22tdt\n= 4\nm ‖θ2 − θ1‖22 · (t′ ).\nDue to the inequality in (25), it is easy to see that\n〈∇2g(θ(t))(θ2 − θ1), θ2 − θ1〉 ≥ 4\nm ‖θ2 − θ1‖22 (34)\nfor all t ∈ (0, 1). Therefore,\n∆ t′− 12 0 = ∫ t′+ 12 t′− 12 ∫ t 0 〈∇2g(θ(τ))(θ2 − θ1), θ2 − θ1〉dτdt (35)\n≥ ∫ t′− 12\n0\n4 m ‖θ2 − θ1‖22tdt\n= 4\nm ‖θ2 − θ1‖22 ·\n[ 1\n2\n( t′ − 1\n2\n)2] .\nSimilarly,\n∆1t′+ 12 = ∫ 1 t′+ 12 ∫ t 0 〈∇2g(θ(τ))(θ2 − θ1), θ2 − θ1〉dτdt (36)\n≥ ∫ 1 t′+ 12 4 m ‖θ2 − θ1‖22tdt\n= 4\nm ‖θ2 − θ1‖22 ·\n1\n2\n[ 1− ( t′ + 1\n2\n)2] .\nThe inequalites in (33), (35) and (36) imply that\n∆10 > 2\nm ‖θ2 − θ1‖22. (37)\nTherefore, the inequality in (37) and Eq. (32) lead to the following strict inequality\ng(θ2)− g(θ1) > 〈∇g(θ1), θ2 − θ1〉+ 2\nm ‖θ2 − θ1‖22, (38)\nwhich completes the proof."
    }, {
      "heading" : "D Proof of Lemma 3",
      "text" : "Proof. According to the definition of λmax in Eq. (1), there must be j0 ∈ {1, . . . , p} such that λmax = 1 m |〈θ ∗ λmax\n, x̄j0〉|. Clearly, j0 ∈ Iλmax and thus Iλmax is not empty. For λ ∈ (0, λmax), we prove the statement by contradiction. Suppose Iλ is empty, then the KKT condition\nfor (LRDλ) at θ ∗ λ can be written as:\n0 ∈ ∇g(θ∗λ) + p∑ j=1 η+j x̄ j + p∑ j′=1 η−i (−x̄ i) + γb +NC(θ ∗ λ),\nwhere η+, η− ∈ <p+, γ ∈ < and NC(θ∗λ) is the normal cone of C at θ∗λ. Because θ∗λ ∈ C and C is an open set, θ∗λ is an interior point of C and thus NC(θ∗λ) = ∅. Therefore, the above equation becomes:\n∇g(θ∗λ) + p∑ j=1 η+j x̄ j + p∑ j′=1 η−j′ (−x̄ j′) + γb = 0. (39)\nMoreover, by the complementary slackness condition [3], we have η+j = η − j = 0 for j = 1, . . . , p since Iλ is empty. Then, Eq. (39) becomes:\n∇g(θ∗λ) + γb = 0. (40) By the similar argument, the KKT condition for (LRDλmax) at θ ∗ λmax is:\n∇g(θ∗λmax) + p∑ j=1 η̄+j x̄ j + p∑ j′=1 η̄−j′ (−x̄ j′) + γ′b = 0, (41)\nwhere η̄+, η̄− ∈ <p+ and γ′ ∈ <. Since Iλ = ∅, we can see that |〈θ∗λ, x̄j〉| < mλ < mλmax for all j ∈ {1, . . . ,m}. Therefore, θ∗λ also satisfies Eq. (41) by setting η+ = η̄+, η− = η̄− and γ = γ′ without violating the complementary slackness conditions. As a result, θ∗λ is an optimal solution of problem (LRDλmax) as well.\nMoreover, it is easy to see that θ∗λ 6= θ∗λmax because |〈θ ∗ λ, x̄ j0〉| < mλ < mλmax = |〈θ∗λmax , x̄ j0〉|. Consequently, (LRDλmax) has at least two distinct optimal solutions, which contradicts with Lemma B. Therefore, Iλ must be an nonempty set. Because λ is arbitrary in (0, λmax), the proof is complete."
    }, {
      "heading" : "E Proof of Theorem 4",
      "text" : "Proof. Recall that we need to solve the following optimization proble:\nT (θ∗λ, x̄ j ; θ∗λ0) := maxθ { |〈θ, x̄j〉| : ‖θ − θ∗λ0‖ 2 2 ≤ r2, 〈θ,b〉 = 0, 〈θ, x̄∗〉 ≤ mλ } . (42)\nThe feasibility of θ implies that 〈θ,b〉 = 0,\ni.e., θ belongs to the orthogonal complement of the space spanned by b. As a result, θ = Pθ and\n|〈θ, x̄j〉| = |〈Pθ, x̄j〉| = |〈θ,Px̄j〉| = 0.\nTherefore, we can see that T (θ∗λ, x̄ j ; θ∗λ0) = 0, which completes the proof."
    }, {
      "heading" : "F Proof of Corollary 5",
      "text" : "Proof. We set λ0 = λmax and θ ∗ λ0 = θ∗λmax . Clearly, we have λ0 > λ > 0 and θ ∗ λ0 is known. Therefore, the assumptions in Theorem 4 are satisfied and thus T (θ∗λ, x̄ j ; θ∗λ0) = 0.\nBy the rule in (R1′), it is straightforward to see that [β∗λ]j = 0, which completes the proof."
    }, {
      "heading" : "G Proof of Lemma 6",
      "text" : "Proof. We show that the Slater’s condition holds for (UBP′). Recall that the feasible set of problem (UBP′) is\nAλλ0 = { θ : ‖θ − θ∗λ0‖ 2 2 ≤ r2, 〈θ,b〉 = 0, 〈θ, x̄∗〉 ≤ mλ } .\nTo show that the Slater’s condition holds, we need to seek a point θ′ such that\n‖θ′ − θ∗λ0‖ 2 2 < r 2, 〈θ′,b〉 = 0, 〈θ′, x̄∗〉 ≤ mλ.\nConsider θ∗λ, since θ ∗ λ ∈ Aλλ0 , the last two constraints of A λ λ0 are satisfied by θ∗λ automatically. On the other hand, because λ0 ∈ (0, λmax], Lemma 3 leads to the fact that the active set Iλ0 is not empty. Let j0 ∈ Iλ0 , we can see that |〈θ∗λ0 , x̄ j0〉| = mλ0. However, because θ∗λ ∈ Fλ, we have |X̄T θ∗λ|∞ ≤ mλ,\nand thus |〈θ∗λ, x̄j0〉| ≤ mλ < mλ0. Therefore, we can see that θ∗λ 6= θ∗λ0 . By part b of Theorem 2, it follows that\n‖θ∗λ − θ∗λ0‖ 2 2 < r 2.\nAs a result, the Slater’s condition holds for (UBP′) which implies the strong duality of (UBP′). Moreover, it is easy to see that problem (UBP′) admits optimal solution in Aλλ0 because the objective function of (UBP′) is continuous and Aλλ0 is compact."
    }, {
      "heading" : "H Proof of Lemma 7",
      "text" : "Proof. The Lagrangian of (UBP′) is\nL(θ;u1, u2, v) = 〈θ, x̄〉+ u1 2 ( ‖θ − θ∗λ0‖ 2 2 − r2 ) + u2(〈θ, x̄∗〉 −mλ2) + v〈θ,b〉 (43)\n= 〈θ, x̄ + u2x̄∗ + vb〉+ u1 2 ( ‖θ − θ∗λ0‖ 2 2 − r2 ) − u2mλ2.\nwhere u1, u2 ≥ 0 and v ∈ < are the Lagrangian multipliers. To derive the dual function ĝ(u1, u2, v) = minθ L(θ;u1, u2, v), we can simply set ∇θL(θ;u1, u2, v) = 0, i.e.,\n∇θL(θ;u1, u2, v) = x̄ + u1(θ − θ∗λ1) + u2x̄ ∗ + vb = 0.\nWhen u1 6= 0, we set\nθ = − 1 u1 (x̄ + u2x̄ ∗ + vb) + θ∗λ0 (44)\nto minimize L(θ;u, v) with (u, v) fixed. By plugging Eq. (44) to Eq. (43), we can see that the dual function ĝ(u1, u2, v) is:\nĝ(u1, u2, v) =− 1\n2u1 ‖x̄ + u2x̄∗ + vb‖22 + 〈θ∗λ0 , x̄ + u2x̄ ∗ + vb〉 − 1 2 u1r 2 − u2mλ2 (45)\n=− 1 2u1 ‖x̄ + u2x̄∗ + vb‖22 + u2m(λ1 − λ2) + 〈θ∗λ0 , x̄〉 − 1 2 u1r 2.\nThe second line of (45) is due to the fact that 〈θ∗λ0 , x̄ ∗〉 = mλ1 and 〈θ∗λ0 ,b〉 = 0.\nWhen u1 = 0, it is not straightforward to derive the dual function. The difficulty comes from the fact that x̄ + u2x̄ ∗ + vb might be 0 for some u′2 ≥ 0 and v′.\na). Suppose 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ (−1, 1], we show that x̄ + u2x̄ ∗ + vb 6= 0 for all u2 ≥ 0 and v.\nSuppose for contradiction that x̄ + u′2x̄ ∗ + v′b = 0, in which u′2 ≥ 0 and v′. Then we can see that\nP (x̄ + u′2x̄ ∗ + v′b) = 0.\nSince Pb = 0, it follows that Px̄ + u′2Px̄ ∗ = 0, (46)\nand thus\nu′2 = − 〈Px̄,Px̄∗〉 ‖Px̄∗‖22 . (47)\nClearly, Eq. (46) implies that Px̄ and Px̄∗ are collinear, i.e., 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ {−1, 1}. Moreover, by Eq. (47), we know that 〈Px̄,Px̄∗〉 ≤ 0. Therefore, it is easy to see that 〈Px̄,Px̄\n∗〉 ‖Px̄‖2‖Px̄∗‖2 = −1, which\ncontradicts the assumption. Hence, x̄ + u2x̄ ∗ + vb 6= 0 for all u2 ≥ 0 and v.\nWe then show that ĝ(u1, u2, v) = −∞ when u1 = 0 for all u2 ≥ 0 and v. Since ĝ(u1, u2, v) = minθ L(θ;u1, u2, v), for u1 = 0, u2 ≥ 0 and v, we have\nĝ(0, u2, v) = min θ L(θ; 0, u2, v) (48)\n= min θ 〈θ, x̄ + u2x̄∗ + vb〉 − u2mλ2.\nLet θ = −t(x̄ + u2x̄∗ + vb), it follows that\n〈θ, x̄ + u2x̄∗ + vb〉 − u2mλ2 = −t‖x̄ + u2x̄∗ + vb‖22 − u2mλ2, (49)\nand thus\nlim t→∞\n−t‖x̄ + u2x̄∗ + vb‖22 − u2mλ2 = −∞. (50)\nTherefore, ĝ(u1, u2, v) = minθ L(θ;u1, u2, v), for u1 = 0, u2 ≥ 0 and v. All together, the dual function is\nĝ(u1, u2, v) =  − 12u1 ‖x̄ + u2x̄ ∗ + vb‖22 + u2m(λ1 − λ2) + 〈θ∗λ0 , x̄〉 − 1 2u1r 2, if u1 > 0, u2 ≥ 0,\n−∞, if u1 = 0, u2 ≥ 0.\n(51)\nBecause the dual problem is to maximize the dual function, we can write the dual problem as:\nmax u1>0,u2≥0,v\nĝ(u1, u2, v) = − 1\n2u1 ‖x̄ + u2x̄∗ + vb‖22 + u2m(λ1 − λ2) + 〈θ∗λ0 , x̄〉 −\n1 2 u1r 2. (52)\nMoreover, it is easy to see that problem (52) is an unconstrained optimization problem with respect to v. Therefore, we set\n∂ĝ(u1, u2, v) ∂v = − 1 u1 〈x̄ + u2x̄∗ + vb,b〉 = 0,\nand thus\nv = −〈x̄ + u2x̄ ∗,b〉\n‖b‖22 . (53)\nBy plugging (53) into ĝ(u1, u2, v) and noting that U1 = {(u1, u2) : u1 > 0, u2 ≥ 0}, problem (52) is equivalent to\nmax (u1,u2)∈U1\nḡ(u1, u2) = − 1\n2u1 ‖Px̄ + u2Px̄∗‖22 + u2m(λ1 − λ2) + 〈θ∗λ1 , x̄〉 −\n1 2 u1r 2. (UBD′)\nBy Lemma 6, we know that the Slater’s conditions holds for (UBP′). Therefore, the strong duality holds for (UBP′) and (UBD′). By the strong duality theorem [11], there exists u∗1 ≥ 0, u∗2 ≥ 0 and v∗ such that ĝ(u∗1, u ∗ 2, v ∗) = maxu1≥0,u2≥0,v ĝ(u1, u2, v). By Eq. (51), it is easy to see that u ∗ 1 > 0. Therefore, ḡ(u1, u2) attains its maximum in U1.\nb). Suppose 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = −1, it is easy to see that\nx̄ + u2x̄ ∗ + vb = 0⇔ u2 = − 〈Px̄,Px̄∗〉 ‖Px̄∗‖22 and v = −〈x̄ + u2x̄ ∗,b〉 ‖b‖22 .\nLet u′2 = − 〈Px̄,Px̄∗〉 ‖Px̄∗‖22 and v′ = − 〈x̄+u2x̄ ∗,b〉 ‖b‖22 , we have\nL(θ; 0, u′2, v ′) = −u′2mλ2 = 〈Px̄,Px̄∗〉 ‖Px̄∗‖22 mλ = − ‖Px̄‖2 ‖Px̄∗‖2 mλ,\nand thus\nĝ(0, u′2, v ′) = min θ L(θ; 0, u′2, v ′) = − ‖Px̄‖2 ‖Px̄∗‖2 mλ.\nBy a similar argument as in the proof of part 1, we can see that the dual function is\nĝ(u1, u2, v) =  − 12u1 ‖x̄ + u2x̄ ∗ + vb‖22 + u2m(λ1 − λ2) + 〈θ∗λ0 , x̄〉 − 1 2u1r 2, if u1 > 0, u2 ≥ 0, −∞, if u1 = 0, u2 ≥ 0, u2 6= u′2, v 6= v′,\n− ‖Px̄‖2‖Px̄∗‖2mλ, if u1 = 0, u2 = u ′ 2, v = v ′,\n(54)\nand the dual problem is equivalent to\nmax (u1,u2)∈U1∪U2 ḡ(u1, u2) = { ḡ(u1, u2), if (u1, u2) ∈ U1, − ‖Px̄‖2‖Px̄∗‖2mλ, if (u1, u2) ∈ U2.\n(UBD′′)"
    }, {
      "heading" : "I Proof of Theorem 8",
      "text" : "I.1 Proof for the Non-Collinear Case In this section, we show that the results in Theorem 8 holds for the case in which 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ (−1, 1), i.e., Px̄ and Px̄∗ are not collinear.\nProof. As shown by part a) of Lemma 7, the dual problem of (UBP′) is equivalent to (UBD′). Since the strong duality holds by Lemma 6, we have\n− Tξ(θ∗λ, x̄j ; θ∗λ0) = maxu1>0,u2≥0 ḡ(u1, u2). (55)\nClearly, problem (UBD′) can be solved via the following minimization problem\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = minu1>0,u2≥0 −ḡ(u1, u2). (56)\nLet u∗1 and u ∗ 2 be the optimal solution of problem (56). By part a) of Lemma 7, the existence of u ∗ 1 > 0 and u∗2 ≥ 0 is guaranteed. By introducing the slack variables s1 ≥ 0 and s2 ≥ 0, the KKT conditions of problem (56) can be written as follows:\n− 12(u∗1)2 ‖Px̄ + u ∗ 2Px̄\n∗‖22 + 1\n2 r2 − s1 = 0, (57)\n1 u∗1 〈Px̄ + u∗2Px̄∗,Px̄∗〉 −m(λ0 − λ)− s2 = 0, (58)\ns1u ∗ 1 = 0, s2u ∗ 2 = 0. (59)\nSince u∗1 > 0, then s1 = 0 and Eq. (64) results in\nu∗1 = ‖Px̄ + u∗2Px̄∗‖2/r. (60)\nBy plugging u∗1 into (65), we have\nϕ(u∗2) := 〈Px̄ + u∗2Px̄∗,Px̄∗〉 ‖Px̄ + u∗2Px̄∗‖2‖Px̄∗‖2 = m(λ0 − λ) + s2 r‖Px̄∗‖2 = d+ s2 r‖Px̄∗‖2 . (61)\nIt is easy to observe that\nm1). since 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ (−1, 1), i.e., Px̄ and Px̄ ∗ are not collinear, ϕ(u∗2) monotonically increases when\nu∗2 →∞ and limu2→∞ ϕ(u∗2) = 1;\nm2). d ∈ (0, 1] due to the fact that λ0 > λ and Eq. (68) (note s2 ≥ 0).\na): Assume 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ≥ d. We divide the proof into two cases.\na1) Suppose 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 > d, Eq. (68) and the monotonicity of ϕ imply that\nd+ s2\nr‖Px̄∗‖2 = ϕ(u∗2) ≥ ϕ(0) = 〈Px̄,Px̄∗〉 ‖Px̄‖2‖Px̄∗‖2 > d.\nTherefore, we can see that s2 > 0 and thus u ∗ 2 = 0 due to the complementary slackness condition. By plugging u∗2 = 0 into Eq. (67), we can get u ∗ 1 = ‖Px̄‖2 r . The result in part a) of Theorem 8 follows by noting that Tξ(θ ∗ λ, x̄ j ; θ∗λ0) = −ḡ(u ∗ 1, u ∗ 2).\na2) Suppose 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = d. If u ∗ 2 > 0, then s2 = 0 by the complementary slackness condition. In view\nof Eq. (68) and m1), we can see that\nd = ϕ(u∗2) > ϕ(0) = 〈Px̄,Px̄∗〉 ‖Px̄‖2‖Px̄∗‖2 = d,\nwhich leads to a contradiction. Therefore u∗2 = 0 and the result in part a) of Theorem 8 follows by a similar argument as in the proof of a1).\nb): Assume 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 < d. If u ∗ 2 = 0, Eq. (68) results in\nd+ s2\nr‖Px̄∗‖2 = ϕ(0) = 〈Px̄,Px̄∗〉 ‖Px̄‖2‖Px̄∗‖2 < d,\nwhich implies that s2 < 0, a contradiction. Thus, we have u ∗ 2 > 0 and s2 = 0 by the complementary slackness condition. Eq. (68) becomes:\n〈Px̄ + u∗2Px̄∗,Px̄∗〉 ‖Px̄ + u∗2Px̄∗‖2‖Px̄∗‖2 = m(λ0 − λ) r‖Px̄∗‖2 = d. (62)\nExpanding the terms in Eq. (62) yields the following quadratic equation:\na2(u ∗ 2) 2 + a1u ∗ 2 + a0 = 0, (63)\nwhere a0, a1 and a2 are given by Eq. (86).\nOn the other hand, Eq. (62) implies that d ≤ 1. In view of the assumptions 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 < d and 〈Px̄,Px̄∗〉 ‖Px̄‖2‖Px̄∗‖2 6= −1, we can see that Px̄ ∗ and Px̄ are not collinear. Therefore, m1) and Eq. (62) imply that d < 1. Moreover, the assumption λ0 > λ leads to d > 0. As a result, we have (1− d2) > 0 and thus\na2a0 < 0,∆ = a 2 1 − 4a2a0 = 4d2(1− d2)‖Px̄∗‖42(‖Px̄‖22‖Px̄∗‖22 − 〈Px̄,Px̄∗〉2) > 0.\nConsequently, (63) has only one positive solution which can be computed by the formula in Eq. (86). The result in Eq. (85) follows by a similar argument as in the proof of a1).\nI.2 Proof for the Collinear and Positive Correlated Case We prove for the case in which 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = 1.\nProof. Because 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = 1, by part a) of Lemma 7, the dual problem of (UBP ′) is given by (UBD′).\nTherefore, the following KKT conditions hold as well:\n− 12(u∗1)2 ‖Px̄ + u ∗ 2Px̄\n∗‖22 + 1\n2 r2 − s1 = 0, (64)\n1 u∗1 〈Px̄ + u∗2Px̄∗,Px̄∗〉 −m(λ1 − λ2)− s2 = 0, (65)\ns1u ∗ 1 = 0, s2u ∗ 2 = 0 (66)\nwhere u∗1 > 0 and u ∗ 2 ≥ 0 are the optimal solution of (UBD′), and s1, s2 ≥ 0 are the slack variables. Since u∗1 > 0, then s1 = 0 and Eq. (64) results in\nu∗1 = ‖Px̄ + u∗2Px̄∗‖2/r. (67)\nBy plugging u∗1 into (65), we have\nϕ(u∗2) := 〈Px̄ + u∗2Px̄∗,Px̄∗〉 ‖Px̄ + u∗2Px̄∗‖2‖Px̄∗‖2 = m(λ0 − λ) + s2 r‖Px̄∗‖2 = d+ s2 r‖Px̄∗‖2 , (68)\nwhich implies d ≤ 1. (69) Moreover, we can see that the assumption 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = 1 actually implies Px̄ and Px̄ ∗ are collinear.\nTherefore, there exists α > 0 such that Px̄ = αPx̄∗. (70)\nBy plugging Eq. (70) into Eq. (68), we have\nϕ(u∗2) = 〈Px̄ + u∗2Px̄∗,Px̄∗〉 ‖Px̄ + u∗2Px̄∗‖2‖Px̄∗‖2 = (α+ u∗2)〈Px̄∗,Px̄∗〉 (α+ u∗2)‖Px̄∗‖2‖Px̄∗‖2 = 1, (71)\ni.e., ϕ(u∗2) is a constant and does not depend on the value of u ∗ 2.\nAs a result, we can see that 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = 1 ≥ d. Therefore, we need to show that the result in part a) of Theorem 8 holds. We divide the proof into two cases.\nCase 1. Suppose 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 > d, i.e., d < 1, Eq. (68) and Eq. (71) imply that\nd+ s2\nr‖Px̄∗‖2 = ϕ(u∗2) = 1 > d.\nTherefore, we can see that s2 > 0 and thus u ∗ 2 = 0 due to the complementary slackness condition. By plugging u∗2 = 0 into Eq. (67), we can get u ∗ 1 = ‖Px̄‖2 r . The result in part a) of Theorem 8 follows by noting that Tξ(θ ∗ λ, x̄ j ; θ∗λ0) = −ḡ(u ∗ 1, u ∗ 2).\nCase 2. Suppose 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = d = 1. On the other hand, in view of Eq. (68) and Eq. (71), we can observe\nthat s2 = 0 because otherwise\nϕ(u∗2) = 1 = d+ s2\nr‖Px̄∗‖2 > 1.\nBy plugging 70 into Eq. (67), we have u∗1 = (α+ u ∗ 2)‖Px̄∗‖2/r and thus\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = −ḡ(u ∗ 1, u ∗ 2) = r(α+ u ∗ 2)‖Px̄∗‖2 − u∗2m(λ0 − λ)− 〈θ∗λ0 , x̄〉. (72)\nBy noting d = 1, it follows that m(λ0 − λ) = r‖Px̄∗‖2. (73)\nTherefore, in view of Eq. (70) and Eq. (73), Eq. (72) becomes\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = r(α+ u ∗ 2)‖Px̄∗‖2 − u∗2r‖Px̄∗‖2 − 〈θ∗λ0 , x̄〉 = r‖Px̄‖2 − 〈θ ∗ λ0 , x̄〉,\nwhich is the same as the result in part a) of Theorem 8.\nI.3 Proof for the Collinear and Negative Correlated Case\nBefore we proceed to prove Theorem 8 for the case in which 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = −1, it is worthwhile to noting the following lemma.\nLemma 12. C Let λmax ≥ λ0 > λ > 0, d = m(λ0−λ)r‖Px̄∗‖2 and assume θ ∗ λ0 is known. Then d ∈ (0, 1]. Proof. Let x̄ := −ξ(−x̄∗). Clearly, we can see that\n〈Px̄,Px̄∗〉 ‖Px̄‖2‖Px̄∗‖2 = 1.\nTherefore, the results in Section I.2 apply. As a result, in view of the inequality in (69), Notice that, d is independent of x̄. In other words, as long as there exists a j0 ∈ {1, . . . , p} such that Px̄j0 6= 0 and 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 ∈ (−1, 1), one can see that\nd ≤ 1.\nMoreover, since λ0 > λ, it is easy to see that d > 0, which completes the proof.\nWe prove Theorem 8 for the case in which 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = −1.\nProof. Consider the case in which 〈Px̄,Px̄ ∗〉\n‖Px̄‖2‖Px̄∗‖2 = −1. Clearly, Px̄ and Px̄ ∗ are collinear and there exists\nα = − 〈Px̄,Px̄ ∗〉\n‖Px̄∗‖22 such that\nPx̄ = −αPx̄∗. (74) As shown by part b) of Lemma 7, the dual problem is given by (UBD′′). Therefore, to find\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = min(u1,u2)∈U1∪U2 −ḡ(u1, u2), (75)\nwe can first compute T ′ξ(θ ∗ λ, x̄\nj ; θ∗λ0) = inf(u1,u2)∈U1 −ḡ(u1, u2) (76)\nand then compare T ′ξ(θ ∗ λ, x̄ j ; θ∗λ0) with −ḡ(u1, u2)|(u1,u2)∈U2 = ‖Px̄‖2 Px̄∗ mλ. Clearly, we have\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = min { T ′ξ(θ ∗ λ, x̄ j ; θ∗λ0), ‖Px̄‖2 Px̄∗ mλ } (77)\nLet us consider the problem in (76). From problem (UBD′′), we observe that\n− ḡ(u1, u2)|(u1,u2)∈U1 = −ḡ(u1, u2). (78)\nBy noting Eq. (74), we have\n− ḡ(u1, u2)|(u1,u2)∈U1 = 1 2u1 (u2 − α)2‖Px̄∗‖22 − u2m(λ0 − λ) + 1 2 u1r 2 − 〈θ∗λ0 , x̄〉. (79)\nSuppose u1 is fixed, it is easy to see that\nu∗2(u1) = argmin u2≥0 −ḡ(u1, u2)|(u1,u2)∈U1 = u1m(λ0 − λ) ‖Px̄∗‖22 + α (80)\nand\nh(u1) := min u2 −ḡ(u1, u2)|(u1,u2)∈U1 = −ḡ(u1, u ∗ 2(u1)) (81)\n= 1\n2 u1r\n2(1− d2)− αm(λ0 − λ)− 〈θ∗λ0 , x̄〉.\nClearly, the domain of h(u1) is u1 > 0 and T ′ ξ(θ ∗ λ, x̄ j ; θ∗λ0) = infu1>0 h(u1). By Lemma C, one can see that that d ∈ (0, 1]. If d = 1, then\nmin u1>0\nh(u1) = −αm(λ0 − λ)− 〈θ∗λ0 , x̄〉.\nOtherwise, if d ∈ (0, 1), it is easy to see that\ninf u1>0 h(u1) = lim u1↓0\nh(u1) = −αm(λ0 − λ)− 〈θ∗λ0 , x̄〉.\nAll together, we have T ′ξ(θ ∗ λ, x̄ j ; θ∗λ0) = −αm(λ0 − λ)− 〈θ ∗ λ0 , x̄〉. (82)\nMoreover, we observe that\n〈θ∗λ0 , x̄〉 = 〈Pθ ∗ λ0 , x̄〉 = 〈θ ∗ λ0 ,Px̄〉 = 〈θ ∗ λ0 ,−αPx̄ ∗〉 = −αmλ0.\nTherefore, Eq. (82) can simplified as:\nT ′ξ(θ ∗ λ, x̄ j ; θ∗λ0) = −αm(λ0 − λ)− 〈θ ∗ λ0 , x̄〉 = αmλ = − 〈Px̄,Px̄∗〉 ‖Px̄∗‖22 mλ = ‖Px̄‖2 ‖Px̄∗‖2 mλ. (83)\nBy Eq. (77), we can see that\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = ‖Px̄‖2 ‖Px̄∗‖2 mλ. (84)\nSince 〈Px̄,Px̄ ∗〉 ‖Px̄‖2‖Px̄∗‖2 = −1 and d ∈ (0, 1] by Lemma C, one can see that 〈Px̄,Px̄∗〉 ‖Px̄‖2‖Px̄∗‖2 < d. Therefore, we\nonly need to show that part b) of Theorem 8 yields the same solution as Eq. (84) . Recall that part b) of Theorem 8 says:\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = r‖Px̄ + u ∗ 2Px̄ ∗‖2 − u∗2m(λ0 − λ)− 〈θ∗λ0 , x̄〉, (85)\nwhere\nu∗2 = −a1+\n√ ∆\n2a2 ,\na2 = ‖Px̄∗‖42(1− d2), a1 = 2〈Px̄,Px̄∗〉‖Px̄∗‖22(1− d2), a0 = 〈Px̄,Px̄∗〉2 − d2‖Px̄‖22‖Px̄∗‖22, ∆ = a21 − 4a2a0 = 4d2(1− d2)‖Px̄∗‖42(‖Px̄‖22‖Px̄∗‖22 − 〈Px̄,Px̄∗〉2).\n(86)\nIn fact, if we plugging Eq. (74) into Eq. (86), we have\n∆ = 0,\nu∗2 = −a1 2a2 = −〈Px̄,Px̄ ∗〉 ‖Px̄∗‖22 .\nTherefore, we can see that u∗2 = α, Px̄ + u ∗ 2Px̄ ∗ = 0 and thus Eq. (85) results in\nTξ(θ ∗ λ, x̄ j ; θ∗λ0) = −αm(λ0 − λ)− 〈θ ∗ λ0 , x̄〉 = αmλ = ‖Px̄‖2 ‖Px̄∗‖2 mλ. (87)\nClearly, Eq. (84) and Eq. (87) give the same result, which completes the proof."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2013,
    "abstractText" : "<lb>The `1-regularized logistic regression (or sparse logistic regression) is a widely used method for si-<lb>multaneous classification and feature selection. Although many recent efforts have been devoted to its<lb>efficient implementation, its application to high dimensional data still poses significant challenges. In<lb>this paper, we present a fast and effective sparse logistic regression screening rule (Slores) to identify<lb>the “0” components in the solution vector, which may lead to a substantial reduction in the number<lb>of features to be entered to the optimization. An appealing feature of Slores is that the data set needs<lb>to be scanned only once to run the screening and its computational cost is negligible compared to that<lb>of solving the sparse logistic regression problem. Moreover, Slores is independent of solvers for sparse<lb>logistic regression, thus Slores can be integrated with any existing solver to improve the efficiency. We<lb>have evaluated Slores using high-dimensional data sets from different applications. Extensive experi-<lb>mental results demonstrate that Slores outperforms the existing state-of-the-art screening rules and the<lb>efficiency of solving sparse logistic regression is improved by one magnitude in general.",
    "creator" : "LaTeX with hyperref package"
  }
}