{
  "name" : "1511.08407.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "The Mechanism of Additive Composition",
    "authors" : [ "Ran Tian", "Naoaki Okazaki", "Kentaro Inui" ],
    "emails" : [ "tianran@ecei.tohoku.ac.jp", "okazaki@ecei.tohoku.ac.jp", "inui@ecei.tohoku.ac.jp" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Keywords: compositional distributional semantics, bias and variance, approximation error bounds, natural language data"
    }, {
      "heading" : "1. Introduction",
      "text" : "The decomposition of generalization errors into bias and variance (Geman et al., 1992) is one of the most profound insights of learning theory. Bias is caused by low capacity of models when the training samples are assumed to be infinite, whereas variance is caused by overfitting to finite samples. In this paper, we apply the analysis to a new set of problems in compositional distributional semantics, the research in calculations of meanings of natural language phrases by vector representations of their constituent words. We prove an upper bound for the bias of a widely used compositional framework, the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010).\nCalculations of meanings are fundamental problems in Natural Language Processing (NLP). In recent years, vector representations have seen great success at conveying meanings of individual words. The vectors are constructed from statistics of surrounding contexts of the words, based on the distributional hypothesis that words occurring in similar contexts tend to have similar meanings (Harris, 1954). For example, given a target word t, a common approach is to use the probability P (c|t) of t co-occurring with another word c in its surrounding context, and use the i-th word ci ∈ C in a context lexicon C to define the i-th entry of the vector of t as a function of P (ci|t). As a result, all words are represented by vectors in a |C|-dimensional space such that, the vectors of semantically similar words\nc©2000 Ran Tian, Naoaki Okazaki and Kentaro Inui.\nar X\niv :1\n51 1.\n08 40\n7v 1\n[ cs\n.C L\n] 2\n6 N\nare close to each other. It has been shown that the cosine similarities of such word vectors can capture similarities between words considerably well (Levy et al., 2015), thus the next natural question is to extend the vector representations to phrases and even sentences.\nBased on the success of distributional hypothesis, it is expected that at least for short phrases, the meanings can still be represented by vectors constructed from surrounding contexts. However, a main obstacle here is that phrases are far more sparse than individual words. For example, in the British National Corpus (BNC) (The BNC Consortium, 2007), which contains about 100 million word tokens, there are about 16000 lemmatized words which occur more than 200 times, but only about 46000 such bigrams, far less than the 160002 possible two-word combinations. In other words, there are too few training samples for even two-word phrases. Therefore, a direct estimation of the surrounding contexts of a phrase can have large sampling error. Alternatively, Mitchell and Lapata (2010) propose to construct vector representations of phrases by combining word vectors, based on the linguistic intuition that meanings of phrases are “composed” from the meanings of their constituent words. From a machine learning point of view, word vectors have smaller sampling error, or lower variance, because words are more abundant than phrases. Therefore, a compositional framework that calculates meanings of phrases by combining word vectors is more favorable, if the bias of this composition operation is also small.\nA number of compositional frameworks have been proposed in the literature. Some are complicated methods that rely on the underlying linguistic structures of phrases (Baroni and Zamparelli, 2010; Socher et al., 2012; Paperno et al., 2014), which are rationalized by linguistic intuitions (Coecke et al., 2010). Others have sought supports from cognitive science by comparing with human judgments (Mitchell and Lapata, 2010). However, for none of them the bias has ever been analyzed previously. The most widely used framework is the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997), in which the meanings of phrases are calculated by averaging the word vectors. Yet, it was unknown if this average is by any means related to statistics of contexts surrounding the phrases.\nIn this paper, we show that the bias of additive composition of two-word phrases is bounded from above (Section 2). This result provides a learning-theoretical support for additive composition, and we expect it to inspire more theoretical analysis on other composition operations. Such theories would be important for the pursuit of better compositional frameworks, given that the empirical evaluation of compositional frameworks is already considerably complicated, due to different choices of the word vectors, the composition operations, and the methods for estimating parameters (Dinu et al., 2013). What is worse, newly proposed word vectors may not necessarily conform to previously established composition operations. Therefore, theories would be useful for guiding the empirical research.\nIn particular, our theory of additive composition leads to the following predictions.\n1. The upper bound of the bias depends on specific conditions on the function applied to P (ci|t) as the i-th entry of the vector representation, which suggests that the conditions on the function are crucial for additive compositionality (Section 2.1). This constraint provides a rigorous and unified explanation for the additive compositionality of several recently proposed word vectors, including the Skip-Gram with Negative Sampling (SGNS) (Mikolov et al., 2013b), the GloVe model (Pennington et al., 2014), the Hellinger PCA (Lebret and Collobert, 2014) and a CCA model (Stratos et al.,\n2015). Despite many speculations on these empirically established models, our explanation has a sound argument and experimental verifications.\n2. At least for two-word phrases, a novel type of vector representations can solve a long-standing issue of additive composition, namely the unawareness of word order (Section 2.2). Unlike previous alternative approaches, the vectors are still composed by taking average, retaining the merits of being parameter-free and having a bias bound.\n3. Regarding dimension reduction methods for training word vectors, the loss function of Singular Value Decomposition (SVD) is probably more suitable for maintaining additive compositionality, compared to other popular methods such as SGNS and GloVe (Section 2.3).\nAssumptions and implications of our theory are experimentally verified (Section 5), showing their correctness. Furthermore, extrinsic evaluations confirm that the above predictions correlate with human judgments (Section 6), demonstrating the usefulness of our theory in explaining additive compositionality.\nUnlike a typical empirical research in NLP, we develop new mathematics in this work to capture the nature of compositional distributional semantics. Also different from a general machine learning theory, we make essential use of properties specific to natural language data. As a theoretical research, we believe this work brings new topics to machine learning and will find further applications in NLP."
    }, {
      "heading" : "2. Theoretical Results",
      "text" : "A vector representation in the distributional paradigm is constructed from context features, such that each dimension is a function of co-occurrence with a context word. More precisely, we consider that each target is associated with its context, which is usually defined as a window of context words surrounding the target. For example, in Table 1, we show the contexts of the target word tokens “tax” and “rate” as words occurring within a window of size 5 to each side of the targets. When a target word t is given, we obtain the set of tokens of the target word in a corpus, and then we obtain the distribution of context words cooccurring with the target word tokens. This distribution determines the probability P (c|t) of a word c co-occurring with t, which is used for constructing the vector representation. In this paper, we use the notation t to denote interchangeably the target word, the obtained\nset of tokens of the target word, or the distribution of its context words. Later, we will consider other sets of tokens or the distributions of words in other contexts. Those sets of tokens or distributions are not obtained from a word as described here, but we still regard them as targets and denote such general targets as τ , as long as the co-occurring probability P (c|τ) can be defined. For constructing the vector representation, we fix a lexicon C of context words, and we define the i-th entry of the vector representation as a function of P (ci|τ) where ci ∈ C is the i-th word in the lexicon. Formally,\nwτ := ( s(ci, τ) ) i\nwhere s(ci, τ) is a function of the form\ns(ci, τ) := r · ( F (P (ci|τ))− a(τ)− b(ci) ) . (1)\nHere, r is a scalar and F (·), a(·) and b(·) are real-valued functions. Though there are other methods for constructing word vectors, such as neural networks (Collobert et al., 2011), we consider this formalization as general enough to cover a wide range of distributional word vectors in the literature, including some popular models such as SGNS and GloVe. Indeed, if we set F (p) := ln p and b(ci) := lnP (ci), then s(ci, τ) becomes the Point-wise Mutual Information (PMI) function which has long been widely adopted in NLP (Church and Hanks, 1990; Dagan et al., 1994; Turney, 2001; Turney and Pantel, 2010). The SGNS model is a matrix factorization of PMI (Levy and Goldberg, 2014b), and the more general form of shift terms a(t) and b(ci) are explicitly introduced by GloVe (Pennington et al., 2014). As for other forms of F , it has been reported that one can achieve better empirical results by setting F (p) := √ p instead of F (p) := p (Lebret and Collobert, 2014; Stratos et al., 2015) (see Section 2.1 for further discussion). Our formalization provides a unified point of view for all these works. The parameter r is introduced here to normalize the scales of vectors.\nIn a similar manner, we can specify the context of a bigram (e.g. the context of tax rate in Table 1), and construct vector representations for two-word phrases such as “t1 t2”. We use t1t2 to denote the unordered bigram (i.e. either “t1 t2” or “t2 t1”), and use t1 t2 to denote the ordered one. The probabilities of these targets co-occurring with a context word c are denoted by P (c|t1t2) and P (c|t1 t2), respectively. Then, the functions s(ci, t1t2) and s(ci, t1 t2), and the vectors wt1t2 and wt1 t2 , are defined the same as above. A compositional framework can thus be regarded as a method of combining vectors wt1 and wt2 to approximate the vector wt1t2 (or wt1 t2 , if one cares about the word order, which we will discuss in Section 2.2). We use the Euclidean distance\nEt1t2 := ‖wt1t2 − COMP(wt1 ,wt2)‖\nto measure the error in this approximation. Here, COMP(·, ·) is the composition operation defined in the framework.\nIf COMP has parameters, it is a widely adopted approach to learn the parameters by minimizing this error Et1t2 for bigrams observed in a corpus (Dinu et al., 2013; Baroni and Zamparelli, 2010; Guevara, 2010). However, bigrams are considerably sparse in real corpora, so there is the possibility that such parameter optimizations can be overfitting.\nOn the other hand, the following additive composition is also widely used:\nCOMP(wt1 ,wt2) := 1\n2 (wt1 + wt2).\nSince this operation does not have parameters, it does not overfit. In other words, additive composition has lower variance compared to other composition operations that have parameters. However, the bias of additive composition should also be small for it to be reasonable. More precisely, bias is defined as the error Et1t2 of approximation under the condition that the corpus is sufficiently large for any plausible phrase to occur sufficiently many times. When training samples are sufficient, the error is caused by the low capacity of additive composition to fit the precise phrase vector. In this paper, we prove an upper bound for this approximation error, which endorses additive composition as a reasonable approximation method. Previously, the analysis of bias and variance has never been applied to compositional frameworks; we expect our work to inspire more followups on this topic.\nThe key to our bias bound is the observation that, every word occurring in the context of tktl also occurs in the contexts of tk and tl. As we see from Table 1, if a token of tk (e.g. “tax”) comes from a bigram of tktl (e.g. “tax rate”) and if the context windows are not too small, the context of the token of tk is almost the same as the context of the bigram of tktl. Therefore, we can decompose the co-occurrence probability P (c|tk) (resp. P (c|tl)) into two components, either coming from the bigram tktl or not:\nP (c|tk) = πk\\lP (c|tk \\ tl) + (1− πk\\l)P (c|tktl), (2) P (c|tl) = πl\\kP (c|tl \\ tk) + (1− πl\\k)P (c|tktl). (3)\nHere, tk \\ tl (resp. tl \\ tk) denotes the set of tokens of the target word tk (resp. tl) which do not come from tktl; and the probability of a given tk (resp. tl) token not coming from tktl is denoted by πk\\l (resp. πl\\k). In practice, πk\\l and πl\\k can be estimated as\nπk\\l = 1− Freq(tktl)/Freq(tk) and πl\\k = 1− Freq(tktl)/Freq(tl),\nwhere Freq(·) denotes the frequency count in a corpus. We can view πk\\l and πl\\k as indicating how weak the “collocation” between tk and tl is. When πk\\l and πl\\k are small, tk tends to occur with tl together, so both wtk and wtl will be highly correlated with wtktl , then the approximation error Etktl will be small. This intuition is formalized as 1 below.\nClaim 1 Let s(ci, τ) be defined as in (1). We normalize a(τ), b(ci) and r such that, the entries of each wτ sum to 0, the centroid of the collection {wtktl} of phrase vectors is shifted to 0, and their norms {‖wtktl‖} average to 1. Assume that\nlim p→0\nF ′(p) pα−1 = Constant 6= 0 for some α ≤ 0.5. (4)\nThen, the following upper bound Etktl ≤ √ 1\n2 (π2k\\l + π 2 l\\k + πk\\lπl\\k) (5)\nholds approximately in a sufficiently large corpus.\nAs we expected, for more “collocational” phrases, since πk\\l and πl\\k are smaller, the upper bound (5) becomes stronger. Note that the normalization of a(τ), b(ci) and r in 1 is necessary, because without normalization, one can arbitrarily change Etktl by varying a(τ), b(ci) and r. In addition, this normalization constraints the relation between the Euclidean distance Etktl and the cosine similarity cos(wtktl ,wtk + wtl), which is the most widely used similarity measure in practice. When the norm ‖wtktl‖ is approximately fixed to 1, a smaller Euclidean distance mostly indicates a higher cosine similarity and vice versa.\nThe proof of 1 (Theorem 5) is given in Section 4, based on several assumptions namely Zipf’s law, the Assumption I. and the Assumption II. described in Section 4. These assumptions and the upper bound are experimentally verified in Section 5. The result is an upper bound for the bias (i.e. an upper bound for Etktl under the condition that the corpus is infinitely large), which endorses the additive composition 12(wtk + wtl) as a reasonable approximation for the meaning of tktl because, when tktl is rare or unseen in a real corpus, the vector representation wtktl cannot be reliably estimated from the corpus; yet, the distributional hypothesis asserts that wtktl can represent the meaning of tktl once it can be estimated from a sufficiently large ideal corpus. The bias bound proves that wtktl can be reasonably approximated by 12(wtk + wtl) in the ideal corpus, in addition wtk and wtl can be reliably estimated from the real corpus since individual words are abundant. Therefore, additive composition is suitable for representing meanings of phrases rare or unseen in a real corpus. Furthermore, it is suitable for frequently occurring phrases as well, because such phrases are usually strongly collocational and the upper bound (5) implies that the bias will be small in this case.\nMoreover, several empirical implications can be drawn from our bias bound, as described in the subsections below."
    }, {
      "heading" : "2.1 The Choice of Function F",
      "text" : "The condition (4) in 1 specifies a nontrivial constraint on the function F . Roughly speaking, it requires that F (p) has large slope as p tends to 0, for the bias bound to hold. This condition suggests that the asymptotic behavior of F (p) at the limit p → 0 may be a crucial factor in additive compositionality. In particular, since F (p) := ln p satisfies (4) with α = 0, and F (p) := √ p with α = 0.5, we expect the bias in additive composition of vector representations using theses settings of F to be bounded as predicted; however, a bias bound is not guaranteed for F (p) := p or F (p) := p ln p, as these settings do not satisfy (4). Therefore, vector representations using F (p) := p or F (p) := p ln p are probably less compatible to additive composition than F (p) := ln p and F (p) := √ p.\nDifferent settings of function F have been considered in previous research, and speculations have been made about the reason of semantic additivity of some of the vector representations. In Pennington et al. (2014), the authors noted that logarithm is a homomorphism from multiplication to addition, and used this property to justify F (p) := ln p for training semantically additive word vectors, based but on the unverified hypothesis that multiplications of co-occurrence probabilities have specialties in semantics. On the other hand, Lebret and Collobert (2014) proposed to use F (p) := √ p, which is motivated by the Hellinger distance between two probability distributions, and reported its being better than F (p) := p. Stratos et al. (2015) proposed a similar but more general and better-motivated\nmodel, which attributed F (p) := √ p to an optimal choice that stabilizes the variances of Poisson random variables. Based on the assumption that co-occurrence counts are generated by a Poisson process, the authors pointed out that F (p) := √ p may have the effect of stabilizing the variance in estimating the word vectors. In contrast, our theory shows clearly that F affects the bias of additive composition, besides the variance. All in all, none of the previous research can explain why F (p) := ln p and F (p) := √ p are both good choices but F (p) := p is not. To give a flavor of the effects that the function F can cause on the vector representations, here we show an outstanding example that is formalized as Lemma 2 in Section 4.4 and used in proof of our bias bound.\nClaim 2 Assume that a(τ), b(ci) and r are normalized as in 1. If F satisfies (4) and the corpus is sufficiently large, then the norms {‖wtktl‖} of all phrase vectors are approximately equal to 1.\n2 is closely related to the properties of natural language data, namely Zipf’s law and the Assumption I. in Section 4.3. Roughly speaking, Assumption I. suggests that all P (c|τ) tend to behave the same as P (c), independent of τ , as Freq(c) tends to 0. When α is small enough, F (p) has large slope as p tends to 0, so F (P (c|τ)) will “emphasize” those P (c|τ) that are small, which tend to behave the same as P (c). Therefore, the norms {‖wtktl‖} all become approximately the same as F emphasizes similar behaviors. The threshold of α being small enough, namely α ≤ 0.5, is determined by Zipf’s law.\nBoth 2 and the effect of F on the bias bound (5) are experimentally verified (Section 5). Furthermore, extrinsic evaluations show that F indeed drastically affects additive compositionality as judged by humans (Section 6); while F (p) := ln p and F (p) := √ p perform similarly well, F (p) := p and F (p) := p ln p are much worse."
    }, {
      "heading" : "2.2 Handling Word Order in Additive Composition",
      "text" : "By considering the vector representation wt1t2 we have ignored the word order and conflated the phrases “t1 t2” and “t2 t1”. Though meanings of these two phrases are usually related somehow, to treat a compositional framework as approximating wt1t2 instead of wt1 t2 would certainly be troublesome, especially when one tries to extend our theory to longer phrases or even sentences. As the following famous example (Landauer et al., 1997) shows, meanings of sentences can differ greatly as the word order changes.\na. It was not the sales manager who hit the bottle that day, but the office worker with the serious drinking problem.\nb. That day the office manager, who was drinking, hit the problem sales worker with a bottle, but it was not serious.\nTherefore, we need to handle the changes of meanings brought by different word ordering. Traditionally, additive composition is thought as unsuitable for this purpose because we always have wt1 + wt2 = wt2 + wt1 . However, the commutativity can be broken by defining different contexts for “left-hand-side” words and “right-hand-side” words, denoted by tL and tR respectively, so the co-occurring probabilities P (c|tL) and P (c|tR) will be different, therefore 12(wtL1 + wtR2 ) and 12(wtR1 + wtL2 ) will be different vectors. In this section, we\npropose the Near-far Context that defines different contexts for tL and tR such that, the phrase vector wt1 t2 for the ordered bigram t1 t2 can be approximated by\n1 2(wtL1 + wtR2 ).\nIn Near-far Context, context words are assigned labels, either N or F ; we redefine the lexicon C as a lexicon of N -F labeled context words, and regard words with different labels as different entries in the lexicon. As we have discussed previously, the key fact about additive composition is that, every word occurring in the context of t1t2 (i.e., both “t1 t2” and “t2 t1”) also occurs in the contexts of t1 and t2. Thus, our idea of handling word order in Near-far Context is that, to make every labeled word occurring in the context of t1 t2 contribute to the contexts of both tL1 and t R 2 , but none of the labeled words occurring in the context of t2 t1 do. This is achieved by assigning N -F labels to words surrounding t L or tR in different ways. For any target word or bigram, we label the nearer two words to each side by N , and the farther two words to each side by F ; except that, for tL we assign labels in the “left-hand-side way” by skipping one word adjacent to the right, and for tR we assign labels in the “right-hand-side way” by skipping one word adjacent to the left. Therefore, surrounding the ordered bigram t1 t2, the context words for t1 t2, t L 1 and t R 2 are all labeled the same (Figure 1); on the other hand, surrounding the reverse-ordered bigram t2 t1, the context words for t L 1 and t R 2 are labeled differently. As a result, no labeled word occurring in the context of t2 t1 contributes to both contexts of t L 1 and t R 2 , so we predict that the error ‖wt2 t1 − 12(wtL1 + wtR2 )‖ is likely to be larger than ‖wt1 t2 − 1 2(wtL1 + wtR2 )‖, which means that wtL1 + wtR2 approximates the meaning of t1 t2 rather than t2 t1.\nFormally, we have the following equations similar to (2) and (3):\nP (c|tLk ) = π(k\\l)LP (c|(tk \\ tl)L) + (1− π(k\\l)L)P (c|tk tl), (6) P (c|tRl ) = π(l\\k)RP (c|(tl \\ tk)R) + (1− π(l\\k)R)P (c|tk tl). (7)\nHere, (tk\\tl)L (resp. (tl\\tk)R) denotes the set of tokens of the target word tk (resp. tl) which do not come from tk tl, and of which the context words are labeled in the “left-hand-side way” (resp. “right-hand-side way”); the probability of a given token of tk (resp. tl) being such is denoted by π(k\\l)L (resp. π(l\\k)R). In practice, π(k\\l)L andπ(l\\k)R can be estimated as\nπ(k\\l)L = 1− Freq(tk tl)/Freq(tk) and π(l\\k)R = 1− Freq(tk tl)/Freq(tl).\nThen, we have a claim similar to 1.\nClaim 3 Under the same conditions as in 1, the following upper bound\n‖wtk tl − 1\n2 (wtLk + wtRl )‖ ≤\n√ 1\n2 (π2 (k\\l)L + π 2 (l\\k)R + π(k\\l)Lπ(l\\k)R)\nholds approximately in a sufficiently large corpus.\nThis is a bias bound for the approximation of meaning of the ordered bigram t1 t2 by the additive composition 12(wtL1 + wtR2 ). This bias bound, and the prediction that the error ‖wt2 t1 − 12(wtL1 + wtR2 )‖ for approximating the reverse-ordered t2 t1 can exceed the bound are experimentally verified, and we show that by using the additive composition of Near-far Context vectors, we can assess meaning similarities between ordered bigrams (Section 5.2)."
    }, {
      "heading" : "2.3 Dimension Reduction",
      "text" : "By far we have only discussed vector representations that have a high dimension equal to the lexicon size |C|. In practice, people mainly use low-dimensional vectors or “word embeddings” to represent meanings of words. Many of these embeddings, including SGNS and GloVe, can be formalized as factorizing the matrix ( s(ci, tj) ) i,j , which is equivalent to the finding of a d-dimensional vector vt (where d |C|) for each target word t, and a (|C|×d)-matrix A such that ∑ j L(Avtj ,wtj ) is minimized for some loss function L(·, ·). In other words, Avt is trained as a good approximation for wt.\nNaturally, we expect the loss function L to account for a major factor of word embeddings that could affect performance. Although there are empirical investigations on other detailed designs of some word embeddings (e.g. how to count co-occurrences with contexts, see Levy et al. 2015), their loss functions have not been explicitly discussed previously. Can the loss functions affect the additive compositionality of trained word vectors? In this section, we discuss this topic from a viewpoint of bounding the error ‖vt1t2 − 12(vt1 + vt2)‖.\nSVD When L is the L2-loss, the minimization problem has a closed-form solution given by the Singular Value Decomposition (SVD). More precisely, one uses SVD to factorize the matrix ( s(ci, tj) ) i,j into the form UΣV >, where U , V are orthonormal and Σ is diagonal.\nThen, Σ is truncated to the top d singular values, denoted by Σd. One solves A as U √\nΣd and vtj as the j-th column vector of √ ΣdV\n>. Such word vectors have been used in Lebret and Collobert (2014), Stratos et al. (2015) and Levy et al. (2015).\nFor L2-loss, we can assume that\n‖Avt1 −wt1‖ ≤ ε1, ‖Avt2 −wt2‖ ≤ ε2 and ‖Avt1t2 −wt1t2‖ ≤ ε3,\nwhere ε1, ε2 and ε3 are minimized. Therefore, by triangular inequality and 1,\n‖A · ( vt1t2 − 1\n2 (vt1 + vt2)\n) ‖ ≤ ‖wt1t2 − 1\n2 (wt1 + wt2)‖+\n1 2 (ε1 + ε2) + ε3\n≤ √ 1\n2 (π21\\2 + π 2 2\\1 + π1\\2π2\\1) +\n1 2 (ε1 + ε2) + ε3\nwhich suggests that ‖vt1t2 − 12(vt1 + vt2)‖ is bounded from above. However, the same argument cannot be directly applied to other loss functions, because a general loss may not satisfy a triangular inequality, and a bound for Euclidean distance may not always imply a bound for the loss function or vice versa. Especially, we consider the loss functions of some popular embedding methods here.\nGloVe The GloVe model (Pennington et al., 2014) is a dimension reduction of vector representations in which F (p) := ln p. For Avt = (vi)i and wt = (wi)i, the loss function is given by\nLt(vi, wi) = f ( #(ci, t) ) (vi − wi)2.\nIn words, GloVe uses a weighted L2-loss, where the weight f ( #(ci, t) ) is a function of the co-occurrence count #(ci, t). The function f is set to constant when #(ci, t) is larger than a given threshold, and it decreases to 0 when #(ci, t)→ 0. To minimize this loss function, GloVe uses stochastic gradient descent methods such as AdaGrad (Duchi et al., 2011).\nSGNS Originally inspired by neural networks (Mikolov et al., 2013b), SGNS is also a dimension reduction of vector representations in which F (p) := ln p. The training of SGNS is based on the Noise Contrastive Estimation (NCE) (Gutmann and Hyvärinen, 2012), therefore two inherited parameters can affect the loss function, namely the number k of noise samples per data point, and the distribution Pnoise(·) of noise. The loss function of SGNS is given in the following claim.\nClaim 4 For Avt = (vi)i and wt = (wi)i, the loss function of SGNS is given by Lt(vi, wi) = P (t)Dφi ( vi + ln(kPnoise(ci)), wi + ln(kPnoise(ci)) ) ,\nwhere Dφi(·, ·) is the Bregman divergence associated to the convex function\nφi(x) = ( P (ci|t) + kPnoise(ci) ) ln ( exp(x) + kPnoise(ci) ) .\nWhen k → +∞, Dφi converges to another Bregman divergence Dϕ which is associated to ϕ(x) = exp(x).\nThe proof of 4 is found in Appendix B. We draw a graph of the SGNS loss function in Figure 3, where vi − wi is plotted as x and Dφi ( vi + ln(kPnoise(ci)), wi + ln(kPnoise(ci)) ) is plotted as y. The graph grows faster at vi − wi → +∞ than at vi − wi → −∞, suggesting that an overestimation of wi by vi will be punished more than an underestimation. In addition, the loss function weighs more on frequent context words, as indicated by the P (ci|t) coefficient in the equation of the limit curve y = P (ci|t)(exp(x)− x− 1). Therefore,\nSGNS tends to enforce underestimations of wi for frequent context words (as overestimation will be costly), and to compensate wi for rare ones (i.e., since overestimations on rare context words are affordable, they will be done if necessary). This could be a special property of SGNS, different from a (weighted) L2-loss.\nOne property that is common in GloVe and SGNS, but not in SVD is that, the loss functions of GloVe and SGNS both weigh less on rare context words. As a result, the trained Avt may fail to approximate the low co-occurrence part of wt, of which the behavior is emphasized by the choice of function F , as we have discussed in Section 2.1. Since this emphasized behavior forms a crucial part in derivation of our bias bound, we expect word vectors trained by GloVe or SGNS to be less respectful to the bound. Therefore, we conjecture that the loss functions of these models can hurt additive compositionality.\nThe above discussion is only exploratory and cannot fully comply with practice because, after vt are trained by dimension reduction, people usually re-scale all the norms of vt to 1, then they use these normalized word vectors for additive composition. It is not clear why this normalization step can usually result in better performance.\nNevertheless, in our experiments, we find that word vectors trained by SVD can preserve the upper bound (5) well, even after the normalization step is conducted. On the other hand, word vectors trained by GloVe or SGNS are less respectful to the bound as predicted (Section 5.3). Furthermore, extrinsic evaluations also show that word vectors trained by SVD might be more compatible to additive composition, as judged by humans (Section 6)."
    }, {
      "heading" : "3. Related Work",
      "text" : "Additive composition is the classical approach to approximating the semantics of phrases and/or sentences (Foltz et al., 1998; Landauer and Dutnais, 1997). Compared to other composition operations, vector addition/average has either served as a strong baseline (Mitchell and Lapata, 2008), or remained one of the most competitive methods until recently (Banea et al., 2014). Additive composition has been successfully integrated into several NLP systems as well. For example, Tian et al. (2014) use vector additions for assessing meaning similarities between paraphrase candidates in a logic-based textual entailment recognition system (e.g. the similarity between “blamed for death” and “cause loss of life” is calculated by the cosine similarity between sums of word vectors vblame+vdeath and vcause+vloss+vlife); in Iyyer et al. (2015), the average of word vectors in a whole sentence/document is fed into a deep neural network for sentiment analysis and question answering, which achieves near state-of-the-art accuracies with minimum training time. Other semantic relations have been represented by vector additions as well, such as analogy (e.g. the vector vking−vman+vwoman turns out to be close to vqueen, illustrating the relation “man is to king as woman is to queen”, see Mikolov et al. 2013a), and synonymy (i.e. the sum of word vectors in a set of synonyms is used to represent that “synset”, see Rothe and Schütze 2015). We believe all these utilities can be related to our theory for additive composition somehow, for example a hypothesis that relates word analogy with additive composition of phrases is described in Section 6.2. Thus, we expect our theory to provide new insights into these previous works, for example, about the word vectors being used.\nWord-order dependent syntactic effects on meaning have been considered as the most important lack in additive composition (Landauer, 2002). Driven by this point of view, a\nnumber of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014). The ordinary approach is by introducing new parameters to represent differences in word positions or syntactic roles. For example, in a two-word phrase, one can first transform the two word vectors by different matrices before adding them, in which the two matrices are parameters (Mitchell and Lapata, 2008); or, regarding different syntactic roles, one can assign matrices to adjectives for modifying vectors of nouns (Baroni and Zamparelli, 2010); further, one can insert neural network layers between parents and their children in a syntactic tree (Socher et al., 2012). An empirical comparison of a broad range of compositional models, with an accessible introduction to the literature can be found in Blacoe and Lapata (2012). One theoretical issue of these methods, however, is that they lack learning guarantee. In contrast, our proposal of the Near-far Context demonstrates that, at least for two-word phrases, word order can still be handled by additive composition, in a parameter-free way with a proven bias bound.\nError bounds in approximation schemes have been extensively studied in statistical learning theory (Vapnik, 1995; Gnecco and Sanguineti, 2008), and especially for neural networks (Niyogi and Girosi, 1999; Burger and Neubauer, 2001). Since we have formalized compositional frameworks as approximation schemes, there is a good chance to apply the theories of approximation error bounds to this problem, especially for advanced compositional frameworks that have many parameters. Though the theories are usually established on general settings, we see a great potential in using properties that are specific to natural language data, as we demonstrate in this work.\nThere have been consistent efforts toward understanding the stochastic behavior of natural languages. Zipf’s law (Zipf, 1935) is a classical observation and still finds new applications in recent results (Kobayashi, 2014). Advanced Bayesian language models such as the hierarchical Pitman-Yor process (Teh, 2006) and the topic model (Blei, 2012) have been proposed, which we expect could further refine our theory, for example, by considering the additive compositionality of topics."
    }, {
      "heading" : "4. Proof of the Bias Bound",
      "text" : "In order to derive the bias bound, we should study statistics of the vector representation wτ as a whole, rather than delve into some specific co-occurrence probabilities. Our idea is to view ci ∈ C (1 ≤ i ≤ |C|) as a random sample drawn from a probability space Ω|C|, and view P (·), P (·|τ) and s(·, τ) as random variables (i.e., functions from Ω|C| to R). For brevity, we denote P (·|τ) by Pτ and s(·, τ) by Sτ . Then, by the law of large numbers,\n1\n|C| E2t1t2 : E|C|[(St1t2 −\n1 2 (St1 + St2)) 2], (8)\nwhere E|C|[·] denotes the expectation of a random variable on Ω|C|, and “:” denotes equality at the limit of an infinitely large corpus, i.e. |C| → ∞. Thus, we have converted our goal of bounding Et1t2 into an estimation of the second moment of a random variable, namely X := St1t2 − 12(St1 + St2).\nIn order to discuss the limit |C| → ∞, we formally define Ω|C| as follows. Firstly, we assume a measure space Ω which contains all (infinitely many) possible words, and each\nword is measured uniformly. Assume a measurable function Freq : Ω→ R representing the word frequency. Then, letting fn be the frequency of the n-th frequent word, we define\nΩn := {c ∈ Ω | Freq(c) ≥ fn},\nso Ω|C| contains the (finitely many) words of which the frequencies are greater than f|C|. We define a probability on Ω|C| by normalizing the measure of Ω such that the entire subspace Ω|C| ⊂ Ω is measured as 1.\n4.1 Normalization of a(τ), b(ci), and r\nRecall that E|C|[X 2] = V|C|[X] +E|C|[X] 2, where V|C|[·] denotes the variance. By adjusting a(τ), we can always set E|C|[Sτ ] = 0, so that E|C|[X] = 0 and V|C|[X] is unaffected, which results in a smaller error E|C|[X\n2] = V|C|[X]. Therefore, we focus on this case and assume that a(τ) is adjusted such that E|C|[Sτ ] = 0 (i.e. the entries of wτ sum to 0).\nIn order to fairly compare Et1t2 for different F , the scale r should also be normalized. Since both ‖wt1t2‖ and Et1t2 scale linearly with r, we first use b(ci) to shift wτ such that the collection {wtktl} of phrase vectors has a centroid 0, then we set r such that the norms {‖wtktl‖} average to 1. The shift step prevents {wtktl} from clustering around one point, and it is sufficient to focus on one setting of b(ci), because b(ci) does not affect the error (i.e., it is canceled out in the expression of Et1t2). In Section 4.4, we will approximately calculate these terms for a specific family of function F ."
    }, {
      "heading" : "4.2 Zipf’s Law",
      "text" : "An assumption essential to our calculation is Zipf’s law (Zipf, 1935), which states that the frequency of any word is inversely proportional to its rank in the frequency table. In other words, we have f1/fn = n. Now, consider the probability Pr(Freq ≥ fn). By definition, there are a total of n words of which the frequencies are greater than fn. Meanwhile, there are a total of |C| words in Ω|C| and each occurs uniformly, so we have Pr(Freq ≥ fn) = n/|C|. Therefore,\nPr(Freq ≥ fn) = n\n|C| = f1 |C| · fn = f|C| fn . (9)\nReplacing fn in (9) by x, we obtain the cumulative distribution function of Freq:\nPr(Freq ≥ x) = f|C|\nx (f|C| ≤ x). (10)\nThen, by differentiating (10), we obtain the probabilistic density function of Freq:\nPr(x ≤ Freq < x+ dx) = f|C|\nx2 dx (f|C| ≤ x). (11)\nWe view the random variable P as a constant multiple of Freq, namely\nP = ω · Freq, (12)\nwhere ω is a constant. It is known that Zipf’s law holds well on many natural language corpora. We refer to Montemurro (2001), Ha et al. (2002), and Clauset et al. (2009) for detailed analyses and empirical tests."
    }, {
      "heading" : "4.3 An Assumption on Pτ",
      "text" : "In effect, Zipf’s law specifies the distribution of the random variable Freq in (11), which in turn determines the distribution of P via Equation (12). We need assumptions that specify the distributions of random variables Pτ as well, where τ can be a bigram t1t2 or a restricted target word t1 \\ t2. We do not expect a random P (c|τ) for c ∼ Ω|C| to be too different from P (c), especially when Freq(c) is small because, by Zipf’s law there are a lot of context words whose frequencies are small, but intuitively only a small number of c ∈ Ω|C| are semantically related to the target τ and will have a P (c|τ) drastically different from P (c). Therefore, we make the following Assumption I.:\nI. There exist κ > 0 and β 6= 0 such that,\nlim x→0 E[ ( ln Pτ P )2 | Freq = x]/xκ = β (13) and lim\nx→0 E[ln Pτ P | Freq = x]2/xκ = 0. (14)\nHere, E[· | Freq = x] denotes the conditional expectation, which is calculated by taking the expectation on c ∈ Ω such that Freq(c) = x. Equation (13) means that P (c|τ) is likely to be closer to P (c) as Freq(c) becomes smaller, so the conditional second moment of ln(Pτ/P ) decreases to 0 at a rate of xκ. Moreover, Equation (14) assumes that the squared conditional first moment of ln(Pτ/P ) decreases even faster.\nAssumption I. is experimentally verified in Section 5. It is used in calculations of the first and second moments of F (Pτ ) for a wide range of function F . The approach, called the “delta method” (Oehlert, 1992), is as follows. For brevity, we use Yx := ln(Pτ/P ) ∣∣ Freq=x to denote the random variable ln(Pτ/P ) restricted to the condition “Freq = x”. When x is small, Equation (13) suggests that E[Y 2x ] is small, so Yx is likely to be near to 0, hence for any smooth function ϕ we can use ϕ′(0)Yx + ϕ(0) to approximate ϕ(Yx). Therefore, we can derive that E[ϕ(Yx)] ≈ ϕ′(0)E[Yx] + ϕ(0), etc. Formally, this approximation can be justified under the limit x→ 0, as the following lemma suggests.\nLemma 1 Let ϕx(y) be a family of smooth functions parameterized by x. If ϕx satisfies\n(i) ϕx(0) = 0 and limx→0 ϕ ′ x(0) = θ\n(ii) {ϕx(y)/y} is equicontinuous at y = 0\n(iii) {(ϕx(Yx)− ϕ′x(0)Yx)2/xκ} is uniformly integrable\nthen we have\nlim x→0\nE[ϕx(Yx) 2]/xκ = θ2β and lim\nx→0 E[ϕx(Yx)]\n2/xκ = 0.\nThe condition (ii) in Lemma 1 is usually easy to confirm. Condition (iii) is technical but rather mild, and we believe the distribution of Yx is tame enough for this condition to be satisfied by most ϕx that we consider. The proof of Lemma 1 is found in Appendix A.\nAs an example, if F (p) := pα, we set ϕx(y) := exp(αy)− 1 and Lemma 1 implies that\nlim x→0 E[ ( ( Pτ P )α − 1 )2 | Freq = x]/xκ = α2β. (15)\nThen, the second moment E|C|[F (Pτ ) 2] can be calculated by integrating E[ϕx(Yx) 2] with respect to x, using the probability density of Freq = x given in (11). This calculation is fully exploited in Section 4.4 where we derive a condition for good choices of function F ."
    }, {
      "heading" : "4.4 Effects of the Function F",
      "text" : "We characterize the function F (p) by its asymptotic behavior at p → 0, which is natural because in constructing vector representations, p is substituted by small probability values. Formally, we define an index α associated to F to be such that\nlim p→0\nF ′(p) pα−1 = θ where θ is a nonzero real number,\nindicating the “steepness” of F at 0. For example, when F is a power function F (p) := pα (α 6= 0), its index coincides with the power α. When F (p) := ln p, we have α = 0. The index α turns out to be a crucial factor in determining the properties of vector representations, as we explain below.\nWe consider the difference between F (Pτ ) and F (P ). The intuition is that, when α is smaller, F has larger slope near 0, so the differences between small Pτ and P get more amplified in the expression F (Pτ )− F (P ). This amplified part will dominate the behavior of F (Pτ )− F (P ) if α is small enough; and its behavior can be calculated as follows.\nWe set\nϕx(y) := F (ωx exp(y))− F (ωx)\n(ωx)α ,\nthen, by integrating conditional expectations with respect to the probability density of Freq = x given in (11) we have\nE|C|[(F (Pτ )− F (P ))2]\n= ∫ f1 f|C| E[(F (Pτ )− F (P ))2 | Freq = x] Pr(x ≤ Freq < x+ dx)\n= f|C| ∫ f1 f|C| E[(F (Pτ )− F (P ))2 | Freq = x] x2 dx\n= f|C| ∫ f1 f|C| E[ (F (Pτ )−F (P ) Freqα )2 | Freq = x] x2−2α dx\n= ω2αf|C| ∫ f1 f|C| E[ (F (Pτ )−F (P ) Pα )2 | Freq = x] x2−2α dx\n= ω2αf|C| ∫ f1 f|C| E[ϕx(Yx) 2] x2−2α dx.\n(16)\nNow, the limit of ϕ′x(0) is calculated as\nlim x→0 ϕ′x(0) = lim x→0\nF ′(ωx)\n(ωx)α−1 = θ,\nhence by Lemma 1, E[ϕx(Yx) 2] is asymptotically equivalent to θ2βxκ at x → 0. Thus, the integrand in (16) is asymptotically equivalent to θ2βx−2+2α+κ. Therefore, if α is small enough such that −2 + 2α + κ < 0, we have limx→0 θ2βx−2+2α+κ = ∞ so this asymptotic behavior will dominate the integral (16). In other words, we expect the following\nN|C| := θ 2βω2αf|C| ∫ f1 f|C|\ndx\nx2−2α−κ\nto be a good approximation for (16) if −2 + 2α+ κ < 0. Formally, we have the following lemma.\nLemma 2 Assume that −2 + 2α+ κ ≤ −1 and{( F (Pτ )− F (P )− F ′(P )P ln(Pτ/P ) )2 /P 2α+κ ∣∣ Freq=x } is uniformly integrable. Then\nE|C|[(F (Pτ )− F (P ))2] N|C| : 1 and E|C|[F (Pτ )− F (P )]2 N|C| : 0,\nand the equality approximately holds for −2 + 2α+ κ < 0.\nThe second moment E|C|[(F (Pτ )−F (P ))2] can be viewed as a measure of the difference between F (Pτ ) and F (P ). This difference is “small” compared to the second moment E|C|[F (P ) 2], as the following lemma suggests.\nLemma 3 Assume that α ≤ 0.5 and {( F (Pτ )/F (P )− 1 )2∣∣ Freq=x } is uniformly integrable. Then E|C|[(F (Pτ )− F (P ))2]\nE|C|[F (P )2] : 0,\nand the equality approximately holds for α < 1.\nIn other words, if we define the vector representations as wτ := (F (P (ci|τ)))i and assume that α < 1, then in a large corpus, every wτ will be close to the vector w := (F (P (ci)))i, when one judges from the scale of ‖w‖. This observation suggests that we use w as an approximation of the centroid of {wtktl} which, as we have discussed in Section 4.1, needs to be shifted to 0 by normalizing b(ci). Therefore, we set b(ci) := F (P (ci)). We find this approximation admissible in experiments (Section 5).\nWhen b(ci) = F (P (ci)), we set a(τ) := E|C|[F (Pτ )− F (P )] to make E|C|[Sτ ] = 0, so Sτ = r · ( F (Pτ )− F (P )− E|C|[F (Pτ )− F (P )] ) .\nThen, if −2 + 2α+ κ < 0, Lemma 2 implies that\nE|C|[S 2 τ ] ≈ r2N|C|.\nSince N|C| is independent of the target τ , this equation suggests that, when vector representations are constructed as in Section 4.1 and if −2 + 2α + κ < 0, the norms of these vectors are almost the same. This prediction is experimentally verified in Section 5.\nTherefore, in the above case we can set\nr := 1√\n|C| ·N|C|\nto make the averaged norm approximately equal to 1. The following lemma is a crucial piece in proof of our bias bound and also dependent on the choice of function F . Proofs of all lemmas are found in Appendix A.\nLemma 4 Assume that −2 + 2α+ κ ≤ −1 and{( F (Ptk)− πk\\lF (Ptk\\tl)− (1− πk\\l)F (Ptktl) )2 /P 2α+κ ∣∣ Freq=x } is uniformly integrable. Then\nE|C|[ ( F (Ptk)− πk\\lF (Ptk\\tl)− (1− πk\\l)F (Ptktl) )2 ]\nN|C| : 0,\nand the equality approximately holds for −2 + 2α+ κ < 0."
    }, {
      "heading" : "4.5 An Upper Bound for the Bias of Additive Composition",
      "text" : "The proof of our bias bound needs a second assumption, which is based on the intuition that, contexts of the restricted target words tk \\ tl and tl \\ tk are “irrelevant”, because the targets are different words (i.e. tk and tl respectively) that are not occurring together. Therefore, as random variables, we expect F (Ptk\\tl)− F (P ) and F (Ptl\\tk)− F (P ) to be independent. On the other hand, contexts of the target bigram tktl could be somehow related to that of tk \\ tl (resp. tl \\ tk), because they both co-occur with the word tk (resp. tl). Therefore, we expect F (Ptktl)− F (P ) and F (Ptk\\tl)− F (P ) (resp. F (Ptl\\tk)− F (P )) to have positive correlation. Formally, we make the following Assumption II.:\nII. F (Ptk\\tl) − F (P ) and F (Ptl\\tk) − F (P ) are independent random variables, whereas F (Ptktl)−F (P ) and F (Ptk\\tl)−F (P ) (resp. F (Ptl\\tk)−F (P )) have positive correlation.\nThen, we can state our bias bound as Theorem 5 below.\nTheorem 5 Assume Zipf ’s law, Assumption I. for τ = tktl, tk \\ tl, and Assumption II. Let F be a smooth function that satisfies the following conditions:\n(i) lim p→0\nF ′(p) pα−1 = θ 6= 0,\n(ii) {( F (Pτ )− F (P )− F ′(P )P ln(Pτ/P ) )2 /P 2α+κ ∣∣ Freq=x } is uniformly integrable,\n(iii) {( F (Ptk)−πk\\lF (Ptk\\tl)−(1−πk\\l)F (Ptktl) )2 /P 2α+κ ∣∣ Freq=x } is uniformly integrable.\nLet\nSτ = 1√ |C| ·N|C| · ( F (Pτ )− F (P )− E|C|[F (Pτ )− F (P )] ) .\nThen, if |C| → ∞ and −2 + 2α+ κ ≤ −1 we have\n|C| · E|C|[ ( Stktl − 1\n2 (Stk + Stl)\n)2 ] ≤ 1\n2 (π2k\\l + π 2 l\\k + πk\\lπl\\k),\nand the inequality approximately holds for −2 + 2α+ κ < 0.\nProof We set\nX := Stktl − 12(Stk + Stl)\nX̃ := (πk\\l + πl\\k)Stktl − πk\\lStk\\tl − πl\\kStl\\tk ∆1 := Stk − πk\\lStk\\tl − (1− πk\\l)Stktl ∆2 := Stl − πl\\kStl\\tk − (1− πl\\k)Stktl .\nThen\nX = 1 2 X̃ − 1 2 ∆1 − 1 2 ∆2,\nhence by triangular inequality,√ E|C|[X2] ≤ 1\n2\n√ E|C|[X̃2] + 1\n2\n√ E|C|[∆ 2 1] + 1\n2\n√ E|C|[∆ 2 2]. (17)\nNow, let\n∆̃1 := 1√ |C| ·N|C| · ( F (Ptk)− πk\\lF (Ptk\\tl)− (1− πk\\l)F (Ptktl) ) ∆̃2 :=\n1√ |C| ·N|C|\n· ( F (Ptl)− πl\\kF (Ptl\\tk)− (1− πl\\k)F (Ptktl) ) .\nThen, since ∆̃1 −∆1 (resp. ∆̃2 −∆2) is a constant and E|C|[∆1] = 0 (resp. E|C|[∆2] = 0), we have\nE|C|[∆ 2 1] = V|C|[∆̃1] ≤ E|C|[∆̃21] E|C|[∆ 2 2] = V|C|[∆̃2] ≤ E|C|[∆̃21] . (18)\nBy Lemma 4, we have\n|C| · E|C|[∆̃21] : 0 and |C| · E|C|[∆̃22] : 0. (19)\nWe calculate E|C|[X̃ 2] as follows.\nE|C|[X̃ 2] = (πk\\l + πl\\k) 2E|C|[S 2 tktl ] + π2k\\lE|C|[S 2 tk\\tl ] + π 2 l\\kE|C|[S 2 tl\\tk ]\n− 2(πk\\l + πl\\k)πk\\lE|C|[StktlStk\\tl ] − 2(πk\\l + πl\\k)πl\\kE|C|[StktlStl\\tk ] + 2πk\\lπl\\kE|C|[Stl\\tkStk\\tl ]\n.\nBy Lemma 2, we have\n|C| · E|C|[S2tktl ] : 1, |C| · E|C|[S 2 tk\\tl ] : 1, and |C| · E|C|[S 2 tl\\tk ] : 1.\nBy Assumption II., we have\nE|C|[StktlStk\\tl ] ≥ 0, E|C|[StktlStl\\tk ] ≥ 0, and E|C|[Stl\\tkStk\\tl ] = 0.\nTherefore,\n|C| · E|C|[X̃2] ≤ (πk\\l + πl\\k)2 + π2k\\l + π 2 l\\k. (20)\nCombining (17), (18), (19) and (20), we get\n|C| · E|C|[X2] ≤ 1\n2 (π2k\\l + π 2 l\\k + πk\\lπl\\k),\nwhich is the bias bound.\nRoughly speaking, in the above proof, we have used πk\\lStk\\tl+(1−πk\\l)Stktl and πl\\kStl\\tk+ (1− πl\\k)Stktl to approximate Stk and Stl , respectively. Thus, when Stk and Stl are added up, the Stktl components merge, and the independent components Stk\\tl and Stl\\tk tend to cancel out each other, making the result close to Stktl .\nExperimentally, we verify the upper bound on a real corpus, and confirm that the condition on α (i.e. the asymptotic behavior of F (p) at p→ 0) is crucial for this bound to hold (Section 5.1)."
    }, {
      "heading" : "5. Experimental Verification",
      "text" : "We use the British National Corpus (BNC) (The BNC Consortium, 2007) for verifying the assumptions and implications of our theory. The corpus contains about 100 million word tokens, including written texts and utterances in British English. For constructing vector representations, we use lemmatized words annotated in the corpus, and count the co-occurrences within context windows not crossing sentence boundaries. The sizes of the context windows are 5 to each side for a target word, and 4 for a target bigram. We extract all unigrams, ordered bigrams and unordered bigrams which occur more than 200 times. This results in 16,210 unigrams, 45,793 ordered bigrams and 45,398 unordered bigrams as targets. For the lexicon C of context words, we use the same set of unigrams.\nThe co-occurrence probability P (ci|τ) is estimated by\nP (ci|τ) = #(ci, τ)∑ c∈C #(c, τ) + 1 |C| ,\nwhere #(c, τ) is the event count of a target τ co-occurring with a context word c. We add an extra small number 1/|C| to the co-occurrence probability to avoid a 0 value, because P (ci|τ) is fed to the function F for constructing the vector representation, where F could diverge at 0 (e.g. F (p) := ln p). With the extra term 1/|C|, the sum ∑ ci∈C P (ci|τ) results in 2 instead of 1, but our theory is irrelevant to this property. Such P (ci|τ) is used in all experiments presented in this paper, but we have also confirmed that when F is well\ndefined at 0 (e.g. F (p) := √ p), calculating P (ci|τ) without 1/|C| will only slightly affect the performance of vector representations.\nNow, we verify Assumption I. in Section 4.3. In order to estimate the conditional expectation E[· | Freq = x], we use E[· |x ≤ Freq < x+ 500] which is calculated as expectations conditioned on such c ∈ Ω|C| that x ≤ Freq(c) < x + 500. In Figure 4, we plot x ranging from 500 to 20000, and calculate the average of the following collections as y, with their standard deviations as error bars. We find empirically κ ≈ 0.9 and use this setting here.\n(a) { E[ ( ln(Ptk/P ) )2 |x ≤ Freq < x+ 500]/x0.9} for all tk (b) { E[ ( ln(Ptktl/P )\n)2 |x ≤ Freq < x+ 500]/x0.9} for all tktl (c) { E[ (√ Ptk/P − 1 )2 |x ≤ Freq < x+ 500]/x0.9} for all tk\n(d) { E[ln(Ptktl/P ) |x ≤ Freq < x+ 500]2/x0.9 } for all tktl\nThe graph (a) in Figure 4 shows that y tends to a nonzero constant β ≈ 0.0002 at x → 0, verifying (13) for target words tk. Similarly, y in graph (b) approaches almost the same value as in (a), which verifies (13) for target bigrams tktl, and justifies the use of a constant β in (13) across all types of targets. Furthermore, we find that y approximately tends to β/4 in graph (c), which agrees with the implication (15). In graph (d), we confirm (14).\nNext, we verify the predictions in Section 4.4 that when we set wτ := (F (P (ci|τ)))i and w := (F (P (ci)))i, the centroid of {wtktl} will be close to w; and if vector representations are constructed as in Section 4.1, the norms of these vectors will be almost the same at α ≤ 0.5. Hence, in Figure 5, we plot α = 0, . . . , 1 as x, using F (p) := ln p (α = 0) and F (p) := xα (α = 0.1, . . . , 1) as delegates for the different α. Then, the blue curve shows the distance between w and the centroid of {wtktl} as y, of which the scale is normalized such that ‖w‖ = 1. It verifies that w is indeed close to the centroid of {wtktl}. And the red curve shows the standard deviation of the norms {‖wtktl‖} as y, of which the scale is normalized as in Section 4.1, namely the average of {‖wtktl‖} is set to 1 after the centroid of {wtktl} is shifted to 0. This curve confirms that, as long as α ≤ 0.5, the norms have little deviation; however, once α gets larger, the deviation begins to explode. This is not astonishing because, as we have argued in the discussion before Lemma 2, when α is large, high frequency context words will largely contribute to the norms of wtktl , and since the behaviors of these high frequency parts vary a lot for different tktl as demonstrated by the long error bars in Figure 4(d), the norms deviate."
    }, {
      "heading" : "5.1 The Choice of Function F",
      "text" : "In this section, we verify the bias bound (5) for bigrams observed in the BNC, and confirm the effects of the function F . We normalize a(τ), b(ci), and r as in Section 4.1, and for each bigram tktl that occurs more than 200 times in the BNC, we plot√\n1 2 (π2k\\l + π 2 l\\k + πk\\lπl\\k) as x and ‖wtktl − 1 2 (wtk + wtl)‖ as y.\nThe graphs are shown in Figure 6. We demonstrate different choices of F as shown above each graph. It confirms that, if F is chosen such that α ≤ 0.5 (i.e. F (p) := ln p in (a) and F (p) := √ p in (b)), then the theoretical error bound y ≤ x (red solid lines) fits sharply to the graph. When α gets larger, if seems that the errors are no longer bounded from above. In Section 6, we extrinsically evaluate the additive compositionality of vector representations, and find that F is also a crucial factor there; while F (p) := ln p and F (p) := √ p evaluate similarly well, F (p) := p and F (p) := p ln p do not. This suggests that our bias bound actually has the power of predicting additive compositionality, demonstrating the usefulness of our theory. In contrast, it seems that the averaged level of approximation errors of observed bigrams (as shown as green dashed lines in Figure 6) is less predictive, for the poor performing settings F (p) := p and F (p) := p ln p have even lower levels. This emphasizes a particular caveat that, choosing composition operations by minimizing the averaged error level, which is a widely adopted approach in practice (Dinu et al., 2013;\nBaroni and Zamparelli, 2010; Guevara, 2010), may not always be justifiable. Here if we consider the function F as a parameter in additive composition, choosing it by the average of errors on observed bigrams will only result in a worse setting. Therefore, we see how important a learning theory for the research of composition is."
    }, {
      "heading" : "5.2 Handling Word Order in Additive Composition",
      "text" : "For vector representations constructed from the Near-far Contexts (Section 2.2), we have a similar bias bound as given in 3, for approximating ordered bigrams. The formalization and proof are done simply by redefining C as the lexicon of N -F labeled context words, assuming Zipf’s law for this lexicon, and in Assumption I., II. and Theorem 5 replacing tktl, tk \\ tl and tl \\ tk by tk tl, (tk \\ tl)L and (tl \\ tk)R, respectively.\nIn this section, we experimentally verify the bias bound for additive composition of Nearfar Context vectors, and qualitatively show that the composition can be used for assessing similarities between ordered bigrams. In Figure 7 and Figure 8, we plot√\n1\n2\n( π2 (k\\l)L + π 2 (l\\k)R + π(k\\l)Lπ(l\\k)R ) as x,\n‖wtk tl − 1\n2 (wtLk + wtRl )‖ as y in (a), and ‖wtk tl −\n1 2 (wtRk + wtLl )‖ as y in (b)\nfor every ordered bigram tk tl that occurs more than 200 times in the BNC. We confirm that, the additive composition 12(wtLk + wtRl ) approximates wtk tl with errors bounded by y ≤ x (red solid lines). On the other hand, the reverse-ordered composition 12(wtRk + wtLl\n) does not conform to this error bound, suggesting that the composition recognizes word order. In Table 2, we show the nearest 8 word pairs for each of 8 ordered bigrams, measured by cosine similarity, using the additive composition 12(vtL1 + vtR2 ) to represent the meaning of any word pair “t1 t2”, where vtL1 and vtR2\nare 200-dimensional SVD reductions of wtL1 and wtR2 respectively, with F (p) := √ p. The table shows that additive composition of Near-far Context vectors can indeed distinguish word order, for example, “pose problem” is near to “arise dilemma” but not to “dilemma arise”, and “problem pose” is near to “difficulty cause” but not to “cause difficulty”. It is also noteworthy that “not enough” is similar to “always want”, showing some degree of semantic similarity that is beyond the word level. We believe this ability of additive composition by Near-far Context vectors to\ncompute meanings of ordered word pairs is already highly useful, because there are only a few bigrams of which the meanings can be directly learned from the corpus."
    }, {
      "heading" : "5.3 Dimension Reduction",
      "text" : "In this section, we verify the prediction in Section 2.3 that word vectors trained by SVD can preserve the bias bound (5) in additive composition better than GloVe and SGNS. In Figure 9, we use normalized word vectors that are constructed from ordinary contexts in the BNC and reduced to 200 dimensions by different reduction methods. We use F (p) := ln p and F (p) := √ p in (a) and (b) respectively, both trained by SVD. The GloVe model and SGNS use F (p) := ln p, and are shown in (c) and (d) respectively. We plot\n√ 1\n2 (π2k\\l + π 2 l\\k + πk\\lπl\\k) as x and ‖vtktl −\n1 2 (vtk + vtl)‖ as y.\nThe graphs show that vectors trained by SVD still largely conform to the bias bound y ≤ x (red solid lines), but vectors trained by GloVe or SGNS no longer do. Our extrinsic evaluations in Section 6 also show that SVD might perform better than GloVe and SGNS."
    }, {
      "heading" : "6. Extrinsic Evaluations of Additive Compositionality",
      "text" : "In this section, we test additive composition on human annotated data sets to see if our theoretical predictions correlate with human judgments. We conduct a phrase similarity task and a word analogy task."
    }, {
      "heading" : "6.1 Phrase Similarity",
      "text" : "In a data set1 created by Mitchell and Lapata (2010), phrase pairs are annotated with similarity scores. Each instance in the data is a (phrase1, phrase2, similarity) triplet, and each phrase consists of two words. The similarity score is annotated by humans, ranging from 1 to 7, indicating how similar the meanings of the two phrases are. For example, one annotator assessed the similarity between “vast amount” and “large quantity” as 7 (the highest), and the similarity between “hear word” and “remember name” as 1 (the lowest). Phrases are divided into three categories: Verb-Object, Compound Noun, and Adjective-Noun. Each category has 108 phrase pairs, and they are annotated by 18 human participants (i.e., 1,944 instances in each category). Using this data set, we can compare the human ranking of phrase similarity with the one calculated from cosine similarities between vector-based compositions. We use Spearman’s ρ to measure how correlated the two rankings are.\nVector representations are extracted from the BNC, in the same settings as in Section 5. We show in Figure 10 the distributions of how many times the phrases in the data occur as bigrams in the corpus. The figure indicates that, a large portion of the phrases are rare or unseen as bigrams, so their meanings cannot be directly extracted as bigram vectors from the corpus. Therefore, the data is suitable for testing compositions of word vectors.\nAfter the vector representations are extracted, they are reduced to 200-dimensional and normalized. The dimension is selected by observing the top 800 singular values of the vector representations. As illustrated in Figure 11, the decreases of the singular values flatten to a constant rate at a rank of about 200. This indicates that the most characteristic features in the vector representations can be projected into 200 dimensions. In our preliminary experiments, we have confirmed that a dimension of 200 performs better than 100, 500 or no dimension reduction.\n1. http://homepages.inf.ed.ac.uk/s0453356/\nFor training word vectors, we use the random projection algorithm (Halko et al., 2011) for SVD, and Stochastic Gradient Descent (SGD) (Bottou, 2012) for SGNS and GloVe. Since these are randomized algorithms, we run each test 20 times and report the mean performance with standard deviation. We tune SGD learning rates by checking convergence of the objectives, and get slightly better results than the default training parameters set in the software of SGNS2 and GloVe3.\nAs pointed out by Levy et al. (2015), there are other detailed settings that can vary in SGNS and GloVe. We make these settings close enough to be comparable but emphasize the differences of loss functions. More precisely, we use no subsampling and set the number of negative samples to 2 in SGNS, and use the default loss function in GloVe with cutoff threshold set to 10. In addition, the implementation of SGNS and GloVe both weigh context words by a function of their distances to the targets, which we disable (i.e. equal weights are used for all context words) so as to make them compatible with the contexts that we consider in this paper.\nThe test results are shown in Table 3. We compare different settings of function F , Ordinary and Near-far Contexts, and different dimension reductions. When using ordinary contexts and SVD reduction, we find that the functions ln (F (p) := ln p) and sqrt (F (p) := √ p) perform similarly well, whereas id (F (p) := p) and xlnx (F (p) := p ln p) are much worse, confirming our predictions in Section 2.1. As for Near-far Context vectors (Section 2.2), we find that the Nearfar-sqrt-SVD setting has a high performance, demonstrating that Near-far Context can improve additive composition. On the other hand, Nearfar-ln-SVD is worse, for which one reason could be that, the function ln emphasizes lower frequency context words, so it combined with Near-far labels could make context words more sparse; or relevantly, some important syntactic markers (e.g. “the”, “a”) might get obscured because they have high frequency. Finally, we find that SVD is consistently good and usually better than GloVe and SGNS, which supports our arguments in Section 2.3.\nWe report some additional test results as references. In Table 3, the “Tensor Product” row shows the results using compositions of the Ordinary-ln-SVD word vectors by tensor products instead of averages, which means that the similarity between two phrases “a1 b1” and “a2 b2” is calculated as the product of the cosine similarities cos(a1, a2) · cos(b1, b2).\n2. https://code.google.com/p/word2vec/ 3. http://nlp.stanford.edu/projects/glove/\nThe numbers are worse than additive composition, which suggests that a similar phrase may be more than a sequence of separately similar words. In the “Upper Bound” row, we show the best possible Spearman’s ρ for this task, which are less than 1 because there are disagreements between human annotators. Compared to these numbers, we find that the performance of additive composition on compound nouns is remarkably high. Furthermore, in “Muraoka et al.”, we cite the best results reported by Muraoka et al. (2014), which has experimented on many different composition methods. And in “Deep Neural”, we test additive compositions of word vectors trained by deep neural networks (normalized 200-dimensional vectors trained by Turian et al. 2010, using the model of Collobert et al. 2011). These results cannot be directly compared because the word vectors are learned from different corpora, but we can fairly say that additive composition is a powerful method for assessing phrase similarity, and linear dimension reduction might be more suitable for training additive compositional word vectors than deep neural networks. Therefore, our theory on additive composition is about the state-of-the-art."
    }, {
      "heading" : "6.2 Word Analogy",
      "text" : "The word analogy task is to solve questions of the form “a is to b as c is to ?”, and one elegant approach is to find the word vector that is most similar to vb − va + vc (Mikolov et al., 2013a). For example, in order to answer the question “man is to king as woman is to ?”, one needs to calculate vking − vman + vwoman and find out its most similar word vector, which may probably turns out to be vqueen, indicating the correct answer queen.\nAs pointed out by Levy and Goldberg (2014a), the key to solving analogy questions is the ability to “add” (resp. “subtract”) some aspects to (resp. from) a concept. For example, king is a concept of human that has the aspects of being royal and male. If we can “subtract” the aspect male from king and “add” the aspect female to it, then we could\nprobably get the concept queen. Thus, the vector-based solution proposed by Mikolov et al. (2013a) as above is essentially assuming that “adding” and “subtracting” aspects can be realized by adding and subtracting word vectors. Why is this assumption admissible?\nWe believe this assumption is closely related to additive compositionality. Because, if an aspect is represented by an adjective (e.g. male) and a concept is represented by a noun (e.g. human), we can usually “add” the aspect to the concept by simply arranging the adjective and the noun to form a phrase (e.g. male human). Therefore, as the meaning of the phrase can be calculated by additive composition (e.g. vmale + vhuman), we have indeed realized the “addition” of aspects by addition of word vectors. In short, since semantically man ≈ male human, king ≈ royal male human, woman ≈ female human and queen ≈ royal female human, we expect the following by additive composition for phrases.\nvman ≈ vmale + vhuman vking ≈ vroyal + vmale + vhuman\nvwoman ≈ vfemale + vhuman vqueen ≈ vroyal + vfemale + vhuman\nHere, “≈” denotes proximity between vectors in the sense of cosine similarity. From these approximate equalities, we can imply that vking−vman+vwoman ≈ vroyal+vfemale+vhuman ≈ vqueen, which solves the word analogy task.\nTherefore, we expect the word analogy task to serve as an extrinsic evaluation of additive compositionality. For this purpose, we conduct the task on the standard Msr4 (Mikolov et al., 2013a) and Google5 (Mikolov et al., 2013b) data sets. Each instance in the data is a 4-tuple of words that are subject to “a is to b as c is to d”, and the task is to find out d from a, b and c. Word vectors are trained from surface forms in the BNC, with other settings the same as previous. Tuples containing out-of-vocabulary words are removed from the data, which results in 4382 tuples in Msr and 8906 in Google6.\nThe test results are shown in Table 4. Again, we find that ln and sqrt perform similarly well but id and xlnx are worse, confirming that the choice of function F can drastically affect the performance on word analogy as well, which is considered related to additive compositionality. Also, we confirm that SVD can be better than SGNS and GloVe, which gives more support to the conjecture that word vectors trained by SVD may be more compatible to additive composition.\n4. http://research.microsoft.com/en-us/projects/rnn/ 5. https://code.google.com/p/word2vec/ 6. These are about half the size of the original data sets."
    }, {
      "heading" : "7. Conclusion",
      "text" : "In this paper, we have developed a theory of additive composition regarding its bias. The theory has explained why and how additive composition works, making useful suggestions about how to improve the additive compositionality, which include the choice of a transformation function, the awareness of word order, and the dimension reduction methods. Predictions made by the theory are verified empirically, and have shown positive correlations with human judgments. In short, we have revealed the mechanism of additive composition.\nHowever, we note that our theory is not “proof” of additive composition being a “good” compositional framework. As a generalization error bound usually is in machine learning theory, our bound for the bias does not show if additive composition is “good”; rather, it specifies some factors that can affect the errors. If we have generalization error bounds for other composition operations, a comparison between such bounds can bring useful insights into the choices of compositional frameworks in specific cases. We expect our bias bound to inspire more results in the research of semantic composition.\nMoreover, we believe this line of theoretical research can be pursued further. In computational linguistics, the idea of treating semantics and semantic relations by algebraic operations on distributional context vectors is relatively new (Clarke, 2012). Therefore, the relation between linguistic theories and our approximation theory of semantic composition is left largely unexplored. For example, the intuitive distinction between compositional (e.g. high price) and non-compositional (e.g. white lie) phrases is currently ignored in our theory. Our bias bound treats both cases by a single collocation measure. Can one improve the bound by taking account of this distinction, and/or other kinds of linguistic knowledge? This is an intriguing question for future work."
    }, {
      "heading" : "Appendix A. Proofs of Lemmas",
      "text" : "In this section, we prove all the lemmas in Section 4. The proofs depend on some preliminary propositions.\nProposition 6 (Chebyshev’s Inequality) Let Yi (i = 1, . . . , k) be nonzero random variables, and assume that the second moments E[Y 2i ] exist. Then, for any ρ > 0, we have\nPr( k⋃ i=1 { Y 2i ≥ ρ · E[Y 2i ] } ) ≤ k ρ .\nProof Let 1Y 2i ≥ρ·E[Y 2i ] be the random variable which equals 1 if Y 2i ≥ ρ · E[Y 2i ] and 0 otherwise. Then, note that\n1Y 2i ≥ρ·E[Y 2i ] ≤ Y\n2 i\nρ · E[Y 2i ] ,\nhence we have\nPr( k⋃ i=1 { Y 2i ≥ ρ · E[Y 2i ] } ) ≤ k∑ i=1 Pr(Y 2i ≥ ρ · E[Y 2i ])\n= k∑ i=1 E[1Y 2i ≥ρ·E[Y 2i ] ]\n≤ k∑ i=1 E[ Y 2i ρ · E[Y 2i ] ] = k\nρ .\nThe inequality is proven.\nWhen all E[Y 2i ] are small, Proposition 6 gives a quantitative estimation of how likely every Yi will be small. It is used in proof of the following proposition.\nProposition 7 Let Yi,x (i = 1, . . . , k) be random variables parameterized by x. Assume that, for some κ > 0 given, limx→0E[Y 2 i,x]/x\nκ exists for each i. Let ψx(y) be a series of smooth functions of k variables, parameterized by x. Assume that both ψx and dψx vanish at 0. Also, assume that {ψx(y)2/‖y‖2} is equicontinuous at 0, and {ψx(Y1,x, . . . , Yk,x)2/xκ} is uniformly integrable. Then, we have limx→0E[ψx(Y1,x, . . . , Yk,x) 2]/xκ = 0.\nProof For any > 0, we show that E[ψx(Y1,x, . . . , Yk,x) 2]/xκ < if x is sufficiently small. First, since {ψx(Y1,x, . . . , Yk,x)2/xκ} is uniformly integrable, there exists δ1 > 0 such that E[ψx(Y1,x, . . . , Yk,x)\n2]/xκ |H] < /2 for any condition H which satisfies Pr(H) < δ1. Let ρ be sufficiently large such that k/ρ < δ1. Then, let Hx be the condition that\nHx := k⋃ i=1 { Y 2i,x ≥ ρ · E[Y 2i,x] } ,\nso we can imply that Pr(Hx) ≤ k/ρ < δ1, by Proposition 6. Hence, we have\nE[ψx(Y1,x, . . . , Yk,x) 2]/xκ |Hx] <\n2 . (21)\nOn the other hand, we consider the condition ¬Hx, which is Y 2i,x < ρ · E[Y 2i,x] for each i. Since E[Y 2i,x] → 0, we can set ρ · E[Y 2i,x] arbitrarily small, so Y 2i,x can be arbitrarily small under this condition. We take\n(i) E[Y 2i,x] < M · xκ, where M is some constant; hence Y 2i,x < ρMxκ.\nSince both ψx and dψx vanish at 0, we have ψx(y) 2/‖y‖2 → 0 at ‖y‖ → 0. Since {ψx(y)2/‖y‖2} is equicontinuous at 0, there exists a uniform δ2 > 0 such that,\n(ii) ψx(y) 2 < 2kρM · ‖y‖2 for any y which satisfies ‖y‖2 < δ2.\nBy taking x sufficiently small, we can make kρMxκ < δ2. Then, by (i), we have\nY 21,x + . . .+ Y 2 k,x < kρMx κ < δ2,\nthus, by (ii), we have\nψx(Y1,x, . . . , Yk,x) 2 < 2kρM · (Y 21,x + . . .+ Y 2k,x) < 2 xκ.\nThen, we have\nE[ψx(Y1,x, . . . , Yk,x) 2]/xκ | ¬Hx] <\n2 . (22)\nCombining (21) and (22), we have E[ψx(Y1,x, . . . , Yk,x) 2]/xκ < if x is sufficiently small.\nProposition 7 is the core part of this section. Roughly speaking, it means that if all E[Y 2i ] are small, and if ψ and dψ both vanish at 0, then E[ψ(Y1, . . . , Yk) 2] ≈ 0.\nA.1 Proof of Lemma 1 Recall that Yx := ln(Pτ/P ) ∣∣ Freq=x , and by Assumption I. we have\nlim x→0\nE[Y 2x ]/x κ = β and lim\nx→0 E[Yx]\n2/xκ = 0.\nLet ψx(y) := ϕx(y)− ϕ′x(0)y. Then, applying Proposition 7 to ψx(Yx) we get\nlim x→0\nE[ψx(Yx) 2]/xκ = 0.\nBy definition of ψx we have\nE[ϕx(Yx) 2] = ϕ′x(0) 2E[Y 2x ] + 2ϕ ′ x(0)E[Yxψx(Yx)] + E[ψx(Yx) 2],\nand by Cauchy-Schwarz Inequality,\nlim x→0 ∣∣E[Yxψx(Yx)]∣∣/xκ ≤ lim x→0 √ E[Y 2x ] · E[ψx(Yx)2]/xκ = 0.\nTherefore,\nlim x→0\nE[ϕx(Yx) 2]/xκ = lim x→0 ϕ′x(0) 2E[Y 2x ]/x κ = θ2β.\nSimilarly, since\nE[ϕx(Yx)] = ϕ ′ x(0)E[Yx] + E[ψx(Yx)]\nand\nlim x→0\nE[ψx(Yx)] 2/xκ ≤ lim\nx→0 E[ψx(Yx)\n2]/xκ = 0,\nwe have\nlim x→0\nE[ϕx(Yx)]/x κ 2 = lim x→0 ϕ′x(0)E[Yx]/x κ 2 = 0.\nThe formulas are proven.\nA.2 Proof of Lemma 2\nWe set\nϕx(y) := F (ωx exp(y))− F (ωx)\n(ωx)α ,\nthen\nlim x→0 ϕ′x(0) = lim x→0\nF ′(ωx)\n(ωx)α−1 = θ,\nhence by Lemma 1 we have\nlim x→0\nE[ϕx(Yx) 2]/xκ = θ2β and lim\nx→0 E[ϕx(Yx)]\n2/xκ = 0.\nRecall the calculation of (16), so we have\nE|C|[(F (Pτ )− F (P ))2] = ω2αf|C| ∫ f1 f|C| E[ϕx(Yx) 2] x2−2α dx.\nRecall that\nN|C| := θ 2βω2αf|C| ∫ f1 f|C|\ndx\nx2−2α−κ .\nWhen −2 + 2α+ κ ≤ −1, we have\nlim δ→0 ∫ f1 δ\ndx\nx2−2α−κ =∞,\nso we can apply L’Hôpital’s rule in the following:\nlim |C|→∞ E|C|[(F (Pτ )− F (P ))2] N|C| = lim δ→0\n∫ f1 δ E[ϕx(Yx) 2] x2−2α dx\nθ2β ∫ f1 δ\ndx\nx2−2α−κ\n= lim δ→0\nd\ndδ ∫ f1 δ E[ϕx(Yx) 2] x2−2α dx\nθ2β d\ndδ ∫ f1 δ\ndx\nx2−2α−κ\n= lim δ→0\nE[ϕδ(Yδ) 2]\nθ2βδκ = 1.\nA similar calculation gives E|C|[(F (Pτ )− F (P ))]2 ≤ ω2αf|C| ∫ f1 f|C| E[ϕx(Yx)] 2 x2−2α dx,\nand hence E|C|[F (Pτ )− F (P )]2/N|C| : 0.\nA.3 Proof of Lemma 3\nBy calculations similar to (16), we have E|C|[(F (Pτ )− F (P ))2] = ωf|C| ∫ f1 f|C| E[(F (ωx exp(Yx))− F (ωx))2] ωx · 1 x dx\nand\nE|C|[F (P ) 2] = ωf|C| ∫ f1 f|C| F (ωx)2 ωx · 1 x dx.\nAssume lim x→0 F (x) 6= 0, then from lim x→0 x0.5 = 0 we can imply\n∣∣ lim x→0 F (x) x0.5 ∣∣ > 0.\nOtherwise if lim x→0\nF (x) = 0, by L’Hôpital’s rule and the condition α ≤ 0.5 we have\n∣∣ lim x→0 F (x) x0.5 ∣∣ = ∣∣ lim x→0 F ′(x) 0.5x0.5−1 ∣∣ > 0.\nTherefore, in any case\nlim x→0\nF (x)2\nx > 0.\nHence\nlim δ→0 ∫ f1 δ F (ωx)2 ωx · 1 x dx =∞.\nSo we can apply L’Hôpital’s rule in the following:\nlim |C|→∞ E|C|[(F (Pτ )− F (P ))2] E|C|[F (P )2] = lim δ→0\nd\ndδ ∫ f1 δ E[(F (ωx exp(Yx))− F (ωx))2] ωx · 1 x dx\nd\ndδ ∫ f1 δ F (ωx)2 ωx · 1 x dx\n= lim δ→0 E[(F (ωδ exp(Yδ))− F (ωδ))2] F (ωδ)2\n= lim δ→0\nE [(F (ωδ exp(Yδ)) F (ωδ) − 1 )2]\n(23)\nFor any fixed y, if lim x→0 F (x) <∞ and lim x→0 F (x) 6= 0, we have\nlim δ→0\nF (ωδ exp(y)) F (ωδ) − 1 = F (0) F (0) − 1 = 0.\nOtherwise, if lim x→0 F (x) =∞ or lim x→0 F (x) = 0 we can apply L’Hôpital’s rule, so\nlim δ→0\nF (ωδ exp(y))\nF (ωδ) − 1 = lim δ→0\nexp(y)F ′(ωδ exp(y))\nF ′(ωδ) − 1 = exp(y)α − 1.\nIn any case, by Assumption I. we have Yδ converges to 0 in probability at δ → 0, so\nF (ωδ exp(Yδ))\nF (ωδ) − 1 converges to 0 in probability.\nThis convergence in probability combined with our assumption that{(F (ωδ exp(Yδ)) F (ωδ) − 1 )2} is uniformly integrable\nimplies that ( F (ωδ exp(Yδ))/F (ωδ)− 1 )2 converges to 0 in the L1-norm. In other words,\nlim δ→0\nE [(F (ωδ exp(Yδ)) F (ωδ) − 1 )2] = 0.\nThis combined with (23) proves the lemma.\nA.4 Proof of Lemma 4 We set Y1,x := ln(Ptk\\tl/P ) ∣∣ Freq=x and Y2,x := ln(Ptktl/P ) ∣∣ Freq=x . Define\nψx(y1, y2) := 1\n(ωx)α\n( F ( πk\\lωx exp(y1) + (1− πk\\l)ωx exp(y2) ) − πk\\lF ( ωx exp(y1) ) − (1− πk\\l)F ( ωx exp(y2) )) .\nThen, since\nψx(0, 0) = 0, ∂\n∂y1 ψx(0, 0) = 0 and\n∂\n∂y2 ψx(0, 0) = 0,\nwe can apply Proposition 7 to ψx(Y1,x, Y2,x). Therefore\nlim x→0\nE[ψx(Y1,x, Y2,x) 2]\nxκ = 0.\nBy a calculation similar to (16), we have\nE|C|[(F (Ptk)− πk\\lF (Ptk\\tl)− (1− πk\\l)F (Ptktl)) 2] = ω2αf|C| ∫ f1 f|C| E[ψx(Y1,x, Y2,x) 2] x2−2α dx.\nRecall that\nN|C| := θ 2βω2αf|C| ∫ f1 f|C|\ndx\nx2−2α−κ .\nWhen −2 + 2α+ κ ≤ −1, we have\nlim δ→0 ∫ f1 δ\ndx\nx2−2α−κ =∞,\nso we can apply L’Hôpital’s rule in the following:\nlim |C|→∞\nE|C|[(F (Ptk)− πk\\lF (Ptk\\tl)− (1− πk\\l)F (Ptktl)) 2]\nN|C|\n= lim δ→0\nd\ndδ ∫ f1 δ E[ψx(Y1,x, Y2,x) 2] x2−2α dx\nθ2β d\ndδ ∫ f1 δ\ndx\nx2−2α−κ\n= lim δ→0\nE[ψδ(Y1,δ, Y2,δ) 2]\nθ2βδκ = 0.\nThe formula is proven."
    }, {
      "heading" : "Appendix B. The Loss Function of SGNS",
      "text" : "In this section, we discuss the loss function of SGNS. The model is originally proposed as as an ad hoc objective function using the negative sampling technique (Mikolov et al., 2013b), without any explicit explanation on what is optimized and what is the loss. It is later shown that SGNS is a factorization of the shifted-PMI matrix (Levy and Goldberg, 2014b), but the loss function for this factorization remains unspecified. Here, we give a re-explanation of the SGNS model, with the loss function explicitly stated.\nB.1 Noise Contrastive Estimation\nThe original objective function of SGNS is proposed as an adaptation of the Noise Contrastive Estimation (NCE) method, but in fact SGNS is using NCE without any adaptation. NCE (Gutmann and Hyvärinen, 2012) is a method for solving the classical problem that, given a sample (xi) N i=1 (wherein xi ∈ X ) drawn from an unknown probability distribution Pdata, and a function family f(·; θ) : X → R≥0 parameterized by θ, to find the optimal θ∗ such that f(x; θ∗) approximates the distribution Pdata(x) best. An alternative to NCE is the Maximum Likelihood Estimation (MLE), in which θ∗ is chosen as to maximize the log-likelihood of the sample (xi) N i=1, with respect to the constraint that f(·; θ∗) should be a probability:\nθ∗MLE = arg max θ N∑ i=1 ln f(xi; θ), s.t. ∑ x∈X f(x; θ) = 1.\nFor MLE, the constraint ∑\nx∈X f(x; θ) = 1 is important, because f(x; θ) can tend to arbitrarily large if we maximize the log-likelihood without the constraint. NCE finds θ∗ in a different way. It firstly mixes (xi) with a noise sample drawn from a known distribution Pnoise, each data point xi mixed with k noise points yi,1, . . . , yi,k ∼ Pnoise. Hence\nPr(x is data | x) = Pdata(x) Pdata(x) + kPnoise(x) , (24)\nwhich calculates the probability of a given point x ∈ X being a data point. Pdata is unknown in (24), so we approximate Pr(x is data | x) by g(x; θ) as follows:\ng(x; θ) := f(x; θ)\nf(x; θ) + kPnoise(x) . (25)\nThen, NCE maximizes the log-likelihood of “xi being data and yi,1, . . . , yi,k being noise”:\nθ∗NCE = arg max θ N∑ i=1 ( ln g(xi; θ) + k∑ j=1 ln(1− g(yi,j ; θ)) ) . (26)\nThe most important point of NCE is that, f(x; θ) will not tend to infinity even we maximize (26) without the constraint ∑ x∈X f(x; θ) = 1. This is because making f(x; θ) large will accordingly make 1− g(yi,j ; θ) small, which will decrease the likelihood of “yi,1, . . . , yi,k being noise”. No longer necessary to repeatedly calculate ∑ x∈X f(x; θ) during parameter update, NCE usually results in efficient training algorithms.\nB.2 The Skip-Gram model with Negative Sampling\nLet P (c|t) be the co-occurrence probability of a context word c and a target word t. SGNS approximates P (c|t) by the function family f(c, t; u,v) := exp(uc ·vt+ln(kPnoise(c))), using NCE to optimize parameters. The training data is a collection C of co-occurring (t, c) pairs. The parameters are matrices u and v, the column vectors of which correspond to c and t, respectively. Pnoise is the known noise distribution, used here as a function of c.\nSubstituting this f(c, t; u,v) into (25), we get\ng(c, t; u,v) = exp(uc · vt + ln(kPnoise(c)))\nexp(uc · vt + ln(kPnoise(c))) + kPnoise(c) = σ(uc · vt),\nwhere σ(x) = 1/{1 + exp(−x)} is the sigmoid function. Substituting the obtained g(c, t; u,v) into (26), we get\narg max u,v ∑ (t,c)∈C ( lnσ(uc · vt) + k∑ j=1\nnj∼Pnoise\nln(1− σ(unj · vt)) )\n(27)\nwhich is exactly the objective function of SGNS proposed in Mikolov et al. (2013b).\nB.3 Proof of 4\nSince SGNS is using f(c, t; u,v) := exp(uc · vt + ln(kPnoise(c))) to approximate P (c|t), it is using uc · vt to approximate s(c, t) := lnP (c|t) − ln(kPnoise(c)). This form of s(c, t) is compatible to our general formalization of vector representations, as defined in Equation (1), Section 2. More precisely, if we set the function F (p) := ln p, the shift terms a(t) := 0 and b(c) := ln(kPnoise(c)), then the vector vt trained by SGNS is a dimension reduction of the vector representation wt that we considered in this paper.\nIn order to prove 4, we let N be the number of (t, c) pairs that are observed in the training data C. Then, we consider the 1/N multiple of the objective (27):\nO(u,v) := 1\nN ∑ (t′,c′)∈C ( lnσ(uc′ · vt′) + k∑ j=1\nnj∼Pnoise\nln(1− σ(unj · vt′)) ) .\nThe above sum is taken across the training data C, in which the term lnσ(uc · vt) appears P (c, t) times (i.e. we have a probability P (c, t) for the pair (t′, c′) to be equal to (t, c)), and the term ln(1− σ(uc · vt)) appears kPnoise(c)P (t) times (i.e. we have a probability Pnoise(c) for nj = c, and a probability P (t) for t ′ = t). Hence,\nO(u,v) = ∑ c,t P (t) ( P (c|t) lnσ(uc · vt) + kPnoise(c) ln(1− σ(uc · vt)) ) ,\nwhere the sum is taken across every unique combination of c and t. We know that the optimal of O(u,v) is taken at uc · vt = s(c, t), so we set\nM := ∑ c,t P (t) ( P (c|t) lnσ(s(c, t)) + kPnoise(c) ln(1− σ(s(c, t))) ) .\nThen, maximizing O(u,v) is equivalent to minimizing M−O(u,v), and by some calculation, we find that M −O(u,v) = ∑ c,t P (t)Dφ(uc · vt + b(c), s(c, t) + b(c)),\nwhere Dφ(p, q) := φ(p)− φ(q)− φ′(q)(p− q) is the Bregman divergence associated with the convex function\nφ(x) = (P (c|t) + kPnoise(c)) ln(exp(x) + kPnoise(c)).\nThe limit of Dφ at k → +∞ can be easily calculated."
    } ],
    "references" : [ {
      "title" : "Simcompass: Using deep learning word embeddings to assess cross-level similarity",
      "author" : [ "Carmen Banea", "Di Chen", "Rada Mihalcea", "Claire Cardie", "Janyce Wiebe" ],
      "venue" : "In Proceedings of SemEval,",
      "citeRegEx" : "Banea et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Banea et al\\.",
      "year" : 2014
    }, {
      "title" : "Nouns are vectors, adjectives are matrices: Representing adjective-noun constructions in semantic space",
      "author" : [ "Marco Baroni", "Roberto Zamparelli" ],
      "venue" : "In Proceedings of EMNLP,",
      "citeRegEx" : "Baroni and Zamparelli.,? \\Q2010\\E",
      "shortCiteRegEx" : "Baroni and Zamparelli.",
      "year" : 2010
    }, {
      "title" : "A comparison of vector-based representations for semantic composition",
      "author" : [ "William Blacoe", "Mirella Lapata" ],
      "venue" : "In Proceedings of EMNLP,",
      "citeRegEx" : "Blacoe and Lapata.,? \\Q2012\\E",
      "shortCiteRegEx" : "Blacoe and Lapata.",
      "year" : 2012
    }, {
      "title" : "Probabilistic topic models",
      "author" : [ "David M. Blei" ],
      "venue" : "Commun. ACM,",
      "citeRegEx" : "Blei.,? \\Q2012\\E",
      "shortCiteRegEx" : "Blei.",
      "year" : 2012
    }, {
      "title" : "Stochastic gradient descent tricks",
      "author" : [ "Léon Bottou" ],
      "venue" : null,
      "citeRegEx" : "Bottou.,? \\Q2012\\E",
      "shortCiteRegEx" : "Bottou.",
      "year" : 2012
    }, {
      "title" : "Error bounds for approximation with neural networks",
      "author" : [ "Martin Burger", "Andreas Neubauer" ],
      "venue" : "Journal of Approximation Theory,",
      "citeRegEx" : "Burger and Neubauer.,? \\Q2001\\E",
      "shortCiteRegEx" : "Burger and Neubauer.",
      "year" : 2001
    }, {
      "title" : "Word association norms, mutual information, and lexicography",
      "author" : [ "Kenneth Ward Church", "Patrick Hanks" ],
      "venue" : "Comput. Linguist.,",
      "citeRegEx" : "Church and Hanks.,? \\Q1990\\E",
      "shortCiteRegEx" : "Church and Hanks.",
      "year" : 1990
    }, {
      "title" : "A context-theoretic framework for compositionality in distributional semantics",
      "author" : [ "Daoud Clarke" ],
      "venue" : "Comput. Linguist.,",
      "citeRegEx" : "Clarke.,? \\Q2012\\E",
      "shortCiteRegEx" : "Clarke.",
      "year" : 2012
    }, {
      "title" : "Power-law distributions in empirical data",
      "author" : [ "Aaron Clauset", "Cosma Rohilla Shalizi", "M.E.J. Newman" ],
      "venue" : "SIAM Rev.,",
      "citeRegEx" : "Clauset et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Clauset et al\\.",
      "year" : 2009
    }, {
      "title" : "Mathematical foundations for a compositional distributional model of meaning",
      "author" : [ "Bob Coecke", "Mehrnoosh Sadrzadeh", "Stephen Clark" ],
      "venue" : "Linguistic Analysis,",
      "citeRegEx" : "Coecke et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Coecke et al\\.",
      "year" : 2010
    }, {
      "title" : "Natural language processing (almost) from scratch",
      "author" : [ "Ronan Collobert", "Jason Weston", "Léon Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa" ],
      "venue" : "J. Mach. Learn. Res.,",
      "citeRegEx" : "Collobert et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Collobert et al\\.",
      "year" : 2011
    }, {
      "title" : "Similarity-based estimation of word cooccurrence probabilities",
      "author" : [ "Ido Dagan", "Fernando Pereira", "Lillian Lee" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Dagan et al\\.,? \\Q1994\\E",
      "shortCiteRegEx" : "Dagan et al\\.",
      "year" : 1994
    }, {
      "title" : "General estimation and evaluation of compositional distributional semantic models",
      "author" : [ "Georgiana Dinu", "Nghia The Pham", "Marco Baroni" ],
      "venue" : "In Proceedings of the Workshop on Continuous Vector Space Models and their Compositionality,",
      "citeRegEx" : "Dinu et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Dinu et al\\.",
      "year" : 2013
    }, {
      "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
      "author" : [ "John Duchi", "Elad Hazan", "Yoram Singer" ],
      "venue" : "J. Mach. Learn. Res.,",
      "citeRegEx" : "Duchi et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Duchi et al\\.",
      "year" : 2011
    }, {
      "title" : "The measurement of textual coherence with latent semantic analysis",
      "author" : [ "Peter W. Foltz", "Walter Kintsch", "Thomas K. Landauer" ],
      "venue" : "Discourse Process,",
      "citeRegEx" : "Foltz et al\\.,? \\Q1998\\E",
      "shortCiteRegEx" : "Foltz et al\\.",
      "year" : 1998
    }, {
      "title" : "Neural networks and the bias/variance dilemma",
      "author" : [ "Stuart Geman", "Elie Bienenstock", "René Doursat" ],
      "venue" : "Neural Comput.,",
      "citeRegEx" : "Geman et al\\.,? \\Q1992\\E",
      "shortCiteRegEx" : "Geman et al\\.",
      "year" : 1992
    }, {
      "title" : "Approximation error bounds via rademachers complexity",
      "author" : [ "Giorgio Gnecco", "Marcello Sanguineti" ],
      "venue" : "Applied Mathematical Sciences,",
      "citeRegEx" : "Gnecco and Sanguineti.,? \\Q2008\\E",
      "shortCiteRegEx" : "Gnecco and Sanguineti.",
      "year" : 2008
    }, {
      "title" : "Experimental support for a categorical compositional distributional model of meaning",
      "author" : [ "Edward Grefenstette", "Mehrnoosh Sadrzadeh" ],
      "venue" : "In Proceedings of EMNLP,",
      "citeRegEx" : "Grefenstette and Sadrzadeh.,? \\Q2011\\E",
      "shortCiteRegEx" : "Grefenstette and Sadrzadeh.",
      "year" : 2011
    }, {
      "title" : "A regression model of adjective-noun compositionality in distributional semantics",
      "author" : [ "Emiliano Guevara" ],
      "venue" : "In Proceedings of the Workshop on GEometrical Models of Natural Language Semantics,",
      "citeRegEx" : "Guevara.,? \\Q2010\\E",
      "shortCiteRegEx" : "Guevara.",
      "year" : 2010
    }, {
      "title" : "Noise-contrastive estimation of unnormalized statistical models, with applications to natural image statistics",
      "author" : [ "Michael U. Gutmann", "Aapo Hyvärinen" ],
      "venue" : "J. Mach. Learn. Res.,",
      "citeRegEx" : "Gutmann and Hyvärinen.,? \\Q2012\\E",
      "shortCiteRegEx" : "Gutmann and Hyvärinen.",
      "year" : 2012
    }, {
      "title" : "Extension of zipf’s law to words and phrases",
      "author" : [ "Le Quan Ha", "E.I. Sicilia-Garcia", "Ji Ming", "F.J. Smith" ],
      "venue" : "In Proceedings of Coling,",
      "citeRegEx" : "Ha et al\\.,? \\Q2002\\E",
      "shortCiteRegEx" : "Ha et al\\.",
      "year" : 2002
    }, {
      "title" : "Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions",
      "author" : [ "N. Halko", "P.G. Martinsson", "J.A. Tropp" ],
      "venue" : "SIAM Rev.,",
      "citeRegEx" : "Halko et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Halko et al\\.",
      "year" : 2011
    }, {
      "title" : "Deep unordered composition rivals syntactic methods for text classification",
      "author" : [ "Mohit Iyyer", "Varun Manjunatha", "Jordan Boyd-Graber", "Hal Daumé III" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Iyyer et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Iyyer et al\\.",
      "year" : 2015
    }, {
      "title" : "Perplexity on reduced corpora",
      "author" : [ "Hayato Kobayashi" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Kobayashi.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kobayashi.",
      "year" : 2014
    }, {
      "title" : "On the computational basis of learning and cognition: Arguments from LSA",
      "author" : [ "Thomas K. Landauer" ],
      "venue" : "The psychology of learning and motivation,",
      "citeRegEx" : "Landauer.,? \\Q2002\\E",
      "shortCiteRegEx" : "Landauer.",
      "year" : 2002
    }, {
      "title" : "A solution to platos problem: The latent semantic analysis theory of acquisition, induction, and representation of knowledge",
      "author" : [ "Thomas K Landauer", "Susan T. Dutnais" ],
      "venue" : "Psychological review,",
      "citeRegEx" : "Landauer and Dutnais.,? \\Q1997\\E",
      "shortCiteRegEx" : "Landauer and Dutnais.",
      "year" : 1997
    }, {
      "title" : "How well can passage meaning be derived without using word order? a comparison of latent semantic analysis and humans",
      "author" : [ "Thomas K. Landauer", "Darrell Laham", "Bob Rehder", "M.E. Schreiner" ],
      "venue" : "In Proceedings of Annual Conference of the Cognitive Science Society,",
      "citeRegEx" : "Landauer et al\\.,? \\Q1997\\E",
      "shortCiteRegEx" : "Landauer et al\\.",
      "year" : 1997
    }, {
      "title" : "Word embeddings through Hellinger PCA",
      "author" : [ "Rémi Lebret", "Ronan Collobert" ],
      "venue" : "In Proceedings of EACL,",
      "citeRegEx" : "Lebret and Collobert.,? \\Q2014\\E",
      "shortCiteRegEx" : "Lebret and Collobert.",
      "year" : 2014
    }, {
      "title" : "Linguistic regularities in sparse and explicit word representations",
      "author" : [ "Omer Levy", "Yoav Goldberg" ],
      "venue" : "In Proceedings of CoNLL,",
      "citeRegEx" : "Levy and Goldberg.,? \\Q2014\\E",
      "shortCiteRegEx" : "Levy and Goldberg.",
      "year" : 2014
    }, {
      "title" : "Neural word embedding as implicit matrix factorization",
      "author" : [ "Omer Levy", "Yoav Goldberg" ],
      "venue" : "In Advances in NIPS,",
      "citeRegEx" : "Levy and Goldberg.,? \\Q2014\\E",
      "shortCiteRegEx" : "Levy and Goldberg.",
      "year" : 2014
    }, {
      "title" : "Improving distributional similarity with lessons learned from word embeddings",
      "author" : [ "Omer Levy", "Yoav Goldberg", "Ido Dagan" ],
      "venue" : "Trans. ACL,",
      "citeRegEx" : "Levy et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Levy et al\\.",
      "year" : 2015
    }, {
      "title" : "Linguistic regularities in continuous space word representations",
      "author" : [ "Tomas Mikolov", "Wen-tau Yih", "Geoffrey Zweig" ],
      "venue" : "In Proceedings of NAACL-HLT,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Distributed representations of words and phrases and their compositionality",
      "author" : [ "Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg Corrado", "Jeffrey Dean" ],
      "venue" : "In Advances in NIPS,",
      "citeRegEx" : "Mikolov et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Vector-based models of semantic composition",
      "author" : [ "Jeff Mitchell", "Mirella Lapata" ],
      "venue" : "In Proceedings of ACL-HLT,",
      "citeRegEx" : "Mitchell and Lapata.,? \\Q2008\\E",
      "shortCiteRegEx" : "Mitchell and Lapata.",
      "year" : 2008
    }, {
      "title" : "Composition in distributional models of semantics",
      "author" : [ "Jeff Mitchell", "Mirella Lapata" ],
      "venue" : "Cognitive Science,",
      "citeRegEx" : "Mitchell and Lapata.,? \\Q2010\\E",
      "shortCiteRegEx" : "Mitchell and Lapata.",
      "year" : 2010
    }, {
      "title" : "Beyond the zipf-mandelbrot law in quantitative linguistics",
      "author" : [ "M.A. Montemurro" ],
      "venue" : "Physica A,",
      "citeRegEx" : "Montemurro.,? \\Q2001\\E",
      "shortCiteRegEx" : "Montemurro.",
      "year" : 2001
    }, {
      "title" : "Finding the best model among representative compositional models",
      "author" : [ "Masayasu Muraoka", "Sonse Shimaoka", "Kazeto Yamamoto", "Yotaro Watanabe", "Naoaki Okazaki", "Kentaro Inui" ],
      "venue" : "In Proceedings of PACLIC,",
      "citeRegEx" : "Muraoka et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Muraoka et al\\.",
      "year" : 2014
    }, {
      "title" : "Generalization bounds for function approximation from scattered noisy data",
      "author" : [ "Partha Niyogi", "Federico Girosi" ],
      "venue" : "Advances in Computational Mathematics,",
      "citeRegEx" : "Niyogi and Girosi.,? \\Q1999\\E",
      "shortCiteRegEx" : "Niyogi and Girosi.",
      "year" : 1999
    }, {
      "title" : "A note on the delta method",
      "author" : [ "Gary W. Oehlert" ],
      "venue" : "The American Statistician,",
      "citeRegEx" : "Oehlert.,? \\Q1992\\E",
      "shortCiteRegEx" : "Oehlert.",
      "year" : 1992
    }, {
      "title" : "A practical and linguisticallymotivated approach to compositional distributional semantics",
      "author" : [ "Denis Paperno", "Nghia The Pham", "Marco Baroni" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Paperno et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Paperno et al\\.",
      "year" : 2014
    }, {
      "title" : "Glove: Global vectors for word representation",
      "author" : [ "Jeffrey Pennington", "Richard Socher", "Christopher Manning" ],
      "venue" : "In Proceedings of EMNLP,",
      "citeRegEx" : "Pennington et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Pennington et al\\.",
      "year" : 2014
    }, {
      "title" : "Autoextend: Extending word embeddings to embeddings for synsets and lexemes",
      "author" : [ "Sascha Rothe", "Hinrich Schütze" ],
      "venue" : "In Proceedings of ACL-IJCNLP,",
      "citeRegEx" : "Rothe and Schütze.,? \\Q2015\\E",
      "shortCiteRegEx" : "Rothe and Schütze.",
      "year" : 2015
    }, {
      "title" : "Semantic compositionality through recursive matrix-vector spaces",
      "author" : [ "Richard Socher", "Brody Huval", "Christopher D. Manning", "Andrew Y. Ng" ],
      "venue" : "In Proceedings of EMNLP,",
      "citeRegEx" : "Socher et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Socher et al\\.",
      "year" : 2012
    }, {
      "title" : "Model-based word embeddings from decompositions of count matrices",
      "author" : [ "Karl Stratos", "Michael Collins", "Daniel Hsu" ],
      "venue" : "In Proceedings of ACL-IJCNLP,",
      "citeRegEx" : "Stratos et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Stratos et al\\.",
      "year" : 2015
    }, {
      "title" : "A hierarchical bayesian language model based on pitman-yor processes",
      "author" : [ "Yee Whye Teh" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Teh.,? \\Q2006\\E",
      "shortCiteRegEx" : "Teh.",
      "year" : 2006
    }, {
      "title" : "Logical inference on dependency-based compositional semantics",
      "author" : [ "Ran Tian", "Yusuke Miyao", "Takuya Matsuzaki" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Tian et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Tian et al\\.",
      "year" : 2014
    }, {
      "title" : "Word representations: A simple and general method for semi-supervised learning",
      "author" : [ "Joseph Turian", "Lev-Arie Ratinov", "Yoshua Bengio" ],
      "venue" : "In Proceedings of ACL,",
      "citeRegEx" : "Turian et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Turian et al\\.",
      "year" : 2010
    }, {
      "title" : "Mining the web for synonyms: PMI-IR versus LSA on TOEFL",
      "author" : [ "Peter D. Turney" ],
      "venue" : "In Proceedings of EMCL,",
      "citeRegEx" : "Turney.,? \\Q2001\\E",
      "shortCiteRegEx" : "Turney.",
      "year" : 2001
    }, {
      "title" : "From frequency to meaning: Vector space models of semantics",
      "author" : [ "Peter D. Turney", "Patrick Pantel" ],
      "venue" : "J. Artif. Int. Res.,",
      "citeRegEx" : "Turney and Pantel.,? \\Q2010\\E",
      "shortCiteRegEx" : "Turney and Pantel.",
      "year" : 2010
    }, {
      "title" : "Estimating linear models for compositional distributional semantics",
      "author" : [ "Fabio Massimo Zanzotto", "Ioannis Korkontzelos", "Francesca Fallucchi", "Suresh Manandhar" ],
      "venue" : "In Proceedings of Coling,",
      "citeRegEx" : "Zanzotto et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Zanzotto et al\\.",
      "year" : 2010
    }, {
      "title" : "The Psychobiology of Language: An Introduction to Dynamic Philology",
      "author" : [ "George K. Zipf" ],
      "venue" : null,
      "citeRegEx" : "Zipf.,? \\Q1935\\E",
      "shortCiteRegEx" : "Zipf.",
      "year" : 1935
    } ],
    "referenceMentions" : [ {
      "referenceID" : 14,
      "context" : "Abstract We prove an upper bound for the bias of additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010), a widely used method for computing meanings of phrases by averaging the vector representations of their constituent words.",
      "startOffset" : 70,
      "endOffset" : 145
    }, {
      "referenceID" : 25,
      "context" : "Abstract We prove an upper bound for the bias of additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010), a widely used method for computing meanings of phrases by averaging the vector representations of their constituent words.",
      "startOffset" : 70,
      "endOffset" : 145
    }, {
      "referenceID" : 34,
      "context" : "Abstract We prove an upper bound for the bias of additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010), a widely used method for computing meanings of phrases by averaging the vector representations of their constituent words.",
      "startOffset" : 70,
      "endOffset" : 145
    }, {
      "referenceID" : 15,
      "context" : "Introduction The decomposition of generalization errors into bias and variance (Geman et al., 1992) is one of the most profound insights of learning theory.",
      "startOffset" : 79,
      "endOffset" : 99
    }, {
      "referenceID" : 14,
      "context" : "We prove an upper bound for the bias of a widely used compositional framework, the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010).",
      "startOffset" : 104,
      "endOffset" : 179
    }, {
      "referenceID" : 25,
      "context" : "We prove an upper bound for the bias of a widely used compositional framework, the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010).",
      "startOffset" : 104,
      "endOffset" : 179
    }, {
      "referenceID" : 34,
      "context" : "We prove an upper bound for the bias of a widely used compositional framework, the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010).",
      "startOffset" : 104,
      "endOffset" : 179
    }, {
      "referenceID" : 30,
      "context" : "It has been shown that the cosine similarities of such word vectors can capture similarities between words considerably well (Levy et al., 2015), thus the next natural question is to extend the vector representations to phrases and even sentences.",
      "startOffset" : 125,
      "endOffset" : 144
    }, {
      "referenceID" : 1,
      "context" : "Some are complicated methods that rely on the underlying linguistic structures of phrases (Baroni and Zamparelli, 2010; Socher et al., 2012; Paperno et al., 2014), which are rationalized by linguistic intuitions (Coecke et al.",
      "startOffset" : 90,
      "endOffset" : 162
    }, {
      "referenceID" : 42,
      "context" : "Some are complicated methods that rely on the underlying linguistic structures of phrases (Baroni and Zamparelli, 2010; Socher et al., 2012; Paperno et al., 2014), which are rationalized by linguistic intuitions (Coecke et al.",
      "startOffset" : 90,
      "endOffset" : 162
    }, {
      "referenceID" : 39,
      "context" : "Some are complicated methods that rely on the underlying linguistic structures of phrases (Baroni and Zamparelli, 2010; Socher et al., 2012; Paperno et al., 2014), which are rationalized by linguistic intuitions (Coecke et al.",
      "startOffset" : 90,
      "endOffset" : 162
    }, {
      "referenceID" : 9,
      "context" : ", 2014), which are rationalized by linguistic intuitions (Coecke et al., 2010).",
      "startOffset" : 57,
      "endOffset" : 78
    }, {
      "referenceID" : 34,
      "context" : "Others have sought supports from cognitive science by comparing with human judgments (Mitchell and Lapata, 2010).",
      "startOffset" : 85,
      "endOffset" : 112
    }, {
      "referenceID" : 14,
      "context" : "The most widely used framework is the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997), in which the meanings of phrases are calculated by averaging the word vectors.",
      "startOffset" : 59,
      "endOffset" : 107
    }, {
      "referenceID" : 25,
      "context" : "The most widely used framework is the additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997), in which the meanings of phrases are calculated by averaging the word vectors.",
      "startOffset" : 59,
      "endOffset" : 107
    }, {
      "referenceID" : 12,
      "context" : "Such theories would be important for the pursuit of better compositional frameworks, given that the empirical evaluation of compositional frameworks is already considerably complicated, due to different choices of the word vectors, the composition operations, and the methods for estimating parameters (Dinu et al., 2013).",
      "startOffset" : 302,
      "endOffset" : 321
    }, {
      "referenceID" : 24,
      "context" : "It has been shown that the cosine similarities of such word vectors can capture similarities between words considerably well (Levy et al., 2015), thus the next natural question is to extend the vector representations to phrases and even sentences. Based on the success of distributional hypothesis, it is expected that at least for short phrases, the meanings can still be represented by vectors constructed from surrounding contexts. However, a main obstacle here is that phrases are far more sparse than individual words. For example, in the British National Corpus (BNC) (The BNC Consortium, 2007), which contains about 100 million word tokens, there are about 16000 lemmatized words which occur more than 200 times, but only about 46000 such bigrams, far less than the 160002 possible two-word combinations. In other words, there are too few training samples for even two-word phrases. Therefore, a direct estimation of the surrounding contexts of a phrase can have large sampling error. Alternatively, Mitchell and Lapata (2010) propose to construct vector representations of phrases by combining word vectors, based on the linguistic intuition that meanings of phrases are “composed” from the meanings of their constituent words.",
      "startOffset" : 126,
      "endOffset" : 1034
    }, {
      "referenceID" : 40,
      "context" : ", 2013b), the GloVe model (Pennington et al., 2014), the Hellinger PCA (Lebret and Collobert, 2014) and a CCA model (Stratos et al.",
      "startOffset" : 26,
      "endOffset" : 51
    }, {
      "referenceID" : 27,
      "context" : ", 2014), the Hellinger PCA (Lebret and Collobert, 2014) and a CCA model (Stratos et al.",
      "startOffset" : 27,
      "endOffset" : 55
    }, {
      "referenceID" : 10,
      "context" : "Though there are other methods for constructing word vectors, such as neural networks (Collobert et al., 2011), we consider this formalization as general enough to cover a wide range of distributional word vectors in the literature, including some popular models such as SGNS and GloVe.",
      "startOffset" : 86,
      "endOffset" : 110
    }, {
      "referenceID" : 6,
      "context" : "Indeed, if we set F (p) := ln p and b(ci) := lnP (ci), then s(ci, τ) becomes the Point-wise Mutual Information (PMI) function which has long been widely adopted in NLP (Church and Hanks, 1990; Dagan et al., 1994; Turney, 2001; Turney and Pantel, 2010).",
      "startOffset" : 168,
      "endOffset" : 251
    }, {
      "referenceID" : 11,
      "context" : "Indeed, if we set F (p) := ln p and b(ci) := lnP (ci), then s(ci, τ) becomes the Point-wise Mutual Information (PMI) function which has long been widely adopted in NLP (Church and Hanks, 1990; Dagan et al., 1994; Turney, 2001; Turney and Pantel, 2010).",
      "startOffset" : 168,
      "endOffset" : 251
    }, {
      "referenceID" : 47,
      "context" : "Indeed, if we set F (p) := ln p and b(ci) := lnP (ci), then s(ci, τ) becomes the Point-wise Mutual Information (PMI) function which has long been widely adopted in NLP (Church and Hanks, 1990; Dagan et al., 1994; Turney, 2001; Turney and Pantel, 2010).",
      "startOffset" : 168,
      "endOffset" : 251
    }, {
      "referenceID" : 48,
      "context" : "Indeed, if we set F (p) := ln p and b(ci) := lnP (ci), then s(ci, τ) becomes the Point-wise Mutual Information (PMI) function which has long been widely adopted in NLP (Church and Hanks, 1990; Dagan et al., 1994; Turney, 2001; Turney and Pantel, 2010).",
      "startOffset" : 168,
      "endOffset" : 251
    }, {
      "referenceID" : 40,
      "context" : "The SGNS model is a matrix factorization of PMI (Levy and Goldberg, 2014b), and the more general form of shift terms a(t) and b(ci) are explicitly introduced by GloVe (Pennington et al., 2014).",
      "startOffset" : 167,
      "endOffset" : 192
    }, {
      "referenceID" : 27,
      "context" : "As for other forms of F , it has been reported that one can achieve better empirical results by setting F (p) := √ p instead of F (p) := p (Lebret and Collobert, 2014; Stratos et al., 2015) (see Section 2.",
      "startOffset" : 139,
      "endOffset" : 189
    }, {
      "referenceID" : 43,
      "context" : "As for other forms of F , it has been reported that one can achieve better empirical results by setting F (p) := √ p instead of F (p) := p (Lebret and Collobert, 2014; Stratos et al., 2015) (see Section 2.",
      "startOffset" : 139,
      "endOffset" : 189
    }, {
      "referenceID" : 12,
      "context" : "If COMP has parameters, it is a widely adopted approach to learn the parameters by minimizing this error Et1t2 for bigrams observed in a corpus (Dinu et al., 2013; Baroni and Zamparelli, 2010; Guevara, 2010).",
      "startOffset" : 144,
      "endOffset" : 207
    }, {
      "referenceID" : 1,
      "context" : "If COMP has parameters, it is a widely adopted approach to learn the parameters by minimizing this error Et1t2 for bigrams observed in a corpus (Dinu et al., 2013; Baroni and Zamparelli, 2010; Guevara, 2010).",
      "startOffset" : 144,
      "endOffset" : 207
    }, {
      "referenceID" : 18,
      "context" : "If COMP has parameters, it is a widely adopted approach to learn the parameters by minimizing this error Et1t2 for bigrams observed in a corpus (Dinu et al., 2013; Baroni and Zamparelli, 2010; Guevara, 2010).",
      "startOffset" : 144,
      "endOffset" : 207
    }, {
      "referenceID" : 39,
      "context" : "In Pennington et al. (2014), the authors noted that logarithm is a homomorphism from multiplication to addition, and used this property to justify F (p) := ln p for training semantically additive word vectors, based but on the unverified hypothesis that multiplications of co-occurrence probabilities have specialties in semantics.",
      "startOffset" : 3,
      "endOffset" : 28
    }, {
      "referenceID" : 27,
      "context" : "On the other hand, Lebret and Collobert (2014) proposed to use F (p) := √ p, which is motivated by the Hellinger distance between two probability distributions, and reported its being better than F (p) := p.",
      "startOffset" : 19,
      "endOffset" : 47
    }, {
      "referenceID" : 27,
      "context" : "On the other hand, Lebret and Collobert (2014) proposed to use F (p) := √ p, which is motivated by the Hellinger distance between two probability distributions, and reported its being better than F (p) := p. Stratos et al. (2015) proposed a similar but more general and better-motivated",
      "startOffset" : 19,
      "endOffset" : 230
    }, {
      "referenceID" : 26,
      "context" : "As the following famous example (Landauer et al., 1997) shows, meanings of sentences can differ greatly as the word order changes.",
      "startOffset" : 32,
      "endOffset" : 55
    }, {
      "referenceID" : 27,
      "context" : "Such word vectors have been used in Lebret and Collobert (2014), Stratos et al.",
      "startOffset" : 36,
      "endOffset" : 64
    }, {
      "referenceID" : 27,
      "context" : "Such word vectors have been used in Lebret and Collobert (2014), Stratos et al. (2015) and Levy et al.",
      "startOffset" : 36,
      "endOffset" : 87
    }, {
      "referenceID" : 27,
      "context" : "Such word vectors have been used in Lebret and Collobert (2014), Stratos et al. (2015) and Levy et al. (2015). For L2-loss, we can assume that ‖Avt1 −wt1‖ ≤ ε1, ‖Avt2 −wt2‖ ≤ ε2 and ‖Avt1t2 −wt1t2‖ ≤ ε3, where ε1, ε2 and ε3 are minimized.",
      "startOffset" : 36,
      "endOffset" : 110
    }, {
      "referenceID" : 40,
      "context" : "GloVe The GloVe model (Pennington et al., 2014) is a dimension reduction of vector representations in which F (p) := ln p.",
      "startOffset" : 22,
      "endOffset" : 47
    }, {
      "referenceID" : 13,
      "context" : "To minimize this loss function, GloVe uses stochastic gradient descent methods such as AdaGrad (Duchi et al., 2011).",
      "startOffset" : 95,
      "endOffset" : 115
    }, {
      "referenceID" : 19,
      "context" : "The training of SGNS is based on the Noise Contrastive Estimation (NCE) (Gutmann and Hyvärinen, 2012), therefore two inherited parameters can affect the loss function, namely the number k of noise samples per data point, and the distribution Pnoise(·) of noise.",
      "startOffset" : 72,
      "endOffset" : 101
    }, {
      "referenceID" : 14,
      "context" : "Additive composition is the classical approach to approximating the semantics of phrases and/or sentences (Foltz et al., 1998; Landauer and Dutnais, 1997).",
      "startOffset" : 106,
      "endOffset" : 154
    }, {
      "referenceID" : 25,
      "context" : "Additive composition is the classical approach to approximating the semantics of phrases and/or sentences (Foltz et al., 1998; Landauer and Dutnais, 1997).",
      "startOffset" : 106,
      "endOffset" : 154
    }, {
      "referenceID" : 33,
      "context" : "Compared to other composition operations, vector addition/average has either served as a strong baseline (Mitchell and Lapata, 2008), or remained one of the most competitive methods until recently (Banea et al.",
      "startOffset" : 105,
      "endOffset" : 132
    }, {
      "referenceID" : 0,
      "context" : "Compared to other composition operations, vector addition/average has either served as a strong baseline (Mitchell and Lapata, 2008), or remained one of the most competitive methods until recently (Banea et al., 2014).",
      "startOffset" : 197,
      "endOffset" : 217
    }, {
      "referenceID" : 24,
      "context" : "Word-order dependent syntactic effects on meaning have been considered as the most important lack in additive composition (Landauer, 2002).",
      "startOffset" : 122,
      "endOffset" : 138
    }, {
      "referenceID" : 0,
      "context" : "Compared to other composition operations, vector addition/average has either served as a strong baseline (Mitchell and Lapata, 2008), or remained one of the most competitive methods until recently (Banea et al., 2014). Additive composition has been successfully integrated into several NLP systems as well. For example, Tian et al. (2014) use vector additions for assessing meaning similarities between paraphrase candidates in a logic-based textual entailment recognition system (e.",
      "startOffset" : 198,
      "endOffset" : 339
    }, {
      "referenceID" : 0,
      "context" : "Compared to other composition operations, vector addition/average has either served as a strong baseline (Mitchell and Lapata, 2008), or remained one of the most competitive methods until recently (Banea et al., 2014). Additive composition has been successfully integrated into several NLP systems as well. For example, Tian et al. (2014) use vector additions for assessing meaning similarities between paraphrase candidates in a logic-based textual entailment recognition system (e.g. the similarity between “blamed for death” and “cause loss of life” is calculated by the cosine similarity between sums of word vectors vblame+vdeath and vcause+vloss+vlife); in Iyyer et al. (2015), the average of word vectors in a whole sentence/document is fed into a deep neural network for sentiment analysis and question answering, which achieves near state-of-the-art accuracies with minimum training time.",
      "startOffset" : 198,
      "endOffset" : 683
    }, {
      "referenceID" : 33,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 49,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 1,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 9,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 17,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 42,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 39,
      "context" : "number of advanced compositional frameworks have been proposed to cope with word order and/or syntactic information (Mitchell and Lapata, 2008; Zanzotto et al., 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014).",
      "startOffset" : 116,
      "endOffset" : 293
    }, {
      "referenceID" : 33,
      "context" : "For example, in a two-word phrase, one can first transform the two word vectors by different matrices before adding them, in which the two matrices are parameters (Mitchell and Lapata, 2008); or, regarding different syntactic roles, one can assign matrices to adjectives for modifying vectors of nouns (Baroni and Zamparelli, 2010); further, one can insert neural network layers between parents and their children in a syntactic tree (Socher et al.",
      "startOffset" : 163,
      "endOffset" : 190
    }, {
      "referenceID" : 1,
      "context" : "For example, in a two-word phrase, one can first transform the two word vectors by different matrices before adding them, in which the two matrices are parameters (Mitchell and Lapata, 2008); or, regarding different syntactic roles, one can assign matrices to adjectives for modifying vectors of nouns (Baroni and Zamparelli, 2010); further, one can insert neural network layers between parents and their children in a syntactic tree (Socher et al.",
      "startOffset" : 302,
      "endOffset" : 331
    }, {
      "referenceID" : 42,
      "context" : "For example, in a two-word phrase, one can first transform the two word vectors by different matrices before adding them, in which the two matrices are parameters (Mitchell and Lapata, 2008); or, regarding different syntactic roles, one can assign matrices to adjectives for modifying vectors of nouns (Baroni and Zamparelli, 2010); further, one can insert neural network layers between parents and their children in a syntactic tree (Socher et al., 2012).",
      "startOffset" : 434,
      "endOffset" : 455
    }, {
      "referenceID" : 16,
      "context" : "Error bounds in approximation schemes have been extensively studied in statistical learning theory (Vapnik, 1995; Gnecco and Sanguineti, 2008), and especially for neural networks (Niyogi and Girosi, 1999; Burger and Neubauer, 2001).",
      "startOffset" : 99,
      "endOffset" : 142
    }, {
      "referenceID" : 37,
      "context" : "Error bounds in approximation schemes have been extensively studied in statistical learning theory (Vapnik, 1995; Gnecco and Sanguineti, 2008), and especially for neural networks (Niyogi and Girosi, 1999; Burger and Neubauer, 2001).",
      "startOffset" : 179,
      "endOffset" : 231
    }, {
      "referenceID" : 5,
      "context" : "Error bounds in approximation schemes have been extensively studied in statistical learning theory (Vapnik, 1995; Gnecco and Sanguineti, 2008), and especially for neural networks (Niyogi and Girosi, 1999; Burger and Neubauer, 2001).",
      "startOffset" : 179,
      "endOffset" : 231
    }, {
      "referenceID" : 50,
      "context" : "Zipf’s law (Zipf, 1935) is a classical observation and still finds new applications in recent results (Kobayashi, 2014).",
      "startOffset" : 11,
      "endOffset" : 23
    }, {
      "referenceID" : 23,
      "context" : "Zipf’s law (Zipf, 1935) is a classical observation and still finds new applications in recent results (Kobayashi, 2014).",
      "startOffset" : 102,
      "endOffset" : 119
    }, {
      "referenceID" : 44,
      "context" : "Advanced Bayesian language models such as the hierarchical Pitman-Yor process (Teh, 2006) and the topic model (Blei, 2012) have been proposed, which we expect could further refine our theory, for example, by considering the additive compositionality of topics.",
      "startOffset" : 78,
      "endOffset" : 89
    }, {
      "referenceID" : 3,
      "context" : "Advanced Bayesian language models such as the hierarchical Pitman-Yor process (Teh, 2006) and the topic model (Blei, 2012) have been proposed, which we expect could further refine our theory, for example, by considering the additive compositionality of topics.",
      "startOffset" : 110,
      "endOffset" : 122
    }, {
      "referenceID" : 1,
      "context" : ", 2010; Baroni and Zamparelli, 2010; Coecke et al., 2010; Grefenstette and Sadrzadeh, 2011; Socher et al., 2012; Paperno et al., 2014). The ordinary approach is by introducing new parameters to represent differences in word positions or syntactic roles. For example, in a two-word phrase, one can first transform the two word vectors by different matrices before adding them, in which the two matrices are parameters (Mitchell and Lapata, 2008); or, regarding different syntactic roles, one can assign matrices to adjectives for modifying vectors of nouns (Baroni and Zamparelli, 2010); further, one can insert neural network layers between parents and their children in a syntactic tree (Socher et al., 2012). An empirical comparison of a broad range of compositional models, with an accessible introduction to the literature can be found in Blacoe and Lapata (2012). One theoretical issue of these methods, however, is that they lack learning guarantee.",
      "startOffset" : 8,
      "endOffset" : 868
    }, {
      "referenceID" : 50,
      "context" : "2 Zipf’s Law An assumption essential to our calculation is Zipf’s law (Zipf, 1935), which states that the frequency of any word is inversely proportional to its rank in the frequency table.",
      "startOffset" : 70,
      "endOffset" : 82
    }, {
      "referenceID" : 33,
      "context" : "We refer to Montemurro (2001), Ha et al.",
      "startOffset" : 12,
      "endOffset" : 30
    }, {
      "referenceID" : 19,
      "context" : "We refer to Montemurro (2001), Ha et al. (2002), and Clauset et al.",
      "startOffset" : 31,
      "endOffset" : 48
    }, {
      "referenceID" : 8,
      "context" : "(2002), and Clauset et al. (2009) for detailed analyses and empirical tests.",
      "startOffset" : 12,
      "endOffset" : 34
    }, {
      "referenceID" : 38,
      "context" : "The approach, called the “delta method” (Oehlert, 1992), is as follows.",
      "startOffset" : 40,
      "endOffset" : 55
    }, {
      "referenceID" : 33,
      "context" : "1 Phrase Similarity In a data set1 created by Mitchell and Lapata (2010), phrase pairs are annotated with similarity scores.",
      "startOffset" : 46,
      "endOffset" : 73
    }, {
      "referenceID" : 21,
      "context" : "For training word vectors, we use the random projection algorithm (Halko et al., 2011) for SVD, and Stochastic Gradient Descent (SGD) (Bottou, 2012) for SGNS and GloVe.",
      "startOffset" : 66,
      "endOffset" : 86
    }, {
      "referenceID" : 4,
      "context" : ", 2011) for SVD, and Stochastic Gradient Descent (SGD) (Bottou, 2012) for SGNS and GloVe.",
      "startOffset" : 55,
      "endOffset" : 69
    }, {
      "referenceID" : 4,
      "context" : ", 2011) for SVD, and Stochastic Gradient Descent (SGD) (Bottou, 2012) for SGNS and GloVe. Since these are randomized algorithms, we run each test 20 times and report the mean performance with standard deviation. We tune SGD learning rates by checking convergence of the objectives, and get slightly better results than the default training parameters set in the software of SGNS2 and GloVe3. As pointed out by Levy et al. (2015), there are other detailed settings that can vary in SGNS and GloVe.",
      "startOffset" : 56,
      "endOffset" : 429
    }, {
      "referenceID" : 35,
      "context" : "Furthermore, in “Muraoka et al.”, we cite the best results reported by Muraoka et al. (2014), which has experimented on many different composition methods.",
      "startOffset" : 17,
      "endOffset" : 93
    }, {
      "referenceID" : 28,
      "context" : "As pointed out by Levy and Goldberg (2014a), the key to solving analogy questions is the ability to “add” (resp.",
      "startOffset" : 18,
      "endOffset" : 44
    }, {
      "referenceID" : 31,
      "context" : "Thus, the vector-based solution proposed by Mikolov et al. (2013a) as above is essentially assuming that “adding” and “subtracting” aspects can be realized by adding and subtracting word vectors.",
      "startOffset" : 44,
      "endOffset" : 67
    }, {
      "referenceID" : 7,
      "context" : "In computational linguistics, the idea of treating semantics and semantic relations by algebraic operations on distributional context vectors is relatively new (Clarke, 2012).",
      "startOffset" : 160,
      "endOffset" : 174
    }, {
      "referenceID" : 19,
      "context" : "NCE (Gutmann and Hyvärinen, 2012) is a method for solving the classical problem that, given a sample (xi) N i=1 (wherein xi ∈ X ) drawn from an unknown probability distribution Pdata, and a function family f(·; θ) : X → R≥0 parameterized by θ, to find the optimal θ∗ such that f(x; θ∗) approximates the distribution Pdata(x) best.",
      "startOffset" : 4,
      "endOffset" : 33
    }, {
      "referenceID" : 31,
      "context" : "which is exactly the objective function of SGNS proposed in Mikolov et al. (2013b).",
      "startOffset" : 60,
      "endOffset" : 83
    } ],
    "year" : 2017,
    "abstractText" : "We prove an upper bound for the bias of additive composition (Foltz et al., 1998; Landauer and Dutnais, 1997; Mitchell and Lapata, 2010), a widely used method for computing meanings of phrases by averaging the vector representations of their constituent words. The result endorses additive composition as a reasonable operation for calculating meanings of phrases, which is the first theoretical analysis on compositional frameworks from a machine learning point of view. The theory also suggests ways to improve additive compositionality, including: transforming entries of distributional word vectors by a function that meets a specific condition, constructing a novel type of vector representations to make additive composition sensitive to word order, and utilizing singular value decomposition to train word vectors.",
    "creator" : "TeX"
  }
}