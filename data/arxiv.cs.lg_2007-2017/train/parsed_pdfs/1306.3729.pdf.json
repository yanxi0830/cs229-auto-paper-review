{
  "name" : "1306.3729.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Spectral Experts for Estimating Mixtures of Linear Regressions",
    "authors" : [ "Arun Tejasvi Chaganty", "Percy Liang" ],
    "emails" : [ "chaganty@cs.stanford.edu", "pliang@cs.stanford.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Last Modified: June 18, 2013"
    }, {
      "heading" : "1. Introduction",
      "text" : "Discriminative latent-variable models, which combine the high accuracy of discriminative models with the compact expressiveness of latent-variable models, have been widely applied to many tasks, including object recognition (Quattoni et al., 2004), human action recognition (Wang & Mori, 2009), syntactic parsing (Petrov & Klein, 2008), and machine translation (Liang et al., 2006). However, parameter estimation in these models is difficult; past approaches rely on local optimization (EM, gradient descent) and are vulnerable to local optima.\nOur broad goal is to develop efficient provably consistent estimators for discriminative latent-variable models. In this paper, we provide a first step in this direction by proposing a new algorithm for a simple model, a mixture of linear regressions (Viele & Tong, 2002).\nRecently, method of moments estimators have been\nProceedings of the 30 th International Conference on Machine Learning, Atlanta, Georgia, USA, 2013. JMLR: W&CP volume 28. Copyright 2013 by the author(s).\ndeveloped for generative latent-variable models, including mixture models, HMMs (Anandkumar et al., 2012b), Latent Dirichlet Allocation (Anandkumar et al., 2012a), and parsing models (Hsu et al., 2012). The basic idea of these methods is to express the unknown model parameters as a tensor factorization of the third-order moments of the model distribution, a quantity which can be estimated from data. The moments have a special symmetric structure which permits the factorization to be computed efficiently using the robust tensor power method (Anandkumar et al., 2012c).\nIn a mixture of linear regressions, using third-order moments does not directly reveal the tensor structure of the problem, so we cannot simply apply the above tensor factorization techniques. Our approach is to employ low-rank linear regression (Negahban & Wainwright, 2009; Tomioka et al., 2011) to predict the second and third powers of the response. The solution to these regression problems provide the appropriate symmetric tensors, on which we can then apply the tensor power method to retrieve the final parameters.\nThe result is a simple and efficient two-stage algorithm, which we call Spectral Experts. We prove that our algorithm yields consistent parameter estimates under certain identifiability conditions. We also conduct an empirical evaluation of our technique to understand its statistical properties (Section 5). While Spectral Experts generally does not outperform EM, presumably due to its weaker statistical efficiency, it serves as an effective initialization for EM, significantly outperforming EM with random initialization."
    }, {
      "heading" : "1.1. Notation",
      "text" : "Let [n] = {1, . . . , n} denote the first n positive integers. We use O(f(n)) to denote a function g(n) such that limn→∞ g(n)/f(n) <∞.\nWe use x⊗p to represent the p-th order tensor formed by taking the tensor product of x ∈ Rd; i.e. x⊗pi1...ip = xi1 · · ·xip . We will use 〈·, ·〉 to denote the gener-\nar X\niv :1\n30 6.\n37 29\nv1 [\ncs .L\nG ]\n1 7\nJu n\n20 13\nalized dot product between two p-th order tensors: 〈X,Y 〉 = ∑ i1,...ip Xi1,...ipYi1,...ip . A tensor X is symmetric if for all i, j ∈ [d]p which are permutations of each other, Xi1···ip = Xj1···jp (all tensors in this paper will be symmetric). For a p-th order tensor X ∈ (Rd)⊗p, the mode-i unfolding of X is a matrix X(i) ∈ Rd×d p−1 , whose j-th row contains all the elements of X whose i-th index is equal to j.\nFor a vector X, let ‖X‖op denote the 2-norm. For a matrix X, let ‖X‖∗ denote the nuclear (trace) norm (sum of singular values), ‖X‖F denote the Frobenius norm (square root of sum of squares of singular values), ‖X‖max denote the max norm (elementwise maximum), ‖X‖op denote the operator norm (largest singular value), and σk(X) be the k-th largest singular value of X. For a p-th order tensor X, let ‖X‖∗ = 1 p ∑p i=1 ‖X(i)‖∗ denote the average nuclear norm over\nall p unfoldings, and let ‖X‖op = 1p ∑p i=1 ‖X(i)‖op denote the average operator norm over all p unfoldings.\nLet vec(X) be the vectorization of a p-th order tensor. For example, if X ∈ (R2)⊗3, vec(X) = (X111, X112, · · · , X222). For a tensor X ∈ (Rd)⊗p, let cvec(X) ∈ RN(d,p), N(d, p) = ( d+p−1 p ) be the collapsed vectorization of X. For example, if X ∈ Rd×d, cvec(X) = (Xii : i ∈ [d]; Xij+Xji√2 : i, j ∈ [d], i < j). In general, each component of cvec(X) is indexed by a vector of counts (c1, . . . , cd) with total sum ∑ i ci = p. The value of that component is 1√ |K(c)| ∑ k∈K(c)Xk1···kp , where K(c) = {k ∈ [d]p : ∀i ∈ [d], ci = |{j ∈ [p] : kj = i}|} are the set of index vectors k whose count profile is c. We note that for a symmetric tensor X and any tensor Y , 〈X,Y 〉 = 〈cvec(X), cvec(Y )〉; this property is not true in general though. Later, we’ll see that vectorization allow us to perform regression on tensors, and collapsing simplifies our identifiability condition."
    }, {
      "heading" : "2. Model",
      "text" : "The mixture of linear regressions model (Viele & Tong, 2002) defines a conditional distribution over a response y ∈ R given covariates x ∈ Rd. Let k be the number of mixture components. The generation of y given x involves three steps: (i) draw a mixture component h ∈ [k] according to mixture proportions π = (π1, . . . , πk); (ii) draw observation noise from a known zero-mean noise distribution E , and (iii) set y deterministically based on h and . More compactly:\nh ∼ Multinomial(π), (1) ∼ E , (2) y = βTh x+ . (3)\nThe parameters of the model are θ = (π,B), where π ∈ Rd are the mixture proportions and B = [β1 | · · · | βk] ∈ Rd×k are the regression coefficients. Note that the choice of mixture component h and the observation noise are independent. The learning problem is stated as follows: given n i.i.d. samples (x(1), y(1)), . . . , (x(n), y(n)) drawn from the model with some unknown parameters θ∗, return an estimate of the parameters θ̂.\nThe mixture of linear regressions model has been applied in the statistics literature for modelling music perception, where x is the actual tone and y is the tone perceived by a musician (Viele & Tong, 2002). The model is an instance of the hierarchical mixture of experts (Jacobs et al., 1991), in which the mixture proportions are allowed to depend on x, known as a gating function. This dependence allow the experts to be localized in input space, providing more flexibility, but we do not consider this dependence in our model.\nThe estimation problem for a mixture of linear regressions is difficult because the mixture components h are unobserved, resulting in a non-convex log marginal likelihood. The parameters are typically learned using expectation maximization (EM) or Gibbs sampling (Viele & Tong, 2002), which suffers from local optima. In the next section, we present a new algorithm that sidesteps the local optima problem entirely."
    }, {
      "heading" : "3. Spectral Experts algorithm",
      "text" : "In this section, we describe our Spectral Experts algorithm for estimating model parameters θ = (π,B). The algorithm consists of two steps: (i) low-rank regression to estimate certain symmetric tensors; and (ii) tensor factorization to recover the parameters. The two steps can be performed efficiently using convex optimization and tensor power method, respectively.\nTo warm up, let us consider linear regression on the response y given x. From the model definition, we have y = β>h x+ . The challenge is that the regression coefficients βh depend on the random h. The first key step is to average over this randomness by defining average\nregression coefficients M1 def = ∑k h=1 πhβh. Now we can express y as a linear function of x with non-random coefficients M1 plus a noise term η1(x):\ny = 〈M1, x〉+ (〈βh −M1, x〉+ )︸ ︷︷ ︸ def = η1(x) . (4)\nThe noise η1(x) is the sum of two terms: (i) the mixing noise 〈M1−βh, x〉 due to the random choice of the mixture component h, and (ii) the observation noise ∼ E . Although the noise depends on x, it still has zero mean\nconditioned on x. We will later show that we can perform linear regression on the data {x(i), y(i)}ni=1 to produce a consistent estimate of M1. But clearly, knowing M1 is insufficient for identifying all the parameters θ, as M1 only contains d degrees of freedom whereas θ contains O(kd).\nIntuitively, performing regression on y given x provides only first-order information. The second key insight is that we can perform regression on higher-order powers to obtain more information about the parameters. Specifically, for an integer p ≥ 1, let us define the average p-th order tensor power of the parameters as follows:\nMp def = k∑ h=1 πhβ ⊗p h . (5)\nNow consider performing regression on y2 given x⊗2. Expanding y2 = (〈βh, x〉 + )2, using the fact that 〈βh, x〉p = 〈β⊗ph , x⊗p〉, we have:\ny2 = 〈M2, x⊗2〉+ E[ 2] + η2(x), (6) η2(x) = 〈β⊗2h −M2, x ⊗2〉+ 2 〈βh, x〉+ ( 2 − E[ 2]).\nAgain, we have expressed y2 has a linear function of x⊗2 with regression coefficients M2, plus a known bias E[ 2] and noise.1 Importantly, the noise has mean zero; in fact each of the three terms has zero mean by definition of M2 and independence of and h.\nPerforming regression yields a consistent estimate of M2, but still does not identify all the parameters θ. In particular, B is only identified up to rotation: if B = [β1 | · · · | βk] satisfies B diag(π)B> = M2 and π is uniform, then (BQ) diag(π)(Q>B>) = M2 for any orthogonal matrix Q.\nLet us now look to the third moment for additional information. We can write y3 as a linear function of x⊗3 with coefficients M3, a known bias 3E[ 2]〈M̂1, x〉+ E[ 3] and some noise η3(x):\ny3 = 〈M3, x⊗3〉+ 3E[ 2]〈M̂1, x〉+ E[ 3] + η3(x), η3(x) = 〈β⊗3h −M3, x ⊗3〉+ 3 〈β⊗2h , x ⊗2〉 (7)\n+ 3( 2〈βh, x〉 − E[ 2]〈M̂1, x〉) + ( 3 − E[ 3]).\nThe only wrinkle here is that η3(x) does not quite have zero mean. It would if M̂1 were replaced with M1, but M1 is not available to us. Nonetheless, as M̂1 concentrates around M1, the noise bias will go to zero.\n1If E[ 2] were not known, we could treat it as another coefficient to be estimated. The coefficients M2 and E[ 2] can be estimated jointly provided that x does not already contain a bias (xj must be non-constant for every j ∈ [d]).\nAlgorithm 1 Spectral Experts\ninput Datasets Dp = {(x(1), y(1)), · · · , (x(n), y(n))} for p = 1, 2, 3; regularization strengths λ (2) n , λ (3) n ;\nobservation noise moments E[ 2],E[ 3]. output Parameters θ̂ = (π̂, [β̂1 | · · · | β̂k]). 1: Estimate compound parameters M2,M3 using\nlow-rank regression:\nM̂1 = arg min M1\n(8)\n1\n2n ∑ (x,y)∈D1 (〈M1, x〉 − y)2,\nM̂2 = arg min M2\nλ(2)n ‖M2‖∗+ (9)\n1\n2n ∑ (x,y)∈D2 (〈M2, x⊗2〉+ E[ 2]− y2)2,\nM̂3 = arg min M3\nλ(3)n ‖M3‖∗+ (10)\n1\n2n ∑ (x,y)∈D3 (〈M3, x⊗3〉+ 3E[ 2]〈M̂1, x〉+ E[ 3]− y3)2.\n2: Estimate parameters θ = (π,B) using tensor factorization:\n(a) Compute whitening matrix Ŵ ∈ Rd×k (such that Ŵ>M̂2Ŵ = I) using SVD.\n(b) Compute eigenvalues {âh}kh=1 and eigenvectors {v̂h}kh=1 of the whitened tensor M̂3(Ŵ , Ŵ , Ŵ ) ∈ Rk×k×k by using the robust tensor power method.\n(c) Return parameter estimates π̂h = â −2 h and\nβ̂h = (Ŵ >)†(âhv̂h).\nPerforming this regression yields an estimate of M3. We will see shortly that knowledge of M2 and M3 are sufficient to recover all the parameters.\nNow we are ready to state our full algorithm, which we call Spectral Experts (Algorithm 1). First, we perform three regressions to recover the compound parameters M1 (4), M2 (6), and M3 (7). Since M2 and M3 both only have rank k, we can use nuclear norm regularization (Tomioka et al., 2011; Negahban & Wainwright, 2009) to exploit this low-rank structure and improve our compound parameter estimates. In the algorithm, the regularization strengths λ (2) n and λ (3) n are set to\nc√ n\nfor some constant c.\nHaving estimated the compound parameters M1, M2 and M3, it remains to recover the original parame-\nters θ. Anandkumar et al. (2012c) showed that for M2 and M3 of the forms in (5), it is possible to efficiently accomplish this. Specifically, we first compute a whitening matrix W based on the SVD of M2 and use that to construct a tensor T = M3(W,W,W ) whose factors are orthogonal. We can use the robust tensor power method to compute all the eigenvalues and eigenvectors of T , from which it is easy to recover the parameters π and {βh}.\nRelated work In recent years, there has a been a surge of interest in “spectral” methods for learning latent-variable models. One line of work has focused on observable operator models (Hsu et al., 2009; Song et al., 2010; Parikh et al., 2012; Cohen et al., 2012; Balle et al., 2011; Balle & Mohri, 2012) in which a re-parametrization of the true parameters are recovered, which suffices for prediction and density estimation. Another line of work is based on the method of moments and uses eigendecomposition of a certain tensor to recover the parameters (Anandkumar et al., 2012b;a; Hsu et al., 2012; Hsu & Kakade, 2013). Our work extends this second line of work to models that require regression to obtain the desired tensor.\nIn spirit, Spectral Experts bears some resemblance to the unmixing algorithm for estimation of restricted PCFGs (Hsu et al., 2012). In that work, the observations (moments) provided a linear combination over the compound parameters. “Unmixing” involves solving for the compound parameters by inverting a mixing matrix. In this work, each data point (appropriately transformed) provides a different noisy projection of the compound parameters.\nOther work has focused on learning discriminative models, notably Balle et al. (2011) for finite state transducers (functions from strings to strings), and Balle & Mohri (2012) for weighted finite state automata (functions from strings to real numbers). Similar to Spectral Experts, Balle & Mohri (2012) used a two-step approach, where convex optimization is first used to estimate moments (the Hankel matrix in their case), after which these moments are subjected to spectral decomposition. However, these methods are developed in the observable operator framework, whereas we consider parameter estimation.\nThe idea of performing low-rank regression on y2 has been explored in the context of signal recovery from magnitude measurements (Candes et al., 2011; Ohlsson et al., 2012). There, the actual observed response was y2, whereas in our case, we deliberately construct powers y, y2, y3 to identify the underlying parameters."
    }, {
      "heading" : "4. Theoretical results",
      "text" : "In this section, we provide theoretical guarantees for the Spectral Experts algorithm. Our main result shows that the parameter estimates θ̂ converge to θ at a 1√\nn rate that depends polynomially on the bounds on the parameters, covariates, and noise, as well the k-th smallest singular values of the compound parameters and various covariance matrices.\nTheorem 1 (Convergence of Spectral Experts). Assume each dataset Dp (for p = 1, 2, 3) consists of n i.i.d. points independently drawn from a mixture of linear regressions model with parameter θ∗.2 Further, assume ‖x‖2 ≤ R, ‖β∗h‖2 ≤ L for all h ∈ [k], | | ≤ S and B is rank k. Let Σp def = E[cvec(x⊗p)⊗2], and assume Σp 0 for each p ∈ {1, 2, 3}. Let < 12 . Suppose the number of samples is n = max(n1, n2) where\nn1 = Ω\n( R12 log(1/δ)\nminp∈[3] σmin(Σp)2\n)\nn2 = Ω\n( −2 k2π2max‖M2‖ 1/2 op ‖M3‖2opL6S6R12\nσk(M2)5σmin(Σ1)2 log(1/δ)\n) .\nIf each regularization strength λ (p) n is set to\nΘ\n( LpSpR2p\nσmin(Σ1)2\n√ log(1/δ)\nn\n) ,\nfor p ∈ 2, 3, then the parameter estimates θ̂ = (π̂, B̂) returned by Algorithm 1 (with the columns appropriately permuted) satisfies\n‖π̂ − π‖∞ ≤ ‖β̂h − βh‖2 ≤\nfor all h ∈ [k].\nWhile the dependence on some of the norms (L6, S6, R12) looks formidable, it is in some sense unavoidable, since we need to perform regression on third-order moments. Classically, the number of samples required is squared norm of the covariance matrix, which itself is bounded by the squared norm of the data, R3. This third-order dependence also shows up in the regularization strengths; the cubic terms bound each of 3, β3h and ‖(x⊗3)⊗2‖F with high probability.\nThe proof of the theorem has two parts. First, we bound the error in the compound parameters estimates M̂2, M̂3 using results from Tomioka et al. (2011). Then we use results from Anandkumar et al. (2012c) to convert this error into a bound on the actual parameter estimates θ̂ = (π̂, B̂) derived from the robust tensor power method. But first, let us study a more basic property: identifiability.\n2Having three independent copies simplifies the analysis."
    }, {
      "heading" : "4.1. Identifiability from moments",
      "text" : "In ordinary linear regression, the regression coefficients β ∈ Rd are identifiable if and only if the data has full rank: E[x⊗2] 0, and furthermore, identifying β requires only moments E[xy] and E[x⊗2] (by observing the optimality conditions for (4)). However, in mixture of linear regressions, these two moments only allow us to recover M1. Theorem 1 shows that if we have the higher order analogues, E[x⊗py⊗p] and E[x⊗2p] for p ∈ {1, 2, 3}, we can then identify the parameters θ = (π,B), provided the following identifiability condition holds: E[cvec(x⊗p)⊗2] 0 for p ∈ {1, 2, 3}.\nThis identifiability condition warrants a little care, as we can run into trouble when components of x are dependent on each other in a particular algebraic way. For example, suppose x = (1, t, t2), the common polynomial basis expansion, so that all the coordinates are deterministically related. While E[x⊗2] 0 might be satisfied (sufficient for ordinary linear regression), E[cvec(x⊗2)⊗2] is singular for any data distribution. To see this, note that cvec(x⊗2) = [1 · 1, t · t, 2(1 · t2), 2(t·t2), (t2·t2)] contains components t·t and 2(1·t2), which are linearly dependent. Therefore, Spectral Experts would not be able to identify the parameters of a mixture of linear regressions for this data distribution.\nWe can show that some amount of unidentifiability is intrinsic to estimation from low-order moments, not just an artefact of our estimation procedure. Suppose x = (t, . . . , td). Even if we observed all moments E[x⊗py⊗p] and E[x⊗2p] for p ∈ [r] for some r, all the resulting coordinates would be monomials of t up to only degree 2dr, and thus the moments live in a 2drdimensional subspace. On the other hand, the parameters θ live in a subspace of at least dimension dk. Therefore, at least r ≥ k/2 moments are required for identifiability of any algorithm for this monomial example."
    }, {
      "heading" : "4.2. Analysis of low-rank regression",
      "text" : "In this section, we will bound the error of the compound parameter estimates ‖∆2‖2F and ‖∆3‖2F , where ∆2 def = M̂2 − M2 and ∆3 def = M̂3 − M3. Our analysis is based on the low-rank regression framework of Tomioka et al. (2011) for tensors, which builds on Negahban & Wainwright (2009) for matrices. The main calculation involved is controlling the noise ηp(x), which involves various polynomial combinations of the mixing noise and observation noise.\nLet us first establish some notation that unifies the three regressions ((8), (9), and (10)). Define the observation operator Xp(Mp) : Rd ⊗p → Rn mapping com-\npound parameters Mp:\nXp(Mp;D)i def = 〈Mp, x⊗pi 〉, (xi, yi) ∈ D. (11)\nLet κ(Xp) be the restricted strong convexity constant, and let X∗p(ηp;D) = ∑ (x,y)∈D ηp(x)x ⊗p be the adjoint.\nLemma 1 (Tomioka et al. (2011), Theorem 1). Suppose there exists a restricted strong convexity constant κ(Xp) such that\n1 n ‖Xp(∆)‖22 ≥ κ(Xp)‖∆‖2F and λ(p)n ≥ 2‖X∗p(ηp)‖op n .\nThen the error of M̂p is bounded as follows:\n‖M̂p −Mp‖F ≤ 32λ\n(p) n √ k\nκ(Xp) .\nGoing forward, we need to lower bound the restricted strong convexity constant κ(Xp) and upper bound the operator norm of the adjoint operator ‖X∗p(ηp)‖op. The proofs of the following lemmas follow from standard concentration inequalities and are detailed in Appendix A.\nLemma 2 (lower bound on restricted strong convexity constant). If\nn = Ω ( max p∈[3] R4p(p!)2 log(1/δ) σmin(Σp)2 ) ,\nthen with probability at least 1− δ:\nκ(Xp) ≥ σmin(Σp)\n2 ,\nfor each p ∈ [3]. Lemma 3 (upper bound on adjoint operator). If\nn = Ω max p∈[3] L2pS2pR4p log(1/δ)\nσmin(Σ1)2 ( λ (p) n\n)2  ,\nthen with probability at least 1− δ:\nλ(p)n ≥ 1 n ‖X∗p(ηp)‖op,\nfor each p ∈ [3]."
    }, {
      "heading" : "4.3. Analysis of the tensor factorization",
      "text" : "Having bounded the error of the compound parameter estimates M̂2 and M̂3, we will now study how this error propagates through the tensor factorization step of Algorithm 1, which includes whitening, applying the robust tensor power method (Anandkumar et al., 2012c), and unwhitening.\nLemma 4. Let M3 = ∑k h=1 πhβ ⊗3 h . Let ‖M̂2−M2‖op and ‖M̂3 −M3‖op both be less than\nσk(M2) 5/2\nkπmax‖M2‖1/2op ‖M3‖op ,\nfor some < 12 . Then, there exists a permutation of indices such that the parameter estimates found in step 2 of Algorithm 1 satisfy the following with probability at least 1− δ:\n‖π̂ − π‖∞ ≤\n‖β̂h − βh‖2 ≤ .\nfor all h ∈ [k].\nThe proof follows by applying standard matrix perturbation results for the whitening and unwhitening operators and can be found in Appendix B."
    }, {
      "heading" : "4.4. Synthesis",
      "text" : "Together, these lemmas allow us to control the compound parameter error and the recovery error. We now apply them in the proof of Theorem 1:\nProof of Theorem 1 (sketch). By Lemma 1, Lemma 2 and Lemma 3, we can control the Frobenius norm of the error in the moments, which directly upper bounds the operator norm: If n ≥ max{n1, n2}, then\n‖M̂p −Mp‖op = O ( λ(p)n √ kσmin(Σp) −1 ) . (12)\nWe complete the proof by applying Lemma 4 with the above bound on ‖M̂p −Mp‖op."
    }, {
      "heading" : "5. Empirical evaluation",
      "text" : "In the previous section, we showed that Spectral Experts provides a consistent estimator. In this section, we explore the empirical properties of our algorithm on simulated data. Our main finding is that Spectral Experts alone attains higher parameter error than EM, but this is not the complete story. If we initialize EM with the estimates returned by Spectral Experts, then we end up with much better estimates than EM from a random initialization."
    }, {
      "heading" : "5.1. Experimental setup",
      "text" : "Algorithms We experimented with three algorithms. The first algorithm (Spectral) is simply the Spectral Experts. We set the regularization strengths\nλ (2) n = 1 105 √ n and λ (3) n = 1 103 √ n ; the algorithm was not very sensitive to these choices. We solved the low-rank regression to estimate M2 and M3 using an off-the-shelf convex optimizer, CVX (Grant & Boyd, 2012). The second algorithm (EM) is EM where the β’s are initialized from a standard normal and π was set to the uniform distribution plus some small perturbations. We ran EM for 1000 iterations. In the final algorithm (Spectral+EM), we initialized EM with the output of Spectral Experts.\nData We generated synthetic data as follows: First, we generated a vector t sampled uniformly over the b-dimensional unit hypercube [−1, 1]b. Then, to get the actual covariates x, we applied a non-linear function of t that conformed to the identifiability criteria discussed in Section 3. The true regression coefficients {βh} were drawn from a standard normal and π is set to the uniform distribution. The observation noise is drawn from a normal with variance σ2. Results are presented below for σ2 = 0.1, but we did not observe any qualitatively different behavior for choices of σ2 in the range [0.01, 0.4].\nAs an example, one feature map we considered in the one-dimensional setting (b = 1) was x = (1, t, t4, t7). The data and the curves fit using Spectral Experts, EM with random initialization and EM initialized with the parameters recovered using Spectral Experts are shown in Figure 2. We note that even on wellseparated data such as this, EM converged to the correct basin of attraction only 13% of the time.\nTable 1. Parameter error ‖θ∗− θ̂‖F (n = 500, 000) as the number of base variables b, number of features d and the number of components k increases. While Spectral by itself does not produce good parameter estimates, Spectral+EM improves over EM significantly.\nVariables (b) Features (d) Components (k) Spectral EM Spectral + EM\n1 4 2 2.45 ± 3.68 0.28 ± 0.82 0.17 ± 0.57 2 5 2 1.38 ± 0.84 0.00 ± 0.00 0.00 ± 0.00 2 5 3 2.92 ± 1.71 0.43 ± 1.07 0.31 ± 1.02 2 6 2 2.33 ± 0.67 0.63 ± 1.29 0.01 ± 0.01\n103 104 105 106 107 n\n0\n1\n2\n3\n4\n5\n6\n7\n8\nPa ra\nm et\ner E\nrr or\nEM Spectral Spectral+EM\n(a) Well-specified data\n102 103 104 105 106 n\n0\n1\n2\n3\n4\n5\nPa ra\nm et\ner E\nrr or\nEM Spectral Spectral+EM\n(b) Misspecified data\nFigure 3. Learning curves: parameter error as a function of the number of samples n (b = 1, d = 5, k = 3)."
    }, {
      "heading" : "5.2. Results",
      "text" : "Table 1 presents the Frobenius norm of the difference between true and estimated parameters for the model, averaged over 20 different random instances for each feature set and 10 attempts for each instance. The experiments were run using n = 500, 000 samples.\nOne of the main reasons for the high variance is the variation across random instances; some are easy for EM to find the global minima and others more difficult. In general, while Spectral Experts did not recover parameters by itself extremely well, it provided a good initialization for EM.\nTo study the stability of the solutions returned by Spectral Experts, consider the histogram in Figure 1, which shows the recovery errors of the algorithms over 170 attempts on a dataset with b = 1, d = 4, k = 3. Typically, Spectral Experts returned a stable solution. When these parameters were close enough to the true parameters, we found that EM almost always converged to the global optima. Randomly initialized EM only finds the true parameters a little over 10% of the time and shows considerably higher variance.\nEffect of number of data points In Figure 3, we show how the recovery error varies as we get more data. Each data point shows the mean error over 10 attempts, with error bars. We note that the recovery performance of EM does not particularly improve; this suggests that EM continues to get stuck in a local optima. The spectral algorithm’s error decays slowly, and as it gets closer to zero, EM initialized at the spectral parameters finds the true parameters more often as well. This behavior highlights the trade-off between statistical and computational error.\nMisspecified data To evaluate how robust the algorithm was to model mis-specification, we removed large contiguous sections from x ∈ [−0.5,−0.25] ∪ [0.25, 0.5] and ran the algorithms again. Table 2 reports recovery errors in this scenario. The error in the estimates grows larger for higher d."
    }, {
      "heading" : "6. Conclusion",
      "text" : "In this paper, we developed a computationally efficient and statistically consistent estimator for mixture of linear regressions. Our algorithm, Spectral Experts, regresses on higher-order powers of the data with a regularizer that encourages low rank structure, followed by tensor factorization to recover the actual parameters. Empirically, we found Spectral Experts to be an excellent initializer for EM.\nAcknowledgements We would like to thank Lester Mackey for his fruitful suggestions and the anonymous reviewers for their helpful comments."
    }, {
      "heading" : "A. Proofs: Regression",
      "text" : "Let us review the regression problem set up in Section 3. We assume we are given data (xi, yi) ∈ Dp generated by the following process,\nyi = 〈Mp, x⊗pi 〉+ bp + ηp(xi),\nwhere Mp = ∑k h=1 πhβ ⊗p h , the expected value of β ⊗p h , bp is an estimable bias and ηp(x) is zero mean noise. In particular, for p ∈ {1, 2, 3}, we showed that bp and ηp(x) were,\nb1 = 0 b2 = E[ 2]\nb3 = 2E[ ]〈M̂1, x〉+ E[ 3] η1(x) = 〈βh −M1, x〉+ (13) η2(x) = 〈β⊗2h −M2, x\n⊗2〉+ 2 〈βh, x〉+ ( 2 − E[ 2]) (14) η3(x) = 〈β⊗3h −M3, x ⊗3〉+ 3 〈β⊗2h , x ⊗2〉+ 3( 2〈βh, x〉 − E[ 2]〈M1, x〉) + ( 3 − E[ 3]). (15)\nWe then defined the observation operator Xp(Mp) : Rd ⊗p → Rn,\nXp(Mp;Dp)i def = 〈Mp, x⊗pi 〉,\nfor (xi, yi) ∈ Dp. This let us succinctly represent the low-rank regression problem for p = 2, 3 as follows,\nM̂p = arg min Mp∈Rd⊗p\n1\n2n ‖y − bp − Xp(Mp;Dp)‖22 + λp‖Mp‖∗.\nLet us also recall the adjoint of the observation operator, X∗p : Rn → Rd p ,\nX∗p(ηp;Dp) = ∑ x∈Dp ηp(x)x ⊗p,\nwhere we have used ηp to represent the vector [ηp(x)]x∈Dp .\nTomioka et al. (2011) showed that error in the estimated M̂p can be bounded as follows;\nLemma 1 (Tomioka et al. (2011), Theorem 1). Suppose there exists a restricted strong convexity constant κ(Xp) such that\n1\n2n ‖Xp(∆)‖22 ≥ κ(Xp)‖∆‖2F and λn ≥ ‖X∗p(ηp)‖op n .\nThen the error of M̂p is bounded as follows: ‖M̂p −M∗p ‖F ≤ λn √ k\nκ(Xp) .\nIn this section, we will derive an upper bound on κ(Xp) and a lower bound on 1 n‖X ∗ p(ηp)‖op, allowing us to apply Lemma 1 in the particular context of our noise setting.\nLemma 2 (Lower bound on restricted strong convexity). Let Σp def = E[cvec(x⊗p)⊗2]. If\nn ≥ 16(p!) 2R4p\nσmin(Σp)2\n( 1 + √ log(1/δ)\n2\n)2 ,\nthen, with probability at least 1− δ,\nκ(Xp) ≥ σmin(Σp)\n2 .\nProof. Recall that κ(Xp) is defined to be a constant such that the following inequality holds,\n1 n ‖Xp(∆)‖22 ≥ κ(Xp)‖∆‖2F ,\nwhere\n‖Xp(∆)‖22 = ∑\n(x,y)∈Dp\n〈∆, x⊗p〉2.\nTo proceed, we will unfold the tensors ∆ and x⊗p to get a lower bound in terms of ‖∆‖2F . This will allow us to choose an appropriate value for κ(Xp) that will hold with high probability.\nFirst, note that x⊗p is symmetric, and thus 〈∆, x⊗p〉 = 〈cvec ∆, cvecx⊗p〉. This allows us to simplify ‖Xp(∆)‖22 as follows,\n1 n ‖Xp(∆)‖22 = 1 n ∑ (x,y)∈Dp 〈∆, x⊗p〉2\n= 1\nn ∑ (x,y)∈Dp 〈cvec(∆), cvec(x⊗p)〉2\n= 1\nn ∑ (x,y)∈Dp tr(cvec(∆)⊗2 cvec(x⊗p)⊗2)\n= tr cvec(∆)⊗2 1 n ∑ (x,y)∈Dp cvec(x⊗p)⊗2  . Let Σ̂p def = 1n ∑ (x,y)∈Dp cvec(x ⊗p)⊗2, so that 1n‖Xp(∆)‖ 2 2 = tr(cvec(∆)\n⊗2Σ̂p). For symmetric ∆ , ‖ cvec(∆)‖2 = ‖∆‖F 3. Then, we have\n1 n ‖Xp(∆)‖22 = tr(cvec(∆)⊗2Σ̂p)\n≥ σmin(Σ̂p)‖∆‖2F .\nBy Weyl’s theorem,\nσmin(Σ̂p) ≥ σmin(Σp)− ‖Σ̂p − Σp‖op.\nSince ‖Σ̂p − Σp‖op ≤ ‖Σ̂p − Σp‖F , it suffices to show that the empirical covariance concentrates in Frobenius norm. Applying Lemma 5, with probability at least 1− δ,\n‖Σ̂p − Σp‖F ≤ 2‖Σp‖F√\nn\n( 1 + √ log(1/δ)\n2\n) .\nNow we seek to control ‖Σp‖F . Since ‖x‖2 ≤ R, we can use the bound\n‖Σp‖F ≤ p!‖ vec(x⊗p)⊗2‖F ≤ p!R2p.\nFinally, ‖Σ̂p − Σp‖op ≤ σmin(Σp)/2 with probability at least 1− δ if,\nn ≥ 16(p!) 2R4p\nσmin(Σp)2\n( 1 + √ log(1/δ)\n2\n)2 .\n3 The ∆ correspond to residuals M̂p −Mp, which can easily be shown to always be symmetric.\nLemma 3 (Upper bound on adjoint operator). With probability at least 1− δ, the following holds,\n1 n ‖X∗1(η1)‖op ≤ 2 R(2LR+ S)√ n\n( 1 + √ log(3/δ)\n2 ) 1 n ‖X∗2(η2)‖op ≤ 2 (4L2R2 + 2SLR+ 4S2)R2√ n ( 1 + √ log(3/δ) 2\n) 1 n ‖X∗3(η3)‖op ≤ 2 (8L3R3 + 3L2R2S + 6LRS2 + 2S3)R3√ n ( 1 + √ log(6/δ) 2 )\n+ 3R4S2\n( 128R(2LR+ S)\nσmin(Σ1) √ n\n( 1 + √ log(6/δ)\n2\n)) .\nIt follows that, with probability at least 1− δ,\n1 n ‖X∗p(ηp)‖op = O\n( LpSpR2pσmin(Σ1) −1 √ log(1/δ)\nn\n) ,\nfor each p ∈ {1, 2, 3}.\nProof. Let Êp[f(x, , h)] denote the empirical expectation over the examples in dataset Dp (recall the Dp’s are independent to simplify the analysis). By definition,\n1 n ‖X∗p(ηp)‖op = ∥∥∥Êp [ηp(x)x⊗p]∥∥∥ op\nfor p ∈ {1, 2, 3}. To proceed, we will bound each ηp(x) and use Lemma 5 to bound ‖Êp[ηp(x)x⊗p]‖F . The Frobenius norm to bounds the operator norm, completing the proof.\nBounding ηp(x). Using the assumptions that ‖βh‖2 ≤ L, ‖x‖2 ≤ R and | | ≤ S, it is easy to bound each ηp(x),\nη1(x) = 〈βh −M1, x〉+ ≤ ‖βh −M1‖2‖x‖2 + | | ≤ 2LR+ S η2(x) = 〈β⊗2h −M2, x ⊗2〉+ 2 〈βh, x〉+ ( 2 − E[ 2])\n≤ ‖β⊗2h −M2‖F ‖x ⊗2‖F + 2| |‖βh‖2‖x‖2 + | 2 − E[ 2]| ≤ (2L)2R2 + 2SLR+ (2S)2\nη3(x) = 〈β⊗3h −M3, x ⊗3〉+ 3 〈β⊗2h , x ⊗2〉 + 3 ( 2〈βh, x〉 − E[ 2]〈M̂1, x〉 ) + ( 3 − E[ 3])\n≤ ‖β⊗3h −M3‖F ‖x ⊗3‖F + 3| |‖β⊗2h ‖F ‖x ⊗2‖F + 3 ( | 2| ‖βh‖F ‖x‖F + ∣∣E[ 2]∣∣ ‖M̂1‖2‖x‖2)+ | 3|+ ∣∣E[ 3]∣∣ ≤ (2L)3R3 + 3SL2R2 + 3(S2LR+ S2LR) + 2S3.\nWe have used inequality ‖M1 − βh‖2 ≤ 2L above.\nSpectral Experts Bounding ∥∥∥Ê[ηp(x)x⊗p]∥∥∥\nF . We may now apply the above bounds on ηp(x) to bound ‖ηp(x)x⊗p‖F , using the\nfact that ‖cX‖F ≤ c‖X‖F . By Lemma 5, each of the following holds with probability at least 1− δ1,∥∥∥Ê1[η1(x)x]∥∥∥ 2 ≤ 2R(2LR+ S)√ n ( 1 + √ log(1/δ1) 2 ) ∥∥∥Ê2[η2(x)x⊗2]∥∥∥\nF ≤ 2(4L 2R2 + 2SLR+ 4S2)R2√ n\n( 1 + √ log(1/δ2)\n2 ) ∥∥∥Ê3[η3(x)x⊗3]− E[η3(x)x⊗3 | x]∥∥∥\nF ≤ 2(8L 3R3 + 3L2R2S + 6LRS2 + 2S3)R3√ n\n( 1 + √ log(1/δ3)\n2\n) .\nRecall that η3(x) does not have zero mean, so we must bound the bias:\n‖E[η3(x)x⊗3 | x]‖F = ‖3E[ 2]〈M1 − M̂1, x〉x⊗3‖F ≤ 3E[ 2]‖M1 − M̂1‖2‖x‖2‖x⊗3‖F .\nNote that in all of this, both M̂1 and M1 are treated as constants. Further, by applying Lemma 1 to M1, we have a bound on ‖M1 − M̂1‖2; with probability at least 1− δ3,\n‖M1 − M̂1‖2 ≤ 32λ\n(1) n κ(X1)\n≤ 322R(2LR+ S)√ n\n( 1 + √ log(1/δ3)\n2\n) 2\nσmin(Σ1) .\nSo, with probability at least 1− δ3, ‖E[η3(x)x⊗3 | x]‖F ≤ 3R4S2 ( 128R(2LR+ S)\nσmin(Σ1) √ n\n( 1 + √ log(1/δ3)\n2\n)) .\nFinally, taking δ1 = δ/3, δ2 = δ/3, δ3 = δ/6, and taking the union bound over the bounds for p ∈ {1, 2, 3}, we get our result."
    }, {
      "heading" : "B. Proofs: Tensor Decomposition",
      "text" : "Once we have estimated the moments from the data through regression, we apply the robust tensor eigendecomposition algorithm to recover the parameters, βh and π. However, the algorithm is guaranteed to work only for symmetric matrices with (nearly) orthogonal eigenvectors, so, as a first step, we will need to whiten the third-order moment tensor using the second moments. We then apply the tensor decomposition algorithm to get the eigenvalues and eigenvectors. Finally, we will have to undo the transformation by applying an un-whitening step. In this section, we present error bounds for each step, and combine them to prove the following lemma,\nLemma 4 (Tensor Decomposition with Whitening). Let M2 = ∑k h=1 πhβ ⊗2 h , M3 = ∑k h=1 πhβ ⊗3 h . Let εM2 def = ‖M̂2 −M2‖op and εM3 def = ‖M̂3 −M3‖op both be such that,\nmax{εM2 , εM3} ≤ min\n{ σk(M2)\n2 ,\n15kπ5/2max ( 24 ‖M3‖op σk(M2) + 2 √ 2 )\n2σk(M2)3/2 −1 , (\n4 √ 3/2‖M2‖1/2op σk(M2)−1 + 8kπmax‖M2‖1/2op σk(M2)−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n))−1 }\nfor some < 12√πmax .\nThen, there exists a permutation of indices such that the parameter estimates found in step 2 of Algorithm 1 satisfy the following with probability at least 1− δ,\n‖π̂ − π‖∞ ≤\n‖β̂h − βh‖2 ≤ . for all h ∈ [k].\nProof. We will use the general notation, εX def = ‖X̂ −X‖op to represent the error of the estimate, X̂, of X in the operator norm.\nThrough the course of the proof, we will make some assumptions on errors that allow us simplify portions of the expressions. At the end of the proof, we will collect these conditions together to state the assumptions on above.\nStep 1: Whitening Much of this matter has been presented in Hsu & Kakade (2013, Lemma 11, 12). We present our own version for completeness.\nLet W and Ŵ be the whitening matrices for M2 and M̂2 respectively. Also define W † and Ŵ † to be their pseudo-inverses.\nWe will first show that the whitened tensor T = M3(W,W,W ) is symmetric with orthogonal eigenvectors. Recall that M2 = ∑ h πhβ ⊗2 h , so,\nI = WTM2W = ∑ h πhW Tβ⊗2h W\n= ∑ h ( √ πhW Tβh︸ ︷︷ ︸ vh )⊗2.\nThus Wβh = vh√ πh , where vh form an orthonormal basis. Applying the same whitening transform to M3, we get, M3 = ∑ h πhβ ⊗3 h\nM3(W,W,W ) = ∑ h πh(W Tβh) ⊗3\n= ∑ h 1 √ πh v⊗3h .\nConsequently, T has an orthogonal decomposition with eigenvectors vh and eigenvalues 1/ √ πh.\nLet us now study how far T̂ = M̂3(Ŵ , Ŵ , Ŵ ) differs from T , in terms of the errors of M2 and M3, following Anandkumar et al. (2012c). We note that while T̂ is also symmetric, it may not have an orthogonal decomposition. To do so, we use the triangle inequality to break the difference into a number of simple terms, that differ in exactly one element. We will then apply ‖M3(W,W,W − Ŵ )‖op ≤ ‖M3‖op‖W‖op‖W‖op‖W − Ŵ‖op.\nεT = ‖M3(W,W,W )− M̂3(Ŵ , Ŵ , Ŵ )‖op ≤ ‖M3(W,W,W )−M3(W,W, Ŵ )‖op + ‖M3(W,W, Ŵ )−M3(W, Ŵ , Ŵ )‖op\n+ ‖M3(W, Ŵ , Ŵ )−M3(Ŵ , Ŵ , Ŵ )‖op + ‖M3(Ŵ , Ŵ , Ŵ )− M̂3(Ŵ , Ŵ , Ŵ )‖op ≤ ‖M3(W,W,W − Ŵ )‖op + ‖M3(W,W − Ŵ , Ŵ )|op + ‖M3(W − Ŵ , Ŵ , Ŵ )|op ≤ ‖M3‖op‖W‖2opεW + ‖M3‖op‖Ŵ‖op‖W‖opεW + ‖M3‖op‖Ŵ‖2opεW + εM3‖Ŵ‖3op ≤ ‖M3‖op(‖W‖2op + ‖Ŵ‖op‖W‖op + ‖Ŵ‖2op)εW + εM3‖Ŵ‖3op\nWe can relate ‖Ŵ‖ and εW to εM2 using Lemma 6, for which we need the following condition,\nCondition 1. Let εM2 < σk(M2)/3.\nThen,\n‖Ŵ‖op ≤ σk(M2) −1/2√ 1− εM2σk(M2)\n≤ √ 2σk(M2) −1/2\nεW ≤ 2σk(M2)−1/2 εM2 σk(M2)\n1− εM2σk(M2) ≤ 4σk(M2)−3/2εM2 .\nThus,\nεT ≤ 6‖M3‖op‖W‖2op(4σk(M2)−3/2)εM2 + εM32 √\n2‖W‖3op ≤ 24‖M3‖opσk(M2)−5/2εM2 + 2 √ 2σk(M2) −3/2εM3\n≤ σk(M2)−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n) max{εM2 , εM3}.\nStep 2: Decomposition We have constructed T to be a symmetric tensor with orthogonal eigenvectors. We can now apply the results of Anandkumar et al. (2012c, Theorem 5.1) to bound the error in the eigenvalues, λW , and eigenvectors, ω, returned by the robust tensor power method;\n‖λW − λ̂W ‖∞ ≤ 5kεT\n(λW )min\n‖ωh − ω̂h‖2 ≤ 8kεT\n(λW )2min ,\nfor all h ∈ [k], where (λW )min is the smallest eigenvalue of T .\nStep 3: Unwhitening Finally, we need to invert the whitening transformation to recover π and βh from λW and ωh. Let us complete the proof by studying how this inversion relates the error in π and β to the error in λW and ω.\nFirst, we will bound the error in the βs,\n‖β̂h − βh‖2 = ‖Ŵ †ω̂ −W †ω‖2 ≤ εW †‖ω̂h‖2 + ‖W †‖2‖ω̂h − ωh‖2. (Triangle inequality)\nOnce more, we can apply the results of Lemma 6,\n‖Ŵ †‖op ≤ √ σ1(M2) √ 1 +\nεM2 σk(M2)\nεW † ≤ 2 √ σ1(M2) (√ 1 +\nεM2 σ1(M2)\n) εM2 σk(M2)\n1− εM2σk(M2) .\nUsing Condition 1, this simplifies to, ‖Ŵ †‖op ≤ √\n3/2‖M2‖1/2op εW † ≤ 4 √ 3/2‖M2‖1/2op σk(M2)−1εM2 .\nThus,\n‖β̂h − βh‖2 ≤ 4 √ 3/2‖M2‖1/2op σk(M2)−1εM2 + 8‖M2‖1/2op kεT\n(λW )2min ≤ 4 √\n3/2‖M2‖1/2op σk(M2)−1εM2 + 8‖M2‖1/2op kπmaxσk(M2)−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n) max{εM2 , εM3}.\nNext, let us bound the error in π,\n|π̂h − πh| = ∣∣∣∣∣ 1(λW )2h − 1(λ̂W )2h ∣∣∣∣∣\n= ∣∣∣∣∣∣ ( (λW )h + (λ̂W )h )( (λW )h − (λ̂W )h ) (λW )2h(λ̂W ) 2 h ∣∣∣∣∣∣ ≤ (2(λW )h − ‖λW − λ̂W ‖∞)\n(λW )2h ( (λW )h + ‖λW − λ̂W ‖∞ )2 ‖λW − λ̂W ‖∞. To simplify the above expression, we would like that ‖λW − λ̂W ‖∞ ≤ (λW )min/2 or ‖λW − λ̂W ‖∞ ≤ 12√πmax , recalling that (λW )h = π −1/2 h . Thus, we would like to require the following condition to hold on ;\nCondition 2. ≤ 12√πmax .\nNow,\n|π̂h − πh| ≤ (3/2)(λW )h\n(λW )4h ‖λW − λ̂W ‖∞\n≤ 3 2(λW )3h 5kεT (λW )2min ≤ 3π 3/2 max\n2 5kπmaxσk(M2)\n−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n) max{εM2 , εM3}\n≤ 15 2 π5/2maxkσk(M2)\n−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n) max{εM2 , εM3}.\nFinally, we complete the proof by requiring that the bounds εM2 and εM3 imply that ‖π̂ − π‖∞ ≤ and ‖β̂h − βh‖2 ≤ , i.e.\nmax{εM2 , εM3} ≤ ( 15\n2 π5/2maxkσk(M2)\n−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n))−1\nmax{εM2 , εM3} ≤ ( 4 √ 3/2‖M2‖1/2op σk(M2)−1εM2 + 8‖M2‖1/2op kπmaxσk(M2)−3/2 (\n24 ‖M3‖op σk(M2) + 2 √ 2\n))−1 ."
    }, {
      "heading" : "C. Basic Lemmas",
      "text" : "In this section, we have included some standard results that we employ for completeness. Lemma 5 (Concentration of vector norms). Let X,X1, · · · , Xn ∈ Rd be i.i.d. samples from some distribution with bounded support (‖X‖2 ≤M with probability 1). Then with probability at least 1− δ,∥∥∥∥∥ 1n n∑ i=1 Xi − E[X] ∥∥∥∥∥ 2 ≤ 2M√ n ( 1 + √ log(1/δ) 2 ) .\nProof. Define Zi = Xi − E[X].\nThe quantity we want to bound can be expressed as follows:\nf(Z1, Z2, · · · , Zn) = ∥∥∥∥∥ 1n n∑ i=1 Zi ∥∥∥∥∥ 2 .\nLet us check that f satisfies the bounded differences inequality:\n|f(Z1, · · · , Zi, · · · , Zn)− f(Z1, · · · , Z ′i, · · · , Zn)| ≤ 1\nn ‖Zi − Z ′i‖2\n= 1\nn ‖Xi −X ′i‖2\n≤ 2M n ,\nby the bounded assumption of Xi and the triangle inequality.\nBy McDiarmid’s inequality, with probability at least 1− δ, we have: Pr[f − E[f ] ≥ ] ≤ exp (\n−2 2∑n i=1(2M/n) 2\n) .\nRe-arranging: ∥∥∥∥∥ 1n n∑ i=1 Zi ∥∥∥∥∥ 2 ≤ E [∥∥∥∥∥ 1n n∑ i=1 Zi ∥∥∥∥∥ 2 ] +M √ 2 log(1/δ) n .\nNow it remains to bound E[f ]. By Jensen’s inequality, E[f ] ≤ √ E[f2], so it suffices to bound E[f2]:\nE  1 n2 ∥∥∥∥∥ n∑ i=1 Zi ∥∥∥∥∥ 2  = E[ 1 n2 n∑ i=1 ‖Zi‖22 ] + E  1 n2 ∑ i 6=j 〈Zi, Zj〉  ≤ 4M 2\nn + 0,\nwhere the cross terms are zero by independence of the Zi’s.\nPutting everything together, we obtain the desired bound:∥∥∥∥∥ 1n n∑ i=1 Zi ∥∥∥∥∥ ≤ 2M√n +M √ 2 log(1/δ) n .\nRemark: The above result can be directly applied to the Frobenius norm of a matrix M because ‖M‖F = ‖ vec(M)‖2. Lemma 6 (Perturbation Bounds on Whitening Matrices). Let A be a rank-k d× d matrix, Ŵ be a d× k matrix that whitens Â, i.e. ŴT ÂŴ = I. Suppose ŴTAŴ = UDUT , then define W = ŴUD− 1 2UT . Note that W is also a d× k matrix that whitens A. If αA = εAσk(A) < 1 3 then,\n‖Ŵ‖op ≤ ‖W‖op√ 1− αA\n‖Ŵ †‖op ≤ ‖W †‖op √ 1 + αA\nεW ≤ ‖W‖op αA\n1− αA εW † ≤ ‖W †‖op √ 1 + αA\nαA 1− αA .\nProof. This lemma has also been proved in Hsu & Kakade (2013, Lemma 10), but we present it differently here for completeness. First, note that for a matrix W that whitens A = V ΣV T , W = V Σ− 1 2V T and W † = V Σ 1 2V T . Thus, by rotational invariance,\n‖W‖op = 1√ σk(A)\n‖W †‖op = √ σ1(A)\nThis allows us to bound the operator norms of Ŵ and Ŵ † in terms of W and W †,\n‖Ŵ‖op = 1√ σk(Â)\n≤ 1√ σk(A)− εA\n(By Weyl’s Theorem)\n≤ 1 1− αA 1√ σk(A) = ‖W‖op√ 1− αA\n‖Ŵ †‖op = √ σ1(Â)\n≤ √ σ1(A) + εA (By Weyl’s Theorem) ≤ √ 1 + αA √ σ1(A) = √ 1 + αA‖W †‖op.\nTo find εW , we will exploit the rotational invariance of the operator norm.\nεW = ‖Ŵ −W‖op = ‖WUD 12UT −W‖op (Ŵ = WUD− 1 2UT )\n≤ ‖W‖op‖I − UD 1 2UT ‖op . (Sub-multiplicativity)\nWe will now bound ‖I − UD 12UT ‖op. Note that by rotational invariance, ‖I − UD 1 2UT ‖op = ‖I −D 1 2 ‖op. By Weyl’s inequality, |1 − √ Dii| ≤ ‖I −D 1 2 ‖op; put differently, ‖I −D 1 2 ‖op bounds the amount √ Dii can diverge from 1. Using the property that |(1 + x)−1/2 − 1| ≤ |x| for all |x| ≤ 1/2, we will take an alternate approach and bound Dii separately, and use it to bound ‖I −D 1 2 ‖op.\n‖I −D‖op = ‖I − UDUT ‖op (Rotational invariance) = ‖ŴT ÂŴ − ŴTAŴ‖op (By definition) = ‖ŴT (Â−A)Ŵ‖op ≤ ‖Ŵ‖2opεA\n≤ 1 σk(A) εA 1− αA ≤ αA 1− αA .\nTherefore, if αA1−εA < 1/2, or εA < σk(A) 3 ,\n‖I − UD1/2UT ‖op ≤ αA\n1− αA .\nWe can now complete the proof of the bound on εW ,\nεW = ‖W‖op‖I − UD1/2UT ‖op (Rotational invariance)\n≤ ‖W‖op αA\n1− αA .\nSimilarly, we can bound the error on the un-whitening transform, W †,\nεW † = ‖Ŵ † −W †‖op = ‖Ŵ † − UD 12UT Ŵ †‖op (W † = UD1/2UT Ŵ †)\n≤ ‖Ŵ †‖op‖I − UD 1 2UT ‖op ≤ ‖W †‖op √ 1 + αA αA\n1− αA ."
    } ],
    "references" : [ {
      "title" : "A method of moments for mixture models and hidden Markov models",
      "author" : [ "A. Anandkumar", "D. Hsu", "S.M. Kakade" ],
      "venue" : "In Conference on Learning Theory (COLT),",
      "citeRegEx" : "Anandkumar et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Anandkumar et al\\.",
      "year" : 2012
    }, {
      "title" : "Tensor decompositions for learning latent variable models",
      "author" : [ "Anandkumar", "Anima", "Ge", "Rong", "Hsu", "Daniel", "Kakade", "Sham M", "Telgarsky", "Matus" ],
      "venue" : "CoRR, abs/1210.7559,",
      "citeRegEx" : "Anandkumar et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Anandkumar et al\\.",
      "year" : 2012
    }, {
      "title" : "Spectral learning of general weighted automata via constrained matrix completion",
      "author" : [ "B. Balle", "M. Mohri" ],
      "venue" : "In Advances in Neural Information Processing Systems (NIPS),",
      "citeRegEx" : "Balle and Mohri,? \\Q2012\\E",
      "shortCiteRegEx" : "Balle and Mohri",
      "year" : 2012
    }, {
      "title" : "A spectral learning algorithm for finite state transducers",
      "author" : [ "B. Balle", "A. Quattoni", "X. Carreras" ],
      "venue" : "In European Conference on Machine Learning and Principles and Practice of Knowledge Discovery in Databases,",
      "citeRegEx" : "Balle et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Balle et al\\.",
      "year" : 2011
    }, {
      "title" : "Learning mixtures of spher",
      "author" : [ "D. Hsu", "S.M. Kakade" ],
      "venue" : "http://cvxr.com/cvx,",
      "citeRegEx" : "2",
      "shortCiteRegEx" : "2",
      "year" : 2012
    }, {
      "title" : "Modeling with mix",
      "author" : [ "Viele", "Kert", "Tong", "Barbara" ],
      "venue" : null,
      "citeRegEx" : "Viele et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Viele et al\\.",
      "year" : 2011
    }, {
      "title" : "ηp(x)x ⊗p, where we have used ηp to represent the vector [ηp(x)]x∈Dp",
      "author" : [ "Tomioka" ],
      "venue" : null,
      "citeRegEx" : "Tomioka,? \\Q2011\\E",
      "shortCiteRegEx" : "Tomioka",
      "year" : 2011
    }, {
      "title" : "2012c, Theorem 5.1) to bound the error in the eigenvalues",
      "author" : [ "Anandkumar" ],
      "venue" : null,
      "citeRegEx" : "Anandkumar,? \\Q2012\\E",
      "shortCiteRegEx" : "Anandkumar",
      "year" : 2012
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "Anandkumar et al. (2012c) showed that for M2 and M3 of the forms in (5), it is possible to efficiently accomplish this.",
      "startOffset" : 0,
      "endOffset" : 26
    }, {
      "referenceID" : 3,
      "context" : "One line of work has focused on observable operator models (Hsu et al., 2009; Song et al., 2010; Parikh et al., 2012; Cohen et al., 2012; Balle et al., 2011; Balle & Mohri, 2012) in which a re-parametrization of the true parameters are recovered, which suffices for prediction and density estimation.",
      "startOffset" : 59,
      "endOffset" : 178
    }, {
      "referenceID" : 3,
      "context" : "Other work has focused on learning discriminative models, notably Balle et al. (2011) for finite state transducers (functions from strings to strings), and Balle & Mohri (2012) for weighted finite state automata (functions from strings to real numbers).",
      "startOffset" : 66,
      "endOffset" : 86
    }, {
      "referenceID" : 3,
      "context" : "Other work has focused on learning discriminative models, notably Balle et al. (2011) for finite state transducers (functions from strings to strings), and Balle & Mohri (2012) for weighted finite state automata (functions from strings to real numbers).",
      "startOffset" : 66,
      "endOffset" : 177
    }, {
      "referenceID" : 3,
      "context" : "Other work has focused on learning discriminative models, notably Balle et al. (2011) for finite state transducers (functions from strings to strings), and Balle & Mohri (2012) for weighted finite state automata (functions from strings to real numbers). Similar to Spectral Experts, Balle & Mohri (2012) used a two-step approach, where convex optimization is first used to estimate moments (the Hankel matrix in their case), after which these moments are subjected to spectral decomposition.",
      "startOffset" : 66,
      "endOffset" : 304
    }, {
      "referenceID" : 2,
      "context" : "First, we bound the error in the compound parameters estimates M̂2, M̂3 using results from Tomioka et al. (2011). Then we use results from Anandkumar et al.",
      "startOffset" : 65,
      "endOffset" : 113
    }, {
      "referenceID" : 0,
      "context" : "Then we use results from Anandkumar et al. (2012c) to convert this error into a bound on the actual parameter estimates θ̂ = (π̂, B̂) derived from the robust tensor power method.",
      "startOffset" : 25,
      "endOffset" : 51
    }, {
      "referenceID" : 4,
      "context" : "In this section, we will bound the error of the compound parameter estimates ‖∆2‖F and ‖∆3‖F , where ∆2 def = M̂2 − M2 and ∆3 def = M̂3 − M3. Our analysis is based on the low-rank regression framework of Tomioka et al. (2011) for tensors, which builds on Negahban & Wainwright (2009) for matrices.",
      "startOffset" : 79,
      "endOffset" : 226
    }, {
      "referenceID" : 4,
      "context" : "In this section, we will bound the error of the compound parameter estimates ‖∆2‖F and ‖∆3‖F , where ∆2 def = M̂2 − M2 and ∆3 def = M̂3 − M3. Our analysis is based on the low-rank regression framework of Tomioka et al. (2011) for tensors, which builds on Negahban & Wainwright (2009) for matrices.",
      "startOffset" : 79,
      "endOffset" : 284
    }, {
      "referenceID" : 5,
      "context" : "Lemma 1 (Tomioka et al. (2011), Theorem 1).",
      "startOffset" : 9,
      "endOffset" : 31
    } ],
    "year" : 2013,
    "abstractText" : "Discriminative latent-variable models are typically learned using EM or gradient-based optimization, which suffer from local optima. In this paper, we develop a new computationally efficient and provably consistent estimator for a mixture of linear regressions, a simple instance of a discriminative latentvariable model. Our approach relies on a lowrank linear regression to recover a symmetric tensor, which can be factorized into the parameters using a tensor power method. We prove rates of convergence for our estimator and provide an empirical evaluation illustrating its strengths relative to local optimization (EM). Last Modified: June 18, 2013",
    "creator" : "LaTeX with hyperref package"
  }
}