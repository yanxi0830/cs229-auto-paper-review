{
  "name" : "1703.07345.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "On The Projection Operator to A Three-view Cardinality Constrained Set",
    "authors" : [ "Haichuan Yang", "Shupeng Gui", "Chuyang Ke", "Daniel Stefankovic", "Ryohei Fujimaki", "Ji Liu" ],
    "emails" : [ "h.yang@rochester.edu,", "shupenggui@gmail.com,", "cke@u.rochester.edu", "stefanko@cs.rochester.edu,", "rfujimaki@nec-labs.com,", "ji.liu.uwisc@gmail.com" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "The cardinality constraint is an intrinsic way to restrict the solution structure in many real problems, for example, sparse learning [Olshausen and Field, 1997], feature selection [Zhang, 2009], and compressed sensing [Candes et al., 2006]. The generic cardinality constrained optimization can be expressed as\nmin w∈Rp f(w) (1a)\nsubject to ‖wg‖0 ≤ sg ∀g ∈ G (1b)\nwhere w is the optimization variable, g is an index subset of [p] := {1, 2, · · · , p}, wg is the sub-vector of w indexed by g. ‖wg‖0 denotes the cardinality of the sub-vector, i.e., the number of nonzeros in wg, G is the hyper set of all predefined groups, and s ∈ R|G| is the upper bound vector\nar X\niv :1\n70 3.\n07 34\n5v 2\n[ cs\n.L G\n] 1\n- sg ∈ R refers to the upper bound of the sparsity over group g. Objective f is the loss function which could be defined with different form according to the specific application. The problem (1) refers to a nonconvex optimization (NP-hard) due to the cardinality constraint. Some efficient iterative methods such as IHT [Yuan et al., 2014], CoSaMP [Needell and Tropp, 2009], GradMP [Nguyen et al., 2012], and their variants can guarantee to solve the original problem under some mild conditions. A key component in all of these methods is the projection operator\nPΩ(G,s)(v) := arg min w∈Ω(G,s)\n‖w − v‖2 (2)\nwhere Ω(G, s) denotes the feasible set to the constraint (1b). While in some special case, for example, G = {[p]}, the projection is trivial, it is quite challenging, especially when G includes multiple overlapped index sets (even NP-hard in some cases).\nIn this paper, we consider the scenario where the overlapped cardinality constraints (1b) satisfy a Three-view Cardinality Structure (TVCS):\nDefinition 1. (Three-view Cardinality Structure (TVCS)) For Ω(G, s), the hyper set G consisting of subsets of [p] admits the TVCS structure if the following conditions are satisfied:\n• There exists a partition G0, G1 and G2 such that G = G0 ∪ G1 ∪ G2;\n• G0 = {[p]};\n• All element sets in G1 have no overlap;\n• All element sets in G2 have no overlap.\nThis definition basically requires that G can be partitioned into three hyper sets G0, G1, and G2, and overlaps can only happen between element sets in different hyper sets. G0 is usually used to restrict the overall sparsity. Figure 1 provides two examples of G for TVCS.\nThe TVCS model is motivated from some important applications, for example, in recommendation, task-worker assignment, and bioinformatics.\n• Online recommendation. Suppose we want to recommend a certain number of books (among p books) to a customer - corresponding to the G0 based sparsity constraint. Among the selected books, we want to maintain some diversities - the recommended books by the same author should not exceed a certain number (G1 based sparsity constraint) and about the same topic should not exceed a certain number either (G2 based sparsity constraint). One can refer to the top graph in Figure 1: G1 is grouped by authors and G2 is grouped by topics.\n• Task-worker assignment. Suppose we have a bunch of tasks and workers, and we want to assign the tasks to workers. For example, in crowdsourcing, we usually assign several different workers to each task since we want to use the answers from multiple workers to improve the accuracy. On the other hand, each worker is usually assigned to multiple tasks so there is a “many to many” relationship in this assignment. The goal is to pursue the optimal assignment under a certain criteria in crowdsourcing, while satisfying some restrictions. For example, the total assignments should be bounded by the total budget (corresponding to G0), the total cost of assignments to a single worker cannot exceed a certain threshold (corresponding to G1), and the total cost of assignments on a single task cannot exceed a certain threshold\n(corresponding to G2). Let X be the assignment matrix, and its rows are indexed by workers and the columns are indexed by tasks. These constraints can be illustrated by the bottom graph in Figure 1.\n• Identification of gene regulatory networks. The essential goal of identifying gene regulatory network is to identify a weighted directed graph, which can be represented by a square matrix W with p = N ×N elements in total where N is the number of vertices. A sparse network constraint is to restrict the in-degree and out-degree for each vertex, which corresponds to the sparsity in each row and column of W .\nTo solve the TVCS constrained projection (2), we show an interesting connection between the projection and a linear programming (LP) that the vertex solution to this linear programming is an integer solution which solves the original problem.\nTo find an integer solution to such LP efficiently, we formulate it into a feasibility problem, and further an equivalent quadratic convex optimization. By using the rounding technique, we can avoid solving the exact solution of this LP problem. We propose an iterative algorithm to solve it and each iteration can be completed in linear time. We also show that the iterate linearly converges to the optimal point. Finally, the proposed TVCS model is validated by the synthetic experiment and two important and novel applications in identification of gene regulatory networks and task assignment problem of crowdsourcing."
    }, {
      "heading" : "2 Related Works",
      "text" : "Recent years have witnessed many research works in the field of structured sparsity and group-based sparsity. Yuan and Lin [2006] introduced the group LASSO, which pursues group-wise sparsity that restricts the number of groups for the selected variables. Jenatton et al. [2011] construct a hierarchical structure over the variables and use group LASSO with overlapped groups to solve it. Exclusive LASSO [Kong et al., 2014, Zhou et al., 2010] was proposed for the exclusive group sparsity which can be treated as relaxing our cardinality constraints to convex regularizations. In [Kong et al., 2014], the authors discussed the overlapping situation and tried to solve the problem using convex relaxation, which is different from our approach. Besides the aforementioned works, some proposed more general models to cover various sparsity structures. Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity.\nBesides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures. In this work, the authors also introduced the projection operator for block sparsity and tree sparsity. Cevher et al. [2009] investigated cluster sparsity and they applied dynamic programming to solve the projection operator for their sparsity model. Hegde et al. [2009] introduced a “spike trains” signal model, which is also related to exclusive group sparsity. Its groups always have consecutive coordinates, and each group cannot contain more than one nonzero element. To solve the projection problem of their model, they showed the basic feasible solutions of the relaxed linear programming (LP) are always integer points. In our work, we also use LP to solve the projection problem. But our model defines the group structure differently and aims at different applications.\nIn addition, there are some works for the cases without an efficient exact projection operator [Hegde et al., 2015a,b, Nguyen et al., 2014]. This is meaningful since the projection operator for complex structured sparsity often involves solving complicated combinatorial optimization problems. Hegde et al. [2015a] discussed how to guarantee convergence if using approximate projection in IHT and CoSaMP for compressive sensing. They proved that the convergence needs a “head approximation” to project the update (gradient) before applying it. Hegde et al. [2015b] proposed a general framework to formulate a series of models as a weighted graph, and designed an efficient approximate projection operator for the models. Nguyen et al. [2014] applied the approximate projection-based IHT and CoSaMP to general convex functions and stochastic gradients."
    }, {
      "heading" : "3 Preliminary: GradMP and IHT Frameworks",
      "text" : "This section briefly reviews two commonly used algorithm frameworks to solve the cardinality constrained optimization (1): iterative hard thresholding (IHT) [Nguyen et al., 2014, Yuan et al., 2014] and gradient matching pursuit (GradMP) [Nguyen et al., 2012, 2014] (the general version of CoSaMP [Needell and Tropp, 2009]) for solving cardinality constrained problem. Other methods like hard thresholding pursuit (HTP) also follows similar steps and has been shown to be effective both empirically and theoretically [Yuan et al., 2016]. The procedures of IHT and GradMP for our\nmodel are shown in Algorithms 1 and 2, where supp(·) is the support set of the argument vector. Therefore, one can see that the efficiency of both algorithms relies on the computation of the gradient and the projection. To avoid the expensive computation of the gradient, GradMP and IHT can be extended to the stochastic versions [Nguyen et al., 2014] by assigning g the stochastic gradient at the gradient computation step.\nBoth Algorithms 1 and 2 (and their stochastic variants) guarantee some nice properties: the iterate converges to a small ball surrounding the true solution at a linear rate under certain RIPtype conditions [Nguyen et al., 2014] and the radius of such ball converges to zero when the number of samples goes to infinity.\nAlgorithm 1: Iterative Hard Thresholding.\nInput: Sparsity parameter s. Result: Problem solution wt. Initialize w0, t = 0; while stop criterion is not met do\ng = ∇f(wt) ; // Gradient computation zt = wt − γg ; // Gradient descent wt+1 = PΩ(G,s)(z\nt) ; // Projection t = t+ 1;\nend\nAlgorithm 2: Gradient Matching Pursuit.\nInput: Sparsity parameter s. Result: Problem solution wt. Initialize w0, t = 0; while stop criterion is not met do\ng = ∇f(wt); // Gradient computation Γ = supp(PΩ(G,2s)(g)); Γ̂ = Γ ∪ supp(wt) ; // Subspace selection zt = arg minsupp(z)=Γ̂ f(z) ; // Subspace optimization wt+1 = PΩ(G,s)(z t) ; // Projection\nt = t+ 1; end\nA common component in Algorithms 1 and 2 is the projection operator. If all the groups except [p] in G do not overlap each other, the projection problem can be easily solved by sequential projections [Yang et al., 2016]. But for those cases involving overlapped groups, it is generally challenging to solve them efficiently."
    }, {
      "heading" : "4 Projection Operator",
      "text" : "This section introduces how to solve the essential projection step. Note that the projection onto a nonconvex set is NP-hard in general. By utilizing the special structure of TVCS, we show that\nthe projection can be solved efficiently. Due to the page limitation, all proofs are provided in the supplementary material."
    }, {
      "heading" : "4.1 LP Relaxation",
      "text" : "Firstly, we can cast the projection problem (2) to an equivalent integer linear programming problem (ILP) according to Lemma 1.\nLemma 1. The projection problem (2) is equivalent to the following integer linear programming problem (ILP):\nmax x\n〈v2,x〉 (3)\nsubject to Ax ≤ s x ∈ {0, 1}p\nwhere v2 is applying element-wise square operation on vector v. A is a |G| × p matrix which is defined as:\nA =\n[ 1>\nC\n] (4)\nwhere C ∈ {0, 1}|G1∪G2|×p, whose rows represent the indicator vector of each group g ∈ G1 and G2. Each row in A corresponds to one group g from G. For example, Cij = 1 if the j-th coordinate is in the i-th group, otherwise Cij = 0. The first row 1 > corresponds to the overall sparsity i.e. G0.\nIt is NP-hard to solve an ILP in general. One common way to handle such ILP is making a linear programming (LP) relaxation. In our case, we can use a box constraint x ∈ [0, 1]p to replace the integer constraint x ∈ {0, 1}p:\nmax x\n〈v2,x〉 (5)\nsubject to Ax ≤ s x ∈ [0, 1]p\nHowever, there is no guarantee that a general ILP can be solved via its LP relaxation, because the solution of the relaxed LP is not always integer. Although one can make a rounding to the LP solution and acquire a integer solution, such solution is not guaranteed to be optimal (or even feasible) to the original ILP.\nFortunately, due to the special structure of our TVCS model, we find that its relaxed LP has some nice properties which make it possible to get the optimal solution of the ILP efficiently. The following theorem reveals the relationship between the ILP problem and the relaxed LP problem.\nTheorem 2. Given G satisfying TV CS, all the vertices of the feasible set to (5) are integer points. Furthermore, there is an optimal solution on the vertex that solves the ILP (3).\nThis theorem suggests that finding a vertex solution of the relaxed LP can solve the original projection problem onto a TVCS G. The proof basically shows that matrix A (for TVCS) is a totally unimodular matrix [Papadimitriou and Steiglitz, 1982]. We provide the detailed proof in the supplementary material."
    }, {
      "heading" : "4.2 Linearly Convergent Algorithm for Projection Operator onto TVCS",
      "text" : "To find a solution on the vertex, one can use the Simplex method. Although Simplex method guarantees to find an optimal solution on the vertex and could be very efficient in practice, it does not have a deterministic complexity bound. In the IHT and GradMP algorithms, projection operator is only a sub-procedure in one iteration. Hence, we are usually supposed to solve lots of instances of problem (3). Simplex might be efficient practically, but its worst case may lead to exponential time complexity [Papadimitriou and Steiglitz, 1982]. In this section, the integer solution to the linear programming can be found within the complexity proportional to the number of variables and constraints.\nEquivalent Feasibility Problem Formulation. The dual of LP problem (5) can be written as:\nmin y\n〈[s> 1>]>,y〉 (6)\nsubject to [ A> I ] y ≥ v2,y ≥ 0\nSince the duality gap of LP is zero, combining the primal LP (5) and dual LP (6), we can formulate an equivalent problem, i.e. the feasibility problem over the following constraints:\nfind x,y\nsubject to 〈[s> 1>]>,y〉 = 〈v2,x〉[ A> I ] y ≥ v2[\nA I\n] x ≤ [ s 1 ] y ≥ 0,x ≥ 0\nIterative Algorithm. The feasibility problem with linear constraints above is equivalent to the following optimization problem:\nmin x,y\n1 2 (〈[s> 1>]>,y〉 − 〈v2,x〉)2 + 1\n2 ‖[v2 − [A> I]y]+‖2 +\n1 2 ‖[Ax− s]+‖2 (7)\nsubject to 0 ≤ x ≤ 1,y ≥ 0\nwhere [z]+ is the element-wise hinge operator, i.e. it transforms each element zi to max(zi, 0). This is a convex optimization problem with a quadratic objective and box constraints. We adopt the projected gradient descent to solve this problem, and show it converges linearly.\nTheorem 3. For the optimization problem with the form\nmin z\nf(z) := ‖[Az− a]+‖2 + ‖Bz− b‖2\nsubject to z ∈ Ω\nwhere Ω = {z | Cz ≤ c}, the projected gradient descent algorithm zt+1 ← PΩ(zt − γ∇f(zt)) has a linear convergence rate with some α < 1 (depending on A and B):\n‖zt+1 − Pz∗(zt+1)‖ ≤ α‖zt − Pz∗(zt)‖,\nwhere Pz∗(·) is the projection onto the optimal solution set.\nNotice that the objective function f in Theorem 3 is not necessarily strongly convex, which means the well recognized linear convergence conclusion from the strong convexity is not applicable here.\nTheorem 3 mainly applies Hoffman’s Theorem [Hoffman, 2003] to show that f is an optimal strongly convex function [Liu and Wright, 2015]. This leads to a linear convergence rate.\nThe convergence rate α = 1/(1+ λ L ), where λ is the Hoffman constant [Hoffman, 2003] that depends on A,B and is always positive. L is the Lipschitz continuous gradient constant. More details are included in the supplementary materials.\nTo show the complexity of this algorithm, we firstly count how many iterations we need. Since we know that we can just make a rounding1 to the result xt when we attain ‖xt− x̃∗‖∞ < 0.5. Let z := [x> y>]> represent all the variables in (7). Because ‖zt − z∗‖ ≥ ‖zt − z∗‖∞ ≥ ‖xt − x∗‖∞, we can do the rounding safely when ‖zt − z∗‖ < 0.5, where z∗,x∗ are the optimal points of this problem. According to Theorem 3, we have the linear convergence rate α < 1, so the number of iterations we need is\nt > logα 1\n2‖z0 − z∗‖\nTherefore, we claim that we can obtain the solution x∗ by rounding after logα 1 2‖z0−z∗‖ iterations.\nSecondly, we show that the computation complexity in each iteration is linear with dimensionality p and the amount of groups |G|. Since each column of A contains at most 3 nonzero elements, the complexity of the matrix multiplications in computing the gradient of (7) is O(p+|G|). Together with other computation, the complexity for each iteration is O(p+ |G|)."
    }, {
      "heading" : "5 Empirical Study",
      "text" : "This section will validate the proposed method on both synthetic data and two practical applications: crowdsourcing and identification of gene regulatory networks."
    }, {
      "heading" : "5.1 Linear Regression and Classification on Synthetic Data",
      "text" : "In this section, we validate the proposed method with linear regression objective and squared hinge objective (classification) on synthetic data. Let w ∈ R √ p×√p be a matrix, G1 and G2 are defined as groups with all rows and all columns respectively. The linear regression loss is defined as ∑n i=1(〈Xi,w〉− yi)2 and the squared hinge loss is defined as ∑n\ni=1 max(0, 1− yi〈Xi,w〉)2, where n is the total number of training samples. Xi and yi are the features and label of the i-th sample respectively.\n1Acute readers may notice that the convergent point may be on the face of the polytope in some cases instead of vertex. However, we can add a small random perturbation to ensure the optimal point to be vertices with probability 1.\nIn the linear regression experiment, the true model w̄ ∈ R √ p×√p is generated from the following procedure: generate a random vector and apply the projection operator to get a support set which satisfy our sparsity constraints; the elements of positions in support set are drawn from standard normal distribution. p is fixed as 400 and n is gradually increased. The group sparsity upper bounds sg for g ∈ G1 and g ∈ G2 are uniformly generated from the integers in the range[1, √ p]. The\noverall sparsity upper bound is set by 0.8 × min( ∑ g∈G1 s g, ∑ g∈G2 s g). Each Xi’s is an √ p × √p i.i.d. Gaussian random matrix. yi is generated from yi = 〈Xi, w̄〉 + ei, where ei is the i.i.d. Gaussian random noise drawn from N (0, 0.012). We compare the proposed methods to bilevel exclusive sparsity with non-overlapped groups (row-wise or column-wise) [Yang et al., 2016], overall sparsity [Needell and Tropp, 2009], and exclusive LASSO [Kong et al., 2014]. For fairness we project the final result of all the compared methods to satisfy all constraints. All the experiments are repeated 30 times and we use the averaged result. We use selection recall and successful recovery rate to evaluate the performance. Selection recall is defined as |supp(w∗)∩supp(w̄)|/‖w̄‖0, where w∗ is the optimization result. Successful recovery rate is the ratio of the successful feature selection i.e. supp(w∗) = supp(w̄) to the total number of repeated experiments. In Figure 2 we can observe that our model with all sparsity constraints always have the best performance. While the performance of exclusive LASSO and our method is comparable when the number of samples are very limited, our method outperforms exclusive LASSO when the number of samples increases.\nFor classification experiments, we use the same settings of sparsity with linear regression. Here we set p = 400, and change n from 200 to 800. The true model w̄ and feature matrices are generated by the same way as the linear regression experiment. The class label yi ∈ {−1, 1} is got by yi = sign〈Xi, w̄〉. Besides the selection recall, we also compare the classification error. In Figure 3, we can see that the superiority of our method is even more significant in the classification experiment. Although the overall sparsity has the lowest selection recall, it still has a similar classification error with the methods that consider row or column groups."
    }, {
      "heading" : "5.2 Application in Crowdsourcing",
      "text" : "This section applies the proposed method to the worker-task assignment problem in crowdsourcing. Take the image labeling task as an example. Given n workers and m images, each image can be assigned to multiple workers and each worker can label multiple images. The predicted label for each image is decided by all the labels provided by the assigned workers and the quality of each worker on the image. The goal is to maximize the expected prediction accuracy based on the assignment. Let X ∈ {0, 1}n×m be the assignment matrix, i.e. Xij = 1 if assign the i-th worker to j-th task, otherwise Xij = 0. Q ∈ [0, 1]n×m is the corresponding quality matrix, which is usually estimated from the golden standard test [Ho et al., 2013]. The whole formulation is defined to maximize the average of the expected prediction accuracy over m tasks over a TVCS constraint:\nmax X\n1\nm m∑ j=1 Eacc(Q·,j , X·,j) (8)\nsubject to\nn∑ i=1 Xij ≤ sworker, ∀j;\nm∑ j=1\nXij ≤ stask,∀i;∑ i,j Xij ≤ stotal; X ∈ {0, 1}n×m\nwhere Eacc(·, ·) is the expected prediction accuracy, sworker is the “worker sparsity”, i.e. the largest number of assigned workers for each task, and stask is the “task sparsity”, i.e. each worker can be assigned with at most stask tasks, and stotal is the total sparsity to control the budget, i.e., the maximal number of assignment. In image labeling task, we assume that each image can only have two possible classes and the percentage of images in each class is one half. We use the Bayesian rule to infer the predicted labels given the workers’ answer. Here we consider the binary classification\ntask. Let yj ∈ {1, 0} be the true label of the j-th task and ŷj be the prediction given labels by selected workers, i.e.,\nŷj = { 0, if P(yj = 1|ŶΩj ,j) < P(yj = 0|ŶΩj ,j); 1, otherwise\nwhere Ŷij is the i-th worker’s predication on j-th task. Set Ωj contains the indices of the selected workers for j-th task, i.e. Xij = 1,∀i ∈ Ωj , and Xi′j = 0,∀i′ /∈ Ωj\nThen Eacc(Q·,j , X·,j) can be defined in the following:\nEacc(Q·,j , X·,j) = P(ŷj = 1,yj = 1) + P(ŷj = 0,yj = 0)\nBy this way, the expected accuracy will not be continuous, so we use smooth function to approximate the expected accuracy and adopt the stochastic gradient with the proposed projection operator to optimize it. Due to the space limitation, the detailed derivation of the objective formulation can be found in the supplemental material.\nWe conduct experiment for crowdsourcing task assignment on synthetic data. Specifically, we generate the quality matrix Q from uniformly random distribution with interval [0.5, 0.9]. The prior probability P(yj = 1) and P(yj = 0) are set as 0.5 for all the tasks.\nTo avoid evaluating the expectation term, we apply the stochastic iterative hard thresholding framework [Nguyen et al., 2014]. Each iteration we get Ŷ |yj = 1 and Ŷ |yj = 0 by sampling based on Q i.e. P(Ŷij = 1|yj = 1) = Qij , P(Ŷij = 0|yj = 0) = Qij . Then we can get a stochastic gradient based on the sampled Ŷ .\nBesides the proposed formulation (8), we evaluate the random assignment algorithm and the Q-based linear programming [Ho et al., 2013]. The random assignment algorithm widely used in practice is the most straightforward approach: given the total assignment budget stotal and the restrictions (sworker and stask) for workers and tasks, randomly assign tasks to the workers. The Qbased linear programming uses the linear combination of Qij over i to evaluate the overall accuracy\non task j for simpler formulation. In addition, it does not consider the restriction on tasks, thus it may assign lots of workers to a difficult task2. To make a fair comparison, the task restriction is added into this method. To get the assignment result which satisfies the task and worker restriction, we use our projection operator in the other methods too.\nWe evaluate the experiments on different value of stask, sworker by setting them as different ratios of the total number of tasks and workers. The overall sparsity is set by the same way as in Section 5.1. To measure the performance, we compare the sampled expected accuracy. The samples (i.e., Ŷ ) are independent to the samples used in training. Figure 4 shows the comparison of the expected accuracy of the three approaches. We can observe that the accuracy increases with larger ratio (i.e. more assignments). The random assignment strategy needs more assignments to get the same accuracy compared with the other two methods."
    }, {
      "heading" : "5.3 Application in Identification of Gene Regulatory Networks",
      "text" : "In this section, we apply the projection operator to the identification of gene regulatory networks (GRN).\nBackground. Gene regulatory network represents the relations between different genes, which plays important roles in biological processes and activities by controlling the expression level of RNAs. There is a well-known biological competition named DREAM challenge about identifying GRN. Based on the time series gene expression data which are RNAs’ level along time sequence, contestants are required to recover the whole gene network of given size. One popular way to infer GRN is to utilize the sparse property of GRN: e.g., one gene in the network is only related to a small number of genes and we already know that there exists no relationship between some genes. Therefore, the amount of edges connecting to one vertex is far less than the dimension of the graph. It is a practical case of row-wise and column-wise sparsity for matrix. We could apply the projection operator to constrain the number of edges related to each vertex to identify the whole network. Recently, the dynamic Bayesian network (DBN) [Zou and Conzen, 2005] is supposed to be an effective model to recover GRNs. The RNAs’ level of all genes in GRN at time t is stored in gene expression vector xt ∈ RN , where each entry corresponds to one gene respectively and N is the number of genes in GRN. Hence, We define the total amount of time points in the experiment as T . Gene activity model is usually assumed to be\nxt+1 = Pxt + et, t = 1 . . . T − 1,\nwhere P ∈ RN×N is the covariance matrix of GRN and et ∈ RN is Gaussian white noise. Then the difference of RNA levels between time points t+ 1 and t, i.e. yt+1,t ∈ RN is defined as follows:\nyt+1,t := xt+1 − xt = W̄xt + et, t = 1 . . . T − 1,\nwhere W̄ = P−I is the true sparse N -by-N matrix. Therefore, the GRN is only considered between different genes and we eliminate edges whose start and end vertex are the same. We define that Y := [y2,1, . . . ,yT,T−1] ∈ RN×(T−1) and X := [x1, . . . ,xT−1] ∈ RN×(T−1). The objective function is\nf(W ) = 1\n2 ‖Y − W̄X‖2F =\n1\n2 T−1∑ t=1 ‖(xt+1 − xt)− W̄xt‖2.\n2A “difficult” task means that all workers’ qualities are low on this task.\nTime-course Gene Expression Data. To evaluate our method, we employ GeneNetWeaver [Marbach et al., 2009, Schaffter et al., 2011], the official DREAM Challenge tool for time-series expression data generation. With typical gene network structure and ordinary differential equation (ODE) models, GeneNetWeaver will produce the time-course gene expression data at pre-specified time points. In the simulation studies, we control the size of gene network to be N = 30 vertexes and the gene expression data are generated under 10% Gaussian white noise.\nThe network is shown in Figure 5. In this Figure, it is clear that one gene only has a few connections to other genes. Therefore, the GRN is sparse and we are able to restrict the in-degree and out-degree of every vertex by representing the network as a matrix and controlling the sparsity within each row and column.\nPerformance evaluation. Six commonly-used criteria are considered to measure the performance, i.e., sensitivity (SN), specificity (SP), accuracy (ACC), F-measure, Matthews correlation coefficient (MCC), and the Area Under ROC Curve (AUC):\nSN = TP\nTP + FN , SP =\nTN\nTN + FP ,\nACC = TP + TN\nTP + FP + TN + FN ,\nF-measure = 2× SN× SP\nSN + SP ,\nMCC = TP× TN− FP× FN√\n(TP + FP)(TP + FN)(TN + FP)(TN + FN) ,\nwhere TP and TN denote the true positive and true negative, and FP and FN denote the false positive and false negative, respectively. With these criteria, we compare the performance of our\nmethod with six representative algorithms, including PCC, ARACNE [Margolin et al., 2006], CLR [Faith et al., 2007], MINET [Meyer et al., 2008], GENIE3 [Huynh-Thu et al., 2010], TIGRESS [Haury et al., 2012]. The results are summarized in Table 1. Our method outperforms other six state-of-art methods: the AUC of our method achieve 0.7 higher which is far more than other methods; 5 out of 6 different measure show that our method has significant advantage compared to other algorithms."
    }, {
      "heading" : "6 Conclusion",
      "text" : "This paper considers the TVCS constrained optimization, motivated by the intrinsic restrictions for many important applications, for example, in bioinformatics, recommendation system, and crowdsourcing. To solve the cardinality constrained problem, the key step is the projection onto the cardinality constraints. Although the projection onto the overlapped cardinality constraints is NP-hard in general, we prove that if the TVCS condition is satisfied the projection can be reduced to a linear programming. We further prove that there is an iterative algorithm which finds an integer solution to the linear programming within time complexity O((p + |G|) logα 1R), where R is the distance from the initial point to the optimization solution and α < 1 is the convergence rate. We finally use synthetic experiments and two interesting applications in bioinformatics and crowdsourcing to validate the proposed TVCS model."
    }, {
      "heading" : "Acknowledgements",
      "text" : "This project is supported in part by the NSF grant CNS-1548078 and the NEC fellowship."
    }, {
      "heading" : "1 Proof of Lemma 1",
      "text" : "Firstly we show how to convert the projection problem (2) to a support set selection problem. For any vector w, let vector x ∈ {0, 1}p indicate the nonzero positions of w, then we can claim that\n‖v − vx‖2 ≤ ‖v −w‖2\nwhere vx is a vector having same dimension with v, and it keeps elements at positions where x has “1”, and fills zeros at positions where x has “0”. In addition, vector w ∈ Ω(G, s) if and only if its support set indicator vector x satisfies Ax ≤ s, given A is defined in (4).\nSo the problem (2) can be converted to integer programming:\nmin x∈{0,1}p\n‖v − vx‖2 (9)\nsubject to Ax ≤ s\nand the objective can be further simplified:\n‖v − vx‖2 = 〈v2,1− x〉 = ‖v‖2 − 〈v2,x〉\nSince v is constant here, then the problem (9) is equivalent to the ILP (3), which means problem (2) is equivalent to ILP (3). Then we complete the proof."
    }, {
      "heading" : "2 Proof of Theorem 2",
      "text" : "To prove Theorem 2, we use the concept of totally unimodular matrix.\nDefinition 2. Totally Unimodular (TU) Matrix. An integer matrix is TU, if the determinant of any square submatrices3 is in the set {−1, 0, 1}.\nProposition 1. If A is TU, then A> is TU, and their concatenations with identity matrices (i.e. [A, I], [A>, I]>) are still TU.\nProof. Since transposing matrix will not change the determinant, so it is obvious A> is TU. Then we prove stacking with identity matrix I preserves TU property. We prove it by induction. Firstly, we show that submatrix with size 1 always has determinant in {−1, 0, 1}, because any element from I is either 1 or 0. Now consider a submatrix with size k having determinant in {−1, 0, 1}, then submatrix with size k+1 will still have determinant in {−1, 0, 1}. To show this, we only need to prove that adding a new row/column from I will not change the determinant out of set\n3Submatrix here is a square smaller matrix obtained by removing certain rows and columns\n{−1, 0, 1}. Since any row/column from I only has one nonzero element “1”, we can eliminate other elements in the same position by subtracting a multiple of this row/column to other rows/columns. After that, we can remove this row and column, and the determinant can only change its sign. So we know that submatrix with size k + 1 has determinant in {−1, 0, 1} if submatrix with size k has determinant in {−1, 0, 1}.\nLemma 4. If A is TU, s is an integer vector, then all vertices of the following polytope are integer points:\n{x | Ax ≤ s,x ∈ [0, 1]p} (10)\nProof. We can have an equivalent form of this polytope:{ x ∣∣∣∣[AI ] x ≤ [ s 1 ] ,x ≥ 0 } (11) From Proposition 1, we know that matrix [ A I\n] is TU if A is TU, so this meets the case in Theorem 13.2 [see Papadimitriou and Steiglitz, 1982, chap 13]. Then we complete the proof.\nLemma 5. If C is the matrix whose each row is the indicator vector of a group g ∈ G1 ∪G2 in our TVCS model, then C is a TU matrix.\nProof. Since C’s rows are the indicator vectors of groups in G, so Cij ∈ {0, 1}. From the definition 1, we know that there are at most two “1”s in each column. For the column which has two “1”s, the two corresponding groups are from G1 and G2 respectively. (Because we know that groups within G1 or G2 do not overlap.)\nBy this way, our matrix C meets the case in Theorem 13.3 [see Papadimitriou and Steiglitz, 1982, chap 13], and it is a TU matrix.\nLemma 6. Recall the matrix A in equation (4):\nA =\n[ 1>\nC ]"
    }, {
      "heading" : "If it is constructed from the TVCS model, then A is a TU matrix.",
      "text" : "Proof. From Lemma 5, we know C is a TU matrix for any G of our TVCS model. In other words, any submatrix restricted in C has determinant −1, 0, or 1. Therefore, we only need to consider the submatrix of A′ has overlaps with the first row 1>. There are only three possible forms of such submatrix S. We will show all of their determinants are in {−1, 0, 1}.\n1) At least one column of S has a single “1”, so it must appear in the first row 1>. By exchanging such column with the last column (which can only influence the sign of determinant), we can transform it with form: [\n1> 1 C̄ 0 ] where C̄ is any submatrix of C. From the matrix determinant property, we have |S| = ±|C̄| ∈ {−1, 0, 1}. Therefore, submatrix S in such form have determinants in {−1, 0, 1}.\n2) All columns of S have three “1” elements (the last row has “1” for every column). For the rows which are from C, we can sum all the rows to a certain row (this will not change the determinant). By this way we transform S to the following form:1>2>\nC̄  where C̄ is a submatrix of C. In this case, S is not full rank, so its determinant is 0.\n3) Each column in S contains at least two “1” elements, and there exists one column which has exactly two “1”s. By exchanging it to the last column, we can transform it to be:\n1> 1 · · · 0 C̄i 1 · · · 0  This means that one “1” is in the first row, and another is in the row from C, let us say it’s C̄i. Since subtracting one row from another row will not change the determinant, we can let the first row subtract C̄i: \n1> 1 · · · 0 C̄i 1 · · · 0\n→ \n1> − C̄i 0 · · · 0 C̄i 1 · · · 0  Now the last column only has a single “1” in the i-th row. We can generate a smaller matrix S′ by removing the i-th row and the last column, and if S′ has determinant in {−1, 0, 1}, so does S. \n1> − C̄i 0 · · · 0 C̄i 1 · · · 0 → S′ = 1> − C̄i· · · · · ·  If C̄i 6= 0>, then there are some positions (including j-th column) in the first row will become zeros. For any column of matrix S′ which has “0” element in the first row, there are two cases:\n(a) This column only contains zeros, i.e. S′ has zero determinant. (b) This column contains a single “1”, we can generate a smaller matrix S′′ by removing this column and the row where this “1” sits. If S′′ has determinant in {−1, 0, 1}, so does S′.\nNotice that it is impossible for the case that such column has two “1”s. (Since each column can have at most three “1”s, and we already remove the “1” in the first row by subtraction, and discard another “1” by removing C̄i.) In the above case (b), we can repeat removing columns and rows until we get a degenerate matrix (has 0 determinant), or a matrix whose\nfirst row does not have zeros. For the later situation, we can process it by same procedures as the original matrix S unless it only has one row and one column, i.e. a matrix having single element “1” (has determinant 1). If C̄i = 0 >, we can also process it by same procedures as the original matrix S.\nTherefore, we have proved that any square submatrix S in A′ has determinant in {−1, 0, 1}, which means A′ is TU, and hence A is TU.\nApplying Lemma 4 and Lemma 6, we complete the proof of Theorem 2."
    }, {
      "heading" : "3 Proof of Theorem 3",
      "text" : "To prove Theorem 3, we start with several lemmas.\nLemma 7. Formulate the feasibility problem as problem (7), let f be the objective of the formulation in Theorem 3. If f∗ = 0, there exists a λ such that\nf(z)− f∗ ≥ λ 2 ‖z− Pz∗(z)‖2,∀z ∈ Ω\nwhere Pz∗(z) is the optimal point which is closet to z.\nProof. Since f∗ = 0, there exists at least an z∗ such that\nAz∗ − a ≤ 0 Bz∗ = b\nCz∗ ≤ c\nFrom Hoffman’s Theorem [Hoffman, 2003], we know that there exists a λ > 0, such that\nλ 2 ‖z− Pz∗(z)‖2 ≤ ‖[Az− a]+‖2 + ‖Bz− b‖2 + ‖[Cz− c]+‖2\nTherefore, we know for any z in Ω, Cz ≤ c\nand λ\n2 ‖z− Pz∗(z)‖2 ≤ ‖[Az− a]+‖2 + ‖Bz− b‖2\nUsing the lemma above, we can prove the Theorem 3 now.\nProof. Denote by ∆t := ‖zt − Pz∗(zt)‖2. We have\n∆t+1 = ‖zt+1 − Pz∗(zt+1)‖2\n≤ ‖zt+1 − Pz∗(zt)‖2 ≤ ‖zt − Pz∗(zt) + zt+1 − zt‖2 = ‖zt − Pz∗(zt)‖2 + ‖zt+1 − zt‖2 + 2〈zt+1 − zt, zt − Pz∗(zt)〉\n= ∆t − ‖zt+1 − zt‖2 + 2〈zt+1 − zt, zt+1 − Pz∗(zt)〉 ≤ ∆t − ‖zt+1 − zt‖2 − 2γ〈∇f(zt), zt+1 − Pz∗(zt)〉\nLet T = 〈∇f(zt), zt+1 − Pz∗(zt)〉. Then we have\nT = 〈∇f(zt), zt+1 − Pz∗(zt)〉 = 〈∇f(zt), zt − Pz∗(zt)〉+ 〈∇f(zt), zt+1 − zt〉\n≥ −f∗ + f(zt) + f(zt+1)− f(zt)− L 2 ‖zt+1 − zt‖2 = f(zt+1)− f∗ − L 2 ‖zt+1 − zt‖2\nwhere L is the Lipschitz continuous gradient constant. Back to the original inequality, we have\n‖zt+1 − Pz∗(zt+1)‖2 ≤ ∆t − ‖zt+1 − zt‖2 − 2γ〈∇f(zt), zt+1 − Pz∗(zt)〉 ≤ ∆t − (1− Lγ)‖zt+1 − zt‖2 − 2γ(f(zt+1)− f∗)\n≤ ∆t − (1− Lγ)‖zt+1 − zt‖2 − 2γ λ\n2 ‖zt+1 − Pz∗(zt+1)‖2\nwhere the last inequality comes from Lemma 7. Let γ = 1L and we have\n(1 + λ\nL )∆t+1 ≤ ∆t\n∆t+1 ≤ 1\n1 + λL ∆t\nwhich shows the linear convergence rate α = 1 1+ λ\nL\n, then it completes the proof."
    }, {
      "heading" : "4 Formulation of the Expected Accuracy in Crowdsourcing Task",
      "text" : "Assignment\nIn crowdsourcing task assignment problem, recall the objective function of problem (8):\n1\nm m∑ j=1 Eacc(Q·,j , X·,j)\nFor the j-th task, Eacc(Q·,j , X·,j) is defined in the following:\nEacc(Q·,j , X·,j) =P(ŷj = 1|yj = 1)P(yj = 1) + P(ŷj = 0|yj = 0)P(yj = 0) =EŶΩj ,j |yj=1[I(ŷj = 1)]P(yj = 1) + EŶΩj ,j |yj=0[I(ŷj = 0)]P(yj = 0) (12)\nwhere I(·) is the indicator function. We can further specify this formulation by considering the equivalent forms for ŷj = 1 and ŷj = 0:\nŷj = 1\n⇔P(yj = 1|ŶΩj ,j) ≥ P(yj = 0|ŶΩj ,j) ⇔ P(ŶΩj ,j |yj = 1) P(ŶΩj ,j |yj = 0) ≥ P(yj = 0) P(yj = 1)\n⇔ ∏ i∈Ωj ( Qij 1−Qij )2Ŷi,j−1 ≥ P(yj = 0) P(yj = 1)\n⇔ ∑ i∈Ωj (2Ŷi,j − 1) log ( Qij 1−Qij ) ≥ log ( P(yj = 0) P(yj = 1) )\n⇔ n∑ i=1 Xij(2Ŷi,j − 1) log ( Qij 1−Qij ) − log ( P(yj = 0) P(yj = 1) ) ≥ 0\nSimilar derivation can be applied to ŷj = 0 (change “≥” to “<”). Here we substitute the indicator function I(t ≥ 0) as sigmoid function S(t) = 11+exp(−t) to obtain a smooth approximation. Denote by Zij := (2Ŷi,j−1) log (Qij/(1−Qij)) and rj := log (P(yj = 0)/P(yj = 1)) for short. The (smooth) objective turns out to be:\n1\nm m∑ j=1 ( EŶ |yj=1 [ S ( n∑ i=1 ZijXij − rj )] P(yj = 1) + EŶ |yj=0 [ S ( rj − n∑ i=1 ZijXij )] P(yj = 0) )\nand its stochastic gradient is:\ng(X)·,j = 1\nm P(yj = 1)(1− S( n∑ i=1 Z yj=1 ij Xij − rj))S( n∑ i=1 Z yj=1 ij Xij − rj)Z yj=1 ·,j +\n1\nm P(yj = 0)(1− S( n∑ i=1 Z yj=0 ij Xij − rj))S( n∑ i=1 Z yj=0 ij Xij − rj)Z yj=0 ·,j\nwhere Zyj=1 (or Zyj=0) is generated by sampling Ŷ given yj = 1 (or yj = 0)."
    } ],
    "references" : [ {
      "title" : "Structured sparsity through convex optimization",
      "author" : [ "F. Bach", "R. Jenatton", "J. Mairal", "G. Obozinski" ],
      "venue" : "Statistical Science,",
      "citeRegEx" : "Bach et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Bach et al\\.",
      "year" : 2012
    }, {
      "title" : "Model-based compressive sensing",
      "author" : [ "R.G. Baraniuk", "V. Cevher", "M.F. Duarte", "C. Hegde" ],
      "venue" : "Information Theory, IEEE Transactions on,",
      "citeRegEx" : "Baraniuk et al\\.,? \\Q1982\\E",
      "shortCiteRegEx" : "Baraniuk et al\\.",
      "year" : 1982
    }, {
      "title" : "Stable signal recovery from incomplete and inaccurate measurements",
      "author" : [ "E.J. Candes", "J.K. Romberg", "T. Tao" ],
      "venue" : "Communications on pure and applied mathematics,",
      "citeRegEx" : "Candes et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Candes et al\\.",
      "year" : 2006
    }, {
      "title" : "Recovery of clustered sparse signals from compressive measurements",
      "author" : [ "V. Cevher", "P. Indyk", "C. Hegde", "R.G. Baraniuk" ],
      "venue" : "Technical report, DTIC Document,",
      "citeRegEx" : "Cevher et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Cevher et al\\.",
      "year" : 2009
    }, {
      "title" : "A totally unimodular view of structured sparsity",
      "author" : [ "M. El Halabi", "V. Cevher" ],
      "venue" : "In Proceedings of the Eighteenth International Conference on Artificial Intelligence and Statistics,",
      "citeRegEx" : "Halabi and Cevher.,? \\Q2015\\E",
      "shortCiteRegEx" : "Halabi and Cevher.",
      "year" : 2015
    }, {
      "title" : "Large-scale mapping and validation of escherichia coli transcriptional regulation from a compendium of expression profiles",
      "author" : [ "J.J. Faith", "B. Hayete", "J.T. Thaden", "I. Mogno", "J. Wierzbowski", "G. Cottarel", "S. Kasif", "J.J. Collins", "T.S. Gardner" ],
      "venue" : "PLoS biol,",
      "citeRegEx" : "Faith et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Faith et al\\.",
      "year" : 2007
    }, {
      "title" : "Tigress: trustful inference of gene regulation using stability selection",
      "author" : [ "A.-C. Haury", "F. Mordelet", "P. Vera-Licona", "J.-P. Vert" ],
      "venue" : "BMC systems biology,",
      "citeRegEx" : "Haury et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Haury et al\\.",
      "year" : 2012
    }, {
      "title" : "Compressive sensing recovery of spike trains using a structured sparsity model",
      "author" : [ "C. Hegde", "M.F. Duarte", "V. Cevher" ],
      "venue" : "In SPARS’09-Signal Processing with Adaptive Sparse Structured Representations,",
      "citeRegEx" : "Hegde et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Hegde et al\\.",
      "year" : 2009
    }, {
      "title" : "Approximation algorithms for model-based compressive sensing",
      "author" : [ "C. Hegde", "P. Indyk", "L. Schmidt" ],
      "venue" : "Information Theory, IEEE Transactions on,",
      "citeRegEx" : "Hegde et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Hegde et al\\.",
      "year" : 2015
    }, {
      "title" : "A nearly-linear time framework for graph-structured sparsity",
      "author" : [ "C. Hegde", "P. Indyk", "L. Schmidt" ],
      "venue" : "In Proceedings of the 32nd International Conference on Machine Learning",
      "citeRegEx" : "Hegde et al\\.,? \\Q2015\\E",
      "shortCiteRegEx" : "Hegde et al\\.",
      "year" : 2015
    }, {
      "title" : "Adaptive task assignment for crowdsourced classification",
      "author" : [ "C.-J. Ho", "S. Jabbari", "J.W. Vaughan" ],
      "venue" : "In Proceedings of The 30th International Conference on Machine Learning,",
      "citeRegEx" : "Ho et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Ho et al\\.",
      "year" : 2013
    }, {
      "title" : "On approximate solutions of systems of linear inequalities",
      "author" : [ "A.J. Hoffman" ],
      "venue" : "In Selected Papers Of Alan J Hoffman: With Commentary,",
      "citeRegEx" : "Hoffman.,? \\Q2003\\E",
      "shortCiteRegEx" : "Hoffman.",
      "year" : 2003
    }, {
      "title" : "Inferring regulatory networks from expression data using tree-based methods",
      "author" : [ "V.A. Huynh-Thu", "A. Irrthum", "L. Wehenkel", "P. Geurts" ],
      "venue" : "PloS one,",
      "citeRegEx" : "Huynh.Thu et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Huynh.Thu et al\\.",
      "year" : 2010
    }, {
      "title" : "Proximal methods for hierarchical sparse coding",
      "author" : [ "R. Jenatton", "J. Mairal", "G. Obozinski", "F. Bach" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Jenatton et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Jenatton et al\\.",
      "year" : 2011
    }, {
      "title" : "Exclusive feature learning on arbitrary structures via l1,2-norm",
      "author" : [ "D. Kong", "R. Fujimaki", "J. Liu", "F. Nie", "C. Ding" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Kong et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Kong et al\\.",
      "year" : 2014
    }, {
      "title" : "Asynchronous stochastic coordinate descent: Parallelism and convergence properties",
      "author" : [ "J. Liu", "S.J. Wright" ],
      "venue" : "SIAM Journal on Optimization,",
      "citeRegEx" : "Liu and Wright.,? \\Q2015\\E",
      "shortCiteRegEx" : "Liu and Wright.",
      "year" : 2015
    }, {
      "title" : "Generating realistic in silico gene networks for performance assessment of reverse engineering methods",
      "author" : [ "D. Marbach", "T. Schaffter", "C. Mattiussi", "D. Floreano" ],
      "venue" : "Journal of computational biology,",
      "citeRegEx" : "Marbach et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Marbach et al\\.",
      "year" : 2009
    }, {
      "title" : "Aracne: an algorithm for the reconstruction of gene regulatory networks in a mammalian cellular context",
      "author" : [ "A.A. Margolin", "I. Nemenman", "K. Basso", "C. Wiggins", "G. Stolovitzky", "R.D. Favera", "A. Califano" ],
      "venue" : "BMC bioinformatics, 7(Suppl 1):S7,",
      "citeRegEx" : "Margolin et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Margolin et al\\.",
      "year" : 2006
    }, {
      "title" : "minet: Ar/bioconductor package for inferring large transcriptional networks using mutual information",
      "author" : [ "P.E. Meyer", "F. Lafitte", "G. Bontempi" ],
      "venue" : "BMC bioinformatics,",
      "citeRegEx" : "Meyer et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Meyer et al\\.",
      "year" : 2008
    }, {
      "title" : "Cosamp: Iterative signal recovery from incomplete and inaccurate samples",
      "author" : [ "D. Needell", "J.A. Tropp" ],
      "venue" : "Applied and Computational Harmonic Analysis,",
      "citeRegEx" : "Needell and Tropp.,? \\Q2009\\E",
      "shortCiteRegEx" : "Needell and Tropp.",
      "year" : 2009
    }, {
      "title" : "A unified iterative greedy algorithm for sparsity constrained optimization",
      "author" : [ "N. Nguyen", "S. Chin", "T.D. Tran" ],
      "venue" : null,
      "citeRegEx" : "Nguyen et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Nguyen et al\\.",
      "year" : 2012
    }, {
      "title" : "Linear convergence of stochastic iterative greedy algorithms with sparse constraints",
      "author" : [ "N. Nguyen", "D. Needell", "T. Woolf" ],
      "venue" : "arXiv preprint arXiv:1407.0088,",
      "citeRegEx" : "Nguyen et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Nguyen et al\\.",
      "year" : 2014
    }, {
      "title" : "Sparse coding with an overcomplete basis set: A strategy employed by v1",
      "author" : [ "B.A. Olshausen", "D.J. Field" ],
      "venue" : "Vision research,",
      "citeRegEx" : "Olshausen and Field.,? \\Q1997\\E",
      "shortCiteRegEx" : "Olshausen and Field.",
      "year" : 1997
    }, {
      "title" : "Combinatorial optimization: algorithms and complexity",
      "author" : [ "C.H. Papadimitriou", "K. Steiglitz" ],
      "venue" : "Courier Corporation,",
      "citeRegEx" : "Papadimitriou and Steiglitz.,? \\Q1982\\E",
      "shortCiteRegEx" : "Papadimitriou and Steiglitz.",
      "year" : 1982
    }, {
      "title" : "Genenetweaver: in silico benchmark generation and performance profiling of network inference methods",
      "author" : [ "T. Schaffter", "D. Marbach", "D. Floreano" ],
      "venue" : null,
      "citeRegEx" : "Schaffter et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Schaffter et al\\.",
      "year" : 2011
    }, {
      "title" : "On benefits of selection diversity via bilevel exclusive sparsity",
      "author" : [ "H. Yang", "Y. Huang", "L. Tran", "J. Liu", "S. Huang" ],
      "venue" : "In Computer Vision and Pattern Recognition (CVPR),",
      "citeRegEx" : "Yang et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Yang et al\\.",
      "year" : 2016
    }, {
      "title" : "Model selection and estimation in regression with grouped variables",
      "author" : [ "M. Yuan", "Y. Lin" ],
      "venue" : "Journal of the Royal Statistical Society: Series B (Statistical Methodology),",
      "citeRegEx" : "Yuan and Lin.,? \\Q2006\\E",
      "shortCiteRegEx" : "Yuan and Lin.",
      "year" : 2006
    }, {
      "title" : "Gradient hard thresholding pursuit for sparsity-constrained optimization",
      "author" : [ "X. Yuan", "P. Li", "T. Zhang" ],
      "venue" : "In Proceedings of The 31st International Conference on Machine Learning,",
      "citeRegEx" : "Yuan et al\\.,? \\Q2014\\E",
      "shortCiteRegEx" : "Yuan et al\\.",
      "year" : 2014
    }, {
      "title" : "Exact recovery of hard thresholding pursuit",
      "author" : [ "X. Yuan", "P. Li", "T. Zhang" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Yuan et al\\.,? \\Q2016\\E",
      "shortCiteRegEx" : "Yuan et al\\.",
      "year" : 2016
    }, {
      "title" : "On the consistency of feature selection using greedy least squares regression",
      "author" : [ "T. Zhang" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Zhang.,? \\Q2009\\E",
      "shortCiteRegEx" : "Zhang.",
      "year" : 2009
    }, {
      "title" : "Exclusive lasso for multi-task feature selection",
      "author" : [ "Y. Zhou", "R. Jin", "S.C. Hoi" ],
      "venue" : "In AISTATS,",
      "citeRegEx" : "Zhou et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Zhou et al\\.",
      "year" : 2010
    } ],
    "referenceMentions" : [ {
      "referenceID" : 22,
      "context" : "The cardinality constraint is an intrinsic way to restrict the solution structure in many real problems, for example, sparse learning [Olshausen and Field, 1997], feature selection [Zhang, 2009], and compressed sensing [Candes et al.",
      "startOffset" : 134,
      "endOffset" : 161
    }, {
      "referenceID" : 29,
      "context" : "The cardinality constraint is an intrinsic way to restrict the solution structure in many real problems, for example, sparse learning [Olshausen and Field, 1997], feature selection [Zhang, 2009], and compressed sensing [Candes et al.",
      "startOffset" : 181,
      "endOffset" : 194
    }, {
      "referenceID" : 2,
      "context" : "The cardinality constraint is an intrinsic way to restrict the solution structure in many real problems, for example, sparse learning [Olshausen and Field, 1997], feature selection [Zhang, 2009], and compressed sensing [Candes et al., 2006].",
      "startOffset" : 219,
      "endOffset" : 240
    }, {
      "referenceID" : 27,
      "context" : "Some efficient iterative methods such as IHT [Yuan et al., 2014], CoSaMP [Needell and Tropp, 2009], GradMP [Nguyen et al.",
      "startOffset" : 45,
      "endOffset" : 64
    }, {
      "referenceID" : 19,
      "context" : ", 2014], CoSaMP [Needell and Tropp, 2009], GradMP [Nguyen et al.",
      "startOffset" : 16,
      "endOffset" : 41
    }, {
      "referenceID" : 20,
      "context" : ", 2014], CoSaMP [Needell and Tropp, 2009], GradMP [Nguyen et al., 2012], and their variants can guarantee to solve the original problem under some mild conditions.",
      "startOffset" : 50,
      "endOffset" : 71
    }, {
      "referenceID" : 14,
      "context" : "In [Kong et al., 2014], the authors discussed the overlapping situation and tried to solve the problem using convex relaxation, which is different from our approach.",
      "startOffset" : 3,
      "endOffset" : 22
    }, {
      "referenceID" : 15,
      "context" : "Yuan and Lin [2006] introduced the group LASSO, which pursues group-wise sparsity that restricts the number of groups for the selected variables.",
      "startOffset" : 0,
      "endOffset" : 20
    }, {
      "referenceID" : 6,
      "context" : "Jenatton et al. [2011] construct a hierarchical structure over the variables and use group LASSO with overlapped groups to solve it.",
      "startOffset" : 0,
      "endOffset" : 23
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures.",
      "startOffset" : 0,
      "endOffset" : 19
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity. Besides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures.",
      "startOffset" : 0,
      "endOffset" : 630
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity. Besides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures. In this work, the authors also introduced the projection operator for block sparsity and tree sparsity. Cevher et al. [2009] investigated cluster sparsity and they applied dynamic programming to solve the projection operator for their sparsity model.",
      "startOffset" : 0,
      "endOffset" : 835
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity. Besides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures. In this work, the authors also introduced the projection operator for block sparsity and tree sparsity. Cevher et al. [2009] investigated cluster sparsity and they applied dynamic programming to solve the projection operator for their sparsity model. Hegde et al. [2009] introduced a “spike trains” signal model, which is also related to exclusive group sparsity.",
      "startOffset" : 0,
      "endOffset" : 981
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity. Besides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures. In this work, the authors also introduced the projection operator for block sparsity and tree sparsity. Cevher et al. [2009] investigated cluster sparsity and they applied dynamic programming to solve the projection operator for their sparsity model. Hegde et al. [2009] introduced a “spike trains” signal model, which is also related to exclusive group sparsity. Its groups always have consecutive coordinates, and each group cannot contain more than one nonzero element. To solve the projection problem of their model, they showed the basic feasible solutions of the relaxed linear programming (LP) are always integer points. In our work, we also use LP to solve the projection problem. But our model defines the group structure differently and aims at different applications. In addition, there are some works for the cases without an efficient exact projection operator [Hegde et al., 2015a,b, Nguyen et al., 2014]. This is meaningful since the projection operator for complex structured sparsity often involves solving complicated combinatorial optimization problems. Hegde et al. [2015a] discussed how to guarantee convergence if using approximate projection in IHT and CoSaMP for compressive sensing.",
      "startOffset" : 0,
      "endOffset" : 1804
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity. Besides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures. In this work, the authors also introduced the projection operator for block sparsity and tree sparsity. Cevher et al. [2009] investigated cluster sparsity and they applied dynamic programming to solve the projection operator for their sparsity model. Hegde et al. [2009] introduced a “spike trains” signal model, which is also related to exclusive group sparsity. Its groups always have consecutive coordinates, and each group cannot contain more than one nonzero element. To solve the projection problem of their model, they showed the basic feasible solutions of the relaxed linear programming (LP) are always integer points. In our work, we also use LP to solve the projection problem. But our model defines the group structure differently and aims at different applications. In addition, there are some works for the cases without an efficient exact projection operator [Hegde et al., 2015a,b, Nguyen et al., 2014]. This is meaningful since the projection operator for complex structured sparsity often involves solving complicated combinatorial optimization problems. Hegde et al. [2015a] discussed how to guarantee convergence if using approximate projection in IHT and CoSaMP for compressive sensing. They proved that the convergence needs a “head approximation” to project the update (gradient) before applying it. Hegde et al. [2015b] proposed a general framework to formulate a series of models as a weighted graph, and designed an efficient approximate projection operator for the models.",
      "startOffset" : 0,
      "endOffset" : 2054
    }, {
      "referenceID" : 0,
      "context" : "Bach et al. [2012] extended the usage of L1-norm relaxation to several different categories of structures. And recently, another generalization work [El Halabi and Cevher, 2015] proposed convex envelopes for various sparsity structures. They built the framework by defining a totally unimodular penalty, and showed how to formulate different sparsity structures using the penalty. The work above concentrated on using convex relaxation to control the sparsity. Besides using convex relaxation, there are also some works focusing on projection-based methods. When the exact projection operator was provided, Baraniuk et al. [2010] extended the traditional IHT and CoSaMP methods to general sparsity structures. In this work, the authors also introduced the projection operator for block sparsity and tree sparsity. Cevher et al. [2009] investigated cluster sparsity and they applied dynamic programming to solve the projection operator for their sparsity model. Hegde et al. [2009] introduced a “spike trains” signal model, which is also related to exclusive group sparsity. Its groups always have consecutive coordinates, and each group cannot contain more than one nonzero element. To solve the projection problem of their model, they showed the basic feasible solutions of the relaxed linear programming (LP) are always integer points. In our work, we also use LP to solve the projection problem. But our model defines the group structure differently and aims at different applications. In addition, there are some works for the cases without an efficient exact projection operator [Hegde et al., 2015a,b, Nguyen et al., 2014]. This is meaningful since the projection operator for complex structured sparsity often involves solving complicated combinatorial optimization problems. Hegde et al. [2015a] discussed how to guarantee convergence if using approximate projection in IHT and CoSaMP for compressive sensing. They proved that the convergence needs a “head approximation” to project the update (gradient) before applying it. Hegde et al. [2015b] proposed a general framework to formulate a series of models as a weighted graph, and designed an efficient approximate projection operator for the models. Nguyen et al. [2014] applied the approximate projection-based IHT and CoSaMP to general convex functions and stochastic gradients.",
      "startOffset" : 0,
      "endOffset" : 2231
    }, {
      "referenceID" : 19,
      "context" : ", 2012, 2014] (the general version of CoSaMP [Needell and Tropp, 2009]) for solving cardinality constrained problem.",
      "startOffset" : 45,
      "endOffset" : 70
    }, {
      "referenceID" : 28,
      "context" : "Other methods like hard thresholding pursuit (HTP) also follows similar steps and has been shown to be effective both empirically and theoretically [Yuan et al., 2016].",
      "startOffset" : 148,
      "endOffset" : 167
    }, {
      "referenceID" : 21,
      "context" : "To avoid the expensive computation of the gradient, GradMP and IHT can be extended to the stochastic versions [Nguyen et al., 2014] by assigning g the stochastic gradient at the gradient computation step.",
      "startOffset" : 110,
      "endOffset" : 131
    }, {
      "referenceID" : 21,
      "context" : "Both Algorithms 1 and 2 (and their stochastic variants) guarantee some nice properties: the iterate converges to a small ball surrounding the true solution at a linear rate under certain RIPtype conditions [Nguyen et al., 2014] and the radius of such ball converges to zero when the number of samples goes to infinity.",
      "startOffset" : 206,
      "endOffset" : 227
    }, {
      "referenceID" : 25,
      "context" : "If all the groups except [p] in G do not overlap each other, the projection problem can be easily solved by sequential projections [Yang et al., 2016].",
      "startOffset" : 131,
      "endOffset" : 150
    }, {
      "referenceID" : 23,
      "context" : "The proof basically shows that matrix A (for TVCS) is a totally unimodular matrix [Papadimitriou and Steiglitz, 1982].",
      "startOffset" : 82,
      "endOffset" : 117
    }, {
      "referenceID" : 23,
      "context" : "Simplex might be efficient practically, but its worst case may lead to exponential time complexity [Papadimitriou and Steiglitz, 1982].",
      "startOffset" : 99,
      "endOffset" : 134
    }, {
      "referenceID" : 11,
      "context" : "Theorem 3 mainly applies Hoffman’s Theorem [Hoffman, 2003] to show that f is an optimal strongly convex function [Liu and Wright, 2015].",
      "startOffset" : 43,
      "endOffset" : 58
    }, {
      "referenceID" : 15,
      "context" : "Theorem 3 mainly applies Hoffman’s Theorem [Hoffman, 2003] to show that f is an optimal strongly convex function [Liu and Wright, 2015].",
      "startOffset" : 113,
      "endOffset" : 135
    }, {
      "referenceID" : 11,
      "context" : "The convergence rate α = 1/(1+ λ L ), where λ is the Hoffman constant [Hoffman, 2003] that depends on A,B and is always positive.",
      "startOffset" : 70,
      "endOffset" : 85
    }, {
      "referenceID" : 25,
      "context" : "We compare the proposed methods to bilevel exclusive sparsity with non-overlapped groups (row-wise or column-wise) [Yang et al., 2016], overall sparsity [Needell and Tropp, 2009], and exclusive LASSO [Kong et al.",
      "startOffset" : 115,
      "endOffset" : 134
    }, {
      "referenceID" : 19,
      "context" : ", 2016], overall sparsity [Needell and Tropp, 2009], and exclusive LASSO [Kong et al.",
      "startOffset" : 26,
      "endOffset" : 51
    }, {
      "referenceID" : 14,
      "context" : ", 2016], overall sparsity [Needell and Tropp, 2009], and exclusive LASSO [Kong et al., 2014].",
      "startOffset" : 73,
      "endOffset" : 92
    }, {
      "referenceID" : 10,
      "context" : "Q ∈ [0, 1]n×m is the corresponding quality matrix, which is usually estimated from the golden standard test [Ho et al., 2013].",
      "startOffset" : 108,
      "endOffset" : 125
    }, {
      "referenceID" : 21,
      "context" : "To avoid evaluating the expectation term, we apply the stochastic iterative hard thresholding framework [Nguyen et al., 2014].",
      "startOffset" : 104,
      "endOffset" : 125
    }, {
      "referenceID" : 10,
      "context" : "Besides the proposed formulation (8), we evaluate the random assignment algorithm and the Q-based linear programming [Ho et al., 2013].",
      "startOffset" : 117,
      "endOffset" : 134
    }, {
      "referenceID" : 17,
      "context" : "method with six representative algorithms, including PCC, ARACNE [Margolin et al., 2006], CLR [Faith et al.",
      "startOffset" : 65,
      "endOffset" : 88
    }, {
      "referenceID" : 5,
      "context" : ", 2006], CLR [Faith et al., 2007], MINET [Meyer et al.",
      "startOffset" : 13,
      "endOffset" : 33
    }, {
      "referenceID" : 18,
      "context" : ", 2007], MINET [Meyer et al., 2008], GENIE3 [Huynh-Thu et al.",
      "startOffset" : 15,
      "endOffset" : 35
    }, {
      "referenceID" : 12,
      "context" : ", 2008], GENIE3 [Huynh-Thu et al., 2010], TIGRESS [Haury et al.",
      "startOffset" : 16,
      "endOffset" : 40
    }, {
      "referenceID" : 6,
      "context" : ", 2010], TIGRESS [Haury et al., 2012].",
      "startOffset" : 17,
      "endOffset" : 37
    } ],
    "year" : 2017,
    "abstractText" : "The cardinality constraint is an intrinsic way to restrict the solution structure in many domains, for example, sparse learning, feature selection, and compressed sensing. To solve a cardinality constrained problem, the key challenge is to solve the projection onto the cardinality constraint set, which is NP-hard in general when there exist multiple overlapped cardinality constraints. In this paper, we consider the scenario where the overlapped cardinality constraints satisfy a Three-view Cardinality Structure (TVCS), which reflects the natural restriction in many applications, such as identification of gene regulatory networks and task-worker assignment problem. We cast the projection into a linear programming, and show that for TVCS, the vertex solution of this linear programming is the solution for the original projection problem. We further prove that such solution can be found with the complexity proportional to the number of variables and constraints. We finally use synthetic experiments and two interesting applications in bioinformatics and crowdsourcing to validate the proposed TVCS model and method.",
    "creator" : "LaTeX with hyperref package"
  }
}