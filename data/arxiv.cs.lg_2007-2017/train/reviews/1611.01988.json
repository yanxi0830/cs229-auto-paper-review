{"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Nov-2016", "title": "Differentiable Functional Program Interpreters", "abstract": "We discuss a range of modeling choices that arise when constructing an end-to-end differentiable programming language suitable for learning programs from input-output examples. Taking cues from programming languages research, we study the effect of memory allocation schemes, immutable data, type systems, and built-in control-flow structures on the success rate of learning algorithms. We build a range of models leading up to a simple differentiable functional programming language. Our empirical evaluation shows that this language allows to learn far more programs than existing baselines.", "histories": [["v1", "Mon, 7 Nov 2016 11:09:19 GMT  (37kb)", "https://arxiv.org/abs/1611.01988v1", "Submitted to ICLR 2017"], ["v2", "Thu, 2 Mar 2017 13:26:11 GMT  (70kb)", "http://arxiv.org/abs/1611.01988v2", null]], "COMMENTS": "Submitted to ICLR 2017", "reviews": [], "SUBJECTS": "cs.PL cs.LG", "authors": ["john k feser", "marc brockschmidt", "alexander l gaunt", "daniel tarlow"], "accepted": false, "id": "1611.01988"}
