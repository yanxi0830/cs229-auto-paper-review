{"conference": "iclr", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Nov-2016", "title": "DeepCoder: Learning to Write Programs", "abstract": "We develop a first line of attack for solving programming competition-style problems from input-output examples using deep learning. The approach is to train a neural network to predict properties of the program that generated the outputs from the inputs. We use the neural network's predictions to augment search techniques from the programming languages community, including enumerative search and an SMT-based solver. Empirically, we show that our approach leads to an order of magnitude speedup over the strong non-augmented baselines and a Recurrent Neural Network approach, and that we are able to solve problems of difficulty comparable to the simplest problems on programming competition websites.", "histories": [["v1", "Mon, 7 Nov 2016 11:09:45 GMT  (140kb,D)", "http://arxiv.org/abs/1611.01989v1", "Submitted to ICLR 2017"], ["v2", "Wed, 8 Mar 2017 11:50:33 GMT  (259kb,D)", "http://arxiv.org/abs/1611.01989v2", "Submitted to ICLR 2017"]], "COMMENTS": "Submitted to ICLR 2017", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["matej balog", "alexander l gaunt", "marc brockschmidt", "sebastian nowozin", "daniel tarlow"], "accepted": true, "id": "1611.01989"}
