{"conference": "iclr", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Apr-2017", "title": "Making Neural Programming Architectures Generalize via Recursion", "abstract": "Empirically, neural networks that attempt to learn programs from data have exhibited poor generalizability. Moreover, it has traditionally been difficult to reason about the behavior of these models beyond a certain level of input complexity. In order to address these issues, we propose augmenting neural architectures with a key abstraction: recursion. As an application, we implement recursion in the Neural Programmer-Interpreter framework on four tasks: grade-school addition, bubble sort, topological sort, and quicksort. We demonstrate superior generalizability and interpretability with small amounts of training data. Recursion divides the problem into smaller pieces and drastically reduces the domain of each neural network component, making it tractable to prove guarantees about the overall system's behavior. Our experience suggests that in order for neural architectures to robustly learn program semantics, it is necessary to incorporate a concept like recursion.", "histories": [["v1", "Fri, 21 Apr 2017 16:02:26 GMT  (284kb,D)", "http://arxiv.org/abs/1704.06611v1", "Published in ICLR 2017"]], "COMMENTS": "Published in ICLR 2017", "reviews": [], "SUBJECTS": "cs.LG cs.NE cs.PL", "authors": ["jonathon cai", "richard shin", "dawn song"], "accepted": true, "id": "1704.06611"}
