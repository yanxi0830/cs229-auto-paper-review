{
  "name" : "1705.07853.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Nonparametric Online Regression while Learning the Metric",
    "authors" : [ "Ilja Kuzborskij" ],
    "emails" : [ "ilja.kuzborskij@idiap.ch", "nicolo.cesa-bianchi@unimi.it" ],
    "sections" : [ {
      "heading" : "1 Introduction",
      "text" : "An online learner is an agent interacting with an unknown and arbitrary environment over a sequence of rounds. At each round t, the learner observes a data point (or instance) xt ∈ X ⊂ Rd, outputs a prediction ŷt for the label yt ∈ R associated with that instance, and incurs some loss `t(ŷt), which in this paper is the square loss (ŷt − yt)2. At the end of the round, the label yt is given to the learner, which he can use to reduce his loss in subsequent rounds. The performance of an online learner is typically measured using the regret. This is defined as the amount by which the learner’s cumulative loss exceeds the cumulative loss (on the same sequence of instances and labels) of any function f in a given reference class F of functions,\nRT (f) = T∑ t=1 ( `t(ŷt)− `t ( f(xt) )) ∀f ∈ F . (1)\nNote that typical regret bounds apply to all f ∈ F and to all individual data sequences. However, the bounds are allowed to scale with parameters arising from the interplay between f and the data sequence.\nIn order to capture complex environments, the reference class of functions should be large. In this work we focus on nonparametric classes F , containing all differentiable functions that are smooth with respect to some metric on X . Our approach builds on the simple and versatile algorithm for nonparametric online learning introduced in [7]. This algorithm has a bound on the regret RT (f) of order (ignoring logarithmic factors) 1 +\n√√√√ d∑ i=1 ‖∂if‖2∞ T d1+d ∀f ∈ F . (2) Here ‖∂if‖∞ is the value of the partial derivative ∂f(x) / ∂xi maximized over x ∈ X . The square root term is the Lipschitz constant of f , measuring smoothness with respect to the Euclidean metric. However, in some directions f may be smoother than in others. Therefore, if we knew in advance the set of directions along which the best performing reference functions f are smooth, we could use this information to control regret better. In this paper we extend the algorithm from [7] and make it adaptive\nar X\niv :1\n70 5.\n07 85\n3v 1\n[ cs\n.L G\n] 2\n2 M\nay 2\n01 7\nto the Mahalanobis distance defined through an arbitrary positive definite matrix M with spectrum{ (ui, λi) }d i=1\nand unit spectral radius (λ1 = 1). We prove a bound on the regret RT (f) of order (ignoring logarithmic factors) √detκ(M) +\n√√√√ d∑ i=1 ‖∇uif‖ 2 ∞ λi T ρT1+ρT ∀f ∈ F . (3) Here ρT ≤ d is, roughly, the number of eigenvalues of M larger than a threshold shrinking polynomially in T , and detκ(M) ≤ 1 is the determinant of M truncated at λκ (with κ ≤ ρT ). The quantity ‖∇uif‖ 2 ∞ is defined like ‖∂if‖∞, but with the directional derivative∇f(x)>u instead of the partial derivative. When the spectrum of M is light-tailed (so that ρT d and, simultaneously, detκ(M) 1), with the smaller eigenvalues λi corresponding to eigenvectors in which f is smoother (so that the ratios ‖∇uif‖ 2 ∞ / λi remain controlled), then our bound improves on (2). On the other hand, when no preliminary knowledge about good f is available, we may run the algorithm with M equal to the identity matrix and recover exactly the bound (2).\nGiven that the regret can be improved by informed choices of M , it is natural to ask whether some kind of improvement is still possible when M is learned online, from the same data sequence on which the regret is being measured. Of course, this question makes sense if the data tell us something about the smoothness of the f against which we are measuring the regret. In the second part of the paper we implement this idea by considering a scenario where instances are drawn i.i.d. from some unknown distribution, labels are stochastically generated by some unknown regression function f0, and we have no preliminary knowledge about the directions along which f0 is smoother.\nIn this stochastic scenario, the expected gradient outer product matrix G = E [ ∇f0(X)∇f0(X)> ] provides a natural choice for the matrix M in our algorithm. Indeed, E [( ∇f0(X)>ui )2] = µi where u1, . . . ,ud are the eigenvectors of G while µ1, . . . , µd are the corresponding eigenvalues. However, as G is unknown, we run our algorithm in phases using a recently proposed estimator Ĝ of G. The estimator is trained on the same data sequence and is fed to the algorithm at the beginning of each phase. Under mild assumptions on f0, the noise in the labels, and the instance distribution, we prove a high probability bound on the regret RT (f0) of order (ignoring logarithmic factors)1 +\n√√√√ d∑ j=1 ( ∥∥∇ujf0∥∥∞ + ∥∥∇V f0∥∥∞)2 µj/µ1 T ρ̃T1+ρ̃T . (4) Observe that the rate at which the regret grows is the same as the one in (3), though now the effective dimension parameter ρ̃T is larger than ρT by an amount related to the rate of convergence of the eigenvalues of Ĝ to those of G. The square root term is also similar to (3), but for the extra quantity\n∥∥∇V f0∥∥∞, which accounts for the error in approximating the eigenvectors of G. More precisely,\n∥∥∇V f0∥∥∞ is ‖∇vf‖∞ maximized over directions v in the span of V , where V contains those eigenvectors of G that cannot be identified because their eigenvalues are too close to each other (we come back to this issue shortly). Finally, we lose the dependence on the truncated determinant, which is replaced here by its trivial upper bound 1.\nThe proof of (2) in [7] is based on the sequential construction of a sphere packing of X , where the spheres are centered on adaptively chosen instances xt, and have radii shrinking polynomially with time. Each sphere hosts an online learner, and each new incoming instance is predicted using the learner hosted in the nearest sphere. Our variant of that algorithm uses an ellipsoid packing, and computes distances using the Mahalanobis distance ‖·‖M . The main new ingredient in the analysis leading to (3) is our notion of effective dimension ρT (we call it the effective rank of M ), which measures how fast the spectrum of M vanishes. The proof also uses an ellipsoid packing bound and a lemma relating the Lipschitz constant to the Mahalanobis distance.\nThe proof of (4) is more intricate because G is only known up to a certain approximation. We use an estimator Ĝ, recently proposed in [14], which is consistent under mild distributional assumptions when f0\nis continuously differentiable. The first source of difficulty is adjusting the notion of effective rank (which the algorithm needs to compute) to compensate for the uncertainty in the knowledge of the eigenvalues of G. A further problematic issue arises because we want to measure the smoothness of f0 along the eigendirections of G, and so we need to control the convergence of the eigenvectors, given that Ĝ converges to G in spectral norm. However, when two eigenvalues of G are close, then the corresponding eigenvectors in the estimated matrix Ĝ are strongly affected by the stochastic perturbation (a phenomenon known as hybridization or spectral leaking in matrix perturbation theory, see [1, Section 2]). Hence, in our analysis we need to separate out the eigenvectors that correspond to well spaced eigenvalues from the others. This lack of discrimination causes the appearance in the regret of the extra term\n∥∥∇V f0∥∥∞."
    }, {
      "heading" : "2 Related works",
      "text" : "Nonparametric estimation problems have been a long-standing topic of study in statistics, where one is concerned with the recovery of an optimal function from a rich class under appropriate probabilistic assumptions. In online learning, the nonparametric approach was investigated in [15, 16, 17] by Vovk, who considered regression problems in large spaces and proved bounds on the regret. Minimax rates for the regret were later derived in [13] using a non-constructive approach. The first explicit online nonparametric algorithms for regression with minimax rates were obtained in [5].\nThe nonparametric online algorithm of [7] is known to have a suboptimal regret bound for Lipschitz classes of functions. However, it is a simple and efficient algorithm, well suited to the design of extensions that exhibit different forms of adaptivity to the data sequence. For example, the paper [10] derived a variant that automatically adapts to the intrinsic dimension of the data manifold. Our work explores an alternative direction of adaptivity, mainly aimed at taming the effect of the curse of dimensionality in nonparametric prediction through the learning of an appropriate Mahalanobis distance on the instance space. There is a rich literature on metric learning —see the survey [2], where the Mahalanobis metric ‖·‖M is typically learned through minimization of the pairwise loss function of the form `(M ,x,x′). This loss is high whenever dissimilar pairs of x and x′ are close in the Mahalanobis metric, and whenever similar ones are far apart in the same metric —see, e.g. [20]. The works [8, 19, 6] analyzed generalization and consistency properties of online learning algorithms employing pairwise losses.\nIn this work we are primarily interested in using a metric ‖·‖M where M is close to the gradient outer product matrix of the best model in the reference class of functions. As we are not aware whether pairwise loss functions can indeed consistently recover such metrics, we directly estimate the gradient outer product matrix. This approach to metric learning was mostly explored in statistics —e.g., by locallylinear Empirical Risk Minimization on RKHS [12, 11], and through Stochastic Gradient Descent [4]. Our learning approach combines —in a phased manner— a Mahalanobis metric extension of the algorithm by [7] with the estimator of [14]. Our work is also similar in spirit to the “gradient weights” approach of [9], which learns a distance based on a simpler diagonal matrix.\nPreliminaries and notation. Let B(z, r) ⊂ Rd be the ball of center z and radius r > 0 and let B(r) = B(0, r). We assume instances x belong to X ≡ B(1) and labels y belong to Y ≡ [0, 1].\nWe consider the following online learning protocol with oblivious adversary. Given an unknown sequence (x1, y1), (x2, y2), · · · ∈ X × Y of instances and labels, for every round t = 1, 2, . . .\n1. the environment reveals instance xt ∈ X ; 2. the learner selects an action ŷt ∈ Y and incurs the square loss `t ( ŷt ) = ( ŷt − yt )2; 3. the learner observes yt.\nGiven a positive definite d × d matrix M , the norm ‖x− z‖M induced by M (a.k.a. Mahalanobis distance) is defined by √ (x− z)>M(x− z). The ε-covering and ε-packing numbers of a set S ⊂ Rd according to a metric ρ are respectively denoted by N (S, ε, ρ) andM(B, ε, ρ). It is well known that M(S, 2ε, ρ) ≤ N (S, ε, ρ) ≤ M(S, ε, ρ). For all differentiable f : X → Y and for any orthonormal\nAlgorithm 1 Nonparametric online regression Input: Positive definite d× d matrix M .\n1: S ← ∅ . Centers 2: for t = 1, 2, . . . do 3: εt ← t − 1 1+ρt . Update radius 4: Observe xt 5: if S ≡ ∅ then 6: S ← {t}, Tt ← ∅ . Create initial ball 7: end if 8: s← arg min\ns∈S ‖xt − xs‖M . Find active center\n9: if Ts ≡ ∅ then 10: yt = 1 2 11: else 12: ŷt ← 1\n|Ts| ∑ t′∈Ts yt′ . Predict using active center\n13: end if 14: Observe yt 15: if ‖xt − xs‖M ≤ εt then 16: Ts ← Ts ∪ {t} . Update list for active center 17: else 18: S ← S ∪ {s}, Ts ← ∅ . Create new center 19: end if 20: end for\nbasis V ≡ {u1, . . . ,uk} with k ≤ d we define\n‖∇V f‖∞ = max v ∈ span(V ) ‖v‖ = 1 sup x∈X ∇f(x)>v .\nIf V = {u} we simply write ‖∇uf‖∞. In the following, M is a positive definite d × d matrix with eigenvalues λ1 ≥ · · · ≥ λd > 0 and corresponding eigenvectors u1, . . . ,ud. For each k = 1, . . . , d the truncated determinant is detk(M) = λ1 × · · · × λk. The kappa function for the matrix M is defined by\nκ(r, t) = max { m : λm ≥ t− 2 1+r , m = 1, . . . , d } t ≥ 1 and r = 1, . . . , d. (5)\nNote that κ(r + 1, t) ≤ κ(r, t). Now define the effective rank of M at horizon t by\nρt = min {r : κ(r, t) ≤ r, r = 1, . . . , d} . (6)\nSince κ(d, t) ≤ d for all t ≥ 1, this is a well defined quantity. Note that ρ1 ≤ ρ2 ≤ · · · ≤ d. Also, ρt = d for all t ≥ 1 when M is the d× d identity matrix. Note that the effective rank ρt measures the number of eigenvalues that are larger than a threshold that shrinks with t. Hence matrices M with extremely light-tailed spectra cause ρt to remain small even when t grows large.\nThroughout the paper, we use f O= (g) and f Õ= (g) to denote, respectively, f = O(g) and f = Õ(g)."
    }, {
      "heading" : "3 Online nonparametric learning with ellipsoid packing",
      "text" : "In this section we present a variant (Algorithm 1) of the online nonparametric regression algorithm introduced in [7]. Since our analysis is invariant to rescalings of the matrix M , without loss of generality we assume M has unit spectral radius (i.e., λ1 = 1). Algorithm 1 sequentially constructs a packing of\nX using M -ellipsoids centered on a subset of the past observed instances. At each step t, the label of the current instance xt is predicted using the average ŷt of the labels of past instances that fell inside the ellipsoid whose center xs is closest to xt in the Mahalanobis metric. At the end of the step, if xt was outside the closest ellipsoid, then a new ellipsoid is created with center xt. The radii εt of all ellipsoids are shrunk at rate t−1/(1+ρt). The regret contribution of each ellipsoid is logarithmic in the number of predictions made. Since each instance is predicted by a single ellipsoid, the overall regret contribution of the ellipsoids is bounded by their number times log T . An additional regret term is due to the fact that —at any point of time— the prediction of the algorithm is constant within the Voronoi cells of X induced by the current centers (recall that we predict with nearest neighbor). Hence, we pay an extra term equal to the radius of the ellipsoids times the Lipschitz constant with respect to the Mahalanobis metric.\nTheorem 1 (Regret with Fixed Metric). Suppose Algorithm 1 is run with a positive definite matrix M with eigenbasis u1, . . . ,ud and eigenvalues 1 = λ1 ≥ · · · ≥ λd > 0. Then, for any differentiable f : X → Y we have that\nRT (f) Õ = √detκ(M) + √√√√ d∑\ni=1\n‖∇uif‖ 2 ∞\nλi T ρT1+ρT where κ = κ(ρT , T ) ≤ ρT ≤ d.\nThe core idea of the proof (deferred to the supplementary material) is to maintain the trade-off between the overall regret contribution of the ellipsoids and an additional regret term arising due to approximation of f by the Voronoi partitioning. Since the former term is bounded by the number of ellipsoids times log T , it is essentially controlled by the packing number of an ellipsoid induced by M . The later term relies on the directional Lipschitzness of f with respect to the eigenbasis of M . We first prove two technical lemmas about packings of ellipsoids.\nLemma 1 (Volumetric packing bound). Consider a pair of norms ‖ · ‖ , ‖ · ‖′ and let B,B′ ⊂ Rd be the corresponding unit balls. Then\nM(B, ε, ‖ · ‖′) ≤ vol ( B + ε2B ′) vol ( ε 2B ′ ) .\nLemma 2 (Ellipsoid packing bound). If B is the unit Euclidean ball then\nM ( B, ε, ‖ · ‖M ) ≤\n( 8 √ 2\nε )s s∏ i=1 √ λi where s = max { i : √ λi ≥ ε, i = 1, . . . , d } .\nThe following lemma states that whenever f has bounded partial derivatives with respect to the eigenbase of M , then f is Lipschitz with respect to ‖ · ‖M .\nLemma 3 (Bounded derivatives imply Lipschitzness in M -metric). Let f : X → R be everywhere differentiable. Then for any x,x′ ∈ X ,\n∣∣f(x)− f(x′)∣∣ ≤ ∥∥x− x′∥∥ M √√√√ d∑ i=1 ‖∇uif‖ 2 ∞ λi ."
    }, {
      "heading" : "4 Learning while learning the metric",
      "text" : "In this section, we assume instances xt are realizations of i.i.d. random variables Xt drawn according to some fixed and unknown distribution µ which has a continuous density on its support X . We also assume labels yt are generated according to the noise model yt = f0(xt) + ν(xt), where f0 is some unknown\nregression function and ν(x) is a subgaussian zero-mean random variable for all x ∈ X . We then simply write RT to denote the regret RT (f0). Note that RT is now a random variable which we bound with high probability.\nWe now show how the nonparametric online learning algorithm (Algorithm 1) of Section 3 can be combined with an algorithm that learns an estimate\nĜn = 1\nn n∑ t=1 ∇̂f0(xt)∇̂f0(xt)> (7)\nof the expected outer product gradient matrix G = E [ ∇f0(X)∇f0(X)> ] . The algorithm (described in the supplementary material) is consistent under the following assumptions. Let X (τ) be X blown up by a factor of 1 + τ .\nAssumption 1. 1. There exists τ0 > 0 such that f0 is continuously differentiable on X (τ0). 2. There exists G > 0 such that max\nx∈X (τ0) ‖∇f0(x)‖ ≤ G.\n3. The distribution µ is full-dimensional: there exists Cµ > 0 such that for all x ∈ X and ε > 0, µ ( B(x, ε) ) ≥ Cµεd.\nOur algorithm works in phases i = 1, 2, . . . where phase i has length n(i) = 2i. Let T (i) = 2i+1 − 2 be the index of the last time step in phase i. The algorithm uses a nonincreasing regularization sequence γ0 ≥ γ1 ≥ · · · > 0. Let M̂(0) = γ0I . During each phase i, the algorithm predicts the data points by running Algorithm 1 with M = M̂(i− 1)\n/∥∥M̂(i− 1)‖2 (where ‖ · ‖2 denotes the spectral norm). Simultaneously, the gradient outer product estimate (7) is trained over the same data points. At the end of phase i, the current gradient outer product estimate Ĝ(i) = ĜT (i) is used to form a new matrix M̂(i) = Ĝ(i) + γT (i)I . Algorithm 1 is then restarted in phase i+ 1 with M = M̂(i)\n/∥∥M̂(i)‖2. Let µ1 ≥ µ2 ≥ · · · ≥ µd be the eigenvalues and u1, . . . ,ud be the eigenvectors of G. We define the\nj-th eigenvalue separation ∆j by ∆j = min\nk 6=j ∣∣µj − µk∣∣ . For any ∆ > 0 define also V∆ ≡ { uj : |µj − µk| ≥ ∆, k 6= j } and V ⊥∆ = {u1, . . . ,ud} \\ V∆. Our results are expressed in terms of the effective rank (6) of G at horizon T . However, in order to account for the error in estimating the eigenvalues of G, we define the effective rank ρ̃t with respect to the following slight variant of the function kappa,\nκ̃(r, t) = max { m : µm + 2γt ≥ µ1t − 2 1+r , m = 1, . . . , d } t ≥ 1 and r = 1, . . . , d.\nLet M̂(i) be the estimated gradient outer product constructed at the end of phase i, and let µ̂1(i) +γ(i) ≥ · · · ≥ µ̂d(i) + γ(i) and û1(i), . . . , ûd(i) be the eigenvalues and eigenvectors of M̂(i), where we also write γ(i) to denote γT (i). We use κ̂ to denote the kappa function with estimated eigenvalues and ρ̂ to denote the effective rank defined through κ̂.\nTheorem 2. Suppose Assumption 1 holds. If the algorithm is ran with a regularization sequence γ0 = 1 and γt = t −α for some α > 0 such that γt ≥ γt for all t ≥ ( d+ 1 / 2µd )1/α and for γ1 ≥ γ2 ≥ · · · > 0 satisfying Lemma 4, then for any given ∆ > 0\nRT Õ = 1 + √√√√ d∑\nj=1\n( ∥∥∇ujf0∥∥∞ + ∥∥∇V ⊥∆ f0∥∥∞)2 µj/µ1 T ρ̃T1+ρ̃T with high probability with respect to the random draw of X1, . . . ,XT .\nNote that the asymptotic notation is hiding terms that depend on 1/∆, hence we can not zero out the term ∥∥∇V ⊥∆ f0∥∥∞ in the bound by taking ∆ arbitrarily small.\nProof. Pick the smallest i0 such that\nT (i0) ≥ ( d+ 1\n2µd\n)1/α (8)\n(we need this condition in the proof). The total regret in phases 1, 2, . . . , i0 is bounded by ( d+ 1 / 2µd )1/α\n= O(1). Let the value ρ̂T (i) at the end of phase i be denoted by ρ̂(i). By Theorem 1, the regret RT (i+ 1) of Algorithm 1 in each phase i+ 1 > i0 is deterministically upper bounded by\nRT (i+ 1) ≤ 8 ln (e2i+1)(8√2)ρ̂(i+1) + 4 √√√√√ d∑\nj=1\n∥∥∥∇ûj(i)f0∥∥∥2∞ λj(i) / λ1(i)  2(i+1) ρ̂(i+1)1+ρ̂(i+1) (9) where λj(i) = µ̂j(i) + γ(i). Here we used the trivial upper bound detκ ( M̂(i)\n/∥∥M̂(i)‖2) ≤ 1 for all κ = 1, . . . , d. Now assume that µ̂1(i) + γ(i) ≤ ( µ̂m(i) + γ(i) ) t 2 1+r for some m, r ∈ {1, . . . , d} and for some t in phase i+ 1. Hence, using Lemma 4 and γt ≤ γt, we have that\nmax j=1,...,d ∣∣µ̂j(i)− µj∣∣ ≤ ∥∥Ĝ(i)−G∥∥2 ≤ γ(i) with high probability. (10) where the first inequality is straightforward. Hence we may write\nµ1 ≤ µ1 − γ(i) + γ(i) ≤ µ̂1(i) + γ(i) ≤ ( µ̂m(i) + γ(i) ) t 2 1+r\n≤ ( µm + γ(i) + γ(i) ) t 2 1+r (using Lemma 4)\n≤ ( µm + 2γ(i) ) t 2 1+r .\nRecall γ(i) = T (i)−α. Using Lemma 5, the derivative of F (t) = ( µm + 2 ( T (i) + t )−α) t 2 1+r is positive for all t ≥ 1 when\nT (i) ≥ ( r + 1\n2µd\n)1/α ≥ ( r + 1\n2µm )1/α which is guaranteed by our choice (8). Hence, ( µm + 2γ(i) ) t 2 1+r ≤ ( µm + 2γT ) ) T 2 1+r and so\nµ̂1(i) + γ(i) µ̂m(i) + γ(i) ≤ t 2 1+r implies\nµ1 µm + 2γT ≤ T 2 1+r .\nRecalling the definitions of κ̃ and κ̂, this in turn implies κ̂(r, t) ≤ κ̃(r, T ), which also gives ρ̂t ≤ ρ̃T for all t ≤ T . Next, we bound the approximation error in each individual eigenvalue of G. By (10) we obtain, for any phase i and for any j = 1, . . . , d,\nµj + 2γ(i) ≥ µj + γ(i) + γ(i) ≥ µ̂j(i) + γ(i) ≥ µj − γ(i) + γ(i) ≥ µj .\nHence, bound (9) implies\nRT (i+ 1) ≤ 8 ln (e2i+1)12ρ̃T + 4 √√√√(µ1 + 2γ(i)) d∑\nj=1\n∥∥∇ûjf0∥∥2∞ µj  2(i+1) ρ̃T1+ρ̃T . (11) The error in approximating the eigenvectors of G is controlled via the following first-order eigenvector approximation result from matrix perturbation theory [21, equation (10.2)], for any vector v of constant norm,\nv> ( ûj(i)− uj ) = ∑ k 6=j\nu>k ( M̂(i)−G ) uj\nµj − µk v>uk + o\n(∥∥M̂(i)−G∥∥2 2 ) ≤ ∑ k 6=j 2γ(i) µj − µk v>uk + o ( γ(i)2 ) (12)\nwhere we used u>k ( M̂(i) −G ) uj ≤ ∥∥M̂(i) −G∥∥ 2 ≤ γ(i) + γ(i) ≤ 2γ(i). Then for all j such that uj ∈ V∆,\n∇f0(x)> ( ûj(i)− uj ) = ∑ k 6=j 2γ(i) µj − µk ∇f0(x)>uk + o ( γ(i)2 ) ≤ 2γ(i) ∆ √ d ‖∇f0(x)‖2 + o ( γ(i)2 ) .\nNote that the coefficients αk = u>k ( M̂(i)−G ) uj µj − µk + o ( γ(i)2 ) k 6= j\nare a subset of coordinate values of vector ûj(i)− uj with respect to the orthonormal basis u1, . . . ,ud. Then, by Parseval’s identity,\n4 ≥ ‖ûj(i)− uj‖22 ≥ ∑ k 6=j α2k .\nTherefore, it must be that\nmax k 6=j ∣∣∣∣∣u>k ( M̂(i)−G ) uj\nµj − µk ∣∣∣∣∣ ≤ 2 + o(γ(i)2) . For any j such that uj ∈ V ⊥∆ , since µj − µk ≥ ∆ for all uk ∈ V∆, we may write ∇f0(x)> ( ûj(i)− uj ) ≤ 2γ(i)\n∆ ∑ uk∈V∆ ∇f0(x)>uk + ( 2 + o ( γ(i)2 )) ∑ uk∈V ⊥∆ ∇f0(x)>uk + o ( γ(i)2 ) ≤ 2γ(i)\n∆\n√ d ‖P V∆ ∇f0(x)‖2 + ( 2 + o ( γ(i)2 ))√ d ∥∥P V ⊥∆∇f0(x)∥∥2 + o(γ(i)2)\nwhere P V∆ and P V ⊥∆ are the orthogonal projections onto, respectively, V∆ and V ⊥ ∆ . Therefore, we have that∥∥∇ûjf0∥∥∞ = sup\nx∈X ∇f0(x)>ûj(i) = sup x∈X ∇f0(x)>\n( ûj(i)− uj + uj ) ≤ sup\nx∈X ∇f0(x)>uj + sup x∈X ∇f0(x)>\n( ûj(i)− uj ) ≤ ∥∥∇ujf0∥∥∞ + 2γ(i)∆ √d ‖∇V∆f0‖∞ + (2 + o(γ(i)2))√d∥∥∇V ⊥∆ f0∥∥∞ + o(γ(i)2) .\n(13)\nLetting α∆(i) = 2γ(i)\n∆ √ d ‖∇V∆f0‖∞ + ( 2 + o ( γ(i)2 ))√ d ∥∥∇V ⊥∆ f0∥∥∞ + o(γ(i)2) we can upper\nbound (11) as follows\nRT (i+ 1) ≤ 8 ln (e2i+1)12ρ̃T+ 4 √√√√(µ1 + 2γ(i)) d∑\nj=1\n( ∥∥∇ujf0∥∥∞+ α∆(i))2 µj  2(i+1) ρ̃T1+ρ̃T . Recall that, due to (10), the above holds at the end of each phase i+ 1 with high probability. Now observe that γ(i) = O ( 2−αi ) and so α∆(i) O = (‖∇V∆f0‖∞ /∆ + ∥∥∇V ⊥∆ f0∥∥∞). Hence, by summing over phases\ni = 1, . . . , ⌈ log2 T ⌉ and applying the union bound,\nRT = dlog2 T e∑ i=1 RT (i)\n≤ 8 ln (eT )12d+ 4 √√√√(µ1 + 2γ(i− 1)) d∑\nj=1\n( ∥∥∇ujf0∥∥∞+ α∆(i− 1))2 µj (2 ρ̃T1+ρ̃T )i\nÕ = 1 + d∑ j=1 (∥∥∇ujf0∥∥∞ + ∥∥∇V ⊥∆ f0∥∥∞)2 µj / µ1 T ρ̃T1+ρ̃T concludes the proof."
    }, {
      "heading" : "5 Conclusions and future work",
      "text" : "We presented an efficient algorithm for online nonparametric regression which adapts to the directions along which the regression function f0 is smoother. It does so by learning the Mahalanobis metric through the estimation of the gradient outer product matrix E[∇f0(X)∇f0(X)>]. As a preliminary result, we analyzed the regret of a generalized version of the algorithm from [7], capturing situations where one competes against functions with directional Lipschitzness with respect to an arbitrary Mahalanobis metric. Our main result is then obtained through a phased algorithm that estimates the gradient outer product matrix while running online nonparametric regression on the same sequence. Both algorithms automatically adapt to the effective rank of the metric.\nThis work could be extended by investigating a variant of Algorithm 1 for classification, in which ball radii shrink at a nonuniform rate, depending on the mistakes accumulated within each ball rather than on time. This could lead to the ability of competing against functions f that are only locally Lipschitz. In addition, it is conceivable that under appropriate assumptions, a fraction of the balls could stop shrinking at a certain point when no more mistakes are made. This might yield better asymptotic bounds than those implied by Theorem 1, because ρT would never attain the ambient dimension d."
    }, {
      "heading" : "A Nonparametric gradient learning",
      "text" : "In this section we describe a nonparametric gradient learning algorithm introduced in [14]. Throughout this section, we assume instances xt are realizations of i.i.d. random variables Xt drawn according to some fixed and unknown distribution µ which has a continuous density on its support X . Labels yt are generated according to the noise model yt = f(xt) + ν(xt), where ν(x) is a subgaussian zero-mean random variable for all x ∈ X . The algorithm computes a sequence of estimates f̂1, f̂2, . . . of the regression function f through kernel regression. Let Xn ≡ { x1, . . . ,xn } ⊂ X be the data observed so far and let y1, . . . , yn their corresponding labels. Let K : R+ → R+ be a nonincreasing kernel, strictly positive on [0, 1), and such that K(1) = 0. Then the estimate at time n is defined by\nf̂n(x) = n∑ t=1 yt ωt(x) where ωt(x) =  K ( ‖x− xt‖ / εn )∑n s=1K ( ‖x− xs‖ / εn ) if B(x, εn) ∩ Xn 6= ∅,\n1/n otherwise\nwhere εn > 0 is the kernel scaling parameter. We then approximate the gradient of f̂ at any given point through the finite difference method\n∆i(x) = 1\n2τn\n( f̂(x + τnei)− f̂(x− τnei) ) for i = 1, . . . , d\nwhere τn > 0 is a parameter. Let further Ai(x) = I {\nmin b∈{−τn,τn}\nµn ( B(x + bei, ε/2) ) ≥ 2d\nn (ln 2n)\n} for i = 1, . . . , d\nwhere µn is the empirical distribution of µ after observing Xn, and define the gradient estimate ∇̂f(xt) = ( ∆1(xt)A1(xt), . . . ,∆d(xt)Ad(xt) ) .\nThe algorithm outputs at time n the gradient outer product estimate\nĜn = 1\nn n∑ t=1 ∇̂f(xt)∇̂f(xt)>\nLet G = E [ ∇f(X)∇f(X)> ] be the expected gradient outer product, where X has law µ. The next\nlemma states that, under Assumption 1, Ĝn is a consistent estimate of G.\nLemma 4 ([14, Theorem 1]). If Assumption 1 holds, then there exists a nonnegative and nonincreasing sequence {γn}n≥1 such that for all n, the estimated gradient outerproduct (7) computed with parameters εn > 0, and 0 < τn < τ0 satisfies ∥∥Ĝn −G∥∥2 ≤ γn with high probability with respect do the random draw of X1, . . . ,Xn. Moreover, if τn = Θ ( ε 1/4 n ) , εn = Ω (( lnn ) 2 dn− 1 d ) , and εn = O ( n − 1 2(d+1) ) then γn → 0 as n→∞.\nThe actual rate of convergence depends, in a complicated way, on parameters related to the distribution µ and the regression function f . In our application of Lemma 4 we assume γn ≤ n−α for all n large enough and for some α > 0. Note also that the convergence of Ĝn to G holds in probability with respect to the random draw of X1, . . . ,Xn. Hence there is a confidence parameter δ which is not shown here. However, the dependence of the convergence rate on 1δ is only polylogarithmic and therefore not problematic for our applications."
    }, {
      "heading" : "B Proofs from Section 3",
      "text" : "Lemma (Volumetric packing bound). Consider a pair of norms ‖ · ‖ , ‖ · ‖′ and let B,B′ ⊂ Rd be the corresponding unit balls. Then\nM(B, ε, ‖ · ‖′) ≤ vol ( B + ε2B ′) vol ( ε 2B ′ ) .\nProof. Let {x1, . . . ,xM} be a maximal ε-packing of B according to ‖ · ‖′. Since we have a packing, the ‖ · ‖′-balls of radius ε/2 and centers x1, . . . ,xM are disjoint, and their union is contained in B + ε2B\n′. Thus,\nMvol (ε 2 B′ ) ≤ vol ( B + ε 2 B′ )\nwhich concludes the proof.\nLemma (Ellipsoid packing bound). If B is the unit Euclidean ball then\nM ( B, ε, ‖ · ‖M ) ≤\n( 8 √ 2\nε )s s∏ i=1 √ λi where s = max { i : √ λi ≥ ε, i = 1, . . . , d } .\nProof. The change of variable x′ = M1/2x implies ‖x‖2 = ‖x′‖M−1 and ‖x‖M = ‖x′‖2. Therefore M ( B, ε, ‖ · ‖M ) =M ( E, ε, ‖ · ‖2 ) where E ≡ { x ∈ Rd : ‖x‖M−1 ≤ 1 } is the unit ball in the norm ‖ · ‖M−1 . Next, we write the coordinates (x1, . . . , xd) of any point x ∈ Rd using the orthonormal basis\nu1, . . . ,ud. Consider the truncated ellipsoid Ẽ ≡ {x ∈ E : xi = 0, i = s+ 1, . . . , d}. By adapting an argument from [18], we prove that any ε-cover of Ẽ according to ‖ · ‖2 is also a ( ε √ 2 ) -cover of E according to the same norm. Indeed, let S̃ ⊂ Ẽ be a ε-cover of Ẽ. Fix any x ∈ E and let\nmin x̃∈S̃ ‖x− x̃‖22 = min x̃∈S̃ s∑ j=1 ( xj − x̃j )2 + d∑ j=s+1 x2j\n≤ ε2 + d∑\nj=s+1\nx2j (since S̃ is a ε-covering of Ẽ)\n≤ ε2 + λs+1 d∑\nj=s+1\nx2j λj\n(since λs+1/λj ≥ 1 for j = s+ 1, . . . , d)\n≤ 2 ε2\nwhere the last inequality holds since λs+1 ≤ ε2 and since ‖x‖2M−1 = ∑d i=1 x 2 i /λi ≤ 1 for any x ∈ E, where xi = u>i x for all i = 1, . . . , d. Let B′ ⊂ Rd be the unit Euclidean ball, and let B̃′ ≡ {x ∈ B′ : xi = 0, i = s+ 1, . . . , d} be its truncated version. Since λi ≥ ε2 for i = 1, . . . , s we have that for all x ∈ εB̃′, x21 + · · ·+ x2s ≤ ε2 and so\n‖x‖2M−1 = s∑ i=1 x2i λi ≤ s∑ i=1 ε2 λi ≤ 1 .\nTherefore εB̃′ ⊆ Ẽ which implies vol ( Ẽ + ε2B̃ ′) ≤ vol(2Ẽ). M ( E, 2ε √ 2, ‖ · ‖2 ) ≤ N ( E, ε √ 2, ‖ · ‖2 )\n≤ N ( Ẽ, ε, ‖ · ‖2 ) ≤M ( Ẽ, ε, ‖ · ‖2\n) ≤ vol ( Ẽ + ε2B̃ ′ )\nvol ( ε 2B̃ ′ ) (by Lemma 1)\n≤ vol ( 2Ẽ ) vol ( ε 2B̃ ′ ) = (4 ε )s vol(Ẽ) vol ( B̃′ )\nNow, using the standard formula for the volume of an ellipsoid,\nvol ( Ẽ ) = vol ( B̃′ ) s∏ i=1 √ λi .\nThis concludes the proof.\nThe following lemma states that whenever f has bounded partial derivatives with respect to the eigenbase of M , then f is Lipschitz with respect to ‖ · ‖M .\nLemma (Bounded derivatives imply Lipschitzness in M -metric). Let f : X → R be everywhere differentiable. Then for any x,x′ ∈ X ,\n∣∣f(x)− f(x′)∣∣ ≤ ∥∥x− x′∥∥ M √√√√ d∑ i=1 ‖∇uif‖ 2 ∞ λi .\nProof. By the mean value theorem, there exists a z on the segment joining x and y such that f(x) − f(y) = ∇f(z)> (x− y). Hence\nf(x)− f(y) = ∇f(z)> (x− y)\n= d∑ i=1 ∇f(z)>uiu>i (x− y)\n≤ d∑ i=1 ( sup z′∈X ∇f(z′)>ui ) u>i (x− y)\n= d∑ i=1 ‖∇uif‖∞√ λi (√ λiu > i (x− y) )\n≤ √√√√ d∑ i=1 ‖∇uif‖2∞ λi √√√√ d∑ i=1 λi ( u>i (x− y)\n)2 (by the Cauchy-Schwarz inequality) = ∥∥x− y∥∥\nM √√√√ d∑ i=1 ‖∇uif‖2∞ λi .\nBy symmetry, we can upper bound f(y)− f(x) with the same quantity.\nNow we are ready to prove the regret bound.\nTheorem (Regret with Fixed Metric). Suppose Algorithm 1 is run with a positive definite matrix M with eigenbasis u1, . . . ,ud and eigenvalues 1 = λ1 ≥ · · · ≥ λd > 0. Then, for any differentiable f : X → Y we have that\nRT (f) Õ = √detκ(M) + √√√√ d∑\ni=1\n‖∇uif‖ 2 ∞\nλi T ρT1+ρT where κ = κ(ρT , T ) ≤ ρT ≤ d.\nProof. Let St be the value of the variable S at the end of time t. Hence S0 = ∅. The functions πt : X → {1, . . . , t} for t = 1, 2, . . . map each data point x to its closest (in norm ‖ · ‖M ) center in St−1,\nπt(x) =\n{ arg min s∈St−1 ‖x− xs‖M if St−1 6≡ ∅\nt otherwise.\nThe set Ts contain all data points xt that at time t belonged to the ball with center xs and radius εt,\nTs ≡ {t : ‖xt − xs‖M ≤ εt, t = s, . . . , T} .\nFinally, y?s is the best fixed prediction for all examples (xt, yt) such that t ∈ Ts,\ny?s = arg min y∈Y ∑ t∈Ts `t(y) = 1 |Ts| ∑ t∈Ts yt . (14)\nWe proceed by decomposing the regret into a local (estimation) and a global (approximation) term,\nRT (f) = T∑ t=1 ( `t(ŷt)− `t ( f(xt) )) = T∑ t=1 ( `t(ŷt)− `t ( y?πt(xt) )) + T∑ t=1 ( `t ( y?πt(xt) ) − `t ( f(xt) )) .\nThe estimation term is bounded as\nT∑ t=1 ( `t(ŷt)− `t ( y?πt(xt) )) = ∑ s∈ST ∑ t∈Ts ( `t(ŷt)− `t(y?s) ) ≤ 8 ∑ s∈ST ln(e|Ns|) ≤ 8 ln(eT )|ST | .\nThe first inequality is a known bound on the regret under square loss [3, page 43]. We upper bound the size of the final packing ST using Lemma 2,\n|ST | ≤ M ( B, εT , ‖ · ‖M ) ≤\n( 8 √ 2\nεT )κ κ∏ i=1 √ λi ≤ ( 8 √ 2 )κ√ detκ(M)T κ 1+ρT\nwhere κ = κ(ρT , T ). Therefore, since ρT ≥ κ(ρT , T ),\nT∑ t=1 ( `t(ŷt)− `t ( y?πt(xt) )) ≤ 8 ln(eT ) ( 8 √ 2 )ρT√detκ(M)T ρT1+ρT . (15)\nNext, we bound the approximation term. Using (14) we have\nT∑ t=1 ( `t ( y?πt(xt) ) − `t ( f(xt) )) ≤ T∑ t=1 ( `t ( f(xπt(xt)) ) − `t ( f(xt) )) .\nNote that `t is 2-Lipschitz because yt, ŷt ∈ [0, 1]. Hence, using Lemma 3, `t ( f(xπt(xt)) ) − `t ( f(xt) ) ≤ 2 ∣∣f(xπt(xt))− f(xt)∣∣\n≤ 2 ∥∥xt − xπt(xt)∥∥M √√√√ d∑ i=1 ‖∇uif‖ 2 ∞ λi\n≤ 2εt √√√√ d∑ i=1 ‖∇uif‖ 2 ∞ λi .\nRecalling εt = t − 1 1+ρt where ρt ≤ ρt+1, we write\nT∑ t=1 t − 1 1+ρt ≤ T∑ t=1 t − 1 1+ρT ≤ ∫ T 0 τ − 1 1+ρT dτ = ( 1 + 1 ρT ) T ρT 1+ρT ≤ 2T ρT 1+ρT .\nThus we may write\nT∑ t=1 ( `t ( y?πt(xt) ) − `t ( f(xt) )) ≤ 4\n √√√√ d∑\ni=1\n‖∇uif‖ 2 ∞\nλi T ρT1+ρT . The proof is concluded by combining the above with (15)."
    }, {
      "heading" : "C Proofs from Section 4",
      "text" : "Lemma 5. Let µd, α > 0 and d ≥ 1. Then the derivative of F (t) = ( µd + 2 ( T0 + t )−α) t 2 1+d\nis positive for all t ≥ 1 when\nT0 ≥ ( d+ 1\n2µd\n)1/α .\nProof. We have that F ′(t) ≥ 0 if and only if\nt ≤ 2(T0 + t) α(d+ 1)\n( 1 + (T0 + t) αµd ) This is implied by\nt ≤ 2µd(T0 + t) 1+α\nα(d+ 1) or, equivalently, T0 ≥ A1/(1+α)t1/(1+α) − t\nwhere A = α(d+ 1)/(2µd). The right-hand side A1/(1+α)t1/(1+α) − t is a concave function of t. Hence the maximum is found at the value of t where the derivative is zero, this value satisfies\nA1/(1+α)\n1 + α t−α/(1+α) = 1 which solved for t gives t = A1/α(1 + α)−(1+α)/α .\nSubstituting this value of t in A1/(1+α)t1/(1+α) − t gives the condition T0 ≥ A1/αα(1 + α)−(1+α)/α which is satisfied when T0 ≥ A1/α ."
    } ],
    "references" : [ ],
    "referenceMentions" : [ ],
    "year" : 2017,
    "abstractText" : "<lb>We study algorithms for online nonparametric regression that learn the directions along which the<lb>regression function is smoother. Our algorithm learns the Mahalanobis metric based on the gradient<lb>outer product matrix G of the regression function (automatically adapting to the effective rank of this<lb>matrix), while simultaneously bounding the regret —on the same data sequence— in terms of the<lb>spectrum of G. As a preliminary step in our analysis, we generalize a nonparametric online learning<lb>algorithm by Hazan and Megiddo by enabling it to compete against functions whose Lipschitzness is<lb>measured with respect to an arbitrary Mahalanobis metric.",
    "creator" : "LaTeX with hyperref package"
  }
}