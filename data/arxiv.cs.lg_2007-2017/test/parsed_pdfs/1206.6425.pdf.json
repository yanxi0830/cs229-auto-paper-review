{
  "name" : "1206.6425.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Sparse stochastic inference for latent Dirichlet allocation",
    "authors" : [ "David Mimno", "Matthew D. Hoffman", "David M. Blei" ],
    "emails" : [ "mimno@cs.princeton.edu", "mdhoffma@cs.princeton.edu", "blei@cs.princeton.edu" ],
    "sections" : [ {
      "heading" : "1. Introduction",
      "text" : "Topic models are hierarchical Bayesian models of document collections (Blei et al., 2003). They can uncover the main themes that pervade a corpus and then use those themes to help organize, search, and explore the documents. In topic modeling, a “topic” is a distribution over a fixed vocabulary and each document exhibits the topics with different proportions. Both the topics and the topic proportions of documents are hidden variables. Inferring the conditional distribution of these variables given an observed set of documents is the central computational problem.\nIn this paper, we develop a posterior inference method for topic modeling that can find large numbers of topics in massive collections of documents. We demonstrate our approach by analyzing a collection of 1.2 million out-of-copyright books, comprising 33 billion observed words. Using our algorithm, we fit a topic model to this corpus with thousands of topics. We illustrate the most frequent words from several of these topics in Table 1.\nAppearing in Proceedings of the 29 th International Conference on Machine Learning, Edinburgh, Scotland, UK, 2012. Copyright 2012 by the author(s)/owner(s).\nOur algorithm builds on variational inference (Jordan et al., 1999). In variational inference, we define a parameterized family of distributions over the hidden structure—in this case topics and document-topic proportions—and then optimize the parameters to find a member of the family that is close to the posterior. Traditional variational inference for topic modeling uses coordinate ascent. The algorithm alternates between estimating document-topic proportions under the current settings of the topics and re-estimating the topics based on the estimated document proportions. This requires multiple passes through an entire collection, which is not practical when working with very large corpora.\nRecently, Hoffman et al. (2010) introduced Online LDA, a stochastic gradient optimization algorithm for topic modeling. The algorithm repeatedly subsamples a small set of documents from the collection and then updates the topics from an analysis of the subsample. This method uses less memory than the standard approach because we do not need to store topic proportions for the full corpus. It also converges faster because we update topics more frequently. However, while it handles large corpora it does not scale to large\nnumbers of topics.\nOur algorithm builds on this method by using sampling to introduce a second source of stochasticity into the gradient. This approach lets us take advantage of sparse computation, scaling sublinearly with the number of topics. Using this algorithm, we can fit topic models to large collections with many topics."
    }, {
      "heading" : "2. Hybrid stochastic-MCMC inference",
      "text" : "We model each of the D documents in a corpus as a mixture of K topics. This topic model can be divided into corpus-level global variables and document-level local variables. The global variables are K topic-word distributions β1, ...,βK over the V -dimensional vocabulary, each drawn from a Dirichlet prior with parameter η. For a document d of length Nd, the local variables are (a) a distribution over topics θd drawn from a Dirichlet prior with parameter α and (b) Nd tokentopic indicator variables zd1, ..., zdNd drawn from θd.\nOur goal is to estimate the posterior distribution of the hidden variables given an observed corpus. We will use variational inference. Unlike standard mean-field variational inference, but similar to Griffiths & Steyvers (2004) and Teh et al. (2006), we will marginalize out the topic proportions θd. Thus we need to approximate the posterior over the topic assignments zd and the topics β1:K .\nWe will use a variational distribution of the form q(z1, ...,zD,β1, ...,βK) = ∏ d q(zd) ∏ k q(βk). (1)\nThis factorization differs from the usual mean-field family for topic models. Rather than defining a distribution that factorizes over individual tokens, we treat each document’s sequence of topic indicator variables zd as a unit. As a result q(zd) will be a single distribution over the KNd possible topic configurations, rather than a product of Nd distributions, each over K possible values.\nWe now derive an algorithm that uses Gibbs sampling to estimate variational expectations of the local variables and a stochastic natural gradient step to update the variational distribution of global variables. A lower bound on the marginal log probability of the observed words given the hyperparameters is\nlog p(w|α, η) ≥ ∑ d Eq log\n[ p(zd|α)\n∏ i βzdiwdi\n] (2)\n+ ∑ k Eq log p(βk|η) +H(q),\nwhere H(q) denotes the entropy of q.\nFollowing Bishop (2006), the optimal variational distribution over topic configurations for a document, holding all other variational distributions fixed, is\nq?(zd) ∝ exp{Eq(¬zd) [log p(zd|α)p(wd|zd,β)]} (3)\n= Γ(Kα)\nΓ(Kα+Nd) ∏ k Γ(α+ ∑ i Izdi=k) Γ(α) (4)\n× ∏ i expEq[log βzdiwdi ]\nwhere Ia=b is 1 if a = b and 0 otherwise, and ¬zd denotes the set of all unobserved variables besides zd. We can compute Eq. 4 for a specific topic configuration zd, but we cannot tractably normalize it to get the distribution q?(zd) over all K Nd configurations.\nThe optimal variational distribution over topic-word distributions, holding the other distributions fixed, is the kernel of a Dirichlet distribution with parameters\nλkw = η + ∑ d ∑ i Eq[Izdi=kIwdi=w]. (5)\nThis expression includes the expectation under q of the number of tokens of type w assigned to topic k. Computing this expectation would require evaluating the intractable distribution q?(zd)."
    }, {
      "heading" : "2.1. Online stochastic inference",
      "text" : "We optimize the variational topic-word parameters λkw using stochastic gradient ascent. Stochastic gradient ascent iteratively updates parameters with noisy estimates of the gradient. We obtain these noisy estimates by subsampling the data (Sato, 2001; Hoffman et al., 2010).\nWe first recast the variational objective in Eq. 2 as a summation over per-document terms `d, so that the full gradient with respect to λk is the sum ∑ d ∂ ∂λk\n`d. We can then generate a noisy approximation to this full gradient by sampling a minibatch of documents B and then scaling the sum of the document-specific gradients to match the total size of the corpus,∑\nd\n∂\n∂λk `d = E\n[ D\n|B| ∑ d∈B ∂ ∂λk `d\n] . (6)\n(The expectation is with respect to the random sample B.) Pushing the per-topic terms in Eq. 2 inside the summation over documents and removing terms not involving λkw we obtain\n`d = ∑ w ( Eq[Ndkw] + 1 D (η − λkw) ) Eq[log βkw] (7)\n+ 1\nD\n( log Γ( ∑ w λkw)− ∑ w log Γ(λkw) )\nAlgorithm 1 Algorithm for hybrid stochastic variational-Gibbs inference.\nfor t ∈ 1, ...,∞ do ρt ←\n( 1\nt0+t )κ sample minibatch B for d ∈ B do\ninitialize z0d discard B burn-in sweeps for sample s ∈ 1, ..., S do\nfor token i ∈ 1, ..., Nd do sample zsdi ∝ (α+Ndk)eEq [log βkw]\nend for end for\nend for λtkw ← (1− ρt)λ t−1 kw + ρt ( η + D|B|N̂kw ) end for\nwhere Eq[Ndkw] = ∑ i Eq[Izdi=kIwdi=w]. The gradient of Eq. 7 with respect to the parameters λk1, ..., λkV can be factored into the product of a matrix and a vector. The matrix, which contains derivatives of the digamma function, is the Fisher information matrix for the topic parameters. Element w of the vector is\nEq[Ndkw] + 1\nD (η − λkw). (8)\nPremultiplying the gradient of an objective function by the inverse Fisher information matrix of the distribution being optimized (in our case the variational distribution q) results in the natural gradient (Sato, 2001). Since our gradient is the product of the Fisher information matrix and a vector, the natural gradient is therefore simply Eq. 8 (Hoffman et al., 2010). Compared to the standard Euclidean gradient, the natural gradient offers both faster convergence (because it takes into account the information geometry of the variational distribution) and cheaper computation (because the vector in Eq. 8 is a simple linear function)."
    }, {
      "heading" : "2.2. MCMC within stochastic inference",
      "text" : "We cannot evaluate the expectation in Eq. 8 because we would have to consider a combinatorial number of topic configurations zd. To use stochastic gradient ascent, however, we only need an approximation to this expectation. We use Markov chain Monte Carlo to sample topic configurations from q?(zd). We then use the empirical average of these samples to estimate the expectations needed for Eq. 8.\nGibbs sampling for a document starts with a random initialization of the topic indicator variables zd. We then iteratively resample the topic indicator at each position from the conditional distribution over that\nposition given the remaining topic indicator variables: q?(zdi = k|z\\i) ∝ (α+ ∑ j 6=i Izj=k) exp{Eq[log βkwdi ]},\n(9)\nwhere the expectation of the log probability of word w given a topic k is Ψ(λkw) − Ψ( ∑ w′ λkw′). After B burn-in sweeps, we begin saving sampled topic configurations. Once we have saved S samples {z}1,...,S , we can define approximate sufficient statistics\nEq[Ndkw] ≈ N̂kw = 1\nS ∑ s ∑ d∈B ∑ i Izsdi=kIwdi=w. (10)\nUsing MCMC estimates adds noise to our gradient, but allows us to use a collapsed objective function that does not represent document-topic proportions θd. In addition, an average over a finite set of samples provides a sparse estimate of the gradient: for many words and topics, our estimate of Eq[Ndkw] will be zero."
    }, {
      "heading" : "2.3. Algorithm",
      "text" : "We have defined a natural gradient and a method for approximating the sufficient statistics of that gradient. For a sequence of learning rates ρt = (t0 + t)\n−κ, the following update will lead to a stationary point:\nλtkw ← λt−1kw + ρt D |B| ∑ d∈B ( N̂dkw + 1 D (η − λkw) )\n= (1− ρt)λt−1kw + ρt\n( η + D\n|B| ∑ d∈B N̂dkw\n) . (11)\nThis update results in Algorithm 1. Two implementation details that result in sparse computations can be found in Appendix A. This online algorithm has the important advantage over Online LDA of preserving sparsity in the topic-word parameters, so that λkw = η for most values of k and w. Sparsity increases the efficiency of updates to λk and of Gibbs sampling for zd. Previous variational methods lead to dense updates to KV topic parameters, making them expensive to apply to large vocabularies and large numbers of topics. Our method, in contrast, is able to exploit the sparsity exhibited by samples from the variational distribution q?, resulting in much more efficient updates."
    }, {
      "heading" : "3. Related Work",
      "text" : "This paper combines two sources of zero-mean noise in constructing an approximate gradient for a variational inference algorithm: subsampling of data, and Monte Carlo inference. These sources of variance have been\nused individually in previous work. Stochastic approximation EM (SAEM, Delyon et al., 1999) combines an EM algorithm with a stochastic online inference procedure. SAEM does not subsample data, but rather interpolates between Monte Carlo estimates of the complete data. Kuhn & Lavielle (2004) extend SAEM to use MCMC estimates. Similarly, online EM (Cappé & Moulines, 2009) sub-samples data but preserves standard inference procedures for local variables.\nStandard collapsed Gibbs sampling uses multiple sweeps over the entire corpus, representing topic-word distributions using the topic-word assignment variables of the entire corpus except for the current token. As a result, topic assignment variables must in theory be sampled sequentially, although parallel approximations work well empirically (Asuncion et al., 2008). In contrast, Algorithm 1 treats topic-word distributions as a global variable distinct from the local token-topic assignment variables, and so can parallelize trivially.\nIn this work we integrate over document-topic proportions θd within a variational algorithm. Collapsed variational inference (Teh et al., 2006) also analytically marginalizes over the topic proportions, but still maintains a fully factorized distribution over topic assignments at each position. The method described here does not restrict itself to such factored distributions, and therefore reduces bias, but this reduction may be offset by the bias we introduce when we initialize the Gibbs chain."
    }, {
      "heading" : "4. Empirical Results",
      "text" : "In this section we compare the sampled online algorithm to two related online methods and measure the effect of model parameters. We use a selection of metrics to evaluate models."
    }, {
      "heading" : "4.1. Evaluation",
      "text" : "Held-out probability. A model that characterizes the semantic structure of a corpus should place more of its probability mass on sensible documents than on random sequences of words. We can use this assumption to compare different models by asking each model to estimate the probability of a previously unseen document. A better model should, on average, assign higher probability to real documents than a lower-quality model. We evaluate held-out probability using the left-to-right sequential sampling method (Wallach et al., 2009; Buntine, 2009). For each trained model we generate point estimates of the topic-word probabilities p̃(w|k). We then process each document by iterating through the tokens w1, ..., wNd . At each\nposition i we calculate the marginal probability p̃(wi|w<i) = ∑ k p(zi = k|w<i, z<i, α)p̃(wi|k). (12)\nWe then sample zi proportional to the terms of that summation and continue to the next token.1 In order to normalize for document lengths, we divide the sum of the logs of the marginal probabilities by Nd.\nCoherence. This metric measures the semantic quality of a topic by approximating the experience of a user viewing the W most probable words for the topic (Mimno et al., 2011). It is related to point-wise mutual information (Newman et al., 2010). Let D(w) be the document frequencies for each word w, that is, the number of documents containing one or more tokens of type w, and let D(w1, w2) be the number of documents containing at least one token of w1 and of w2. For each pair of words w1, w2 in the top W list, we calculate the number of documents that contain at least one token of the higher ranked word w1 that also contain at least one token of the lower ranked word w2:\nC(W ) = ∑ i ∑ j<i log D(wi, wj) + D(wj) (13)\nwhere is a small constant used to avoid log zero. Values closer to zero indicate greater co-occurrence. Unlike held-out probability, which reports scores for held-out documents, coherence reports scores for individual topics.\nWallclock time. Our goal is to train useful models as efficiently as possible. In addition to model quality metrics, we are therefore also interested in total computation time."
    }, {
      "heading" : "4.2. Comparison to Online VB",
      "text" : "Our first corpus consists of 350,000 research articles from three major journals: Science, Nature, and the Proceedings of the National Academy of Sciences of the USA. We use a vocabulary with 19,000 distinct words, including selected multi-word terms. We train models on 90% of the Science/Nature/PNAS corpus, holding out the remaining documents for testing purposes. We save topic-word parameters N̂kw after epochs consisting of 500,000 documents.\nSampled online variational Bayesian inference compares well in terms of wallclock time to standard online VB inference, particularly with respect to the number of topics K. Figure 1 shows results comparing standard online VB inference to sampled online inference\n1We set the document-topic hyperparameter α = 0.1.\nfor K up to 1000. Each iteration consists of a minibatch of 100 documents. Standard online inference takes time linear in K, while wallclock time for sampled online inference grows more slowly.\nWe would like to know if there is a difference in the quality of models trained through the hybrid sampled variational algorithm and the online LDA algorithm. We compare an implementation of Online LDA that tries to be as close as possible to the sampled online implementation, but using a dense VB update instead of a sparse sampled update for the local variables. In particular, the number of coordinate ascent steps in standard VB is equal to the number of Gibbs sweeps in the sampled algorithm.\nPer-topic coherence for K = 200 is shown in Figure 2. Sampled online inference produces fewer very poor topics. This difference is significant under a twosample t-test (p < 0.001) and does not decrease with additional training epochs. Sampled online inference also assigns greater held-out probability than Online LDA for every test document, by a wide margin. We evaluated several possible reasons for this difference in performance. Held-out probability estimation can be affected by evaluation-time smoothing parameter settings, but we found both models were affected equally. The log probability of a document is the sum of the log probabilities of its words. It is possible that if one model assigned very small probability to a handful of tokens, those words could significantly affect the overall score, but the difference in log probability was consistent across many tokens. The scale of parameters might not be comparable, but as both methods use the same learning schedule, the sum of the trained parameters λkw is nearly identical.\nThe main difference appears to be the entropy of the\nCoherence\nA lg\nor ith\nm\nSampOnline\nVB\n●● ●\n●● ●●● ●●● ● ●● ● ●●\n−1200 −1000 −800 −600 −400 −200\nCoherence\nHeldOut\nA lg\nor ith m SampOnline\nSMC\n● ●● ●●●● ● ●●● ● ● ● ● ●●● ● ●● ● ● ●●●●● ● ● ● ●● ●● ●●● ● ●●●● ●●●● ●● ●●●●\n● ●●● ● ●●●● ●●●● ● ●● ●●●● ● ●● ● ● ●● ●●●● ●● ● ●● ● ●● ●●●● ●● ●●● ● ●● ●● ●●● ● ●●\n−9.5 −9.0 −8.5 −8.0 −7.5 −7.0\nFigure 3. Sampled online inference performs better than one pass of sequential Monte Carlo, after processing a comparable number of documents with K = 200.\ntopic distributions: the sampled-online algorithm produces less concentrated distributions (mean entropy 6.8 ± 0.46) than standard online LDA (mean entropy 6.0± 0.58). This result could indicate that coordinate ascent over the local variables for Online LDA is not converging."
    }, {
      "heading" : "4.3. Comparison to Sequential Monte Carlo",
      "text" : "Sequential Monte Carlo is an online algorithm similar to Gibbs sampling in that it represents topics using sums over assignment variables (Ahmed et al., 2012). A Gibbs sampler starts with a random initialization for all hidden variables and sweeps repeatedly over the entire data set, updating each variable given the current value of all other variables. SMC samples values for hidden variables in sequential order, conditioning only on previously-seen variables. It is common to keep multiple sampling states or “particles”, but this process adds both computation and significant bookkeeping complexity. Ahmed et al. (2012) use a single SMC state.\nIn order to compare SMC to the sampled online algorithm, we ran 10 independent SMC samplers over the Science/Nature/PNAS dataset, with documents\nordered randomly. We also ran 10 independent sampled trainers, stopping after a number of documents had been sampled equivalent to the size of the corpus. In order to make the comparison more fair, we allowed the SMC sampler to sweep through each document the same number of times as the sampled online algorithm, but only the final topic configuration of a document was available to the subsequent documents.2 Results for K = 200 are shown in Figure 3. SMC has consistently worse per-topic coherence and per-document held-out log probability. The sampled online algorithm in this paper differs from SMC in that the contribution of local token-topic assignment variables decays according to the learning rate schedule, so that more recently sampled documents can have greater weight than earlier documents. This decay allows sampled online inference to “forget” its initial topics, unlike SMC, which weights all documents equally."
    }, {
      "heading" : "4.4. Effect of parameter settings",
      "text" : "Number of samples. In the inner loop of our algorithm we initialize3 the topic indicator variables z for a document and then perform several Gibbs sweeps. In each sweep we resample the value of each topic indicator variable in turn. We introduce bias when we initialize, so we discard B “burn-in” sweeps and use values of z saved after S additional sweeps to calculate the gradient. Since performance is linear in the total number of sweeps B + S, we want to find the smallest number of sweeps that does not sacrifice performance.\nWe consider nine settings of the pair (B,S). Under the first three settings we save one sweep and vary the number of burn-in sweeps: (1,1), (2,1), (3,1). For the second three settings we perform five sweeps, varying how many we discard: (2,3), (3,2), (4,1). The final three settings fix B = S and consider larger total numbers of sweeps: (5,5), (10,10), (20,20). We evaluate each setting after processing 500,000 documents.\nPerformance was similar across settings with the following exceptions, which were significant at p < 0.001 under a two-sample t-test. The two-sweep setting (1,1) had better topic coherence but worse held-out probability than the all other settings. The (5,5) setting had the best mean held-out probability, but it was not significantly better than (10,10) and (20,20). The\n2Note that SMC has an advantage. In the sampled online algorithm we Gibbs sample each document within a mini-batch independently, while in SMC, documents “see” results from all previous documents.\n3We initialize by sampling each token conditioned on the topics of the previous tokens in the document: p(zdi = k) ∝ (α+ ∑ j<i Izdj=k)p(wdi|k).\nmany-sweep settings (5,5), (10,10), (20,20) had worse topic coherence than the other settings, with many visibly low-quality topics. These results suggest that 3–5 sweeps is sufficient.\nTopic-word smoothing. Eq. 9 involves the function eΨ(x). This function approaches x − 12 as x gets large, but for values of x near 0, it is non-linear. For example, eΨ(0.05) is 1034 times greater than eΨ(0.01). If the values of topic parameters are in this range, a minuscule increase in the parameter for word w in topic k can cause a profound change in the sampling distribution for that word: all subsequent tokens of type w will be assigned to topic k with probability near 1.0.\nIn general, the randomness introduced by sampling topic assignments helps to avoid becoming trapped in local maxima. When parameters are near zero, however, random decisions early in the inference process risk becoming permanent. The topic-word smoothing parameter η can push parameter values away from this explosive region. We measured coherence for six settings of the topic-word hyperparameter η, {0.1, 0.2, 0.3, 0.4, 0.5, 0.6}. At η = 0.1, a common value for batch variational inference, many topics are visibly nonsensical. Average coherence improves significantly for each increasing value of η ∈ {0.2, 0.3, 0.4} (p < 0.001). There is no significant difference in average coherence for η ∈ {0.4, 0.5, 0.6}.\nForgetting factors. We now consider the learning rate ρt = (t0 + t)\n−κ and its relation to the corpus size D. We fix κ = 0.6 and vary the offset parameter t0 ∈ {3000, 15000, 30000, 150000, 300000}, saving topic parameters after five training epochs of 500,000 documents each. There was no significant difference in average topic coherence.\nThe learning rate, however, is not the only factor that determines the magnitude of parameter updates. Eq. 11 also includes the size of the corpus D. If the corpus is larger, we will take larger steps, regardless of the contents of the mini-batch. The offset parameter t0 had no significant effect on coherence for the full corpus, but it may have an effect if we also vary the corpus size.\nWe simulate different size corpora by subsampling the full data set. Results are shown in Figure 4 for models trained on one half, one quarter, and one eighth of the corpus. Each corpus is a subset of the next larger corpus. In the smallest corpus (12.5%), the model with t0 = 300000 is significantly worse than other settings (p < 0.001). Otherwise, there is no significant difference in average topic coherence."
    }, {
      "heading" : "4.5. Scalability",
      "text" : "Pre-1922 books. To demonstrate the scalability of the method, we modeled a collection of 1.2 million outof-copyright books. Topic models are useful in characterizing the contents of the corpus and supporting browsing applications: even scanning titles for a collection of this size is impossible for one person. Previous approaches to million-book digital libraries have focused on keyword search and word frequency histograms (Michel et al., 2011). Such methods do not account for variability in meaning or context. There is no guarantee that the words being counted match the meaning assumed by the user. In contrast, an interface based on a topic model could, for example, distinguish uses of the word “strain” in immunology, mechanical engineering, and cookery.\nWe divide each book into 10-page sections, resulting in 44 million “documents” with a vocabulary size of 216. We trained models with K ∈ {100, 500, 1000, 2000}. Randomly selected example topics are shown in Table 1, illustrating the average level of topic quality. Models are sparse: at K = 2000, less than 1% of the 2000 ·216 possible topic-word parameters are non-zero. The algorithm scales well as K increases. The number of milliseconds taken to process a sequence of 10,000 documents was similar for K = 1000 and 2000, despite doubling the number of topics."
    }, {
      "heading" : "5. Conclusions",
      "text" : "Stochastic online inference allows us to scale topic modeling to large document sets. Sparse Gibbs sampling allows us to scale to large numbers of topics. The algorithm presented in this paper combines the advantages of these two methods. As a result, models can be trained on vast, open-ended corpora without requiring access to vast computer clusters. If parallel architectures are available, we can trivially parallelize computation within each mini-batch. As this work is related to the Online LDA algorithm of Hoffman et al.\n(2010), extensions to that model are also applicable, such as adaptive scheduling algorithms (Wahabzada & Kersting, 2011). The use of MCMC within stochastic variational inference reduces one source of bias in estimating local variables. Although we have focused on text analysis applications, this hybrid method generalizes to a broad class of Bayesian models."
    }, {
      "heading" : "Acknowledgments",
      "text" : "John Langford, Iain Murray, Charles Sutton provided helpful comments. Yahoo! and PICSciE provided computational resources. DM is supported by a CRA CI fellowship. MDH is supported by NSF ATM0934516, DOE DE-SC0002099, and IES R305D100017. DMB is supported by ONR N00014-11-1-0651, NSF CAREER 0745520, AFOSR FA9550-09-1-0668, the Alfred P. Sloan foundation, and a grant from Google."
    }, {
      "heading" : "A. Sparse computation",
      "text" : "Sparse sampling over topics. Sampling zsdi ∝ (α + Ndk)e\nEq [log βkw] requires calculating the normalizing constant Z = ∑ k(α+Ndk)e\nEq [log βkw]. This calculation can be accomplished in time much less than O(k) if we can represent the topic-word parameters λkw sparsely. The smoothing parameter η can be factored out of Equation 11 as long as we assume that all initial values λ0kw ≥ η. Rearranging this equation to separate the Dirichlet hyperparameter η\nλtkw ← η + (1− ρt) ( λt−1kw − η ) + ρt D\n|B| NSkw (14)\nshows that we can define an alternative parameter Ñ tkw = λ t kw − η that represents the “non-smoothing” portion of the variational Dirichlet parameter, and ignore the contribution of the smoothing parameter until it is time to calculate expectations.\nFor any given w, it is likely that most values of Ñkw will be zero. We can therefore rewrite the normalizing constant as\nZ = ∑ k α+Ndk eΨ(V η+Ñk◦) ( eΨ(η+Ñkw) − eΨ(η) ) +\n∑ k α+Ndk eΨ(V η+Ñk◦) eΨ(η). (15)\nThe second summation does not depend on any wordspecific variables, and can therefore be calculated and then updated incrementally as Ndk changes. The first summation is non-zero only for k such that Ñkw > 0.\nSparse updates in the vocabulary. We expect that a typical mini-batch will contain a small fraction of the words in the vocabulary. Eq. 11, however, updates Ñkw for all words, even words that do not occur in the current mini-batch. Expanding the recursive definition of Ñ tkw, and letting N̂ t kw = D |B|N S kw,\nÑ tkw = ρtN̂ t kw + (1− ρt) ( ρt−1N̂ t−1 kw + (1− ρt−1)(...) ) (16)\n= ρtN̂ t kw + (1− ρt)ρt−1N̂ t−1kw + (1− ρt)(1− ρt−1)...\n(17) Dividing both sides by ∏t i=1(1− ρi),\nÑ tkw∏t i=1(1− ρi) = ρtN̂ t kw∏t i=1(1− ρi) + ρt−1N̂ t−1 kw∏t−1 i=1(1− ρi) (18)\n+ ρt−2N̂ t−2 kw∏t−2\ni=1(1− ρi) + ....\nDefining a variable πt = ∏t i=1(1− ρi), the update becomes\nÑ tkw πt = Ñ t−1kw πt−1 + ρtN̂ t kw πt . (19)\nThis update is sparse: only elements with nonzero ndw will be modified. To calculate the expectation of p(w|k), we compute Ψ ( η + πt Ntkw πt ) −\nΨ ( Wη + πt ∑ w Ntkw πt ) .\nThe scale factor πt can become small after several hundred mini-batches. We periodically “reset” this parameter by setting all stored values to Ñ tkw = πt Ñtkw πt\n, avoiding the possibility of numerical instability."
    } ],
    "references" : [ {
      "title" : "Scalable inference in latent variable models",
      "author" : [ "Ahmed", "Amr", "Aly", "Mohamed", "Gonzalez", "Joseph", "Narayanamurthy", "Shravan", "Smola", "Alexander" ],
      "venue" : "In WSDM,",
      "citeRegEx" : "Ahmed et al\\.,? \\Q2012\\E",
      "shortCiteRegEx" : "Ahmed et al\\.",
      "year" : 2012
    }, {
      "title" : "Asynchronous distributed learning of topic models",
      "author" : [ "Asuncion", "Arthur", "Smyth", "Padhraic", "Welling", "Max" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Asuncion et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Asuncion et al\\.",
      "year" : 2008
    }, {
      "title" : "Pattern Recognition and Machine Learning",
      "author" : [ "Bishop", "Christopher M" ],
      "venue" : null,
      "citeRegEx" : "Bishop and M.,? \\Q2006\\E",
      "shortCiteRegEx" : "Bishop and M.",
      "year" : 2006
    }, {
      "title" : "Latent Dirichlet allocation",
      "author" : [ "Blei", "David", "Ng", "Andrew", "Jordan", "Michael" ],
      "venue" : "Journal of Machine Learning Research,",
      "citeRegEx" : "Blei et al\\.,? \\Q2003\\E",
      "shortCiteRegEx" : "Blei et al\\.",
      "year" : 2003
    }, {
      "title" : "Estimating likelihoods for topic models",
      "author" : [ "Buntine", "Wray L" ],
      "venue" : "In Asian Conference on Machine Learning,",
      "citeRegEx" : "Buntine and L.,? \\Q2009\\E",
      "shortCiteRegEx" : "Buntine and L.",
      "year" : 2009
    }, {
      "title" : "Online EM algorithm for latent data models",
      "author" : [ "Cappé", "Olivier", "Moulines", "Eric" ],
      "venue" : "Journal of the Royal Statistical Society Series B,",
      "citeRegEx" : "Cappé et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Cappé et al\\.",
      "year" : 2009
    }, {
      "title" : "Convergence of a stochastic approximation version of the EM algorithm",
      "author" : [ "Delyon", "Bernard", "Lavielle", "Marc", "Moulines", "Eric" ],
      "venue" : "Annals of Statistics,",
      "citeRegEx" : "Delyon et al\\.,? \\Q1999\\E",
      "shortCiteRegEx" : "Delyon et al\\.",
      "year" : 1999
    }, {
      "title" : "Finding scientific topics",
      "author" : [ "Griffiths", "Thomas L", "Steyvers", "Mark" ],
      "venue" : "PNAS, 101(suppl",
      "citeRegEx" : "Griffiths et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Griffiths et al\\.",
      "year" : 2004
    }, {
      "title" : "Online learning for latent dirichlet allocation",
      "author" : [ "Hoffman", "Matthew", "Blei", "David", "Bach", "Francis" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Hoffman et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Hoffman et al\\.",
      "year" : 2010
    }, {
      "title" : "Introduction to variational methods for graphical models",
      "author" : [ "Jordan", "Michael", "Ghahramani", "Zoubin", "Jaakkola", "Tommi", "Saul", "Laurence" ],
      "venue" : "Machine Learning,",
      "citeRegEx" : "Jordan et al\\.,? \\Q1999\\E",
      "shortCiteRegEx" : "Jordan et al\\.",
      "year" : 1999
    }, {
      "title" : "Coupling a stochastic approximation version of EM with an MCMC procedure",
      "author" : [ "Kuhn", "Estelle", "Lavielle", "Marc" ],
      "venue" : "ESAIM: Probability and Statistics,",
      "citeRegEx" : "Kuhn et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Kuhn et al\\.",
      "year" : 2004
    }, {
      "title" : "Optimizing semantic coherence in topic models",
      "author" : [ "Mimno", "David", "Wallach", "Hanna", "Talley", "Edmund", "Leenders", "Miriam", "McCallum", "Andrew" ],
      "venue" : "In EMNLP,",
      "citeRegEx" : "Mimno et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Mimno et al\\.",
      "year" : 2011
    }, {
      "title" : "Automatic evaluation of topic coherence",
      "author" : [ "Newman", "David", "Lau", "Jey Han", "Grieser", "Karl", "Baldwin", "Timothy" ],
      "venue" : "In Human Language Technologies: The Annual Conference of the North American Chapter of the Association for Computational Linguistics,",
      "citeRegEx" : "Newman et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Newman et al\\.",
      "year" : 2010
    }, {
      "title" : "Online model selection based on the variational Bayes",
      "author" : [ "M.A. Sato" ],
      "venue" : "Neural Computation,",
      "citeRegEx" : "Sato,? \\Q2001\\E",
      "shortCiteRegEx" : "Sato",
      "year" : 2001
    }, {
      "title" : "A collapsed variational bayesian inference algorithm for latent dirichlet allocation",
      "author" : [ "Teh", "Yee-Whye", "Newman", "David", "Welling", "Max" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Teh et al\\.,? \\Q2006\\E",
      "shortCiteRegEx" : "Teh et al\\.",
      "year" : 2006
    }, {
      "title" : "Larger residuals, less work: Active document scheduling for latent Dirichlet allocation",
      "author" : [ "Wahabzada", "Mirwaes", "Kersting", "Kristian" ],
      "venue" : "In ECML/PKDD,",
      "citeRegEx" : "Wahabzada et al\\.,? \\Q2011\\E",
      "shortCiteRegEx" : "Wahabzada et al\\.",
      "year" : 2011
    }, {
      "title" : "Evaluation methods for topic models",
      "author" : [ "Wallach", "Hanna", "Murray", "Iain", "Salakhutdinov", "Ruslan", "Mimno", "David" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Wallach et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Wallach et al\\.",
      "year" : 2009
    } ],
    "referenceMentions" : [ {
      "referenceID" : 3,
      "context" : "Topic models are hierarchical Bayesian models of document collections (Blei et al., 2003).",
      "startOffset" : 70,
      "endOffset" : 89
    }, {
      "referenceID" : 9,
      "context" : "Our algorithm builds on variational inference (Jordan et al., 1999).",
      "startOffset" : 46,
      "endOffset" : 67
    }, {
      "referenceID" : 8,
      "context" : "Recently, Hoffman et al. (2010) introduced Online LDA, a stochastic gradient optimization algorithm for topic modeling.",
      "startOffset" : 10,
      "endOffset" : 32
    }, {
      "referenceID" : 14,
      "context" : "Unlike standard mean-field variational inference, but similar to Griffiths & Steyvers (2004) and Teh et al. (2006), we will marginalize out the topic proportions θd.",
      "startOffset" : 97,
      "endOffset" : 115
    }, {
      "referenceID" : 13,
      "context" : "We obtain these noisy estimates by subsampling the data (Sato, 2001; Hoffman et al., 2010).",
      "startOffset" : 56,
      "endOffset" : 90
    }, {
      "referenceID" : 8,
      "context" : "We obtain these noisy estimates by subsampling the data (Sato, 2001; Hoffman et al., 2010).",
      "startOffset" : 56,
      "endOffset" : 90
    }, {
      "referenceID" : 13,
      "context" : "Premultiplying the gradient of an objective function by the inverse Fisher information matrix of the distribution being optimized (in our case the variational distribution q) results in the natural gradient (Sato, 2001).",
      "startOffset" : 207,
      "endOffset" : 219
    }, {
      "referenceID" : 8,
      "context" : "8 (Hoffman et al., 2010).",
      "startOffset" : 2,
      "endOffset" : 24
    }, {
      "referenceID" : 6,
      "context" : "Stochastic approximation EM (SAEM, Delyon et al., 1999) combines an EM algorithm with a stochastic online inference procedure. SAEM does not subsample data, but rather interpolates between Monte Carlo estimates of the complete data. Kuhn & Lavielle (2004) extend SAEM to use MCMC estimates.",
      "startOffset" : 35,
      "endOffset" : 256
    }, {
      "referenceID" : 1,
      "context" : "As a result, topic assignment variables must in theory be sampled sequentially, although parallel approximations work well empirically (Asuncion et al., 2008).",
      "startOffset" : 135,
      "endOffset" : 158
    }, {
      "referenceID" : 14,
      "context" : "Collapsed variational inference (Teh et al., 2006) also analytically marginalizes over the topic proportions, but still maintains a fully factorized distribution over topic assignments at each position.",
      "startOffset" : 32,
      "endOffset" : 50
    }, {
      "referenceID" : 16,
      "context" : "We evaluate held-out probability using the left-to-right sequential sampling method (Wallach et al., 2009; Buntine, 2009).",
      "startOffset" : 84,
      "endOffset" : 121
    }, {
      "referenceID" : 11,
      "context" : "This metric measures the semantic quality of a topic by approximating the experience of a user viewing the W most probable words for the topic (Mimno et al., 2011).",
      "startOffset" : 143,
      "endOffset" : 163
    }, {
      "referenceID" : 12,
      "context" : "It is related to point-wise mutual information (Newman et al., 2010).",
      "startOffset" : 47,
      "endOffset" : 68
    }, {
      "referenceID" : 8,
      "context" : "Comparison of seconds per mini-batch between online variational Bayes (Hoffman et al., 2010) and sampled online inference (this paper).",
      "startOffset" : 70,
      "endOffset" : 92
    }, {
      "referenceID" : 0,
      "context" : "Sequential Monte Carlo is an online algorithm similar to Gibbs sampling in that it represents topics using sums over assignment variables (Ahmed et al., 2012).",
      "startOffset" : 138,
      "endOffset" : 158
    }, {
      "referenceID" : 0,
      "context" : "Sequential Monte Carlo is an online algorithm similar to Gibbs sampling in that it represents topics using sums over assignment variables (Ahmed et al., 2012). A Gibbs sampler starts with a random initialization for all hidden variables and sweeps repeatedly over the entire data set, updating each variable given the current value of all other variables. SMC samples values for hidden variables in sequential order, conditioning only on previously-seen variables. It is common to keep multiple sampling states or “particles”, but this process adds both computation and significant bookkeeping complexity. Ahmed et al. (2012) use a single SMC state.",
      "startOffset" : 139,
      "endOffset" : 626
    }, {
      "referenceID" : 8,
      "context" : "As this work is related to the Online LDA algorithm of Hoffman et al. (2010), extensions to that model are also applicable, such as adaptive scheduling algorithms (Wahabzada & Kersting, 2011).",
      "startOffset" : 55,
      "endOffset" : 77
    } ],
    "year" : 2012,
    "abstractText" : "We present a hybrid algorithm for Bayesian topic models that combines the efficiency of sparse Gibbs sampling with the scalability of online stochastic inference. We used our algorithm to analyze a corpus of 1.2 million books (33 billion words) with thousands of topics. Our approach reduces the bias of variational inference and generalizes to many Bayesian hidden-variable models.",
    "creator" : "LaTeX with hyperref package"
  }
}