{
  "name" : "1303.3055.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Online Learning in Markov Decision Processes with Adversarially Chosen Transition Probability Distributions",
    "authors" : [ "Yasin Abbasi-Yadkori", "Peter L. Bartlett", "Csaba Szepesvári" ],
    "emails" : [ "yasin.abbasiyadkori@qut.edu.au", "bartlett@eecs.berkeley.edu", "szepesva@cs.ualberta.ca" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n30 3.\n30 55\nv1 [\ncs .L\nG ]\n1 2\nM ar\n2 01"
    }, {
      "heading" : "1 Notation",
      "text" : "Let X be a finite state space and A be a finite action space. Let ∆S be the space of probability distributions over set S. Define a policy π as a mapping from the state space to ∆A, π : X → ∆A. We use π(a|x) to denote the probability of choosing action a in state x under policy π. A random action under policy π is denoted by π(x). A transition probability kernel (or transition model) m is a mapping from the direct product of the state and action spaces to ∆X : m : X × A → ∆X . Let P (π,m) be the transition probability matrix of policy π under transition model m. A loss function is a bounded real-valued function over state and action spaces, ℓ : X × A → R. For a vector v, define ‖v‖1 = ∑\ni |vi|. For a real-valued function f defined over X × A, define ‖f‖∞,1 = maxx∈X ∑ a∈A |f(x, a)|. The inner product between two vectors v and w is denoted by 〈v, w〉."
    }, {
      "heading" : "2 Introduction",
      "text" : "Consider the following game between a learner and an adversary: at round t, the learner chooses a policy πt from a policy class Π. In response, the adversary chooses a transition model mt from a set of models M and a loss function ℓt. The learner takes action at ∼ πt(.|xt), moves to state xt+1 ∼ mt(.|xt, at) and suffers loss ℓt(xt, at). To simplify the discussion, we assume that the adversary is oblivious, i.e. its choices do not depend on the previous choices of the learner. We assume that ℓt ∈ [0, 1]. In this paper, we study the full-information version of the game, where the learner observes the transition model mt and the loss function ℓt at the end of round t. The game is shown in Figure 1. The objective of the learner is to suffer low loss over a period of T rounds, while the performance of the learner is measured using its regret with respect to the total loss he would have achieved had he followed the stationary policy in the comparison class Π minimizing the total loss.\nEven-Dar et al. (2004) prove a hardness result for MDP problems with adversarially chosen transition models. Their proof, however, seems to have gaps as it assumes that the learner chooses a deterministic policy before observing the state at each round. Note that an online learning algorithm only needs to choose an action at the current state and does not need to construct a complete deterministic policy at each round. Their hardness result applies to deterministic transition models, while we make a mixing assumption in our analysis. Thus, it is still an open problem whether it is possible to obtain a computationally efficient algorithm with a sublinear regret.\nYu and Mannor (2009a,b) study the same setting, but obtain only a regret bound that scales with the amount of variation in the transition models. This regret bound can grow linearly with time.\nEven-Dar et al. (2009) prove regret bounds for MDP problems with a fixed and known transition model and adversarially chosen loss functions. In this paper, we prove regret bounds for MDP problems with adversarially chosen transition models and loss functions. We are not aware of any earlier regret bound for this setting. Our approach is efficient as long as the comparison class is polynomial and we can compute expectations over sample paths for each policy.\nMDPs with changing transition kernels are good models for a wide range of problems, including dialogue systems, clinical trials, portfolio optimization, two player games such as poker, etc."
    }, {
      "heading" : "3 Online MDP Problems",
      "text" : "Let A be an online learning algorithm that generates a policy πt at round t. Let x A t be the state at round t if we have followed the policies generated by algorithm A. Similarly, xπt denotes the state if we have chosen the same policy π up to time t. Let ℓ(x, π) = ℓ(x, π(x)). The regret of algorithm A up to round T with respect to any policy π ∈ Π is defined by\nRT (A, π) =\nT ∑\nt=1\nℓt(x A t , at)−\nT ∑\nt=1\nℓt(x π t , π) ,\nwhere at = πt(x A t ). Note that the regret with respect to π is defined in terms of the sequence of states xπt that would have been visited under policy π. Our objective is to design an algorithm that achieves low regret with respect to any policy π.\nIn the absence of state variables, the problem reduces to a full information online learning problem (Cesa-Bianchi and Lugosi, 2006). The difficulty with MDP problems is that, unlike the full information online learning problems, the choice of policy at each round changes the future states and losses. The main idea behind the design and the analysis of our algorithm is the following regret decomposition:\nRT (A, π) =\nT ∑\nt=1\nℓt(x A t , at)−\nT ∑\nt=1\nℓt(x πt t , πt) +\nT ∑\nt=1\nℓt(x πt t , πt)−\nT ∑\nt=1\nℓt(x π t , π) . (1)\nLet\nBT (A) =\nT ∑\nt=1\nℓt(x A t , at)−\nT ∑\nt=1\nℓt(x πt t , πt) ,\nCT (A, π) = T ∑\nt=1\nℓt(x πt t , πt)−\nT ∑\nt=1\nℓt(x π t , π) .\nNotice that the choice of policies has no influence over future losses in CT (A, π). Thus, CT (A, π) can be bounded by a specific reduction to full information online learning algorithms (to be specified later). Also, notice that the competitor policy π does not appear in BT (A). In fact, BT (A) depends only on the algorithm A. We will show that if algorithm A and the class of models satisfy the following two “smoothness” assumptions, then BT (A) can be bounded by a sublinear term.\nAssumption A1 Rarely Changing Policies Let αt be the probability that algorithm A changes its policy at round t. There exists a constant D such that for any 1 ≤ t ≤ T , any sequence of models m1, . . . ,mt and loss functions ℓ1, . . . , ℓt, αt ≤ D/ √ t.\nAssumption A2 Uniform Mixing There exists a constant τ > 0 such that for all distributions d and d′ over the state space, any deterministic policy π, and any model m ∈ M ,\n‖dP (π,m)− d′P (π,m)‖1 ≤ e−1/τ ‖d− d′‖1 .\nAs discussed by Neu et al. (2010), if Assumption A2 holds for deterministic policies, then it holds for all policies."
    }, {
      "heading" : "3.1 Full Information Algorithms",
      "text" : "We would like to have a full information online learning algorithm that rarely changes its policy. The first candidate that we consider is the well-known Exponentially Weighted Average (EWA) algorithm (Vovk, 1990, Littlestone and Warmuth, 1994) shown in Figure 2. In our MDP problem, the EWA algorithm chooses a policy π ∈ Π according to distribution\nqt(π) ∝ exp ( −λ t−1 ∑\ns=1\nE [ℓs(x π s , π)]\n)\n, λ > 0 , (2)\nThe policies that this EWA algorithm generates most likely are different in consecutive rounds and thus, the EWA algorithm might change its policy frequently. However, a variant of EWA, called Shrinking Dartboard (SD) (Geulen et al., 2010) and shown in Figure 3, satisfies Assumption A1. Our algorithm, called SD-MDP, is based on the SD algorithm and is shown in Figure 4. Notice that the algorithm needs to know the number of rounds, T , in advance.\nConsider a basic full information problem with N experts. Let RT (SD, i) be the regret of the SD algorithm with respect to expert i up to time T . We have the following results for the SD algorithm.\nTheorem 1. For any expert i ∈ {1, . . . , N},\nRT (SD, i) ≤ 4 √ T logN + logN ,\nand also for any 1 ≤ t ≤ T ,\nP (Switch at time t) ≤ √ logN\nT .\nProof. The proof of the regret bound can be found in (Geulen et al., 2010, Theorem 3). The proof of the bound on the probability of switch is similar to the proof of Lemma 2 in (Geulen et al., 2010) and is as follows: As shown in (Geulen et al., 2010, Lemma 2), the probability of switch at time t is\nαt = Wt−1 −Wt\nWt−1 .\nThus, Wt = (1− αt)Wt−1. Because the loss function is bounded in [0, 1], we have that\nWt =\nN ∑\ni=1\nwi,t =\nN ∑\ni=1\nwi,t−1(1 − η)ct(i) ≥ N ∑\ni=1\nwi,t−1(1− η) = (1− η)Wt−1 .\nThus, 1− αt ≥ 1− η, and thus,\nαt ≤ η ≤ √ logN\nT ."
    }, {
      "heading" : "3.2 Analysis of the SD-MDP Algorithm",
      "text" : "The main result of this section is the following regret bound for the SD-MDP algorithm.\nTheorem 2. Let the loss functions selected by the adversary be bounded in [0, 1], and the transition models selected by the adversary satisfy Assumption A2. Then, for any policy π ∈ Π,\nE [RT (SD-MDP, π)] ≤ (4 + 2τ2) √ T log |Π|+ log |Π| . In the rest of this section, we write A to denote the SD-MDP algorithm. For the proof we use\nthe regret decomposition (1):\nRT (A, π) = BT (A) + CT (A, π) .\n3.2.1 Bounding E [CT (A, π)] Lemma 3. For any policy π ∈ Π,\nE [CT (A, π)] = E\n[\nT ∑\nt=1\nℓt(x πt t , πt)−\nT ∑\nt=1\nℓt(x π t , π)\n]\n≤ 4 √ T log |Π|+ log |Π| .\nProof. Consider the following imaginary game between a learner and an adversary: we have a set of experts (policies) Π = {π1, . . . , π|Π|}. At round t, the adversary chooses a loss vector ct ∈ [0, 1]Π, whose ith element determines the loss of expert πi at this round. The learner chooses a distribution over experts qt (defined by the SD algorithm), from which it draws an expert πt. Next, the learner observes the loss function ct. From the regret bound for the SD algorithm (Theorem 1), it is guaranteed that for any expert π,\nT ∑\nt=1\n〈ct, qt〉 − T ∑\nt=1\nct(π) ≤ 4 √ T log |Π|+ log |Π| .\nNext, we determine how the adversary chooses the loss vector. At time t, the adversary chooses a\nloss function ℓt and sets ct(π i) = E\n[\nℓt(x πi t , π i) ]\n. Noting that 〈ct, qt〉 = E [ℓt(xπtt , πt)] and ct(π) = E [ℓt(x π t , π)] finishes the proof.\n3.2.2 Bounding E [BT (A)]\nFirst, we prove the following two lemmas.\nLemma 4. For any state distribution d, any transition model m, and any policies π and π′,\n‖dP (π,m)− dP (π′,m)‖1 ≤ ‖π − π′‖∞,1 .\nProof. Proof is easy and can be found in (Even-Dar et al., 2009), Lemma 5.1.\nLemma 5. Let αt be the probability of a policy switch at time t. Then, αt ≤ √ log |Π|/T . Proof. Proof is identical to the proof of Theorem 1.\nLemma 6. We have that\nE [BT (A)] = E\n[\nT ∑\nt=1\nℓt(x A t , at)−\nT ∑\nt=1\nℓt(x πt t , πt)\n]\n≤ 2τ2 √ log |Π|T .\nProof. Let Ft = σ(π1, . . . , πt). Notice that the choice of policies are independent of the state variables. We can write\nE [BT (A)] = E\n[\nT ∑\nt=1\nℓt(x A t , at)−\nT ∑\nt=1\nℓt(x πt t , πt)\n]\n= E\n[\nT ∑\nt=1\n∑\nx∈X\n(\nI{xA t =x} − I{xπt t =x}\n)\nℓt(x, πt(x))\n]\n= E\n[\nT ∑\nt=1\n∑\nx∈X\nE\n[(\nI{xA t =x} − I{xπt t =x}\n) ℓt(x, πt(x)) ∣ ∣ ∣ FT ]\n]\n= E\n[\nT ∑\nt=1\n∑\nx∈X\nℓt(x, πt(x))E [(\nI{xA t =x} − I{xπt t =x}\n) ∣\n∣ ∣ FT ]\n]\n≤ E [ T ∑\nt=1\n‖ℓt‖∞ ∥ ∥ ∥ E [( I{xA t =x} − I{xπt t =x} ) ∣ ∣ ∣ FT ]∥ ∥ ∥\n1\n]\n= E\n[\nT ∑\nt=1\n‖ℓt‖∞ ‖ut − vt,t‖1\n]\n≤ E [ T ∑\nt=1\n‖ut − vt,t‖1\n]\n, (3)\nwhere us = E [\nI{xA s =x}\n∣ ∣FT ] is the distribution of xAs for s ≤ t and vs,t = E [ I{x πt s =x}\n∣ ∣ ∣ FT ] is the\ndistribution of xπts for s ≤ t.1 Let Et be the event of a policy switch at time t. From inequality\n‖πt−k − πt‖∞,1 ≤ ‖πt−k − πt−k+1‖∞,1 + · · ·+ ‖πt−1 − πt‖∞,1 ≤ 2 t ∑\ns=t−k+1\nI{Es} ,\nand Lemma 5, we get that\nE\n[ ‖πt−k − πt‖∞,1 ]\n≤ 2 √ log |Π| T k . (4)\nLet P πt = P (π,mt). We have that\nE [ ‖ut − vt,t‖1 ] = E [∥ ∥ut−1P πt−1 t−1 − vt−1,tP πtt−1 ∥ ∥ 1 ]\n= E [∥ ∥ut−1P πt−1 t−1 − ut−1P πtt−1 + ut−1P πtt−1 − vt−1,tP πtt−1 ∥ ∥\n1\n]\n≤ E [∥ ∥ut−1P πt−1 t−1 − ut−1P πtt−1 ∥ ∥ 1 + ∥ ∥ut−1P πt t−1 − vt−1,tP πtt−1 ∥ ∥ 1 ] ≤ E [\n‖πt−1 − πt‖∞,1 + e−1/τ ‖ut−1 − vt−1,t‖1 ]\n≤ E [\n‖πt−1 − πt‖∞,1 + e−1/τ ( ∥ ∥ut−2P πt−2 t−2 − ut−2P πtt−2 ∥ ∥\n1\n+ ∥ ∥ut−2P πt t−2 − vt−2,tP πtt−2 ∥ ∥ 1 ) ]\n≤ E [ ‖πt−1 − πt‖∞,1 + e−1/τ ‖πt−2 − πt‖∞,1 + e−2/τ ‖ut−2 − vt−2,t‖1 ]\n≤ . . .\n≤ t ∑\nk=0\ne−k/τE [ ‖πt−k − πt‖∞,1 ] + e−t/τ ‖u0 − v0,t‖1\n≤ t ∑\nk=0\n2e−k/τ √ log |Π| T k + 0 By (4)\n≤ 2 √ log |Π| T τ2 , (5)\nwhere we have used the fact that ‖u0 − v0,t‖1 = 0, because the initial distributions are identical. By (5) and (3), we get that\nE [BT (A)] ≤ 2τ2 T ∑\nt=1\n√\nlog |Π| T = 2τ2 √ log |Π|T .\nWhat makes the analysis possible is the fact that all policies mix no matter what transition model is played by the adversary.\nProof of Theorem 2. The result is obvious by Lemmas 3 and 6.\nThe next corollary extends the result of Theorem 2 to continuous policy spaces.\nCorollary 7. Let Π be an arbitrary policy space, N (ǫ) be the ǫ-covering number of space (Π, ‖.‖∞,1), and C(ǫ) be an ǫ-cover. Assume that we run the SD-MDP algorithm on C(ǫ). Then, under the same assumptions as in Theorem 2, for any policy π ∈ Π,\nE [RT (SD-MDP, π)] ≤ (4 + 2τ2) √ T logN (ǫ) + logN (ǫ) + τT ǫ .\n1Notice that FT contains only policies, which are independent of the state variables.\nProof. Let LT (π) = E [ ∑T t=1 ℓt(x π t , π) ] be the value of policy π. Let uπ,t(x) = P (x π t = x). First, we prove that the value function is Lipschitz with Lipschitz constant τT . The argument is similar to the argument in the proof of Lemma 6. For any π1 and π2,\n|LT (π1)− LT (π2)| = ∣ ∣ ∣ ∣\n∣\nE\n[\nT ∑\nt=1\nℓt(x π1 t , π1)−\nT ∑\nt=1\nℓt(x π2 t , π2)\n]∣\n∣ ∣ ∣ ∣\n≤ 2 ∣ ∣ ∣\n∣ ∣\nT ∑\nt=1\n‖uπ1,t − uπ2,t‖1 ‖ℓt‖∞\n∣ ∣ ∣ ∣ ∣\n≤ 2 ∣ ∣ ∣\n∣ ∣\nT ∑\nt=1\n‖uπ1,t − uπ2,t‖1\n∣ ∣ ∣ ∣ ∣ .\nWith an argument similar to the one in the proof of Lemma 6, we can show that\n‖uπ1,t − uπ2,t‖1 ≤ τ ‖π1 − π2‖∞,1 .\nThus, |LT (π1)− LT (π2)| ≤ τT ‖π1 − π2‖∞,1 . Given this and the fact that for any policy π ∈ Π, there is a policy π′ ∈ C(ǫ) such that ‖π − π′‖∞,1 ≤ ǫ, we get that\nE [RT (SD-MDP, π)] ≤ (4 + 2τ2) √ T logN (ǫ) + logN (ǫ) + τT ǫ .\nIn particular if Π is the space of all policies, N (ǫ) ≤ (|A|/ǫ)|A||X |, so regret is no more than\nE [RT (SD-MDP, π)] ≤ (4 + 2τ2) √ T |A||X | log |A| ǫ + |A||X | log |A| ǫ + τT ǫ .\nBy the choice of ǫ = 1T , we get that E [RT (SD-MDP, π)] = O(τ 2 √ T |A| |X | log(|A|T ))."
    } ],
    "references" : [ {
      "title" : "Prediction, Learning, and Games",
      "author" : [ "Nicolò Cesa-Bianchi", "Gábor Lugosi" ],
      "venue" : null,
      "citeRegEx" : "Cesa.Bianchi and Lugosi.,? \\Q2006\\E",
      "shortCiteRegEx" : "Cesa.Bianchi and Lugosi.",
      "year" : 2006
    }, {
      "title" : "Experts in a Markov decision process",
      "author" : [ "Eyal Even-Dar", "Sham M. Kakade", "Yishay Mansour" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Even.Dar et al\\.,? \\Q2004\\E",
      "shortCiteRegEx" : "Even.Dar et al\\.",
      "year" : 2004
    }, {
      "title" : "Online Markov decision processes",
      "author" : [ "Eyal Even-Dar", "Sham M. Kakade", "Yishay Mansour" ],
      "venue" : "Mathematics of Operations Research,",
      "citeRegEx" : "Even.Dar et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Even.Dar et al\\.",
      "year" : 2009
    }, {
      "title" : "Regret minimization for online buffering problems using the weighted majority algorithm",
      "author" : [ "Sascha Geulen", "Berthold Vöcking", "Melanie Winkler" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Geulen et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Geulen et al\\.",
      "year" : 2010
    }, {
      "title" : "The weighted majority algorithm",
      "author" : [ "Nick Littlestone", "Manfred K. Warmuth" ],
      "venue" : "Inf. Comput.,",
      "citeRegEx" : "Littlestone and Warmuth.,? \\Q1994\\E",
      "shortCiteRegEx" : "Littlestone and Warmuth.",
      "year" : 1994
    }, {
      "title" : "Online Markov decision processes under bandit feedback",
      "author" : [ "Gergely Neu", "András György", "András Antos Csaba Szepesvári" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Neu et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Neu et al\\.",
      "year" : 2010
    }, {
      "title" : "Aggregating strategies",
      "author" : [ "Vladimir Vovk" ],
      "venue" : "In COLT, pages 372–383,",
      "citeRegEx" : "Vovk.,? \\Q1990\\E",
      "shortCiteRegEx" : "Vovk.",
      "year" : 1990
    }, {
      "title" : "Arbitrarily modulated Markov decision processes",
      "author" : [ "Jia Yuan Yu", "Shie Mannor" ],
      "venue" : "In IEEE Conference on Decision and Control,",
      "citeRegEx" : "Yu and Mannor.,? \\Q2009\\E",
      "shortCiteRegEx" : "Yu and Mannor.",
      "year" : 2009
    }, {
      "title" : "Online learning in Markov decision processes with arbitrarily changing rewards and transitions",
      "author" : [ "Jia Yuan Yu", "Shie Mannor" ],
      "venue" : "In GameNets,",
      "citeRegEx" : "Yu and Mannor.,? \\Q2009\\E",
      "shortCiteRegEx" : "Yu and Mannor.",
      "year" : 2009
    } ],
    "referenceMentions" : [ {
      "referenceID" : 1,
      "context" : "Even-Dar et al. (2004) prove a hardness result for MDP problems with adversarially chosen transition models.",
      "startOffset" : 0,
      "endOffset" : 23
    }, {
      "referenceID" : 1,
      "context" : "|xt, at) Learner observes mt and lt end for Figure 1: Online Markov Decision Processes Even-Dar et al. (2009) prove regret bounds for MDP problems with a fixed and known transition model and adversarially chosen loss functions.",
      "startOffset" : 87,
      "endOffset" : 110
    }, {
      "referenceID" : 0,
      "context" : "In the absence of state variables, the problem reduces to a full information online learning problem (Cesa-Bianchi and Lugosi, 2006).",
      "startOffset" : 101,
      "endOffset" : 132
    }, {
      "referenceID" : 4,
      "context" : "As discussed by Neu et al. (2010), if Assumption A2 holds for deterministic policies, then it holds for all policies.",
      "startOffset" : 16,
      "endOffset" : 34
    }, {
      "referenceID" : 3,
      "context" : "However, a variant of EWA, called Shrinking Dartboard (SD) (Geulen et al., 2010) and shown in Figure 3, satisfies Assumption A1.",
      "startOffset" : 59,
      "endOffset" : 80
    }, {
      "referenceID" : 3,
      "context" : "The proof of the bound on the probability of switch is similar to the proof of Lemma 2 in (Geulen et al., 2010) and is as follows: As shown in (Geulen et al.",
      "startOffset" : 90,
      "endOffset" : 111
    }, {
      "referenceID" : 2,
      "context" : "Proof is easy and can be found in (Even-Dar et al., 2009), Lemma 5.",
      "startOffset" : 34,
      "endOffset" : 57
    } ],
    "year" : 2013,
    "abstractText" : "We study the problem of learning Markov decision processes with finite state and action spaces when the transition probability distributions and loss functions are chosen adversarially and are allowed to change with time. We introduce an algorithm whose regret with respect to any policy in a comparison class grows as the square root of the number of rounds of the game, provided the transition probabilities satisfy a uniform mixing condition. Our approach is efficient as long as the comparison class is polynomial and we can compute expectations over sample paths for each policy. Designing an efficient algorithm with small regret for the general case remains an open problem.",
    "creator" : "LaTeX with hyperref package"
  }
}