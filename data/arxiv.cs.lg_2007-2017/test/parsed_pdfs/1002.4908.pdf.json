{
  "name" : "1002.4908.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Adaptive Bound Optimization for Online Convex Optimization",
    "authors" : [ "H. Brendan McMahan", "Matthew Streeter" ],
    "emails" : [ "mcmahan@google.com", "mstreeter@google.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "ar X\niv :1\n00 2.\n49 08\nv1 [\ncs .L\nG ]\n2 6"
    }, {
      "heading" : "1 Introduction",
      "text" : "We consider online convex optimization in the full information feedback setting. A closed, bounded convex feasible set F ⊆ Rn is given as input, and on each round t = 1, . . . , T , we must pick a point xt ∈ F . A convex loss function ft is then revealed, and we incur loss ft(xt). Our regret at the end of T rounds is\nRegret ≡ T ∑\nt=1\nft(xt)−min x∈F\nT ∑\nt=1\nft(x). (1)\nExisting algorithms for online convex optimization are worst-case optimal in terms of certain fundamental quantities. In particular, online gradient descent attains a bound of O(DM √ T ) where D is the L2 diameter of the feasible set and M is a bound on L2-norm of the gradients of the loss functions. This bound is tight in the worst case, in that it is possible to construct problems where this much regret is inevitable. However, this does not mean that an algorithm that achieves this bound is optimal in a practical sense, as on easy problem instances such an algorithm is still allowed to incur the worst-case regret. In particular, although this bound is minimax optimal when the feasible set is a hypersphere [Abernethy et al., 2008], we will see that it can be arbitrarily bad when the feasible set is the hypercube.\nTo improve over the existing worst-case guarantees, we introduce additional parameters that capture more of the problem’s structure. These parameters depend on the loss functions, which are not known in advance. To address this, we first construct functional upper bounds on regretBR(θ1, . . . , θT ; f1, . . . , fT )\nthat depend on both (properties of) the loss functions ft and algorithm parameters θt. We then give algorithms for choosing the parameters θt adaptively (based only on f1, f2, . . . , ft−1) and prove that these adaptive schemes provide a regret bound that is only a constant factor worse than the best possible regret bound of the form BR. Formally, if for all possible function sequences f1, . . . fT we have\nBR(θ1, . . . , θT ; f1, . . . , fT ) ≤ κ inf θ′ 1 ,...,θ′ T ∈ΘT BR(θ ′ 1, . . . , θ ′ T ; f1, . . . , fT )\nfor the adaptively-selected θt, we say the adaptive scheme is κ-competitive for the bound optimization problem. In Section 1.2, we provide realistic examples where known bounds are much worse than the problem-dependent bounds obtained by our algorithm."
    }, {
      "heading" : "1.1 Follow the proximally-regularized leader",
      "text" : "We analyze a follow the regularized leader (FTRL) algorithm that adaptively selects regularization functions of the form\nrt(x) = 1\n2 ‖(Q\n1 2\nt (x− xt)‖22 where Qt is a positive semidefinite matrix. Our algorithm plays x1 = 0 on round 1 (we assume without loss of generality that 0 ∈ F ), and on round t+ 1, selects the point\nxt+1 = argmin x∈F\n(\nt ∑\nτ=1\n( rτ (x) + fτ (x) )\n)\n. (2)\nIn contrast to other FTRL algorithms, such as the dual averaging method of Xiao [2009], we center the additional regularization at the current feasible point xt rather than at the origin. Accordingly, we call this algorithm follow the proximally-regularized leader (FTPRL). This proximal centering of additional regularization is similar in spirit to the optimization solved by online gradient descent (and more generally, online mirror descent, [Cesa-Bianchi and Lugosi, 2006]). However, rather than considering only the current gradient, our algorithm considers the sum of all previous gradients, and so solves a global rather than local optimization on each round. We discuss related work in more detail in Section 4.\nThe FTPRL algorithm allows a clean analysis from first principles, which we present in Section 2. The proof techniques are rather different from those used for online gradient descent algorithms, and will likely be of independent interest.\nFor a convex set F , we defineFsym = {x− x′ | x, x′ ∈ F}, and write ~Qt as shorthand for (Q1, Q2, . . . , QT ), with ~gt defined analogously. Using this notation, we can state our regret bound as\nRegret ≤ BR( ~Qt, ~gt) ≡ 1\n2\nT ∑\nt=1\nmax ŷ∈Fsym\n( ŷTQtŷ ) +\nT ∑\nt=1\ngTt Q −1 1:t gt (3)\nwhere gt is a subgradient of ft at xt. We prove competitive ratios with respect to this BR for several adaptive schemes for selecting the Qt matrices. In particular, when the FTPRL-Diag scheme is run on a hyperrectangle (a set of the form {x | xi ∈ [ai, bi]} ⊆ Rn), we achieve\nRegret ≤ √ 2 inf\n~Q∈QTdiag BR( ~Qt, ~gt)\nwhere Qdiag = {diag(λ1, . . . , λn) | λi ≥ 0}. When the FTPRL-Scale scheme is run on a feasible set of the form F = {x | ‖Ax‖2 ≤ 1} for A ∈ Sn++, it is competitive with arbitrary positive semidefinite matrices:\nRegret ≤ √ 2 inf\n~Q∈(Sn + )T\nBR( ~Qt, ~gt) .\nOur analysis of FTPRL reveals a fundamental connection between the shape of the feasible set and the importance of choosing the regularization matrices adaptively. When the feasible set is a hyperrectangle, FTPRL-Diag has stronger bounds than known algorithms, except for degenerate cases where the bounds are identical. In contrast, when the feasible set is a hypersphere, {x | ‖x‖2 ≤ 1}, the bound BR is always optimized by choosing Qt = λtQ for suitable λt ∈ Rn. The FTPRL-Scale scheme extends this result to hyperellipsoids by applying a suitable transformation. These results are presented in detail in Section 3."
    }, {
      "heading" : "1.2 The practical importance of adaptive regularization",
      "text" : "In the past few years, online algorithms have emerged as state-of-the-art techniques for solving largescale machine learning problems [Bottou and Bousquet, 2008, Ma et al., 2009, Zhang, 2004]. Two canonical examples of such large-scale learning problems are text classification on large datasets and predicting click-through-rates for ads on a search engine. For such problems, extremely large feature sets may be considered, but many features only occur rarely, while few occur very often. Our diagonaladaptation algorithm offers improved bounds for problems such as these.\nAs an example, suppose that on each round t, the ith component of ▽ft(xt) (henceforth gt,i) is 1 with probability i−α, and is 0 otherwise, for some α ∈ [1, 2). Such heavy-tailed distributions are common in text classification applications, where there is a feature for each word. In this case, gradient descent with a global learning rate obtains an expected regret bound of O( √ nT ). In contrast, the algorithms presented in this paper will obtain expected regret\nE\n\n\nn ∑\ni=1\n√ √ √ √ T ∑\nt=1\ng2t,i\n  ≤ n ∑\ni=1\n√ √ √ √ T ∑\nt=1\nE [ g2t,i ] =\nn ∑\ni=1\n√ T i−α = O( √ T · n1−α2 )\nusing Jensen’s inequality. This bound is never worse than the O( √ nT ) bound achieved by ordinary gradient descent, and can be substantially better. For example, in problems where a constant fraction of examples contain a new feature, n is Ω(T ) and the bound for ordinary gradient descent is vacuous. In contrast, the bound for our algorithm is O(T 3−α\n2 ), which is sublinear for α > 1. This performance difference is not merely a weakness in the regret bounds for ordinary gradient descent, but is a difference in actual regret. In concurrent work [Streeter and McMahan, 2010], we showed that for some problem families, a per-coordinate learning rate for online gradient descent provides asymptotically less regret than even the best non-increasing global learning rate (chosen in hindsight, given the observed loss functions). This construction can be adapted to FTPRL as:\nTheorem 1. There exists a family of online convex optimization problems, parametrized by the number of rounds T , where online subgradient descent with a non-increasing learning rate sequence (and FTPRL with non-decreasing coordinate-constant regularization) incurs regret at least Ω(T 2 3 ), whereas FTPRL with appropriate diagonal regularization matrices Qt has regret O( √ T ).\nIn fact, essentially any online learning algorithm with a regret bound of the formO(MD √ T ) (where D is the L2 diameter of the feasible region, and M is a bound on the L2 norm of the gradients) will suffer regret Ω(T 2 3 ) on this family of problems. Note that this does not contradict the O(MD √ T ) upper bound on the regret, because in this family of problems D = T 1 6 (and M = 1)."
    }, {
      "heading" : "1.3 Adaptive algorithms and competitive ratios",
      "text" : "In Section 3, we introduce specific schemes for selecting the regularization matrices Qt for FTPRL, and show that for certain feasible sets, these algorithms provide bounds within a constant factor of those for the best post-hoc choice of matrices, namely\ninf ~Qt∈QT\nBR( ~Qt, ~gt) (4)\nwhere Q ⊆ Sn+ is a set of allowed matrices; Sn+ is the set of symmetric positive semidefinite n × n matrices, with Sn++ the corresponding set of symmetric positive definite matrices. We consider three different choices for Q: the set of coordinate-constant matrices Qconst = {αI | α ≥ 0}; the set of nonnegative diagonal matrices, Qdiag = {diag(λ1, . . . , λn) | λi ≥ 0} ; and, the full set of positive-semidefinite matrices, Qfull = Sn+.\nWe first consider the case where the feasible region is an Lp unit ball, namely F = {x | ‖x‖p ≤ 1}. For p ∈ [1, 2], we show that a simple algorithm (an analogue of standard online gradient descent) that selects matrices from Qconst is √ 2-competitive with the best post-hoc choice of matrices from the full set of positive semidefinite matrices Qfull = Sn+. This algorithm is presented in Corollary 1, and the competitive ratio is proved in Theorem 6.\nIn contrast to the result for p ∈ [1, 2], we show that for Lp balls with p > 2 a coordinate-independent choice of matrices (Qt ∈ Qconst) does not in general obtain the post-hoc optimal bound (see Section 3.3), and hence per-coordinate adaptation can help. The benefit of per-coordinate adaptation is most pronounced for the L∞-ball, where the coordinates are essentially independent. In light of this, we develop an efficient algorithm (FTPRL-Diag, Algorithm 1) for adaptively selecting Qt from Qdiag, which uses scaling based on the width of F in the coordinate directions (Corollary 2). In this corollary, we also show that this algorithm √ 2-competitive with the best post-hoc choice of matrices from Qdiag when the feasible set is a hyperrectangle. While per-coordinate adaptation does not help for the unit L2-ball, it can help when the feasible set is a hyperellipsoid. In particular, in the case where F = {x | ‖Ax‖2 ≤ 1} for A ∈ Sn++, we show that an appropriate transformation of the problem can produce significantly better regret bounds. More generally, we show (see Theorem 5) that if one has a κ-competitive adaptive FTPRL scheme for the feasible set {x | ‖x‖ ≤ 1} for an arbitrary norm, it can be extended to provide a κ-competitive algorithm for feasible sets of the form {x | ‖Ax‖ ≤ 1}. Using this result, we can show FTPRL-Scale is √ 2-competitive with the best post-hoc choice of matrices from Sn+ when F = {x | ‖Ax‖2 ≤ 1} and\nA ∈ Sn++; it is √ 2-competitive with Qdiag when F = {x | ‖Ax‖p ≤ 1} for p ∈ [1, 2).\nOf course, in many practical applications the feasible set may not be so nicely characterized. We emphasize that our algorithms and analysis are applicable to arbitrary feasible sets, but the quality of the bounds and competitive ratios will depend on how tightly the feasible set can be approximated by a suitably chosen transformed norm ball. In Theorem 3, we show in particular that when FTPRL-Diag is applied to an arbitrary feasible set, it provides a competitive guarantee related to the ratio of the widths of the smallest hyperrectangle that contains F to the largest hyperrectangle contained in F ."
    }, {
      "heading" : "1.4 Notation and technical background",
      "text" : "We use the notation g1:t as a shorthand for ∑t\nτ=1 gτ . Similarly we write Q1:t for a sum of matrices Qt, and f1:t to denote the function f1:t(x) = ∑t τ=1 fτ (x). We write x\nTy or x · y for the inner product between x, y ∈ Rn. The ith entry in a vector x is denoted xi ∈ R; when we have a sequence of vectors xt ∈ Rn indexed by time, the ith entry is xt,i ∈ R. We use ∂f(x) to denote the set of subgradients of f evaluated at x.\nRecall A ∈ Sn++ means ∀x 6= 0, xTAx > 0. We use the generalized inequality A ≻ 0 when A ∈ Sn++, and similarly A ≺ B when B − A ≻ 0, implying xTAx < xTBx. We define A B analogously for symmetric positive semidefinite matrices Sn+. For B ∈ Sn+, we write B1/2 for the square root of B, the unique X ∈ Sn+ such that XX = B (see, for example, Boyd and Vandenberghe [2004, A.5.2]). We also make use of the fact that any A ∈ Sn+ can be factored as A = PDPT where PTP = I and D = diag(λ1, . . . , λn) where λi are the eigenvalues of A.\nFollowing the arguments of Zinkevich [2003], for the remainder we restrict our attention to linear functions. Briefly, the convexity of ft implies ft(x) ≥ gTt (x − xt) + ft(xt), where gt ∈ ∂f(xt). Because this inequality is tight for x = xt, it follows that regret measured against the affine functions on the right hand side is an upper bound on true regret. Furthermore, regret is unchanged if we replace this affine function with the linear function gTt x. Thus, so long as our algorithm only makes use of the subgradients gt, we may assume without loss of generality that the loss functions are linear.\nTaking into account this reduction and the functional form of the rt, the update of FTPRL is\nxt+1 = argmin x∈F\n(\n1\n2\nt ∑\nτ=1\n(x − xτ )TQτ (x− xτ ) + g1:t · x ) . (5)"
    }, {
      "heading" : "2 Analysis of FTPRL",
      "text" : "In this section, we prove the following bound on the regret of FTPRL for an arbitrary sequence of regularization matrices Qt. In this section ‖ · ‖ always means the L2 norm, ‖ · ‖2. Theorem 2. Let F ⊆ Rn be a closed, bounded convex set with 0 ∈ F . Let Q1 ∈ Sn++, and Q2, . . . , QT ∈ Sn+. Define rt(x) = 12‖Q 1 2 t (x − xt)‖22, and At = (Q1:t) 1 2 . Let ft be a sequence of loss functions, with gt ∈ ∂ft(xt) a sub-gradient of ft at xt. Then, the FTPRL algorithm that that faces loss functions f , plays x1 = 0, and uses the update of Equation (5) thereafter, has a regret bound\nRegret ≤ r1:T (̊x) + T ∑\nt=1\n‖A−1t gt‖2\nwhere x̊ = argminx∈F f1:T (x) is the post-hoc optimal feasible point.\nTo prove Theorem 2 we will make use of the following bound on the regret of FTPRL, which holds for arbitrary (possibly non-convex) loss functions. The proof is similar to arguments of [Kalai and Vempala, 2005], and is given in Appendix A.\nLemma 1. Let r1, r2, . . . , rT be a sequence of non-negative functions. The regret of FTPRL (which plays xt as defined by Equation (2)) is bounded by\nr1:T (̊x) +\nT ∑\nt=1\n(ft(xt)− ft(xt+1))\nwhere x̊ is the post-hoc optimal feasible point.\nOnce Lemma 1 is established, to prove Theorem 2 it suffices to show that for all t,\nft(xt)− ft(xt+1) ≤ ‖A−1t gt‖2. (6)\nTo show this, we first establish an alternative characterization of our algorithm as solving an unconstrained optimization followed by a suitable projection onto the feasible set. Define the projection operator,\nPF ,A(u) = argmin x∈F\n‖A(x− u)‖\nWe will show that the following is an equivalent formula for xt:\nut+1 = argmin u∈Rn\n(r1:t(u) + g1:t · u)\nxt+1 = PF ,At (ut+1) . (7)\nThis characterization will be useful, because the unconstrained solutions depend only on the linear functions gt, and the quadratic regularization, and hence are easy to manipulate in closed form.\nTo show this equivalence, first note that because Qt ∈ Sn+ is symmetric,\nrt(u) = 1\n2 (u− xt)TQt(u− xt) =\n1 2 uTQtu− xTt Qtut + 1 2 xTt Qtxt.\nDefining constants qt = Qtxt and kt = 12x T t Qtxt, we can write\nr1:t(u) = 1\n2 uTQ1:tu− q1:tu+ k1:t. (8)\nThe equivalence is then a corollary of the following lemma, choosing Q = Q1:t and h = g1:t − q1:t (note that the constant term k1:t does not influence the argmin).\nLemma 2. Let Q ∈ Sn++, and consider the function\nf(x) = hTx+ 1\n2 xTQx.\nLet ů = argminu∈Rn f(u). Then, letting A = Q 1 2 , we have PF,A(̊u) = argminx∈F f(x).\nProof. Note that ▽uf(u) = h+Qu, implying that ů = −Q−1h. Consider the function\nf ′(x) = 1 2 ‖Q 12 (x− ů)‖2 = 1 2 (x− ů)TQ(x− ů).\nWe have\nf ′(x) = 1\n2\n( xTQx− 2xTQů+ ůTQů )\n(because Q is symmetric)\n= 1\n2\n( xTQx+ 2xTQ(Q)−1h+ ůTQů )\n= 1\n2\n( xTQx+ 2xTh+ ůTQů )\n= f(x) + 1\n2 ůTQů .\nBecause 12 ů TQů is constant with respect to x, it follows that\nargmin x∈F f(x) = argmin x∈F\nf ′(x) = PF,A(̊u),\nwhere the last equality follows from the definition of the projection operator.\nWe now derive a closed-form solution to the unconstrained problem. It is easy to show ▽rt(u) = Qtu−Qtxt, and so\n▽r1:t(u) = Q1:tu− t ∑\nτ=1\nQτxτ .\nBecause ut+1 is the optimum of the (strongly convex) unconstrained problem, and r1:t is differentiable, we must have ▽r1:t(ut+1) + g1:t = 0. Hence, we conclude Q1:tut+1 − ∑t τ=1 Qτxτ + g1:t = 0, or\nut+1 = Q −1 1:t\n(\nt ∑\nτ=1\nQτxτ − g1:t ) . (9)\nThis closed-form solution will let us bound the difference between ut and ut+1 in terms of gt. The next Lemma relates this distance to the difference between xt and xt+1, which determines our per round regret (Equation (6)). In particular, we show that the projection operator only makes ut and ut+1 closer together, in terms of distance as measured by the norm ‖At · ‖. We defer the proof to the end of the section.\nLemma 3. Let Q ∈ Sn++ with A = Q 1 2 . Let F be a convex set, and let u1, u2 ∈ Rn, with x1 = PF ,A(u1) and x2 = PF ,A(u2). Then,\n‖A(x2 − x1)‖ ≤ ‖A(u1 − u2)‖.\nWe now prove the following lemma, which will immediately yield the desired bound on ft(xt) − ft(xt+1).\nLemma 4. Let Q ∈ Sn++ with A = Q 1 2 . Let v, g ∈ Rn, and let u1 = −Q−1v and u2 = −Q−1(v + g). Then, letting x1 = PF ,A(u1) and x2 = PF ,A(u2),\ngT(x1 − x2) ≤ ‖A−1g‖2.\nProof. The fact that Q = ATA ≻ 0 implies that ‖A · ‖ and ‖A−1 · ‖ are dual norms (see for example [Boyd and Vandenberghe, 2004, Sec. 9.4.1, pg. 476]). Using this fact,\ngT(x1 − x2) ≤ ‖A−1g‖ · ‖A(x1 − x2)‖ ≤ ‖A−1g‖ · ‖A(u1 − u2)‖ (Lemma 3) = ‖A−1g‖ · ‖A(Q−1g)‖ (Equation (9)) = ‖A−1g‖ · ‖A(A−1A−1)g)‖ (Because Q−1 = (AA)−1) = ‖A−1g‖ · ‖A−1g‖.\nProof of Theorem 2: First note that because rt(xt) = 0 and rt is non-negative,xt = argminx∈F rt(x). For any functions f and g, if x∗ = argminx∈F f(x) and x ∗ = argminx∈F g(x), then\nx∗ = argmin x∈F (f(x) + g(x)) .\nThus we have\nxt = argmin x∈F (g1:t−1x+ r1:t−1(x))\n= argmin x∈F (g1:t−1x+ r1:t(x)) (Because xt = argmin x∈F rt(x).)\n= argmin x∈F\n(\nhx+ 1\n2 xTQ1:tx\n)\nwhere the last line follows from Equation (8), letting h = g1:t−1 − q1:t = g1:t−1 − ∑t\nτ=1 Qτxτ , and dropping the constant k1:t. For xt+1, we have directly from the definitions\nxt+1 = argmin x∈F (g1:tx+ r1:t(x)) = argmin x∈F\n(\n(h+ gt)x+ 1\n2 xTQ1:tx\n)\n.\nThus, Lemma 2 implies xt = PF ,At(−(Q1:t)−1h) and similarly xt+1 = PF ,At(−(Q1:t)−1(h + gt)). Thus, by Lemma 4, gt(xt − xt+1) ≤ ‖A−1t gt‖2. The theorem then follows from Lemma 1.\nProof of Lemma 3: Define\nB(x, u) = 1 2 ‖A(x− u)‖2 = 1 2 (x− u)TQ(x− u),\nso we can write equivalently x1 = argmin\nx∈F B(x, u1).\nThen, note that ▽xB(x, u1) = Qx−Qu1, and so we must have (Qx1−Qu1)T(x2−x1) ≥ 0; otherwise for δ sufficiently small the point x1+ δ(x2−x1) would belong to F (by convexity) and would be closer to u1 than x1 is. Similarly, we must have (Qx2 −Qu2)T(x1 − x2) ≥ 0. Combining these, we have the following equivalent inequalities:\n(Qx1 −Qu1)T(x2 − x1)− (Qx2 −Qu2)T(x2 − x1) ≥ 0 (x1 − u1)TQ(x2 − x1)− (x2 − u2)TQ(x2 − x1) ≥ 0 −(x2 − x1)TQ(x2 − x1) + (u2 − u1)TQ(x2 − x1) ≥ 0\n(u2 − u1)TQ(x2 − x1) ≥ (x2 − x1)Q(x2 − x1).\nLetting û = u2 − u1, and x̂ = x2 − x1, we have x̂TQx̂ ≤ ûTQx̂. Since Q is positive semidefinite, we have (û − x̂)TQ(û − x̂) ≥ 0, or equivalently ûTQû + x̂TQx̂ − 2x̂TQû ≥ 0 (using the fact Q is also symmetric). Thus,\nûTQû ≥ −x̂TQx̂+ 2x̂TQû ≥ −x̂TQx̂+ 2x̂TQx̂ = x̂TQx̂, and so\n‖A(u2 − u1)‖2 = ûTQû ≥ x̂TQx̂ = ‖A(x2 − x1)‖2."
    }, {
      "heading" : "3 Specific Adaptive Algorithms and Competitive Ratios",
      "text" : "Before proceeding to the specific results, we establish several results that will be useful in the subsequent arguments. In order to prove that adaptive schemes for selecting Qt have good competitive ratios for the bound optimization problem, we will need to compare the bounds obtained by the adaptive scheme to the optimal post-hoc bound of Equation (4). Suppose the sequence Q1, . . . , QT is optimal for Equation (4), and consider the alternative sequence Q′1 = Q1:T and Q ′ t = 0 for t > 1. Using the fact that Q1:t Q1:t−1 implies Q −1 1:t Q−11:t−1, it is easy to show the alternative sequence also achieves the minimum. It follows that a sequence with Q1 = Q on the first round, and Qt = 0 thereafter is always optimal. Hence, to solve for the post-hoc bound we can solve an optimization of the form\ninf Q∈Q max y∈Fsym\n(\n1 2 yTQy\n)\n+\nT ∑\nt=1\ngTt Q −1gt. (10)\nWhen F is symmetric (x ∈ F implies −x ∈ F ), we can replace the optimization over Fsym with optimization over F :\ninf Q∈Q max y∈F\n( 2yTQy ) +\nT ∑\nt=1\ngTt Q −1gt. (11)\nFor simplicity of exposition, we assume g1,i > 0 for all i, which ensures that only positive definite matrices can be optimal.1 This assumption also ensures Q1 ∈ Sn++ for the adaptive schemes discussed below, as required by Theorem 2. This is without loss of generality, as we can always hallucinate an initial loss function with arbitrarily small components, and this changes regret by an arbitrarily small amount.\nWe will use the following Lemma from [Streeter and McMahan, 2010]. A proof is included in Appendix B.\nLemma 5. For any non-negative real numbers x1, x2, . . . , xn,\nn ∑\ni=1\nxi √\n∑i j=1 xj\n≤ 2\n√ √ √ √ n ∑\ni=1\nxi ."
    }, {
      "heading" : "3.1 Adaptive coordinate-constant regularization",
      "text" : "We derive bounds where Qt is chosen from the set Qconst, and show that this algorithm comes within a factor of √ 2 of using the best constant regularization strength λI . This algorithm achieves a bound of O(DM √ T ) where D is the diameter of the feasible region and M is a bound on ‖gt‖2, matching the best possible bounds in terms of these parameters [Abernethy et al., 2008].\nCorollary 1. Suppose F has L2 diameter D. Then, if we run FTPRL with diagonal matrices such that\n(Q1:t)ii = ᾱt = 2 √ Gt\nD\n1In the case where F has 0 width in some direction, the infimum will not be attained by a finite Q, but by a sequence that assigns 0 penalty (on the right-hand side) to the components of the gradient in the direction of 0 width, requiring some entries in Q to go to ∞.\nwhere Gt = ∑t\nτ=1 ∑n i=1 g 2 τ,i, then\nRegret ≤ 2D √\nGT .\nIf ‖gt‖2 ≤ M , then GT ≤ M2T , and this translates to a bound of O(DM √ T ). When F =\n{x | ‖x‖2 ≤ D/2}, this bound is √ 2-competitive for the bound optimization problem over Qconst.\nWe will prove a much stronger competitive guarantee for this algorithm in Theorem 6.\nProof. Let the diagonal entries of Qt all be αt = ᾱt − ᾱt−1 (with ᾱ(0) = 0), so α1:t = ᾱt. Note αt ≥ 0, and so this choice is feasible. We consider the left and right-hand terms of Equation (3) separately. For the left-hand term, letting ŷt be an arbitrary sequence of points from Fsym, and noting ŷTt ŷt ≤ ‖ŷt‖2 · ‖ŷt‖2 ≤ D2,\n1\n2\nT ∑\nt=1\nŷTt Qtŷt = 1\n2\nT ∑\nt=1\nŷTt ŷtαt ≤ 1\n2 D2\nT ∑\nt=1\nαt = 1\n2 D2ᾱT = D\n√\nGT\nFor the right-hand term, we have\nT ∑\nt=1\ngTt Q −1 1:t gt =\nT ∑\nt=1\nn ∑\ni=1\ng2t,i α1:t = T ∑\nt=1\nD\n2\n∑n i=1 g 2 t,i√\nGt ≤ D\n√\nGT ,\nwhere the last inequality follows from Lemma 5. In order to make a competitive guarantee, we must prove a lower bound on the post-hoc optimal bound function BR, Equation (10). This is in contrast to the upper bound that we must show for the regret of the algorithm. When F = {x | ‖x‖2 ≤ D/2}, Equation (10) simplifies to exactly\nmin α≥0\n(\n1 2 αD2 + 1 α GT\n)\n= D √\n2GT (12)\nand so we conclude the adaptive algorithm is √ 2-competitive for the bound optimization problem."
    }, {
      "heading" : "3.2 Adaptive diagonal regularization",
      "text" : "In this section, we introduce and analyze FTPRL-Diag, a specialization of FTPRL that uses regularization matrices from Qdiag. Let Di = maxx,x′∈F |xi − x′i|, the width of F along the ith coordinate. We construct a bound on the regret of FTPRL-Diag in terms of these Di. The Di implicitly define a hyperrectangle that contains F . When F is in fact such a hyperrectangle, our bound is √ 2-competitive with the best post-hoc optimal bound using matrices from Qdiag.\nCorollary 2. Let F be a convex feasible set of width Di in coordinate i. We can construct diagonal matrices Qt such that the ith entry on the diagonal of Q1:t is given by:\nλ̄t,i = 2\nD i\n√ √ √ √ t ∑\nτ=1\ng2τ,i.\nAlgorithm 1 FTPRL-Diag\nInput: feasible set F ⊆ ×ni=1[ai, bi] Initialize x1 = 0 ∈ F (∀i), Gi = 0, qi = 0, λ0,i = 0, Di = bi − ai for t = 1 to T do\nPlay the point xt, incur loss ft(xt) Let gt ∈ ∂ft(xt) for i = 1 to n do Gi = Gi + g 2 t,i\nλt,i = 2 Di\n√ Gi − λ1:t−1,i\nqi = qi + xt,iλt,i ut+1,i = (g1:t,i − qi)/λ1:t,i\nend for At = diag( √ λ1:t,1, . . . , √\nλ1:t,n) xt+1 = ProjectF ,At(ut+1)\nend for\nAlgorithm 2 FTPRL-Scale\nInput: feasible set F ⊆ {x | ‖Ax‖ ≤ 1}, with A ∈ Sn++ Let F̂ = {x | ‖x‖ ≤ 1} Initialize x1 = 0, (∀i) Di = bi − ai for t = 1 to T do\nPlay the point xt, incur loss ft(xt) Let gt ∈ ∂ft(xt) ĝt = (A −1)Tgt ᾱ = √\n∑t τ=1 ∑n i=1 ĝ 2 τ,i\nαt = ᾱ− α1:t−1 qt = αtxt ût+1 = (1/ᾱ)(q1:t − g1:t) At = (ᾱI) 1 2 x̂t+1 = ProjectF̂,At(ût+1) xt+1 = A\n−1x̂ end for\nThen the regret of FTPRL satisfies\nRegret ≤ 2 n ∑\ni=1\nDi\n√ √ √ √ T ∑\nt=1\ng2t,i.\nWhen F is a hyperrectangle, then this algorithm is √ 2-competitive with the post-hoc optimal choice of Qt from the Qdiag. That is,\nRegret ≤ √ 2 inf Q∈Qdiag\n(\nmax ŷ∈Fsym\n(\n1 2 ŷTQŷ\n)\n+\nT ∑\nt=1\ngTt Q −1gt\n)\n.\nProof. The construction of Q1:t in the theorem statement implies (Qt)ii = λt,i ≡ λ̄t,i − λ̄t−1,i. These entries are guaranteed to be non-negative as λ̄t,i is a non-decreasing function of t.\nWe begin from Equation (3), letting ŷt be an arbitrary sequence of points from Fsym. For the lefthand term,\n1\n2\nT ∑\nt=1\nŷTt Qtŷt = 1\n2\nT ∑\nt=1\nn ∑\ni=1\nŷ2t,iλt,i ≤ 1\n2\nn ∑\ni=1\nD2i\nT ∑\nt=1\nλt,i = 1\n2\nn ∑\ni=1\nD2i λ̄T,i =\nn ∑\ni=1\nDi\n√ √ √ √ T ∑\nt=1\ng2t,i.\nFor the right-hand term, we have\nT ∑\nt=1\ngTt Q −1 1:t gt =\nT ∑\nt=1\nn ∑\ni=1\ng2t,i λ̄t,i = n ∑\ni=1\nDi 2\nT ∑\nt=1\ng2t,i √\n∑t τ=1 g 2 τ,i\n≤ n ∑\ni=1\nDi\n√ √ √ √ T ∑\nt=1\ng2t,i,\nwhere the last inequality follows from Lemma 5. Summing these bounds on the two terms of Equation (3) yields the stated bound on regret.\nNow, we consider the case where the feasible set is exactly a hyperrectangle, that is, F = {x | xi ∈ [ai, bi]} where Di = bi − ai. Then, the the optimization of Equation (10) decomposes on a per-coordinate basis, and in particular there exists a ŷ ∈ Fsym so that ŷ2i = D2i in each coordinate. Thus, for Q = diag(λ1, . . . , λn), the bound function is exactly\nn ∑\ni=1\n1 2 λiD 2 i + 1\nλi\nT ∑\nt=1\ng2t,i.\nChoosing λi = 1Di\n√\n2 ∑T t=1 g 2 t,i minimizes this quantity, producing a post-hoc bound of\n√ 2 n ∑\ni=1\nDi\n√ √ √ √ T ∑\nt=1\ng2t,i,\nverifying that the adaptive scheme is √ 2-competitive with matrices from Qdiag.\nThe regret guarantees of FTPRL-Diag algorithm hold on arbitrary feasible sets, but the competitive guarantee only applies for hyperrectangles. We now extend this result, showing that a competitive guarantee can be made based on how well the feasible set is approximated by hyperrectangles.\nTheorem 3. Let F be an arbitrary feasible set, bounded by a hyperrectangle Hout of width Wi in coordinate i; further, let H in be a hyperrectangle contained by F , of width wi > 0 in coordinate i. That is, H in ⊆ F ⊆ Hout. Let β = maxi Wiwi . Then, the FTPRL-Diag is √ 2β-competitive with Qdiag on F .\nProof. By Corollary 2, the adaptive algorithm achieves regret bounded by 2 ∑n\ni=1 Wi\n√\n∑T t=1 g 2 t,i. We\nnow consider the best post-hoc bound achievable with diagonal matrices on F . Considering Equation (10), it is clear that for any Q,\nmax y∈Fsym\n1 2 yTQy +\nT ∑\nt=1\ngTt Q −1gt ≥ max\ny∈H insym\n1 2 yTQy +\nT ∑\nt=1\ngTt Q −1gt,\nsince the feasible set for the maximization (Fsym) is larger on the left-hand side. But, on the right-hand side we have the post-hoc bound for diagonal regularization on a hyperrectangle, which we computed in the previous section to be √ 2 ∑n\ni=1 wi\n√\n∑T t=1 g 2 t,i. Because wi ≥ Wiβ by assumption, this is lower\nbounded by √ 2\nβ ∑n i=1 Wi\n√\n∑T t=1 g 2 t,i, which proves the theorem.\nHaving had success with L∞, we now consider the potential benefits of diagonal adaptation for other Lp-balls."
    }, {
      "heading" : "3.3 A post-hoc bound for diagonal regularization on Lp balls",
      "text" : "Suppose the feasible set F is an unit Lp-ball, that is F = {x | ‖x‖p ≤ 1}. We consider the post-hoc bound optimization problem of Equation (11) with Q = Qdiag. Our results are summarized in the following theorem.\nTheorem 4. For p > 2, the optimal regularization matrix for BR in Qdiag is not coordinate-constant (i.e., not contained in Qconst), except in the degenerate case where Gi ≡ ∑T t=1 g 2 t,i is the same for all i. However, for p ≤ 2, the optimal regularization matrix in Qdiag always belongs to Qconst.\nProof. Since F is symmetric, the optimal post-hoc choice will be in the form of Equation (11). Letting Q = diag(λ1, . . . , λn), we can re-write this optimization problem as\nmax y:‖y‖p≤1\n(\n2\nn ∑\ni=1\ny2i λi\n)\n+\nn ∑\ni=1\nGi λi . (13)\nTo determine the optimal λ vector, we first derive a closed form for the solution to the maximization problem on the left hand side, assuming p ≥ 2 (we handle the case p < 2 separately below). First note that the inequality ‖y‖p ≤ 1 is equivalent to ∑n i=1 |yi|p ≤ 1. Making the change of variable zi = y2i , this is equivalent to ∑n\ni=1 z p 2\ni ≤ 1, which is equivalent to ‖z‖ p2 ≤ 1 (the assumption p ≥ 2 ensures that ‖ · ‖ p\n2 is a norm). Hence, the left-hand side optimization reduces to\nmax z:‖z‖ p\n2 ≤1\n2\nn ∑\ni=1\nziλi = ‖λ‖q,\nwhere q = pp−2 , so that ‖ · ‖ p2 and ‖ · ‖q are dual norms (allowing q = ∞ for p = 2). Thus, for p ≥ 2, the above bound simplifies to\nB(λ) = 2‖λ‖q + n ∑\ni=1\nGi λi . (14)\nFirst suppose p > 2, so that q is finite. Then, taking the gradient of B(λ),\n∇B(λ)i = 2\nq\n(\nn ∑\ni=1\nλqi\n) 1 q −1\n· qλq−1i − Gi λ2i = 2\n(\nλi ‖λ‖q\n)q−1 − Gi\nλ2i ,\nusing 1q − 1 = − 1q (q − 1). If we make all the λi’s equal (say, to λ1), then for the left-hand side we get\n(\nλi ‖λ‖q\n)q−1 =\n(\nλ1\n(nλq1) 1 q\n)q−1\n=\n(\n1 n 1 q\n)q−1 = n 1 q −1 .\nThus the ith component of the gradient is 2n 1 q −1 − Gi\nλ2 1\n, and so if not all the Gi’s are equal, some\ncomponent of the gradient is non-zero. Because B(λ) is differentiable and the λi ≥ 0 constraints cannot be tight (recall g1 > 0), this implies a constant λi cannot be optimal, hence the optimal regularization matrix is not in Qconst.\nFor p ∈ [1, 2], we show that the solution to Equation (13) is\nB∞(λ) ≡ 2‖λ‖∞ + n ∑\ni=1\nGi λi . (15)\nFor p = 2 this follows immediately from Equation (14), because when p = 2 we have q = ∞. For p ∈ [1, 2), the solution to Equation (13) is at least B∞(λ), because we can always set yi = 1 for\nwhatever λi is largest and set yj = 0 for j 6= i. If p < 2 then the feasible set F is a subset of the unit L2 ball, so the solution to Equation (13) is upper bounded by the solution when p = 2, namely B∞(λ). It follows that the solution is exactly B∞(λ). Because the left-hand term of B∞(λ) only penalizes for the largest λi, and on the right-hand we would like all λi as large as possible, a solution of the form λ1 = λ2 = · · · = λn must be optimal."
    }, {
      "heading" : "3.4 Full matrix regularization on hyperspheres and hyperellipsoids",
      "text" : "In this section, we develop an algorithm for feasible sets F ⊆ {x | ‖Ax‖p ≤ 1}, where p ∈ [1, 2] and A ∈ Sn++. When F = {x | ‖Ax‖2 ≤ 1}, this algorithm, FTPRL-Scale, is √ 2-competitive with\narbitrary Q ∈ Sn+. For F = {x | ‖Ax‖p ≤ 1} with p ∈ [1, 2) it is √ 2-competitive with Qdiag.\nFirst, we show that rather than designing adaptive schemes specifically for linear transformations of norm balls, it is sufficient (from the point of view of analyzing FTPRL) to consider unit norm balls if suitable pre-processing is applied. In the same fashion that pre-conditioning may speed batch subgradient descent algorithms, we show this approach can produce significantly improved regret bounds when A is poorly conditioned (the ratio of the largest to smallest eigenvalue is large).\nTheorem 5. Fix an arbitrary norm ‖ · ‖, and define an online linear optimization problem I = (F , (g1, . . . , gT )) where F = {x | ‖Ax‖ ≤ 1} with A ∈ Sn++. We define the related instance Î = (F̂ , (ĝ1, . . . , ĝT )), where F̂ = {x̂ | ‖x̂‖ ≤ 1} and ĝt = A−1gt. Then:\n• If we run any algorithm dependent only on subgradients on Î, and it plays x̂1, . . . , x̂T , then by playing the corresponding points xt = A−1x̂t on I we achieve identical loss and regret.\n• The post-hoc optimal bound over arbitrary Q ∈ Sn++ is identical for these two instances.\nProof. First, we note for any suitable function h,\nmin x:‖Ax‖≤1 h(x) = min x̂:‖x̂‖≤1\nh(A−1x̂), (16)\nusing the change of variables x̂ = Ax. For the first claim, note that ĝTt = g T t A −1, and so for all t, ĝTt x̂t = g T t A\n−1Axt = gTt xt, implying the losses suffered on Î and I are identical. Applying Equation (16), we have\nmin x:‖Ax‖≤1 gT1:tx = min x̂:‖x̂‖≤1 gT1:tA −1x̂ = min x̂:‖x̂‖≤1 ĝT1:tx̂,\nimplying the post-hoc optimal feasible points for the two instances also incur identical loss. Combining these two facts proves the first claim. For the second claim, it is sufficient to show for any Q ∈ Sn++ applied to the post-hoc bound for problem I, there exists a Q̂ ∈ Sn++ that achieves the same bound for Î (and vice versa). Consider such a Q for I. Then, again applying Equation (16), we have\nmax y:‖Ay‖p≤1\n( 2yTQy ) +\nT ∑\nt=1\ngTt Q −1gt = max\nŷ:‖ŷ‖≤1\n( 2ŷTA−1QA−1ŷ ) +\nT ∑\nt=1\nĝTt AQ −1Aĝt.\nThe left-hand side is the value of the post-hoc bound on I from Equation (11). Noting that (A−1QA−1)−1 = AQ−1A, the right-hand side is the value of the post hoc bound for Î using Q̂ = A−1QA−1. The fact A−1 and Q are in Sn++ guarantees Q̂ ∈ Sn++ as well, and the theorem follows.\nWe can now define the adaptive algorithm FTPRL-Scale: given a F ⊆ {x | ‖Ax‖p ≤ 1}, it uses the transformation suggested by Theorem 5, applying the coordinate-constant algorithm of Corollary 1 to the transformed instance, and playing the corresponding point mapped back into F .2 Pseudocode is given as Algorithm 2. Theorem 6. The diagonal-constant algorithm analyzed in Corollary 1 is √ 2-competitive with Sn+ when\nF = {x | ‖x‖p ≤ 1} for p = 2, and √ 2-competitive against Qdiag when p ∈ [1, 2). Furthermore, when F = {x | ‖Ax‖p ≤ 1} with A ∈ Sn++, the FTPRL-Scale algorithm (Algorithm 2) achieves these same competitive guarantees. In particular, when F = {x | ‖x‖2 ≤ 1}, we have\nRegret ≤ √ 2 inf Q∈Sn\n+\n(\nmax y∈F\n( 2yTQy ) +\nT ∑\nt=1\ngTt Q −1gt\n)\n.\nProof. The results for Qdiag with p ∈ [1, 2) follow from Theorems 4 and 5 and Corollary 1. We now consider the p = 2 case. Consider a Q ∈ Sn++ for Equation (11) (recall only a Q ∈ Sn++ could be optimal since g1 > 0). We can write Q = PDPT where D = diag(λ1, . . . , λn) is a diagonal matrix of positive eigenvalues and PPT = I . It is then easy to verify Q−1 = PD−1PT.\nWhen p = 2 and F = {x | ‖x‖p ≤ 1}, Equation (15) is tight, and so the post-hoc bound for Q is\n2max i\n(λi) + T ∑\nt=1\ngTt (PD −1PT)gt.\nLet zt = PTgt, so each right-hand term is ∑n\ni=1 z2t,i λi\n. It is clear this quantity is minimized when the λi is chosen as large as possible, while on the left-hand side we are only penalized for the largest eigenvalue of Q (the largest λi). Thus, a solution where D = αI for α > 0 is optimal. Plugging into the bound, we have\nB(α) = 2α+ T ∑\nt=1\ngTt\n(\nP\n(\n1 α I\n) PT ) gt = 2α+ 1\nα\nT ∑\nt=1\ngTt gt = 2α+ GT α\nwhere we have used the fact that PPT = I . Setting α = √\nGT /2 produces a minimal post-hoc bound of 2 √ 2GT . The diameter D is 2, so the coordinate-constant algorithm has regret bound 4 √ GT (Corollary 1), proving the first claim of the theorem for p = 2. The second claim follows from Theorem 5.\nSuppose we have a problem instance whereF = {x | ‖Ax‖2 ≤ 1}whereA = diag(1/a1, . . . , 1/an) with ai > 0. To demonstrate the advantage offered by this transformation, we can compare the regret bound obtained by directly applying the algorithm of Corollary 1 to that of the FTPRL-Scale algorithm. Assume WLOG that maxi ai = 1, implying the diameter of F is 2. Let g1, . . . , gT be the loss functions for this instance. Recalling Gi = ∑T t=1 g 2 t,i, applying Corollary 1 directly to this problem gives\nRegret ≤ 4\n√ √ √ √ n ∑\ni=1\nGi. (17)\n2 By a slightly more cumbersome argument, it is possible to show that instead of applying this transformation, FTPRL can be run directly on F using appropriately transformed Qt matrices.\nThis is the same as the bound obtained by online subgradient descent and related algorithms as well. We now consider FTPRL-Scale, which uses the transformation of Theorem 5. Noting D = 2 for the hypersphere and applying Corollary 1 to the transformed problem gives an adaptive scheme with\nRegret ≤ 4\n√ √ √ √ n ∑\ni=1\nT ∑\nt=1\nĝ2t,i = 4\n√ √ √ √ n ∑\ni=1\na2i\nT ∑\nt=1\ng2t,i = 4\n√ √ √ √ n ∑\ni=1\na2iGi.\nThis bound is never worse than the bound of Equation (17), and can be arbitrarily better when many of the ai are much smaller than 1."
    }, {
      "heading" : "4 Related work",
      "text" : "In the batch convex optimization setting, it is well known that convergence rates can often be dramatically improved through the use of preconditioning, accomplished by an appropriate change of coordinates taking into account both the shape of the objective function and the feasible region [Boyd and Vandenberghe, 2004]. To our knowledge, this is the first work that extends these concepts (necessarily in a quite different form) to the problem of online convex optimization, where they can provide a powerful tool for improving regret (the online analogue of convergence rates).\nPerhaps the closest algorithms in spirit to our diagonal adaptation algorithm are confidence-weighted linear classification [Drezde et al., 2008] and AROW [Crammer et al., 2009], in that they make differentsized adjustments for different coordinates. Unlike our algorithm, these algorithms apply only to classification problems and not to general online convex optimization, and the guarantees are in the form of mistake bounds rather than regret bounds.\nFTPRL is similar to the lazily-projected gradient descent algorithm of [Zinkevich, 2004, Sec. 5.2.3], but with a critical difference: the latter effectively centers regularization outside of the current feasible region (at ut rather than xt). As a consequence, lazily-projected gradient descent only attains low regret via a re-starting mechanism or a constant learning rate (chosen with knowledge of T ). It is our technique of always centering additional regularization inside the feasible set that allows us to make guarantees for adaptively-chosen regularization.\nMost recent state-of-the-art algorithms for online learning are in fact general algorithms for online convex optimization applied to learning problems. Many of these algorithms can be thought of as (significant) extensions of online subgradient descent, including [Duchi and Singer, 2009, Do et al., 2009, Shalev-Shwartz et al., 2007]. Apart from the very general work of [Kalai and Vempala, 2005], few general follow-the-regularized-leader algorithms have been analyzed, with the notable exception of the recent work of Xiao [2009].\nThe notion of proving competitive ratios for regret bounds that are functions of regularization parameters is not unique to this paper. Bartlett et al. [2008] and Do et al. [2009] proved guarantees of this form, but for a different algorithm and class of regularization parameters.\nIn an early version of this work, [Streeter and McMahan, 2010], the authors proved bounds similar to those of Corollary 2 for online gradient descent with per-coordinate learning rates. These results were significantly less general that the ones presented here, and in particular were restricted to the case where F was exactly a hyperrectangle. The FTPRL algorithm and bounds proved in this paper hold for arbitrary feasible sets, with the bound depending on the shape of the feasible set as well as the width along each dimension. Some results similar to those in this work were developed concurrently by Duchi et al. [2010], though for a different algorithm and using different analysis techniques."
    }, {
      "heading" : "5 Conclusions",
      "text" : "In this work, we analyzed a new algorithm for online convex optimization, which takes ideas both from online subgradient descent as well as follow-the-regularized-leader. In our analysis of this algorithm, we show that the learning rates that occur in standard bounds can be replaced by positive semidefinite matrices. The extra degrees of freedom offered by these generalized learning rates provide the key to proving better regret bounds. We characterized the types of feasible sets where this technique can lead to significant gains, and showed that while it does not help on the hypersphere, it can have dramatic impact when the feasible set is a hyperrectangle.\nThe diagonal adaptation algorithm we introduced can be viewed as an incremental optimization of the formula for the final bound on regret. In the case where the feasible set really is a hyperrectangle, this allows us to guarantee our final regret bound is within a small constant factor of the best bound that could have been obtained had the full problem been known in advance. The diagonal adaptation algorithm is efficient, and exploits exactly the kind of structure that is typical in large-scale real-world learning problems such as click-through-rate prediction and text classification.\nOur work leaves open a number of interesting directions for future work, in particular the development of competitive algorithms for arbitrary feasible sets (without resorting to bounding norm-balls), and the development of algorithms that optimize over richer families of regularization functions."
    }, {
      "heading" : "A A Proof of the FTRL Bound",
      "text" : "In this section we provide a proof of Lemma 1. The high-level structure of our proof follows Kalai and Vempala’s analysis of the follow the perturbed leader algorithm, in that we prove bounds on three quantities:\n1. the regret of a hypothetical be the leader algorithm (BTL), which on round t plays\nx∗t = argmin x∈F f1:t(x),\n2. the difference between the regret of BTL and that of the be the regularized leader algorithm (BTRL), which plays\nx̂t = argmin x∈F (r1:t(x) + f1:t(x)) = xt+1, (18)\nand\n3. the difference between the regret of BTRL and that of FTRL.\nAs shown in [Kalai and Vempala, 2005], the BTL algorithm has regret ≤ 0 even without any restrictions on the loss functions or the feasible set. The proof is a straightforward induction, which we reproduce here for completeness.\nLemma 6 ([Kalai and Vempala, 2005]). Let f1, f2, . . . , fT be an arbitrary sequence of functions, and let F be an arbitrary set. Define x∗t ≡ argminx∈F ∑t τ=1 fτ (x). Then\nT ∑\nt=1\nft(x ∗ t ) ≤\nT ∑\nt=1\nft(x ∗ T ) .\nProof. We prove this by induction on T . For T = 1 it is trivially true. Suppose that it holds for T − 1. Then\nT ∑\nt=1\nft(x ∗ t ) = fT (x ∗ T ) +\nT−1 ∑\nt=1\nf(x∗t )\n≤ fT (x∗T ) + T−1 ∑\nt=1\nf(x∗T−1) (Induction hypothesis)\n≤ fT (x∗T ) + T−1 ∑\nt=1\nf(x∗T ) (Definition of x ∗ T−1)\n=\nT ∑\nt=1\nf(x∗T ) .\nWe next prove a bound on the regret of BTRL.\nLemma 7. Let r1, r2, . . . , rT be a sequence of non-negative functions. Then BTRL, which on round t plays x̂t as defined by equation (18), has regret at most r1:T (̊x) where x̊ is the post-hoc optimal solution.\nProof. Define f ′t(x) = ft(x) + rt(x). Observe that x̂t = argminx∈F f ′ 1:t(x). Thus, by Lemma 6, we have T ∑\nt=1\nf ′t(x̂t) ≤ min x∈F f ′1:T (x) ≤ f ′1:T (̊x)\nor equivalently, T ∑\nt=1\nft(x̂t) + rt(x̂t) ≤ r1:T (̊x) + f1:T (̊x).\nDropping the non-negative rt(x̂t) terms on the left hand side proves the lemma.\nBy definition, the total loss of FTRL (which plays xt) exceeds that of BTRL (which plays x̂t = xt+1) by ∑T t=1 ft(xt)− ft(xt+1). Putting these facts together proves Lemma 1."
    }, {
      "heading" : "B Proof of Lemma 5",
      "text" : "Proof. The lemma is clearly true for n = 1. Fix some n, and assume the lemma holds for n− 1. Thus,\nn ∑\ni=1\nxi √\n∑i j=1 xj\n≤ 2\n√ √ √ √ n−1 ∑\ni=1\nxi + xn √\n∑n i=1 xi\n= 2 √ Z − x+ x√\nZ\nwhere we define Z = ∑n\ni=1 xi and x = xn. The derivative of the right hand side with respect to x is−1√ Z−x + 1√ Z\n, which is negative for x > 0. Thus, subject to the constraint x ≥ 0, the right hand side is maximized at x = 0, and is therefore at most 2 √ Z ."
    } ],
    "references" : [ {
      "title" : "Optimal strategies and minimax lower bounds for online convex games",
      "author" : [ "Jacob Abernethy", "Peter L. Bartlett", "Alexander Rakhlin", "Ambuj Tewari" ],
      "venue" : "In COLT,",
      "citeRegEx" : "Abernethy et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Abernethy et al\\.",
      "year" : 2008
    }, {
      "title" : "Adaptive online gradient descent",
      "author" : [ "Peter L. Bartlett", "Elad Hazan", "Alexander Rakhlin" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Bartlett et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Bartlett et al\\.",
      "year" : 2008
    }, {
      "title" : "The tradeoffs of large scale learning",
      "author" : [ "Léon Bottou", "Olivier Bousquet" ],
      "venue" : "In Advances in Neural Information Processing Systems,",
      "citeRegEx" : "Bottou and Bousquet.,? \\Q2008\\E",
      "shortCiteRegEx" : "Bottou and Bousquet.",
      "year" : 2008
    }, {
      "title" : "Convex Optimization",
      "author" : [ "Stephen Boyd", "Lieven Vandenberghe" ],
      "venue" : null,
      "citeRegEx" : "Boyd and Vandenberghe.,? \\Q2004\\E",
      "shortCiteRegEx" : "Boyd and Vandenberghe.",
      "year" : 2004
    }, {
      "title" : "Prediction, Learning, and Games",
      "author" : [ "Nicolo Cesa-Bianchi", "Gabor Lugosi" ],
      "venue" : null,
      "citeRegEx" : "Cesa.Bianchi and Lugosi.,? \\Q2006\\E",
      "shortCiteRegEx" : "Cesa.Bianchi and Lugosi.",
      "year" : 2006
    }, {
      "title" : "Adaptive regularization of weight vectors",
      "author" : [ "Koby Crammer", "Alex Kulesza", "Mark Drezde" ],
      "venue" : "In NIPS,",
      "citeRegEx" : "Crammer et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Crammer et al\\.",
      "year" : 2009
    }, {
      "title" : "Proximal regularization for online and batch learning",
      "author" : [ "Chuong B. Do", "Quoc V. Le", "Chuan-Sheng Foo" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Do et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Do et al\\.",
      "year" : 2009
    }, {
      "title" : "Confidence-weighted linear classification",
      "author" : [ "Mark Drezde", "Koby Crammer", "Fernando Pereira" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Drezde et al\\.,? \\Q2008\\E",
      "shortCiteRegEx" : "Drezde et al\\.",
      "year" : 2008
    }, {
      "title" : "Efficient learning using forward-backward splitting",
      "author" : [ "John Duchi", "Yoram Singer" ],
      "venue" : "In Advances in Neural Information Processing Systems",
      "citeRegEx" : "Duchi and Singer.,? \\Q2009\\E",
      "shortCiteRegEx" : "Duchi and Singer.",
      "year" : 2009
    }, {
      "title" : "Adaptive subgradient methods for online learning and stochastic optimization",
      "author" : [ "John Duchi", "Elad Hazan", "Yoram Singer" ],
      "venue" : null,
      "citeRegEx" : "Duchi et al\\.,? \\Q2010\\E",
      "shortCiteRegEx" : "Duchi et al\\.",
      "year" : 2010
    }, {
      "title" : "Efficient algorithms for online decision problems",
      "author" : [ "Adam Kalai", "Santosh Vempala" ],
      "venue" : "Journal of Computer and Systems Sciences,",
      "citeRegEx" : "Kalai and Vempala.,? \\Q2005\\E",
      "shortCiteRegEx" : "Kalai and Vempala.",
      "year" : 2005
    }, {
      "title" : "Identifying suspicious URLs: an application of large-scale online learning",
      "author" : [ "Justin Ma", "Lawrence K. Saul", "Stefan Savage", "Geoffrey M. Voelker" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Ma et al\\.,? \\Q2009\\E",
      "shortCiteRegEx" : "Ma et al\\.",
      "year" : 2009
    }, {
      "title" : "Pegasos: Primal Estimated sub-GrAdient SOlver for SVM",
      "author" : [ "Shai Shalev-Shwartz", "Yoram Singer", "Nathan Srebro" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Shalev.Shwartz et al\\.,? \\Q2007\\E",
      "shortCiteRegEx" : "Shalev.Shwartz et al\\.",
      "year" : 2007
    }, {
      "title" : "Less regret via online conditioning",
      "author" : [ "Matthew Streeter", "H. Brendan McMahan" ],
      "venue" : "Submitted.,",
      "citeRegEx" : "Streeter and McMahan.,? \\Q2010\\E",
      "shortCiteRegEx" : "Streeter and McMahan.",
      "year" : 2010
    }, {
      "title" : "Dual averaging method for regularized stochastic learning and online optimization",
      "author" : [ "Lin Xiao" ],
      "venue" : "Advances in Neural Information Processing Systems",
      "citeRegEx" : "Xiao.,? \\Q2009\\E",
      "shortCiteRegEx" : "Xiao.",
      "year" : 2009
    }, {
      "title" : "Solving large scale linear prediction problems using stochastic gradient descent algorithms",
      "author" : [ "Tong Zhang" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Zhang.,? \\Q2004\\E",
      "shortCiteRegEx" : "Zhang.",
      "year" : 2004
    }, {
      "title" : "Online convex programming and generalized infinitesimal gradient ascent",
      "author" : [ "Martin Zinkevich" ],
      "venue" : "In ICML,",
      "citeRegEx" : "Zinkevich.,? \\Q2003\\E",
      "shortCiteRegEx" : "Zinkevich.",
      "year" : 2003
    }, {
      "title" : "Theoretical guarantees for algorithms in multi-agent settings",
      "author" : [ "Martin Zinkevich" ],
      "venue" : "PhD thesis, Pittsburgh, PA,",
      "citeRegEx" : "Zinkevich.,? \\Q2004\\E",
      "shortCiteRegEx" : "Zinkevich.",
      "year" : 2004
    } ],
    "referenceMentions" : [ {
      "referenceID" : 0,
      "context" : "In particular, although this bound is minimax optimal when the feasible set is a hypersphere [Abernethy et al., 2008], we will see that it can be arbitrarily bad when the feasible set is the hypercube.",
      "startOffset" : 93,
      "endOffset" : 117
    }, {
      "referenceID" : 4,
      "context" : "This proximal centering of additional regularization is similar in spirit to the optimization solved by online gradient descent (and more generally, online mirror descent, [Cesa-Bianchi and Lugosi, 2006]).",
      "startOffset" : 172,
      "endOffset" : 203
    }, {
      "referenceID" : 13,
      "context" : "(2) In contrast to other FTRL algorithms, such as the dual averaging method of Xiao [2009], we center the additional regularization at the current feasible point xt rather than at the origin.",
      "startOffset" : 79,
      "endOffset" : 91
    }, {
      "referenceID" : 13,
      "context" : "In concurrent work [Streeter and McMahan, 2010], we showed that for some problem families, a per-coordinate learning rate for online gradient descent provides asymptotically less regret than even the best non-increasing global learning rate (chosen in hindsight, given the observed loss functions).",
      "startOffset" : 19,
      "endOffset" : 47
    }, {
      "referenceID" : 3,
      "context" : "For B ∈ S +, we write B for the square root of B, the unique X ∈ S + such that XX = B (see, for example, Boyd and Vandenberghe [2004, A.5.2]). We also make use of the fact that any A ∈ S + can be factored as A = PDP where PP = I and D = diag(λ1, . . . , λn) where λi are the eigenvalues of A. Following the arguments of Zinkevich [2003], for the remainder we restrict our attention to linear functions.",
      "startOffset" : 105,
      "endOffset" : 337
    }, {
      "referenceID" : 10,
      "context" : "The proof is similar to arguments of [Kalai and Vempala, 2005], and is given in Appendix A.",
      "startOffset" : 37,
      "endOffset" : 62
    }, {
      "referenceID" : 13,
      "context" : "We will use the following Lemma from [Streeter and McMahan, 2010].",
      "startOffset" : 37,
      "endOffset" : 65
    }, {
      "referenceID" : 0,
      "context" : "This algorithm achieves a bound of O(DM √ T ) where D is the diameter of the feasible region and M is a bound on ‖gt‖2, matching the best possible bounds in terms of these parameters [Abernethy et al., 2008].",
      "startOffset" : 183,
      "endOffset" : 207
    } ],
    "year" : 2017,
    "abstractText" : "We introduce a new online convex optimization algorithm that adaptively chooses its regularization function based on the loss functions observed so far. This is in contrast to previous algorithms that use a fixed regularization function such as L2-squared, and modify it only via a single time-dependent parameter. Our algorithm’s regret bounds are worst-case optimal, and for certain realistic classes of loss functions they are much better than existing bounds. These bounds are problem-dependent, which means they can exploit the structure of the actual problem instance. Critically, however, our algorithm does not need to know this structure in advance. Rather, we prove competitive guarantees that show the algorithm provides a bound within a constant factor of the best possible bound (of a certain functional form) in hindsight.",
    "creator" : "LaTeX with hyperref package"
  }
}